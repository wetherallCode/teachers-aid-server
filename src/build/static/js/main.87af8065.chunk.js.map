{"version":3,"sources":["contexts/UserContext.tsx","appStyles.ts","components/dashboard/student/assignments/state-n-styles/assignmentsStyles.ts","schemaTypes.ts","components/dashboard/student/assignments/state-n-styles/studentAssignmentMachine.ts","components/dashboard/student/assignments/state-n-styles/StudentAssignmentContext.tsx","components/dashboard/student/assignments/essays/assigned-essays/ReadingGuideCheck.tsx","components/dashboard/student/assignments/essays/assigned-essays/AssignedEssaySelect.tsx","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/AssignedReadingGuideSelect.tsx","components/dashboard/student/assignments/articleReviews/ArticleReviewSelect.tsx","contexts/EnumContext.tsx","contexts/markingPeriod/markingPeriodMachine.ts","contexts/markingPeriod/MarkingPeriodContext.tsx","components/dashboard/student/assignments/MarkingPeriodSelector.tsx","components/dashboard/student/assignments/quizzes/QuizSelect.tsx","components/dashboard/school-day/state/schoolDayMachine.ts","components/dashboard/school-day/state/SchoolDayContext.tsx","components/dashboard/school-day/CurrentSchoolDay.tsx","utils.ts","components/dashboard/teacher/teacherDashboardStyles.ts","components/dashboard/school-day/CreateSchoolDay.tsx","components/home/media.ts","components/home/homeStyles.ts","components/dashboard/school-day/EditSchoolDay.tsx","components/dashboard/school-day/SchoolDay.tsx","hooks/useTime.ts","hooks/useClassTimeIndicator.ts","hooks/useAssignmentsAllowedInClassCheck.ts","hooks/useCalculateGrades.ts","components/dashboard/student/assignments/allAssignments/AllAssignments.tsx","components/dashboard/student/assignments/essays/completed-essays/CompletedEssaySelect.tsx","components/dashboard/student/assignments/StudentAssignments.tsx","components/dashboard/student/assignments/essays/assigned-essays/state-and-styles/studentEssayMachine.ts","components/dashboard/student/assignments/essays/assigned-essays/state-and-styles/StudentEssayContext.tsx","hooks/useForm.ts","hooks/useToggle.ts","hooks/useClickOutside.ts","animations/Modal.tsx","components/dashboard/student/assignments/essays/assigned-essays/state-and-styles/assignedEssayStyles.ts","components/dashboard/student/assignments/essays/assigned-essays/SubmitEssay.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/essay-organizers/DevelopingEssayOrganizer.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/essay-organizers/AcademicProblemSolutionOrganizerDisplay.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/essay-organizers/AcademicEssayWhyCauseAndEffectOrganizerDisplay.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/essay-organizers/AcademicEssayOrganizer.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/essay-organizers/AdvancedEssayOrganizer.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/essay-organizers/EssayOrganizer.tsx","components/dashboard/student/assignments/essays/assigned-essays/StudentEssayEditor.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/academic/AcademicProblemSolution.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/academic/AcademicHowCauseEffect.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/academic/AcademicWhyCauseEffect.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/academic/AcademicAnswerTypes.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/EndingPhrase.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/EndingPhraseGrader.ts","hooks/useSelectedText.ts","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/HelpingVerbIdentification.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/findPreposition.ts","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/ObjectIdentification.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/ObjectGrader.ts","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/QuestionWordRemoval.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/SubjectComplimentIdentifier.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/subjectComplimentGrader.ts","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/SubjectIdentification.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/simpleSubjectGrader.ts","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/SubjectPredicateSplit.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/subjectPredicateGrading.ts","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/VerbIdentification.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/simplePredicateGrader.ts","components/dashboard/student/assignments/essays/assigned-essays/organizers/question-deconstruction/QuestionDeconstruction.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/developing/DevelopingOrganizer.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/academic/AcademicRestatement.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/academic/AcademicConclusion.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/academic/AcademicOrganizer.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/advanced/AdvancedHowProblemSolution.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/advanced/AdvancedHowCauseEffect.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/advanced/AdvancedWhyCauseEffect.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/advanced/AdvancedAnswerTypes.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/advanced/AdvancedRestatement.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/advanced/AdvancedConclusion.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/advanced/AdvancedOrganizer.tsx","components/dashboard/student/assignments/essays/assigned-essays/organizers/OrganizerInfo.tsx","components/dashboard/student/assignments/readingGuides/state-and-styles/readingGuideStyles.ts","components/dashboard/student/assignments/essays/assigned-essays/state-and-styles/essayInfoStyles.ts","components/dashboard/student/assignments/essays/assigned-essays/essay-info/Vocab.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/EssayHelp.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/Rubrics.tsx","components/dashboard/student/assignments/essays/assigned-essays/essay-info/EssayInfo.tsx","components/dashboard/student/assignments/essays/assigned-essays/EssayToComplete.tsx","components/dashboard/student/assignments/essays/completed-essays/state/completedEssayMachine.ts","components/dashboard/student/assignments/essays/completed-essays/state/CompletedEssayContext.tsx","components/editor/CustomEditor.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/state-n-styles/gradeEssayMachine.ts","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/state-n-styles/GradeEssayContext.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/state-n-styles/EssaysToGradeStyles.ts","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/TeacherEssayEditor.tsx","components/dashboard/student/assignments/essays/completed-essays/CompletedEssayViewer.tsx","components/dashboard/student/assignments/essays/completed-essays/state/completedEssayStyles.ts","components/dashboard/student/assignments/essays/completed-essays/RedoEssayEditor.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/EssayToGradeOrganizer.tsx","components/dashboard/student/assignments/essays/completed-essays/MultipleDraftView.tsx","components/dashboard/student/assignments/essays/completed-essays/HowToImprove.tsx","components/dashboard/student/assignments/essays/completed-essays/SubmitRedoneEssay.tsx","components/dashboard/student/assignments/essays/completed-essays/RedoEssayOrganizerHelp.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/developing/DevelopingAnswer.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/developing/DevelopingRestatement.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/developing/DevelopingConclusion.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/developing/DevelopingOrganizer.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/academic/AcademicProblemSolution.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/academic/AcademicHowCauseEffect.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/academic/AcademicWhyCauseEffect.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/academic/AcademicAnswerTypes.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/academic/AcademicRestatement.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/academic/AcademicConclusion.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/academic/AcademicOrganizer.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/advanced/AdvancedHowProblemSolution.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/advanced/AdvancedHowCauseEffect.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/advanced/AdvancedWhyCauseEffect.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/advanced/AdvancedAnswerTypes.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/advanced/AdvancedRestatement.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/advanced/AdvancedConclusion.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/advanced/AdvancedOrganizer.tsx","components/dashboard/student/assignments/essays/completed-essays/organizers/RedoEssayOrganizer.tsx","components/dashboard/student/assignments/essays/completed-essays/CompletedEssay.tsx","components/dashboard/student/assignments/readingGuides/state-and-styles/readingGuideToCompleteMachine.ts","components/dashboard/student/assignments/readingGuides/state-and-styles/ReadingGuideToCompleteContext.tsx","components/lesson/state-n-styles/dailyAgendaMachine.ts","components/lesson/state-n-styles/DailyAgendaContext.tsx","components/lesson/state-n-styles/lessonStyles.ts","components/lesson/lesson-components/StudentProtocolResponse.tsx","components/lesson/lesson-components/WarmUpResponse.tsx","components/lesson/lesson-components/WarmUp.tsx","components/lesson/lesson-components/LessonDetails.tsx","components/lesson/lesson-components/Vocab.tsx","components/lesson/lesson-components/Protocols.tsx","components/lesson/lesson-components/ExitActivityResponse.tsx","components/lesson/lesson-components/ExitActivity.tsx","components/lesson/lesson-components/AssignedSeating.tsx","components/lesson/lessson-types/DynamicLesson.tsx","components/dashboard/student/handbook/handbookStyles.ts","components/lesson/lesson-components/TextAnalysisForStudentLesson.tsx","components/lesson/lessson-types/StaticLesson.tsx","components/lesson/LessonLoader.tsx","components/lesson/LessonMainMenu.tsx","components/dashboard/student/assignments/articleReviews/state-styles/articleReviewToCompleteMachine.ts","components/dashboard/student/assignments/articleReviews/state-styles/ArticleReviewToCompleteContext.tsx","components/dashboard/student/assignments/articleReviews/state-styles/articleReviewToCompleteStyles.ts","components/dashboard/student/assignments/articleReviews/ArticleReviewToCompleteForm.tsx","components/dashboard/student/assignments/articleReviews/ArticleReviewToComplete.tsx","components/dashboard/student/assignments/quizzes/state-n-styles/quizToCompleteMachine.ts","components/dashboard/student/assignments/quizzes/state-n-styles/QuizToCompleteContext.tsx","components/dashboard/teacher/student-information/state-n-styles/studentInformationStyles.ts","components/dashboard/teacher/student-information/sgo-info/EssayViewer.tsx","components/dashboard/teacher/student-information/sgo-info/Essays.tsx","components/dashboard/teacher/student-information/sgo-info/SGOInfo.tsx","components/dashboard/teacher/student-information/state-n-styles/studentInformationMachine.ts","components/dashboard/teacher/student-information/state-n-styles/StudentInformationContext.tsx","components/dashboard/teacher/teachers-aid/styles/mainScreenStyles.ts","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/assign-quizzes/IndividualQuizControl.tsx","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/assign-quizzes/QuizControlPanel.tsx","components/dashboard/teacher/student-information/assignments/QuizInfo.tsx","components/dashboard/teacher/student-information/assignments/AssignmentInformation.tsx","components/dashboard/teacher/student-information/general-student-information/ResponsibilityPointsDisplay.tsx","hooks/useGradeCalculator.ts","components/dashboard/student/assignments/quizzes/state-n-styles/QuizStyles.ts","components/dashboard/student/assignments/quizzes/FinishQuiz.tsx","components/dashboard/student/assignments/quizzes/QuestionBlank.tsx","components/dashboard/student/assignments/quizzes/quizQuestionGrader.ts","components/dashboard/student/assignments/quizzes/QuizQuestionDisplay.tsx","components/dashboard/student/assignments/quizzes/QuizSection.tsx","components/dashboard/student/assignments/quizzes/QuizToComplete.tsx","components/dashboard/teacher/teachers-aid/styles/studentInfoStyles.ts","components/dashboard/teacher/teachers-aid/student-info/behavior/BehaviorRemover.tsx","components/dashboard/student/behavior/studentBehaviorStyles.ts","components/dashboard/student/behavior/StudentBehavior.tsx","components/home/StudentGradeDisplay.tsx","components/home/UpdateUserActivity.tsx","components/home/Logout.tsx","components/home/Greetings.tsx","components/lesson/TodaysLessonPlan.tsx","components/dashboard/student/lesson/LessonDisplay.tsx","components/dashboard/student/grades/studentGradeBreakdownStyles.ts","components/dashboard/student/grades/assignment-grades/EssayAverage.tsx","components/dashboard/student/grades/assignment-grades/QuizAverage.tsx","components/dashboard/student/grades/assignment-grades/ReadingGuideAverage.tsx","components/dashboard/student/grades/assignment-grades/MyGradesResponsibilityPoints.tsx","components/dashboard/student/grades/assignment-grades/AssignmentFinder.tsx","components/dashboard/student/grades/Grades.tsx","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/VocabList.tsx","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/ReadingGuideHelp.tsx","components/dashboard/student/assignments/readingGuides/state-and-styles/RadingGuideQuestionState.ts","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/SubmitReadingGuide.tsx","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/NavButtons.tsx","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/GenericQuestionBlank.tsx","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/CompleteReadingGuideNew.tsx","components/dashboard/student/assignments/readingGuides/assigned-reading-guides/ReadingGuideToComplete.tsx","components/home/PasswordCheck.tsx","components/home/InitialPasswordChange.tsx","components/dashboard/student/handbook/Behavior.tsx","components/dashboard/student/handbook/ContactInfo.tsx","components/dashboard/student/handbook/Expecations.tsx","components/dashboard/student/handbook/FAQ.tsx","components/dashboard/student/handbook/Grading.tsx","components/dashboard/student/handbook/Procedures.tsx","components/dashboard/student/handbook/TextAnalysis.tsx","components/dashboard/student/handbook/Handbook.tsx","components/dashboard/student/StudentDashboardHome.tsx","hooks/usePasswordCheck.ts","components/dashboard/teacher/lessons/section-builder/state/sectionBuilderStyles.ts","components/dashboard/teacher/lessons/section-builder/AddText.tsx","components/dashboard/teacher/lessons/section-builder/state/sectionBuilderMachine.ts","components/dashboard/teacher/lessons/section-builder/state/SectionBuilderContext.tsx","components/dashboard/teacher/lessons/section-builder/TextSelectionDisplay.tsx","components/dashboard/teacher/lessons/section-builder/TextListLoader.tsx","components/dashboard/teacher/lessons/section-builder/AddChapter.tsx","components/dashboard/teacher/lessons/section-builder/ChapterSelect.tsx","components/dashboard/teacher/lessons/section-builder/VocabInfo.tsx","components/dashboard/teacher/lessons/section-builder/QuestionsInfo.tsx","components/dashboard/teacher/lessons/section-builder/ProtocolsInfo.tsx","components/dashboard/teacher/lessons/section-builder/CreateTextSection.tsx","components/dashboard/teacher/lessons/section-builder/SectionBuilderInfoDisplay.tsx","components/dashboard/teacher/assignments/create-assignments/state-and-styles/createAssignmentsStyles.ts","components/dashboard/teacher/lessons/section-builder/SectionBuilder.tsx","components/dashboard/teacher/lessons/section-editor/state-n-styles/sectionEditorMachine.ts","components/dashboard/teacher/lessons/section-editor/state-n-styles/sectionEditorContext.tsx","components/dashboard/teacher/lessons/section-editor/TextSectionList.tsx","components/dashboard/teacher/lessons/section-editor/EditorChapterSelect.tsx","components/dashboard/teacher/lessons/section-editor/vocab/AddVocabWord.tsx","components/dashboard/teacher/lessons/section-editor/questions/AddQuestion.tsx","components/dashboard/teacher/lessons/section-editor/state-n-styles/sectionEditorStyles.ts","components/dashboard/teacher/lessons/section-editor/vocab/VocabBox.tsx","components/dashboard/teacher/lessons/section-editor/questions/QuestionsBox.tsx","components/dashboard/teacher/lessons/section-editor/protocols/AddProtocols.tsx","components/dashboard/teacher/lessons/section-editor/protocols/ProtocolsBox.tsx","components/dashboard/teacher/lessons/section-editor/edit-section-info/EditSectionInfo.tsx","components/dashboard/teacher/lessons/section-editor/protocols/EditProtocol.tsx","components/dashboard/teacher/lessons/section-editor/questions/EditQuestion.tsx","components/dashboard/teacher/lessons/section-editor/vocab/EditVocabWord.tsx","components/dashboard/teacher/lessons/section-editor/quiz-questions/AddQuizQuestion.tsx","components/dashboard/teacher/lessons/section-editor/quiz-questions/QuizQuestions.tsx","components/dashboard/teacher/lessons/section-editor/TextSectionEditorDisplay.tsx","components/dashboard/teacher/lessons/section-editor/EditorTextSelectionDisplay.tsx","components/dashboard/teacher/lessons/section-editor/EditorTextListLoader.tsx","components/dashboard/teacher/lessons/section-editor/SectionEditor.tsx","components/dashboard/teacher/lessons/lesson-planner/state-and-styles/lessonPlannerMachine.ts","components/dashboard/teacher/lessons/lesson-planner/state-and-styles/lessonPlannerContext.tsx","components/dashboard/teacher/lessons/lesson-planner/state-and-styles/lessonPlannerStyles.ts","components/dashboard/teacher/lessons/lesson-planner/LessonPlannerTextListLoader.tsx","components/dashboard/teacher/lessons/lesson-planner/LessonPlannerChapterSelect.tsx","components/dashboard/teacher/lessons/lesson-planner/SectionSelect.tsx","components/dashboard/teacher/lessons/lesson-planner/UnitAssigner.tsx","components/dashboard/teacher/lessons/lesson-planner/SectionAssigner.tsx","hooks/useCheckBox.ts","components/dashboard/teacher/lessons/lesson-planner/CreateLesson.tsx","components/dashboard/teacher/lessons/quiz-creator/CreateQuiz.tsx","components/dashboard/teacher/lessons/lesson-planner/CourseAssigner.tsx","components/dashboard/teacher/lessons/lesson-planner/LessonPlannerOutput.tsx","components/dashboard/teacher/lessons/lesson-planner/AfterActivity.tsx","components/dashboard/teacher/lessons/lesson-planner/BeforeActivitySelect.tsx","components/dashboard/teacher/lessons/lesson-planner/DuringActivityBuilder.tsx","components/dashboard/teacher/lessons/lesson-planner/EssentialQuestionBuilder.tsx","components/dashboard/teacher/lessons/lesson-planner/LessonName.tsx","components/dashboard/teacher/lessons/lesson-planner/Pages.tsx","components/dashboard/teacher/lessons/lesson-planner/LessonPlanInfo.tsx","components/dashboard/teacher/lessons/lesson-planner/LessonTypeSelector.tsx","components/dashboard/teacher/lessons/lesson-planner/LessonBuilder.tsx","components/dashboard/teacher/lessons/lesson-planner/LessonPlanner.tsx","components/dashboard/teacher/lessons/lesson-finder/state-n-styles/lessonFinderMachine.ts","components/dashboard/teacher/lessons/lesson-finder/state-n-styles/LessonFinderContext.tsx","components/dashboard/teacher/lessons/lesson-finder/Lesson.tsx","components/dashboard/teacher/lessons/lesson-finder/MarkLessonForSGO.tsx","components/dashboard/teacher/lessons/lesson-finder/state-n-styles/lessonFinderStyles.ts","components/dashboard/teacher/lessons/lesson-finder/LessonDetails.tsx","components/dashboard/teacher/lessons/lesson-finder/LessonCalendar.tsx","components/dashboard/teacher/lessons/lesson-finder/LessonFinder.tsx","components/dashboard/teacher/lessons/essay-question/build-essay-questions/state-n-styles/buildEssayQuestionMachine.ts","components/dashboard/teacher/lessons/essay-question/build-essay-questions/state-n-styles/BuildEssayQuestionContext.tsx","components/dashboard/teacher/lessons/essay-question/build-essay-questions/ChapterSelect.tsx","components/dashboard/teacher/lessons/essay-question/build-essay-questions/state-n-styles/essayQuestionStyles.ts","components/dashboard/teacher/lessons/essay-question/build-essay-questions/EssayQuestionInformation.tsx","components/dashboard/teacher/lessons/essay-question/build-essay-questions/SectionSelect.tsx","components/dashboard/teacher/lessons/essay-question/build-essay-questions/TextSelect.tsx","components/dashboard/teacher/lessons/essay-question/build-essay-questions/EssayQuestionBuilder.tsx","components/dashboard/teacher/lessons/essay-question/Questions.tsx","components/dashboard/teacher/lessons/quiz-creator/state-n-styles/createQuizMachine.ts","components/dashboard/teacher/lessons/quiz-creator/state-n-styles/CreateQuizContext.tsx","navigation/teacher-nav/teacherNavMachine.ts","navigation/teacher-nav/TeacherNavContext.tsx","hooks/useNavSync.ts","components/dashboard/teacher/lessons/LessonsHome.tsx","components/dashboard/teacher/assignments/create-assignments/state-and-styles/createAssignmentMachine.ts","components/dashboard/teacher/assignments/create-assignments/state-and-styles/CreateAssignmentContext.tsx","components/dashboard/teacher/assignments/create-assignments/create-essay/EssayUnitSelect.tsx","components/reusable-components/CheckBox.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-essays/assign-by-course/assignEssayByCourseMachine.ts","components/dashboard/teacher/assignments/assign-assignments/assign-essays/assign-by-course/AssignEssayByCourseContext.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-essays/assign-by-course/AssignEssay.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-essays/assign-by-course/AssignLesson.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-essays/assign-by-course/LessonSelect.tsx","components/dashboard/teacher/assignments/create-assignments/create-essay/DueDateCheck.tsx","components/dashboard/teacher/assignments/create-assignments/create-essay/CreateEssay.tsx","components/dashboard/teacher/assignments/create-assignments/create-essay/EssayTopicLoader.tsx","components/dashboard/teacher/assignments/create-assignments/create-essay/EssayLessonInfo.tsx","components/dashboard/teacher/assignments/create-assignments/create-essay/EssayLessonSelect.tsx","components/dashboard/teacher/assignments/create-assignments/create-readingGuide/ReadingGuideUnitSelect.tsx","components/dashboard/teacher/assignments/create-assignments/create-readingGuide/ReadingGuideLessonSelect.tsx","components/dashboard/teacher/assignments/create-assignments/create-readingGuide/AssignedDateCheck.tsx","components/dashboard/teacher/assignments/create-assignments/create-readingGuide/CreateReadingGuide.tsx","components/dashboard/teacher/assignments/create-assignments/create-readingGuide/ReadingGuideLessonInfo.tsx","components/dashboard/teacher/assignments/grade-assignments/state-n-styles/GradeEssayContainerStyles.ts","components/dashboard/teacher/assignments/create-assignments/CreateAssignment.tsx","components/dashboard/teacher/assignments/edit-assignments/EditAssignments.tsx","components/dashboard/teacher/assignments/grade-assignments/state-n-styles/gradeEssayContainerMachine.ts","components/dashboard/teacher/assignments/grade-assignments/state-n-styles/GradeEssayContainerContext.tsx","components/dashboard/teacher/assignments/article-reviews/state-styles/articleReviewStyles.ts","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/EssaysToGrade.tsx","components/dashboard/teacher/assignments/grade-assignments/paper-based/FindAssignmentByStudent.tsx","components/dashboard/teacher/assignments/grade-assignments/AssignmentsToGrade.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/grading-tool/AdditionalComments.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/grading-tool/DevelopingGradingTool.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/grading-tool/AcademicGradingTool.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/grading-tool/AdvancedGradingTool.tsx","components/dashboard/teacher/rubrics/rubric-editor/rubricEditorMachine.ts","components/dashboard/teacher/rubrics/rubric-editor/RubricEditorContext.tsx","components/dashboard/teacher/rubrics/rubric-editor/select-entry/SelectWritingLevel.tsx","components/dashboard/teacher/rubrics/rubric-editor/select-entry/SelectRubricSection.tsx","components/dashboard/teacher/rubrics/rubric-editor/select-entry/RubricEntries.tsx","components/dashboard/teacher/rubrics/rubric-editor/select-entry/SelectEntry.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/grading-tool/GradingTool.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/ReturnEssay.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/DraftSelector.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/PreviousEssayViewer.tsx","components/dashboard/teacher/assignments/grade-assignments/essays/essay-grader/GradeEssay.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-essays/assign-by-course/AssignEssaysByLesson.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-essays/AssignEssays.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/assing-by-course/LessonSelect.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/assing-by-course/UnitSelect.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/assing-by-course/state/assignReadingGuideByCourseMachine.ts","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/assing-by-course/state/AssignReadingGuideByCourseContext.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/assing-by-course/AssignReadingGuide.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/assing-by-course/AssignLesson.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/assing-by-course/AssignReadingGuideByCourse.tsx","components/dashboard/teacher/assignments/assign-assignments/assign-readingGuides/AssignReadingGuides.tsx","components/dashboard/teacher/assignments/assign-assignments/AssignAssignments.tsx","components/dashboard/teacher/assignments/grade-assignments/paper-based/state/paperBasedMachine.ts","components/dashboard/teacher/assignments/grade-assignments/paper-based/state/PaperBasedContext.tsx","components/dashboard/teacher/assignments/grade-assignments/paper-based/essay/SubmitEssay.tsx","components/dashboard/teacher/assignments/grade-assignments/paper-based/SetLateness.tsx","components/dashboard/teacher/assignments/grade-assignments/paper-based/reading-guide/SubmitReadingGuide.tsx","components/dashboard/teacher/assignments/grade-assignments/paper-based/GradePaperBasedAssignment.tsx","components/dashboard/teacher/assignments/article-reviews/state-styles/articleReviewMachine.ts","components/dashboard/teacher/assignments/article-reviews/state-styles/ArticleReviewContext.tsx","components/dashboard/teacher/assignments/article-reviews/create-articleReviews/CreateArticleReviews.tsx","components/dashboard/teacher/assignments/article-reviews/review-articleReviews/ArticleReviewReturn.tsx","components/dashboard/teacher/assignments/article-reviews/review-articleReviews/ReviewDisplay.tsx","components/dashboard/teacher/assignments/article-reviews/review-articleReviews/ReviewArticleReviews.tsx","components/dashboard/teacher/assignments/article-reviews/ArticleReviewManager.tsx","components/dashboard/teacher/assignments/check-assignments/essays/CheckEssays.tsx","components/dashboard/teacher/assignments/check-assignments/state-n-styles/CheckAssignmentsStyles.ts","components/dashboard/teacher/teachers-aid/main-screen/readingGuideViewer/IndividualReadingGuideReviewDisplay.tsx","components/dashboard/teacher/assignments/check-assignments/reading-guides/IndividualReadingGuide.tsx","components/dashboard/teacher/assignments/check-assignments/reading-guides/CheckReadingGuides.tsx","components/dashboard/teacher/assignments/check-assignments/CheckAssignments.tsx","components/dashboard/teacher/assignments/assignmentDashboardStyles.ts","components/dashboard/teacher/assignments/AssignmentDashboardDisplay.tsx","components/dashboard/teacher/assignments/AssignmentDashboard.tsx","components/dashboard/teacher/courses/coursesStyles.ts","components/dashboard/teacher/courses/CourseDirectory.tsx","hooks/useGetCurrentCourse.ts","components/dashboard/teacher/lessons/lesson-editor/lessonEditorMachine.ts","components/dashboard/teacher/lessons/lesson-editor/LessonEditorContext.tsx","components/dashboard/teacher/lessons/lesson-editor/LessonSelect.tsx","components/dashboard/teacher/lessons/lesson-editor/UnitSelect.tsx","components/dashboard/teacher/lessons/lesson-editor/AssignedDate.tsx","components/dashboard/teacher/lessons/lesson-editor/InUnit.tsx","components/dashboard/teacher/lessons/lesson-editor/MarkingPeriod.tsx","components/dashboard/teacher/lessons/lesson-editor/TextSelect.tsx","components/dashboard/teacher/lessons/lesson-editor/ChapterSelect.tsx","components/dashboard/teacher/lessons/lesson-editor/SectionSelect.tsx","components/dashboard/teacher/lessons/lesson-editor/SectionList.tsx","components/dashboard/teacher/lessons/lesson-editor/SetSections.tsx","components/dashboard/teacher/lessons/lesson-editor/BeforeActivity.tsx","components/dashboard/teacher/lessons/lesson-editor/DuringActivities.tsx","components/dashboard/teacher/lessons/lesson-editor/AfterActivity.tsx","components/dashboard/teacher/lessons/lesson-editor/EssentialQuestion.tsx","components/dashboard/teacher/lessons/lesson-editor/ActivitiesEditor.tsx","components/dashboard/teacher/lessons/lesson-editor/CourseLink.tsx","components/dashboard/teacher/lessons/lesson-editor/LessonEditorInfo.tsx","components/dashboard/teacher/lessons/lesson-editor/LessonEditor.tsx","components/dashboard/teacher/courses/roster/add-students/state-n-styles/addStudentsMachine.ts","components/dashboard/teacher/courses/roster/add-students/state-n-styles/AddStudentsContext.tsx","components/dashboard/teacher/courses/roster/add-students/state-n-styles/addStudentsStyles.ts","components/dashboard/teacher/courses/roster/add-students/register-student/RegisterStudent.tsx","components/dashboard/teacher/courses/roster/add-students/add-to-course/AddToCourse.tsx","components/dashboard/teacher/courses/roster/add-students/AddStudents.tsx","components/dashboard/teacher/teachers-aid/styles/seatingChartStyles.ts","components/dashboard/teacher/courses/roster/assign-seats/state/assignedSeatStyles.ts","components/dashboard/teacher/courses/roster/assign-seats/AssignedDesk.tsx","components/dashboard/teacher/courses/roster/assign-seats/ThirtySixSeatingChart.tsx","components/dashboard/teacher/courses/roster/assign-seats/ThirtySeatPairSeatingChart.tsx","components/dashboard/teacher/courses/roster/assign-seats/RegularSeating.tsx","components/dashboard/teacher/courses/roster/assign-seats/AssignWhiteCohort.tsx","components/dashboard/teacher/courses/roster/assign-seats/AssignRedCohort.tsx","components/dashboard/teacher/courses/roster/assign-seats/AssignCohortBasedSeating.tsx","components/dashboard/teacher/courses/roster/assign-seats/AssignSeats.tsx","components/dashboard/teacher/courses/roster/assign-seats/state/assignSeatsMachine.ts","components/dashboard/teacher/courses/roster/assign-seats/state/AssignSeatsContext.tsx","components/dashboard/teacher/courses/roster/RosterDashboardStyles.ts","components/dashboard/teacher/courses/roster/view-roster/ViewRoster.tsx","components/dashboard/teacher/courses/roster/RosterDashboard.tsx","components/dashboard/teacher/assignments/readingGuideData/ReadingGuideLessonSelect.tsx","components/dashboard/teacher/assignments/readingGuideData/ReadingGuideDataViewer.tsx","components/dashboard/teacher/assignments/readingGuideData/ReadingGuideData.tsx","components/dashboard/teacher/courses/edit-course/state-n-styles/editCourseMachine.ts","components/dashboard/teacher/courses/edit-course/state-n-styles/EditCourseContext.tsx","components/dashboard/teacher/courses/edit-course/EditCourse.tsx","components/dashboard/teacher/courses/course-assignments/state-styles/AssignmentManagerMachine.ts","components/dashboard/teacher/courses/course-assignments/state-styles/AssignmentManagerContext.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/article-reviews/ArticleReviewRows.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/article-reviews/ArticleReviews.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/essays/EssayRows.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/essays/Essays.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/responsibility-points/ResponsibilityPointRows.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/responsibility-points/ResponsibilityPoints.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/secondary-grades/SecondaryGradeRowInfo.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/secondary-grades/SecondaryGradeRows.tsx","components/dashboard/teacher/courses/course-assignments/downloadables/secondary-grades/SecondaryGrades.tsx","components/dashboard/teacher/courses/course-assignments/AssignmentManager.tsx","components/dashboard/teacher/courses/temporary-tasks/state-n-styles/temporaryTasksMachine.ts","components/dashboard/teacher/courses/temporary-tasks/state-n-styles/TemporaryTasksContext.tsx","components/dashboard/teacher/courses/temporary-tasks/state-n-styles/temporaryTaskStyles.ts","components/dashboard/teacher/courses/temporary-tasks/CreateTask.tsx","components/dashboard/teacher/courses/temporary-tasks/MarkAbsent.tsx","components/dashboard/teacher/courses/temporary-tasks/MarkComplete.tsx","components/dashboard/teacher/courses/temporary-tasks/TaskGrader.tsx","components/dashboard/teacher/courses/temporary-tasks/TaskList.tsx","components/dashboard/teacher/courses/temporary-tasks/TaskCreator.tsx","components/dashboard/teacher/courses/temporary-tasks/LoadTasks.tsx","components/dashboard/teacher/courses/temporary-tasks/review-tasks/ReviewTasks.tsx","components/dashboard/teacher/courses/temporary-tasks/TaskTimerDisplay.tsx","components/dashboard/teacher/courses/temporary-tasks/TaskTimer.tsx","components/dashboard/teacher/courses/temporary-tasks/TemporaryTasks.tsx","components/dashboard/teacher/courses/CourseManagerHome.tsx","components/dashboard/teacher/courses/course-info/CourseInfoHome.tsx","components/dashboard/teacher/courses/CourseManager.tsx","components/dashboard/teacher/courses/create-course/state/createCourseMachine.ts","components/dashboard/teacher/courses/create-course/state/CreateCourseContext.tsx","components/dashboard/teacher/courses/create-course/state/createCourseStyles.ts","components/dashboard/teacher/courses/create-course/CreateTitle.tsx","components/dashboard/teacher/courses/create-course/CreateCourseInfo.tsx","components/dashboard/teacher/courses/create-course/NextSteps.tsx","components/dashboard/teacher/courses/create-course/CreateCourse.tsx","components/dashboard/teacher/courses/CoursesHome.tsx","components/dashboard/teacher/rubrics/rubric-builder/rubricBuilderMachine.ts","components/dashboard/teacher/rubrics/rubric-builder/RubricBuilder.tsx","components/dashboard/teacher/rubrics/rubric-editor/edit/EditEntry.tsx","components/dashboard/teacher/rubrics/rubric-editor/edit/EditScore.tsx","components/dashboard/teacher/rubrics/rubric-editor/edit/EditSection.tsx","components/dashboard/teacher/rubrics/rubric-editor/edit/EditWritingLevel.tsx","components/dashboard/teacher/rubrics/rubric-editor/delete/DeleteEntry.tsx","components/dashboard/teacher/rubrics/rubric-editor/edit/EditHowToImprove.tsx","components/dashboard/teacher/rubrics/rubric-editor/edit/RubricEditorDisplay.tsx","components/dashboard/teacher/rubrics/rubric-editor/RubricEditor.tsx","components/dashboard/teacher/rubrics/RubricsDashboard.tsx","components/dashboard/teacher/teachers-aid/styles/teachersAidContainerStyles.ts","components/dashboard/teacher/teachers-aid/styles/classControlPanelStyles.ts","components/dashboard/teacher/teachers-aid/state/teachersAidMachine.ts","components/dashboard/teacher/teachers-aid/state/TeachersAidContext.tsx","components/dashboard/teacher/teachers-aid/student-info/protocols/AssessProtocol.tsx","components/dashboard/teacher/teachers-aid/student-info/attendance/RemoveAbsence.tsx","components/dashboard/teacher/teachers-aid/student-info/attendance/Absence.tsx","components/dashboard/teacher/teachers-aid/student-info/attendance/ExcusedLateness.tsx","components/dashboard/teacher/teachers-aid/student-info/attendance/UnexcusedLatness.tsx","components/dashboard/teacher/teachers-aid/student-info/attendance/DailyAttendance.tsx","components/dashboard/teacher/behaviors/EditBehaviors.tsx","components/dashboard/teacher/behaviors/behaviorStyles.ts","components/dashboard/teacher/behaviors/BehaviorTypeList.tsx","components/dashboard/teacher/teachers-aid/student-info/behavior/TextAnalysisCheck.tsx","components/dashboard/teacher/teachers-aid/student-info/behavior/DailyBehavior.tsx","components/dashboard/teacher/teachers-aid/main-screen/status/Status.tsx","components/dashboard/teacher/teachers-aid/student-info/status/StudentStatus.tsx","components/dashboard/teacher/teachers-aid/student-info/StudentControlPanelDisplay.tsx","components/dashboard/teacher/teachers-aid/student-info/StudentInfo.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/center-console/PeriodSelect.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/center-console/PeriodSelectorDisplay.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/protocol-manager/SelectProtocol.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/protocol-manager/DeleteProtocols.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/protocol-manager/ActivatedProtocolDisplay.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/protocol-manager/ProtocolSelector.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/protocol-manager/ProtocolManager.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/coolDown-manager/CoolDownManager.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/center-console/StudentInfoSelector.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/DynamicLesson/WarmUpManager.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/DynamicLesson/DynamicLessonManager.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/center-console/MainScreenManager.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/center-console/ControlPanelDisplay.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/center-console/ClassControlPanel.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/random-student-generator/RandomStudentGenerator.tsx","hooks/useRollingArray.ts","components/dashboard/teacher/teachers-aid/styles/timerStyles.ts","components/dashboard/teacher/teachers-aid/class-control-panel/timer/TimerDisplay.tsx","components/dashboard/teacher/teachers-aid/class-control-panel/timer/TimerPresets.tsx","components/dashboard/teacher/teachers-aid/main-screen/seating-chart/Desk.tsx","components/dashboard/teacher/teachers-aid/main-screen/seating-chart/TwentyFourSeatChart.tsx","components/dashboard/teacher/teachers-aid/main-screen/seating-chart/TwelveSeatChart.tsx","components/dashboard/teacher/teachers-aid/main-screen/seating-chart/ThirtySeatChart.tsx","components/dashboard/teacher/teachers-aid/main-screen/seating-chart/ThirtySixSeatChart.tsx","components/dashboard/teacher/teachers-aid/main-screen/seating-chart/ThirtySixSeatPairs.tsx","components/dashboard/teacher/teachers-aid/main-screen/seating-chart/SeatingChart.tsx","components/dashboard/teacher/teachers-aid/styles/responseAssessorStyle.ts","components/dashboard/teacher/teachers-aid/main-screen/protocol-response-classlist/ResponseAssessor.tsx","components/dashboard/teacher/teachers-aid/main-screen/protocol-response-classlist/ProtocolResponseClassList.tsx","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/assign-reading-guide/AssignReadingGuideForTeachersAid.tsx","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/assign-reading-guide/LoadReadingGuides.tsx","components/dashboard/teacher/teachers-aid/main-screen/readingGuideViewer/ReadingGuideSelect.tsx","components/dashboard/teacher/teachers-aid/main-screen/readingGuideViewer/ReadingGuideViewer.tsx","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/assign-essay/AssignEssaysForTeachersAid.tsx","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/assign-essay/LoadEssays.tsx","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/assign-text-analysis/TextAnalysisAssigner.tsx","components/dashboard/teacher/teachers-aid/main-screen/homework-assigner/HomeworkAssigner.tsx","components/dashboard/teacher/teachers-aid/main-screen/protocol-response-manager/ProtocolResponseAssessment.tsx","components/dashboard/teacher/teachers-aid/main-screen/protocol-response-manager/ProtocolResponseManager.tsx","components/dashboard/teacher/teachers-aid/main-screen/MainScreenDisplay.tsx","components/dashboard/teacher/teachers-aid/TeachersAid.tsx","components/dashboard/teacher/parent-contact/state-n-styles/parentContactStyles.ts","components/dashboard/teacher/parent-contact/all-contacts/Contact.tsx","components/dashboard/teacher/parent-contact/all-contacts/DownloadContacts.tsx","components/dashboard/teacher/parent-contact/all-contacts/AllContacts.tsx","components/dashboard/teacher/parent-contact/create-contacts/state-style/createContactMachine.ts","components/dashboard/teacher/parent-contact/create-contacts/state-style/CreateContactContext.tsx","components/dashboard/teacher/parent-contact/create-contacts/FindAllStudents.tsx","components/dashboard/teacher/parent-contact/create-contacts/CreateContact.tsx","components/dashboard/teacher/parent-contact/ParentContacts.tsx","components/reusable-components/MarkingPeriodSelectorSwitch.tsx","components/dashboard/teacher/student-information/contact-info/CreateContactForm.tsx","components/dashboard/teacher/student-information/contact-info/ParentContacts.tsx","components/dashboard/teacher/student-information/ResetStudentPassword.tsx","components/dashboard/teacher/student-information/general-student-information/StudentGradeInformation.tsx","components/dashboard/teacher/student-information/general-student-information/SwitchCourse.tsx","components/dashboard/teacher/student-information/general-student-information/WritingMetrics.tsx","components/dashboard/teacher/student-information/general-student-information/StudentInformationDisplay.tsx","components/dashboard/teacher/student-information/TemporaryTasksInformation.tsx","components/dashboard/teacher/student-information/conduct/AbsenceHome.tsx","components/dashboard/teacher/student-information/conduct/BehaviorHome.tsx","components/dashboard/teacher/student-information/conduct/OutOfClassHome.tsx","components/dashboard/teacher/student-information/conduct/ConductHome.tsx","components/dashboard/teacher/student-information/InformationDisplay.tsx","components/dashboard/teacher/student-information/StudentInformation.tsx","components/dashboard/teacher/development/grammar/adjectives-prepositions/AdjectivesAndPrepositonalPhrases.tsx","components/dashboard/teacher/development/grammar/simple-subject-predicate/simplePredicateGrader.ts","components/dashboard/teacher/development/grammar/simple-subject-predicate/simpleSubjectGrader.ts","components/dashboard/teacher/development/grammar/simple-subject-predicate/SimpleSubjectPredicate.tsx","components/dashboard/teacher/development/grammar/complete-subject-predicate/subjectPredicateStyles.ts","components/dashboard/teacher/development/grammar/complete-subject-predicate/subjectPredicateGrading.ts","components/dashboard/teacher/development/grammar/complete-subject-predicate/SubjectPredicate2.tsx","components/dashboard/teacher/development/grammar/objects/Objects.tsx","components/dashboard/teacher/development/grammar/question-deconstruction/EndingPhrase.tsx","components/dashboard/teacher/development/grammar/question-deconstruction/EndingPhraseGrader.ts","components/dashboard/teacher/development/grammar/question-deconstruction/VerbIdentification.tsx","components/dashboard/teacher/development/grammar/question-deconstruction/HelpingVerbIdentification.tsx","components/dashboard/teacher/development/grammar/objects/ObjectGrader.ts","components/dashboard/teacher/development/grammar/simple-subject-predicate/findPreposition.ts","components/dashboard/teacher/development/grammar/question-deconstruction/ObjectIdentification.tsx","components/dashboard/teacher/development/grammar/question-deconstruction/QuestionWordRemoval.tsx","components/dashboard/teacher/development/grammar/question-deconstruction/SubjectIdentification.tsx","components/dashboard/teacher/development/grammar/question-deconstruction/SubjectPredicateSplit.tsx","components/dashboard/teacher/development/grammar/question-deconstruction/QuestionDeconstruction.tsx","components/dashboard/teacher/development/grammar/GrammarPractice.tsx","components/dashboard/teacher/development/test-questions/QuestionBlank.tsx","components/dashboard/teacher/development/test-questions/multipleChoiceGrader.ts","components/dashboard/teacher/development/test-questions/MultipleChoice.tsx","components/dashboard/teacher/development/test-questions/Tests.tsx","components/dashboard/teacher/development/DevelopmentHome.tsx","components/dashboard/teacher/behaviors/CreateBehavior.tsx","components/dashboard/teacher/behaviors/BehaviorHome.tsx","components/dashboard/teacher/TeacherDashboardHome.tsx","components/dashboard/Dashboard.tsx","components/home/loginStyles.ts","components/home/Login.tsx","components/home/navStyles.ts","navigation/teacher-nav/LessonNav.tsx","navigation/teacher-nav/AssignmentsNav.tsx","navigation/teacher-nav/CoursesNav.tsx","navigation/teacher-nav/RubricsNav.tsx","navigation/teacher-nav/ParentContactsNav.tsx","navigation/teacher-nav/BehaviorNav.tsx","navigation/teacher-nav/TeacherNav.tsx","navigation/student-nav/StudentNav.tsx","navigation/Nav.tsx","components/home/headerStyles.ts","components/resources/ProblemAndSolutionGuide.tsx","App.tsx","index.tsx"],"names":["ME_QUERY","gql","UserContext","createContext","undefined","UserContextProvider","children","useQuery","onCompleted","data","console","log","onError","error","loading","style","display","fontSize","color","height","justifySelf","alignSelf","aria-label","role","Provider","value","me","useUserContextProvider","context","useContext","Error","Standard8x12Container","styled","div","Standard7x12Container","LineInput","input","UnderlinedText","UnderlinedCenteredText","span","AcademicOutcomeTypes","ActivityTimeEnum","BasicQuestionEnum","BehaviorCategoryEnum","BehaviorQualityEnum","ContactTypeEnum","CourseMaxSizeEnum","CourseTypeEnum","DiscussionTypesEnum","DynamicLessonEnums","GradeTypeEnum","LatenessTypeEnum","LessonTypeEnum","MarkingPeriodEnum","NounTypeEnum","OutOfClassDestinationEnum","ProtocolActivityTypes","ProtocolAssessmentEnum","QuestionTypeEnum","QuestionWordEnum","QuizQuestionDifficultyLevelEnum","QuizQuestionTypeEnum","ReadingGuideMetricEnum","ReadingGuideReviewOptionsEnum","RubricSectionEnum","SchoolDayLengthEnum","SchoolDayType","StudentCohortEnum","TextAnalysisCompletionEnum","TimeOfDay","TitleEnum","VerbTypeEnum","WritingLevelEnum","AssignmentsToCompleteContainer","AssignmentsTypeSelectorPanel","AssignmentsTypeSelectorHeader","AssignmentsTypeStyle","selected","AssignmentTypeContainer","NoWorkContainer","MarkingPeriodSelectorContainer","MarkingPeriodSelectorTitle","MarkingPeriodSelectorSwitchContainer","MarkingPeriodSelectedSwitchArrow","AssignmentTypeTitle","AssignmentTypeContentContainer","CompletedAssignmentTypeContentContainer","CompletedAssignmentAssignmentAndScoreContainer","AssignmentLink","Link","AssignmentScore","PendingAssignmentScore","CompletionMessage","AssignmentLinkLi","li","PendingAssignmentLinkLi","AllAssignmentsMainContainer","AssignmentDisplayContainer","AssignmentDisplayTitle","AssignmentTypeSelect","AssignmentDisplayCategoryDisplay","AssignmentsContainer","IndividualAssignment","studentAssignmentMachine","Machine","id","initial","selectedMarkingPeriod","FIRST","states","essaysToComplete","on","COMPLETED_ESSAYS","READING_GUIDES","ARTICLE_REVIEWS","QUIZZES","ALL_ASSIGNMENTS","SET_MARKING_PERIOD","actions","assign","ctx","evt","payload","completedEssays","ESSAYS_TO_COMPLETE","readingGuidesToComplete","articleReviewsToComplete","quizzes","allAssignments","StudentAssignmentContext","StudentAssignmentContextProvider","useMachine","state","event","useStudentAssignmentContextProvider","CHECK_READING_GUIDE_STATUS_QUERY","ReadingGuideCheck","essay","useState","isHovering","setIsHovering","variables","studentId","_id","readingSections","readings","fetchPolicy","readingGuideNeeded","findReadingGuideByUserIdAndReadingSection","readingGuide","exempt","graded","inCourses","hasCourseInfo","checkReadingGuides","onMouseEnter","onMouseOut","to","ESSAYS_TO_COMPLETE_QUERY","AssignedEssaySelect","essaysForMarkingPeriod","findEssaysToCompleteByStudentId","essays","filter","markingPeriod","allEssaysComplete","length","every","missing","assigned","noEssaysHaveBeenAssigned","paperBased","map","READING_GUIDES_TO_COMPLETE_QUERY","AssignedReadingGuideSelect","findReadingGuidesToCompleteByStudentId","readingGuidesForMarkingPeriod","readingGuides","guide","noReadingGuidesAssigned","rg","ARTICE_REVIEWS_TO_COMPLETE_QUERY","ArticleReviewSelect","pollInterval","findArticleReviewsByStudent","articleReviews","articleReviewsForMarkingPeriod","articleReview","submitted","review","assignedDate","ENUM_VALUES","EnumContext","EnumContextProvider","markingPeriodEnum","MarkingPeriod","enumValues","name","writingLevelEnum","questionTypeEnum","rubricSectionEnum","timeOfDayEnum","informationStructureEnum","InformationStructureEnum","discussionTypesEnum","protocolAssessmentEnum","courseMaxSizeEnum","courseTypeEnum","schoolDayType","schoolDayLengthEnum","academicOutcomeTypes","protocolActivityTypes","contactTypeEnum","nounTypeEnum","verbTypeEnum","questionWordEnum","lessonTypeEnum","behaviorEnum","BehaviorEnum","quizQuestionDifficultyLevelEnum","quizQuestionTypeEnum","readingGuideReviewOptionsEnum","behaviorQualityEnum","behaviorCategoryEnum","outOfClassDestinationEnum","textAnalysisCompletionEnum","readingGuideMetricEnum","activityTimeEnum","useEnumContextProvider","markingPeriodMachine","currentMarkingPeriod","MARKING_PERIOD_QUERY","MarkingPeriodContext","MarkingPeriodContextProvider","type","findCurrentMarkingPeriod","useMarkingPeriodContextProvider","MarkingPeriodSelector","markingPeriodNumber","findIndex","element","index","setIndex","useEffect","onClick","c","ACTIVATE_QUIZ_MUTATION","START_QUIZ_MUTATION","QuizSelect","markingPeriodState","FIND_QUIZZES_BY_STUDENT_ID_QUERY","findQuizzesByStudentId","useMutation","refetchQueries","startQuiz","quizToTake","quiz","startedQuiz","quizId","schoolDayMachine","createSchoolDay","cohortWeek","RED","currentSchoolDayType","A","schoolDayCount","schoolDayLength","FULL","currentSchoolDay","__typename","signInSheets","todaysDate","CREATE_SCHOOL_DAY","EDIT_SCHOOL_DAY","SET_TODAYS_SCHOOL_DAY","CURRENT_SCHOOL_DAY","SET_CURRENT_SCHOOL_DAY_COUNT","SET_CURRENT_SCHOOL_DAY_TYPE","SET_CURRENT_SCHOOL_DAY_LENGTH","SET_CURRENT_COHORT_WEEK","editSchoolDay","SchoolDayContext","SchoolDayContextProvider","useSchoolDayContextProvider","CurrentSchoolDay","schoolDay","average","nums","reduce","a","b","copyToClipBoard","text","navigator","clipboard","writeText","responsibilityPointConverter","grade","pointTotal","capitalizer","word","substring","toUpperCase","toLowerCase","timeAFunction","startTime","endTime","startTimeMinutes","split","slice","join","startTimeSeconds","endTimeMinutes","endTimeSeconds","sortByRubricEntryScore","score","dateInputConverter","date","year","Date","getFullYear","day","Number","getDate","getMonth","toString","dateConverter","charAt","timeFinder","time","toLocaleDateString","toLocaleString","toLocaleTimeString","hour12","noon","evening","splitSentenceByWord","originalSentence","splitOriginalSentence","endingPunctuation","lastWord","todaysLocaleDate","window","screen","width","sortByLetter","nameA","nameB","phraseCapitalizer","phrase","substr","underscoreEliminator","string","timeChanger","hour","irregularPastTenseVerbList","verb","lowerCaseVerb","specialVerbsInPastTense","verbsThatChangeInIngFormList","verbsThatChangeInIngFormat","redCohort","TeacherDashboardContainer","TeacherHomeScreenOptionsContainer","TeacherDirectoryOptions","TeacherDirectoryOptionsLink","CreateSchoolDayButton","button","CreateSchoolDayContainer","CreateSchoolDayCenteredItem","CreateSchoolDayInformationContainer","CREATE_SCHOOL_DAY_MUTATION","FIND_CURRENT_SCHOOL_DAY_COUNT_QUERY","CreateSchoolDay","findSchoolDayTracker","schoolDayTracker","schoolDayTypeTracker","cohortWeekTracker","AB","B","WHITE","background","onChange","e","target","gridColumn","customMediaQuery","maxWidth","media","custom","macBookPro16","macBook","iPad","iPhone","HomeScreenTitle","ButtonBox","LoginContainer","HomePageContainer","HomeScreenContainer","StudentHomeScreenOptionsContainer","StudentHomeScreenOptionsNonLink","StudentHomeScreenOptions","LogoutOption","OptionTitle","GradeDisplay","StudentOptionsLinkButton","GetStartedButton","StyledLink","LogoutLink","PasswordChangeContainer","PasswordChangeItemContainers","NewPasswordInput","AcceptNewPasswordButton","EditSchoolDayContainer","EditSchoolDayTitle","EDIT_SCHOOL_DAY_MUTATION","EditSchoolDay","updateSchoolDay","schoolDayId","updatedCohortWeek","updatedCurrentSchoolDayType","updatedDate","updatedSchoolDayCount","FIND_CURRENT_SCHOOL_DAY_QUERY","SchoolDay","useNavigate","findSchoolDayByDate","teachesCourses","course","matches","useTime","setTime","dateTime","setDateTime","setInterval","useClassTimeIndicator","student","currentSchoolDayState","schoolDayData","classTime","parse","HALF","halfDayStartsAt","ONE_HOUR_DELAY","hourDelayStartsAt","startsAt","halfDayEndsAt","hourDelayEndsAt","endsAt","CHECK_ASSIGNMENTS_ALLOWED_QUERY","useAssignmentsAllowedInClassCheck","courseId","assignmentsAllowedInClass","checkAssignmentsAllowedInClass","allowed","FIND_STUDENT_GRADES_QUERY","useCalculateGrades","polling","findAllMarkingPeriodGrades","assignments","allEssays","assignment","finalDraft","returned","dueDate","dueTime","allSecondaryGrades","gradeType","SECONDARY","responsibilityPoints","handleScoring","gradeWeightPercentage","earnedPoints","acc","i","maxPoints","Math","round","handeResponsiblityPointScore","responsibilityPointsGrade","onlyPrimaryAndSecondary","onlyResponsibilityPoints","onlySecondary","onlyPrimary","onlySecondaryAndResponsiblityPoints","onlyPrimaryAndResponsibilityPoints","allGrades","primaryGrade","secondaryGrade","primary","secondary","number","gradeTotal","noGrade","rp","toFixed","supportiveGrade","totalGrade","AllAssignments","categoryState","setCategoryState","dateSort","contractedTitle","str","textDecoration","sort","effort","FIND_COMPLETED_ESSAYS_QUERY","CompletedEssaySelect","findCompletedEssaysByStudentId","MARK_EXEMPT_MUTATION","StudentAssignments","isAbsent","hasAbsences","find","dayAbsent","some","studentEssayMachine","essayId","writingLevel","DEVELOPING","developingOrganizer","questionType","HOW","developingSentenceStructure","subject","object","subjectCompliment","restatement","answer","conclusion","academicOrganizer","academicSentenceStructure","preLoaded","problemSolution","problem","reasonForProblem","solvedBy","whySolutionSolved","howCauseEffect","before","cause","after","whyCauseEffect","ultimateCause","proximateCause","advancedOrganizer","HOW_PROBLEM_SOLUTION","advancedSentenceStructure","draftToUpdate","isLate","helpDisplay","vocabDisplay","rubricDisplay","info","SET_ESSAY_ID","SET_WRITING_LEVEL","SET_DRAFT","ORGANIZER","organizers","transition","always","cond","NEXT","SET_BASIC_QUESTION_TYPE","SET_DEVELOPING_SENTENCE_STRUCTURE","SET_RESTATEMENT","SET_ANSWER","SET_CONCLUSION","SET_HELP_DISPLAY","SET_VOCAB_DISPLAY","identifications","RESTATEMENT","ANSWER","SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT","SET_DEVELOPING_SENTENCE_STRUCTURE_VERB","SET_DEVELOPING_SENTENCE_STRUCTURE_OBJECT","SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT","PREVIOUS","SET_ACADEMIC_SENTENCE_STRUCTURE","SET_FULL_QUESTION_TYPE","SET_PRE_LOADED","SET_PROBLEM_SOLUTION","SET_HOW_CAUSE_EFFECT","SET_WHY_CAUSE_EFFECT","SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT","SET_ACADEMIC_SENTENCE_STRUCTURE_VERB","SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT","SET_ADVANCED_SENTENCE_STRUCTURE","SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT","SET_ADVANCED_SENTENCE_STRUCTURE_VERB","SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT","workingDraft","SET_LATE","SET_RUBRIC_DISPLAY","StudentEssayContext","StudentEssayContextProvider","useStudentEssayContextProvider","useForm","initialValues","values","setValues","useToggle","initialValue","setValue","useClickOutside","ref","handler","listener","current","contains","document","addEventListener","removeEventListener","Modal","isToggled","setIsToggled","useRef","AnimatePresence","motion","opacity","animate","exit","position","top","left","transform","x","EssayContainer","AssignmentDetailsContainer","AssignmentDetailsPartContainers","AssignmentDetailsReadingInfo","AssignmentDetailsDueDate","AssignmentDetailsGoBackButtonContainer","AssignmentDetailsGoBackButton","EssayInfoContainer","OrganizerContainer","OrganizerTitleContainer","OrganizerTitleStyle","QuestionContainer","QuestionStyle","QuestionTypeContainer","QuestionTypeQuestionStyle","QuestionTypeAnswerSelectStyle","select","PartsOfQuestionContainer","AcademicPartsOfQuestionContainer","PartsOfQuestionTitle","PartContainer","AcademicPartContainer","PartInput","PartTextArea","textarea","OrganizerControlButtonContainer","OrganizerControlButtonContainerIdentifications","OrganizerControlButtonMessageContainer","OrganizerControlButton","EssaySubmitButton","EssaySubmitCheck","SentenceToManipulate","cursorFormat","RestatementTitle","OrganizerSectionDirectionsContainer","RestatementQuestionToRestateContainer","EndingPhraseOptionsContainer","RestatementQuestionToRestateSelection","RestatementDirectionsContainer","RestatementDirectionsContainerObjectDirections","RestatementDirectionsContainerObjectDirectionsButtonContainer","RestatementDirectionsContainerObjectDirectionsButton","RestatementFeedbackContainer","correct","FinalRestatementMessageContainer","FinalRestatementMessage","FinalRestatementStyles","RestatementFeedbackContainerObjectIndentification","RestatementFeedBackContainerMessageContainer","RestatementSplitter","AcademicRestatementContainer","AcademicRestatementTitle","AcademicQuestionTypeContainer","AcademicQuestionTypeSelect","AcademicQuestionAnswerTypeContainer","AnswerTypeContainter","RestatementInput","AcademicConclusionInput","AcademicRestatementInput","RestatementOutput","AcademicConclusionOutput","AnswerInput","AnswerOutput","EssayEditorBackgroundContainer","EssayEditorContainer","EssaySheet","EssayOrganizerSheet","EssayOrganizerTitle","EssayOrganizerRestatement","EssayOrganizerConclusion","EssayOrganizerAnswer","AcademicEssayOrganizerAnswer","AcademicEssayOrganizerAnswerBlock","AcademicEssayOrganizerAnswerBlockHeader","AcademicEssayOrganizerAnswerBlockBody","HowCauseEffectOrganizerAnswer","EssayOrganizerPartHeader","EssayOrganizerPartBody","DevelopingEssayOrganizerPartBody","SubmitEssayContainer","SUBMIT_FINAL_DRAFT_MUTATION","SubmitEssay","submittedFinalDraft","response","updateWorkingDraft","navigate","submitToggle","setSubmitToggle","submitFinalDraft","called","hasOwner","currentGrade","gradeLoading","submitFinal","submitTime","late","disabled","DevelopingEssayOrganizer","organizer","essayOrganizer","textAlign","onCopy","preventDefault","AcademicProblemSolutionOrganizerDisplay","organizerTab","setOrganizerTab","overflowWrap","gridAutoFlow","borderLeft","borderTop","borderRight","borderTopRightRadius","borderBottom","border","answerType","AcademicEssayWhyCauseAndEffectOrganizerDisplay","AcademicEssayOrganizer","includes","AdvancedEssayOrganizer","EssayOrganizer","StudentEssayEditor","editor","useMemo","withReact","createEditor","parsedEssay","JSON","draft","content","stringify","UPDATE_WORKING_DRAFT_MUTATION","updatedDraft","renderElement","useCallback","props","renderLeaf","spellCheck","autoFocus","marginLeft","marginRight","onPaste","placeholder","onKeyDown","CodeElement","attributes","DefaultElement","textIndent","Leaf","fontWeight","leaf","bold","strikeThrough","underline","UPDATE_PROBLEM_SOLUTION_MUTATION","AcademicProblemSolution","questionParts","topic","irregularVerbCheck","updateProblemSolution","properNameEndsInS","firstLetter","test","properNounCheck","simpleSubject","simplePredicate","question","UPDATE_HOW_CAUSE_EFFECT_MUTATION","AcademicHowCauseEffect","updateHowCauseEffect","UPDATE_WHY_CAUSE_EFFECT_MUTATION","AcademicWhyCauseEffect","helpingVerb","updateWhyCauseEffect","verbPhraseSplitter","SET_ANSWER_TYPE_MUTATION","AcademicAnswerTypes","updateAcademicOrganizer","setAnswerType","HOW_CAUSE_EFFECT","WHY_CAUSE_EFFECT","SET_RESTATEMENT_MUTATION","EndingPhrase","setState","questionToModify","setAnswer","questionTypeCorrect","setQuestionTypeCorrect","questionTypeEnabled","setQuestionTypeEnabled","questionTypeMessage","setQuestionTypeMessage","setRestatement","sentence","seperator","sentenceJoiner","correctQuestionWord","givenQuestionWord","correctQuestionType","message","waitTime","ending","endingPhraseGrader","questionWord","timer","setTimeout","clearTimeout","WHY","ACADEMIC","replace","questionTypeChecker","handleQuestionTypeSelector","shouldBeHowProblemSolution","shouoldBeHowCauseAndEffect","shouldBeWhyQuestion","shouldBeHowQuestion","originalQuestion","gridRow","useSelectedText","setText","getSelection","empty","removeAllRanges","HelpingVerbIdentification","setQuestionToModify","auxilaryVerbCheck","reset","setattempts","enabled","setEnabled","point","setPoint","wordToCheck","newSentence","correctSentence","completePredicate","helpingVerbCheck","wordToFind","sentenceToModify","removeDidHandler","predicateIndex","moveBeingWord","onMouseUp","onSelect","onDoubleClick","findPreposition","prepositions","wordCheck","ObjectIdentification","setObject","step","setStep","attempts","setAttempts","setCorrect","transitiveQuestionMessage","setTransitiveQuestionMessage","givenObject","correctObject","completeSubject","conjugatedVerb","sentenceContext","questionWords","questionWordsExceptLast","lastWordInQuestion","letter","trim","howToFix","objectContainsPreposition","correctMessage","wordToFilter","wordInSelection","lastWordWithOutPeriod","completeQuestion","objectGrader","hasObject","indexOfVerb","ADVANCED","toISOString","timeToComplete","QuestionWordRemoval","handleSelection","handleQuestionWordRemove","SubjectComplimentIdentifier","givenSubjectCompliment","correctSubjectCompliment","answerIsInThePredicate","subjectComplimentGrader","SubjectIdentification","setSubject","correctSimpleSubject","givenSimpleSubject","compoundNoun","nounType","questionWithSeparatedPunctuation","whatWentWrong","simpleSubjectGrader","part","SubjectPredicateSplit","attempt","setAttempt","selectedPredicate","letters","givenSubject","givenPredicate","noun","verbType","subjectCheck","predicateCheck","verbPhraseCheck","wholeVerb","ACTION","BEING","HAVING","subjectPredicateGrading","correctSubject","sentenceToPass","cursor","textUnderlinePosition","textDecorationStyle","letterIndex","VerbIdentification","setVerb","correctSimplePredicate","givenSimplePredicate","verbPhrase","verbTypeTranslator","lastWordInCompletePredicateWithPunctuation","completePredicateWithPunctutation","simplePredicateGrader","pastTenseVerb","QuestionDeconstruction","UPDATE_DEVELOPING_ORGANIZER_MUTATION","DevelopingOrganizer","basicQuestionType","updateDevelopingOrganizer","handleNext","verbConverter","conclusionSetup","AcademicRestatement","AcademicConclusion","UPDATE_ACADEMIC_ORGANIZER_MUTATION","AcademicOrganizer","err","AdvancedHowProblemSolution","AdvancedHowCauseEffect","AdvancedWhyCauseEffect","AdvancedAnswerTypes","AdvancedRestatement","updateAdvancedOrganizer","AdvancedConclusion","UPDATE_ADVANCED_ORGANIZER_MUTATION","AdvancedOrganizer","SET_ORGANIZER_LEVEL_MUTATION","FIND_ESSAY_QUESTION_BY_ID_QUERY","OrganizerInfo","essayQuestionId","setOrganizer","findEssayQuestionById","essayQuestion","ReadingGuideContainer","ReadingGuideInfoContainer","ReadingGuideInfoSwitchButtonContainer","ReadingGuideInfoSwitchButton","ReadingGuideInfoTitle","ReadingGuideInfoBody","ReadingGuideToCompleteContainer","ReadingGuideHeader","QuestionBlock","SectionOrganizationBodyEntry","ReadingGuideQuestion","ReadingGuideProblemsQuestionContainer","form","BlueButton","SmallBlueButton","SmallNextButton","ReadingGuideTextArea","ClarifyingQuestionsTextArea","SubmitReadingGuideContainer","ReadingGuideButtonArea","ReadingGuideQuestionNavButtons","ReadingGuideQuestionReviewTitle","ReadingGuideQuestionReview","ReadingGuideAnswerBlock","ReadingGuideQuestionReviewAnswer","EssayInfoSwitchButtonContainer","EssayInfoSwitchButton","EssayInfoTitle","EssayInfoBody","EssaySectionOrganizationBodyEntry","Vocab","vocabList","definition","EssayHelp","Rubrics","EssayInfo","FIND_ESSAY_BY_ID_QUERY","EssayToComplete","essayToComplete","useParams","draftToParse","findEssayById","stringDraft","answerTypes","draftNumber","gradingDraft","rubricEntries","additionalComments","readingPages","lessonInfo","completedEssayMachine","organizerView","textToSubmit","reviewEssay","SET_DRAFT_NUMBER","reviewOrganizer","IDENTIFICATIONS","CONCLUSION","ESSAY","TRANSITION","QUESTION_TYPE","redoEssay","SET_TEXT_TO_SUBMIT","CompletedEssayContext","CompletedEssayContextProvider","useCompletedEssayContextProvider","CustomEditor","isBoldMarkActive","Editor","nodes","match","n","universal","isStrkeThroughMarkActive","isUnderlineActive","isRedPenActive","redPen","toggleBoldMark","isActive","Transforms","setNodes","Text","isText","toggleStrikeThrough","toggleUnderline","gradeEssayMachine","editColor","draftToGrade","previousDraft","draftSelector","organizerToggle","rubricEntry","entry","rubricSection","OVERALL","rubricWritingLevels","currentRubricSection","comment","previousRubricEntries","SET_INTITIAL_DRAFT","SET_PREVIOUS_DRAFT","TOGGLE_ORGANIZER","SET_DRAFT_SELECTOR","grading","developing","CHANGE_EDIT_COLOR","SET_PREVIOUS_RUBRIC_ENTRIES","SET_CURRENT_RUBRIC_SECTION","SET_RUBRIC_ENTRY","SET_RUBRIC_ENTRIES","SET_SCORE","SET_COMMENT","ADD_ADDITIONAL_COMMENT","REMOVE_COMMENT","academic","advanced","returning","GradeEssayContext","GradeEssayContextProvider","useGradeEssayContextProvider","EssayGraderContainer","EssayScreen","EssayToGradeContainer","PreviousEssayContainer","DraftName","OrganizerForEssayToGradeContainer","NameContainer","ReturnEssayContainer","NameAndAssignmentContainer","GoBackButton","ReturnEssayButton","GradeDetailsContainer","GradeDetailsSelectorContainer","GradeDetailsSelector","DraftSelectorLeft","DraftSelectorRight","GradingToolContainer","RubricContainer","RubricTypeTitle","RubricSectionEnumContainer","RubricCheckBoxContainer","RubricCheckBoxInput","AdditionalCommentsContainer","AdditionalCommentTitle","AddCommentContainer","AddCommentInput","AddCommentButton","Comments","EditorToolBar","EditorToolBarTitle","UPDATE_GRADING_DRAFT_MUTATION","TeacherEssayEditor","setCommentNumber","parsedGradingDraft","updateGradingDraft","ctrlKey","key","isBlock","CompletedEssayViewer","userSelect","EssayViewContainer","CompletedEssayDetailsContainer","CompletedEssayDetailsPartContainers","DraftSelectorContainer","DraftSelectorBack","DraftSelectorDraftNumber","DraftSelectorNext","ScoreSheet","ScoreSheetScore","ScoreSheetRubricComments","ScoreSheetAdditionalComments","ScoreSheetRubricCommentsTitle","RubricSectionTitle","CompletedEssayContainer","EssayRedoButtonContainer","CompletedEssayControlButton","HowToImproveTitle","HowToImproveBody","RedoEssayEditor","EssayToGradeOrganizer","MultipleDraftView","setOrganizerView","setDraftSelector","currentDraft","gridTemplateColumns","gridTemplateRows","margin","boxShadow","r","overflow","HowToImprove","waysToImprove","way","RESUBMIT_ESSAY_FINAL_DRAFT_MUTATION","SubmitRedoneEssay","resubmitFinalDraft","RedoEssayOrganizerHelp","DevelopingAnswer","DevelopingRestatement","DevelopingConclusion","setLoading","modal","setModal","RedoEssayOrganizer","FIND_COMPLETED_ESSSAY_BY_ID_QUERY","CompletedEssay","completedEssay","howToImprove","gradePercent","readingGuideToCompleteMachine","updateReadingGuideInputs","readingGuideId","submitReadingGuideInputs","help","problemList","importantPeopleList","questions","SET_READING_GUIDE_ID","SET_READING_GUIDE_INPUTS","SET_READING_GUIDE_PROPERTIES","keyName","SET_PROBLEM_LIST","problems","SET_IMPORTANT_PEOPLE_LIST","importantPeople","SET_HELP","ReadingGuideToCompleteContext","ReadingGuideToCompleteContextProvider","useReadingGuideToCompleteContextProvider","dailyAgendaMachine","staticLessonTypes","LESSON_DETAILS","getLesson","TODAYS_LESSON","todaysLesson","GET_LESSON","POLLING","SET_STATIC_LESSON_TYPE","oldLesson","DailyAgendaContext","DailyAgendaContextProvider","useDailyAgendaContextProvider","LessonPageContainer","ClassInfoContainer","ClassInfoStyle","StopLessonContainer","LessonMainScreen","LessonComponentTypeContainer","LessonComponentTypeStyle","ProtocolsContainer","ProtocolTypeContainer","ProtocolTaskContainer","ProtocolTask","ProtocolResponseContainer","ProtocolResponseTaskContainer","ProtocolResponse","ProtocolResponseHeader","ProtocolResponseArea","ProtocolResponseButtonContainer","ProtocolResponseButton","LessonComponentTitleContainer","LessonComponentDetailsContainer","LessonComponentDetailsStyle","LessonDetailsContainer","LessonDetailCenter","VocabWordContainer","ul","VocabWordStyle","AssignedSeatsContainer","AssignedSeatsTitleContainer","AssignedSeatsStudentListContainer","AssignedSeatsStudentListItemHeaders","AssignedSeatsStudentListItem","indexNumber","LessonInstrcutionContainer","FIND_ACTIVE_STUDENT_PROTOCOL_QUERY","RESPOND_TO_PROTOCOL_MUTATION","StudentProtocolResponse","setPolling","setResponse","academicOutcomeType","LOGIC_BUILDING","completed","task","protocol","setProtocol","findActiveProtocolByStudent","protocolId","respondToProtocol","respond","WarmUpResponse","lesson","beforeActivity","alignItems","justifyItems","WarmUp","lessonType","LessonDetails","multiPageSection","pageNumbers","endingPage","startingPage","assignedSections","startingSection","endingSection","essentialQuestion","Protocols","duringActivities","protocolCount","directions","ExitActivityResponse","ExitActivity","afterActivity","AssignedSeating","assignedSeats","assignedCourses","seat","aName","lastName","bName","firstName","deskNumber","DynamicLesson","courseToLoad","dynamicLesson","HandbookContainer","OwnersTitleContainer","HandbookContentSelectorContainer","ContentSelectorTabType","HandbookInformationDisplayContainer","DisplayTitle","ContentContainer","DoubleSidedContentContainer","TripleSidedContentContainer","IndividualContentContainer","ContentContainerTitle","TextAnalysisForStudentLessonContainer","TextAnalysisForStudentLesson","StaticLesson","VOCAB","FIND_LESSON_STATUS_QUERY","LessonLoader","lessonId","findLessonStatus","FIND_LESSON_QUERY","STUDENT_SIGN_IN_MUTATION","LessonMainMenu","useLazyQuery","findLessonByCourseAndDate","loadLesson","startPolling","stopPolling","lessonDate","virtual","articleReviewToCompleteMachine","articleReviewToComplete","articleTitle","articleAuthor","articleLink","articleReviewId","issue","publishedDate","solutions","bias","topicsImportance","complete","SET_INPUTS","SET_REVIEW_ID","SET_TITLE","SET_AUTHOR","SET_LINK","SET_ISSUE","SET_PUBLISHED_DATE","SET_SOLUTIONS","SET_BIAS","SET_TOPICS_IMPORTANCE","ArticleReviewToCompleteContext","ArticleReviewToCompleteContextProvider","useArticleReviewToCompleteContextProvider","ArticleReviewContainer","ArticleReviewInfoContainer","ArticleReviewHelpHeader","ArticleReviewHelpBody","ArticleReviewDetalisContainer","ArticleReviewToCompleteContainer","ArticleReviewSubmitButton","toggled","ArticleReviewHeader","ArticleReviewToCompleteInformationContainer","Required","ArticleReviewInputs","ArticleReviewArticleNameContainer","ArticleReviewArticleNameInput","ArticleReviewArticleLinkContainer","ArticleReviewArticleLinkInput","ArticleReviewAuthorContainer","ArticleReviewAuthorInput","ArticleReviewIssueContainer","ArticleReviewIssueInput","ArticleReviewBiasContainer","ArticleReviewBiasSelect","ArticleReviewSolutionsContainer","ArticleReviewSolutionsInput","ArticleReviewArticleImportanceContainer","ArticleReviewArticleImportanceInput","UPDATE_ARTICLE_REVIEW_MUTATION","ArticleReviewToCompleteForm","articleReviewInfo","updateArticleReview","FIND_ARTICLE_REVIEW_BY_ID_QUERY","SUBMIT_ARTICLE_REVIEW_MUTATION","ArticleReviewToComplete","setToggled","findArticleReviewById","submitArticleReview","quizToCompleteMachine","quizzableSections","currentQuizzableSection","questionNumber","SET_QUIZZABLE_SECTIONS","SET_INITIAL_QUIZZABLE_SECTION","NEXT_QUIZZABLE_SECTION","quizzableSectionIndex","ADD_EARNED_POINTS","points","ADD_RESPONSIBILITY_POINTS","GET_CURRENT_POINTS","NEXT_QUESTION_NUMBER","QuizToCompleteContext","QuizToCompleteContextProvider","useQuizToCompleteContextProvider","StudentInformationContainer","StudentInformationTitlePageHeader","StudentNameSelectContainer","StudentNameSelectorContainer","SelectStudentTitle","StudentSelectInput","StudentNameListContainer","InformationContainer","StudentNameHeader","InformationTypeSelectorContainer","InformationTypeTab","InformationPageOutline","ProtocolInformationContainer","ConductInformationContainer","StudentInformationDisplayContainer","ContactInformationContainer","AssignmentInformationContainer","AssignmentInformationAssignmentSwitchContainer","AssignmentSwitch","AssignmentInformationDisplayContainer","AssignmentInformationContainerHeader","AssignmentInformationStyle","IndividualAssignmentDisplay","lastLine","everyOtherLine","SGOContainer","SGOTypeSwitchContainer","SGOTypeSwitch","SGOEssayContainer","SGOScoreContainer","EssayViewer","Essays","studentName","answerScore","answerEntries","conclusionScore","conclusionEntries","FIND_ESSAYS_BY_STUDENT_QUERY","FIND_SGO_ESSAYS_QUERY","FIND_ALL_ESSAY_QUESTIONS_QUERY","SGOInfo","sgoSwitch","setSgoSwitch","sgoEssays","allEssayLoading","allQuestionsData","findSGOEssaysByStudentId","findEssaysByStudentId","allEssayList","essayA","essayB","questionList","findAllQuestions","answerEntryScore","conclusionEntryScore","essayEntryList","allCompletedEssays","questionNo","bestEssay","answerScoreContainer","conclusionScoreContainer","push","answerEntryList","conclusionEntryList","readingSection","answerScoreAverage","conclusionScoreAverage","answerData","conclusionData","studentInformationMachine","nameSelect","SET_STUDENT","information","studentInfo","ASSIGNMENTS","CONTACTS","PROTOCOLS","CONDUCT","UPDATE_STUDENT","STUDENT_INFO","SGO","ESSAYS","sgo","protocols","conduct","contacts","StudentInformationContext","StudentInformationContextProvider","useStudentInformationContextProvider","AssignmentControlPanelContainer","HomeworkAssingerContainer","AssignmentControlSelector","AssignmentControlItem","AssignmentBlockContainer","TextStyle","ResponseStyle","AssignButton","QuizControlPanelContainer","QuizNameContainer","AssignAllQuizzesButton","IndividualQuizControlContainer","grey","QuizStatusIndicator","ReadingGuideReviewContainer","ReadingGuideControlArrowContainer","UNASSIGN_QUIZ_MUTATION","FORCE_FINISH_QUIZ_MUTATION","IndividualQuizControl","presentStudentList","activateQuiz","unAssignQuiz","forceFinishQuiz","markExempt","assignmentId","exemptStatus","notStarted","finishedQuiz","columnGap","backgroundColor","borderRadius","activate","ASSIGN_QUIZZES_MUTATION","QuizControlPanel","assignQuizzes","studentIds","QuizInfo","numberOfQuizzesTotal","FIND_ASSINGMENT_INFORMATION_QUERY","AssignmentInformation","findAssignmentByStudentId","allEssaysEarnedPointTotal","allEssaysMaxPointTotal","overallEssayScore","readingGuideFinal","RESPONSIBILITY_POINTS_QUERY","ResponsibilityPointsDisplay","currentMarkingPeriodResponsiblityPoints","available","useGradeCalculator","assignmentLoading","responsibilityPointsLoading","responsibilityPointsData","secondaryGrades","applicableCurrentMarkingPeriodResponsiblityPoints","findResponsibilityPointsByStudentId","applicableEssays","essayEarnedPoints","essayMaxPoints","secondaryGradeAssignments","secondaryGradesEarnedPoints","secondaryGradesMaxPoints","supportive","essayGrade","primaryGradeCalculator","secondaryGradeCalculator","supportiveGradeCalculator","QuizContainer","QuizTitleContainer","QuizMessageContainer","QuestionBlankContainer","FinishedQuizContainer","QuizQuestionContainer","QuizQuestionAnswersContainer","QuizQuestionAnswerLabelContainer","label","QuizQuestionAnswerInput","QuizQuestionSubmitContainer","SubmitButton","FINISH_QUIZ_MUTATION","FinishQuiz","finished","finishQuiz","QuestionBlank","answers","setDifficultyState","difficultyState","currentQuizQuestion","setFinished","answerValue","setAnswerValue","handleFinished","onSubmit","MULTIPLE_CHOICE","checked","TRUE_FALSE","y","difficultyLevel","partiallyCorrect","multipleChoiceGrader","DIFFICULT","currentDifficulty","trueFalseGrader","QuizQuestionDisplay","innerWidth","onFocus","onBlur","onResize","WindowFocusHandler","section","associatedTextSectionId","hasIEP","answerList","removable","randomizedAnswers","random","FIND_QUIZ_QUESTIONS_QUERY","QuizSection","quizzableSectionIds","forcedFinish","findQuizQuestionsByQuizzableSections","quizQuestions","FIND_QUIZ_BY_ID_QUERY","QuizToComplete","params","quizToComplete","findQuizById","StudentControlPanelContainer","StudentInfoContainer","StudentInfoDisplay","absent","StudentNameContainer","AttendanceContainer","AttendanceButton","created","lateButton","ProtocolDisplayContainer","ProtocolTitle","GroupProtocolAssessorContainer","PartnerContainer","CenteredTitle","PartnerListContainer","PartnerListItem","PartnerRemoveContainer","DiscussionContainer","AssessmentContainer","AssessorButton","StudentBehaviorContainer","StudentBehaviorButtonContainer","StudentBehaviorTitle","StudentBehaviorButton","goodBehavior","ready","BehaviorRemoverContainer","BehaviorRemoverTitleContainer","BehaviorItemContainer","BehaviorItem","RemoveBehaviorButton","FIND_BEHAVIORS_BY_STUDENT_ID_AND_DATE_QUERY","REMOVE_STUDENT_BEHAVIOR_MUTATION","BehaviorRemover","studentBehaviors","removeStudentBehavior","behavior","overflowX","behaviorName","studentBehaviorId","StudentBehaviorContentContainer","BehaviorItemTitle","TotalPointsForTheDayContainer","StudentBehavior","totalPoints","findBehaviorsByStudentIdAndDate","behaviors","behaviorQuality","POSITIVE","NEGATIVE","StudentGradeDisplay","UPDATE_USER_ACTIVITY_MUTATION","LOGOUT_MUTATION","Logout","toggleLogin","setIsNavOpen","logoutMutation","userId","updateUserActive","Greetings","TodaysLessonPlan","setHasLessonNow","IS_THERE_A_LESSON_TODAY_QUERY","LessonDisplay","hasLessonNow","lessonLink","findSchoolDayAndLesson","lessonToday","StudentGradeBreakdownContainer","StudentGradeBreakdownContainerTitle","DisclaimerContainer","EssayAverage","essayList","essayAverage","QuizAverage","quizList","quizPointAverage","q","ReadingGuideAverage","readingGuideList","readingGuideAverage","MyGradesResponsibilityPoints","p","AssignmentFinder","PRIMARY","Grades","VocabList","words","ReadingGuideHelp","readingGuideQuestions","SUBMIT_READING_GUIDE_MUTATION","SubmitReadingGuide","readingGuideInfo","setCurrentIndex","readingGuideLevel","submitReadingGuide","completeReadingGuide","NavButtons","currentIndex","UPDATE_READING_GUIDE_MUTATION_New","updateReadingGuideNew","GenericQuestionBlank","questionObject","previousAnswers","previousAnswer","alignContent","justifyContent","CompleteReadingGuideNew","hasProgressTracker","readingGuideProgressTracker","currentState","BASIC","FIND_READING_GUIDE_BY_ID_QUERY","START_READING_GUIDE_MUTATION","ReadingGuideToComplete","readingGuideToComplete","startReadingGuide","findReadingGuideById","PASSWORD_CHECK_QUERY","CHANGE_PASSWORD_MUTATION","InitialPasswordChange","newPassword","setNewPassword","passwordDoubleCheck","setPasswordDoubleCheck","userName","oldPassword","changePassword","Behavior","ContactInfo","Expecations","FAQ","Grading","Procedures","TextAnalysis","Handbook","contentSelection","setContentSelection","selection","StudentDashboardHome","pathname","useLocation","passwordCheck","setPasswordCheck","password","firstTimeLoginIn","usePasswordCheck","path","Title","displayName","ADD_NEW_TEXT_MUTATION","AddText","textTitle","setTextTitle","ownerId","addNewText","sectionBuilderMachine","fromText","fromChapterId","fromChapterTitle","header","hasProtocols","hasQuestions","hasVocab","numberOfParagraphs","SET_TEXT_TITLE","chapter","SET_CHAPTER_ID","SET_CHAPTER_TITLE","SET_HEADER","pages","SET_PAGE_NUMBERS","vocab","SET_VOCAB_LIST","SET_QUESTIONS_LIST","SET_PROTOCOLS_LIST","create","COMPLETE","RESET_SECTION","SectionBuilderContext","SectionBuilderContextProvider","useSectionBuilderContextProvider","TextSelectionDisplay","textList","FIND_TEXTS_QUERY","TextListLoader","texts","findTexts","ADD_NEW_CHAPTER_MUTATION","AddChapter","title","chapterValues","chapterNumber","chapterTitle","addNewChapter","FIND_CHAPTERS_IN_TEXT_QUERY","ChapterSelect","isAddChapterVisible","toggleVisible","findChaptersInText","chapters","arr","VocabInfo","vocabWordInfo","setVocabWordInfo","QUESTION_TYPE_ENUM_QUERY","QuestionsInfo","questionInfo","setQuestionInfo","questionTypes","ProtocolsInfo","activityType","THINK_PAIR_SHARE","protocolValues","setProtocolValues","outcome","CREATE_TEXT_SECTION_MUTATION","CreateTextSection","createTextSection","SectionBuilderInfoDisplay","SectionBuilderDisplayContainer","FromTextAndChapterRow","FromTextAndChapterSection","SectionBuilderDisplayLevelTwo","LevelTwoContainers","LevelTwoTitleBoxes","LevelTwoContainerVocabAndQuestions","LevelTwoContainerProtocols","CreateAssignmentsContainer","CourseSelectContainer","BackContainer","AssignmentCreatorContainer","CreateAssignmentTitle","AssignmentTypeSelectorContainer","AssignmentType","LessonInformationSelectContainer","SelectorContainer","SelectorTitle","ItemSelectorContainer","SelectableItem","SelectButtonContainer","SelectButton","EssayInformationSelectContainer","DateAssignContainer","DateAssignItemContainer","LinkCoursesContainer","LinkCoursesHeader","CoursesCheckBoxContainer","DateAssignInput","DateAssignSelect","QuestionSelectContainer","QuestionSelector","MaxPointSelectorContainer","GeneralInput","AddQuestionForm","AddQuestionTitle","AddQuestionSelect","AddQuestionLevelSelect","SelectedQuestionContainer","SelectedQuestionTitle","SelectedQuestionsDisplay","DisplayedQuestionWritingLevelContainer","WritingLevelTitleContainer","bottom","DisplayedQuestions","Question","ReadingGuideInformationSelectContainer","MaxPointsForReadingGuideContainer","SectionBuilder","sectionEditorMachine","sectionId","orderNumber","protocolToEdit","protocolToEditIndex","questionToEdit","questionToEditIndex","vocabWordToEdit","vocabWordToEditIndex","isHidden","addItem","quizQuestion","EASY","textSectionValues","IDLE","PROTOCOL_EDITOR","QUESTION_EDITOR","VOCAB_WORD_EDITOR","PROTOCOL_ADDER","QUESTION_ADDER","VOCAB_WORD_ADDER","SHOW","SET_CURRENT_INDEX","SET_SECTION_ID","SET_ORDER_NUMBER","SET_NUMBER_OF_PARAGRAPHS","SET_VOCAB_WORD_TO_EDIT","EDIT_VOCAB_WORD","SET_QUESTION_TO_EDIT","EDIT_QUESTION","SET_PROTOCOL_TO_EDIT","EDIT_PROTOCOL","SET_QUIZ_QUESTION_INPUT","RESET_QUIZ_QUESTION_INPUTS","update","idle","editProtocol","editQuestion","editVocabWord","addProtocol","addQuestion","addVocabWord","addQuizQuestion","SectionEditorContext","SectionEditorContextProvider","useSectionEditorContextProvider","FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY","TextSectionList","findTextSectionsByChapter","textSections","textSection","EditorChapterSelect","AddVocabWord","setVocabWord","vocabWord","currentIndexForItem","updateTextSection","newList","AddQuestion","questionsItem","setQuestionsItem","ListBoxes","Boxes","BoxTitle","ListItemContainer","ListItem","AddRemoveButtons","VocabBox","toggleVocabItemInputs","setCurrentIndexForItem","handleAdd","onMouseOver","vocabWordIndex","hidden","handleRemove","QuestionsBox","toggleQuestionsItemInputs","questionIndex","AddProtocols","protocolItem","setProtocolItem","outcomeType","activity","ProtocolsBox","toggleProtocolItemInputs","protocolIndex","EditSectionInfo","toggleHeader","htmlFor","keyCode","EditProtocol","protocolToReplace","EditQuestion","questionToReplace","formatteQuestionTypeEnum","EditVocabWord","vocabWordToReplace","CREATE_QUIZ_QUESTION_MUTATION","AddQuizQuestion","trueStatement","setTrueStatement","query","FIND_QUIZ_QUESTIONS_BY_TEXT_SECTION_ID_QUERY","createQuizQuestion","removableToggle","multipleChoiceReady","trueFalseReady","QuizQuestions","findQuizQuestionsByTextSectionId","FIND_TEXT_SECTION_BY_ID_QUERY","TEXT_SECTION_UPDATER_MUTATION","TextSectionEditorDisplay","editorState","setEditorState","findTextSectionById","EditorTextSelectionDisplay","FIND_TEXTS_FOR_TEXT_SECTION_EDITOR_QUERY","EditorTextListLoader","SectionEditor","lessonPlannerMachine","inUnit","currentSection","textSectionList","texSectionListHeaders","SCHEMA_BUIDING","INDIVIDUAL","duringActivity","courses","lessonName","REINFORCEMENT","createQuizInputs","assignedSectionIds","courseIds","hasAssigner","SET_DATE","sections","sectionList","SET_CURRENT_SECTION","ADD_SECTIONS","SET_STARTING_SECTION","SET_ENDING_SECTION","unit","SET_UNIT","SET_STARTING_PAGE","SET_LESSON_TYPE","SET_ENDING_PAGE","ADD_VOCAB","SET_BEFORE_ACTIVITY","SET_DURING_ACTIVITY","SET_AFTER_ACTIVITY","SET_ESSENTIAL_QUESTION","SET_LESSON_NAME","ASSIGN_TO_COURSES","SET_QUIZ_INPUTS","LessonPlannerContext","LessonPlannerContextProvider","useLessonPlannerContextProvider","LessonPlannerContainer","LessonPlanOutput","GoBackToAssignmentsContainer","LessonPlanOutputHeader","LessonPlannerDesignContainer","LessonPlanDateAssign","LessonPlanMarkingPeriodSelect","LessonPlannerHeader","LessonPlannerSectionHeader","LessonPlannerSectionBody","LessonPlannerListSelectorOption","LessonPlannerButtonContainer","LessonPlannerButton","TextPickerHeader","TextPickerBody","TextPickerTextSelection","SectionPickerHeader","SectionPickerBody","SectionPickerSelectOptionsForm","SectionSelectorOption","SectionSelectorOptionAddButton","SectionPickerButtonContainer","SectionPickerNextButton","UnitSectionBody","UnitSelectorOption","CreateUnitContainer","CreateUnitInput","CreateUnitButton","LessonBuilderContainer","ActivitySelectorContainer","ActivityCreatorStyle","ActivityCategorySelect","ActivitySelectContainer","ActivityCategoryInput","BeforeActivityContainer","DuringActivityBuilderContainer","DuringActivityTitleContainer","DuringActivityTitle","DuringActivityBody","DuringActivityConstructorContainer","ProtocolConstructorTitle","ProtocolConstructorInfoContainer","SelectedProtocolContainer","SelectedProtocolItem","AddProtocolButton","DuringActivitySelection","AfterActivityContainer","AssignCourseContainer","CourseToAssignContainer","AssignCourseCheckBox","AssignCourseName","BackToCalendarButton","LessonTypeSelectorContainer","TitleContainer","LessonTypeContianer","LessonTypes","LessonPlannerTextListLoader","LessonPlannerChapterSelect","SectionSelect","FIND_UNITS_QUERY","CREATE_UNIT_MUTATION","UnitAssigner","unitName","setUnitName","createUnit","findUnits","units","SectionAssigner","useCheckBox","initialList","list","setList","eventValue","periodIndex","CREATE_LESSON_MUTATION","CreateLesson","assignedMarkingPeriod","assignedSectionIdList","INTRODUCTORY","createLesson","CREATE_QUIZZES_MUTATION","CreateQuiz","createQuizzes","placeItems","GET_COURSES_QUERY","CourseAssigner","coursesList","handleChange","realCourseList","LessonPlannerOutput","AfterActivity","protocolList","coolDown","setCoolDown","normalizedType","BeforeActivitySelect","warmUp","setWarmUp","DuringActivityBuilder","protocolListState","setprotocolListState","protocolSelectList","setProtocolSelectList","protocolToAdd","setProtocolToAdd","unUsedProtocolList","selectedProtocolList","item","protocolListIndexIndex","protocolSelectListIndex","items","CREATE_ESSENTIAL_QUESTION_MUTATION","FIND_ESSENTIAL_QUESTIONS_QUERY","EssentialQuestionBuilder","associatedTextSectionsIds","createEssentialQuestion","textSectionIds","findEssentialQuestionsByAssociatedTextSectionIds","essentialQuestions","essentialQuestionList","LessonName","Pages","startPage","setStartPage","endPage","setEndPage","findTextSectionsById","forEach","FIND_TEXT_SECTIONS_BY_ID_QUERY","LessonTypeSelector","LessonBuilder","setActivity","_ids","vocabItem","questionItem","LessonPlanner","duringActivityReady","readyToSubmit","mp","lessonFinderMachine","lessonDetails","LessonFinderContext","LessonFinderContextProvider","useLessonFinderContextProvider","FIND_LESSONS_BY_ASSIGNED_DATE","Lesson","courseLessons","findLessonsByAssignedDate","lessons","dateValue","FIND_ESSAY_QUESTIONS_FOR_SGO_QUERY","MARK_LESSON_FOR_SGO_MUTATION","MarkLessonForSGO","sectionIds","findEssayQuestionsForLesson","essayQuestions","sgoQuestion","markLessonForSGO","LessonFinderContainer","LessonPlanSectionTitles","lessonTitle","LessonCalendar","StyledCalendar","className","calendarType","tileClassName","tileContent","view","formatShortWeekday","locale","formattedDate","formatDate","Calendar","LessonFinder","OptionsContainer","OptionsLink","buildEssayQuestionMachine","textId","textName","chapterId","essayQuestionInfo","questionPartsInput","modifiedQuestion","THING","SET_TEXT_ID","SET_TEXT_NAME","SET_SECTION_IDS","sectionIdIndex","SET_QUESTION_PARTS","BuildEssayQuestionContext","BuildEssayQuestionContextProvider","useBuildEssayQuestionContextProvider","FIND_SECTIONS_BY_CHAPTER_QUERY","findChaptersByTextId","EssayQuestionInfoContainer","CREATE_ESSAY_QUESTION_MUTATION","EssayQuestionInformation","essayQuestionSteps","setEssayQuestionSteps","createEssayQuestion","TextSelect","EssayQuestionBuilder","Questions","createQuizMachine","quizInputs","CreateQuizContext","CreateQuizContextProvider","teacherNavMachine","dashboard","LESSONS","COURSES","RUBRICS","STUDENT_INFORMATION","PARENT_CONTACTS","BEHAVIOR","DEVELOPMENT","DASHBOARD","rubrics","studentInformation","parentContacts","development","home","COURSE_SELECT","SET_COURSE","courseSelect","TeacherNavContext","TeacherNavContextProvider","useTeacherNavContextProvider","useNavSync","location","navTarget","navState","navSync","LessonsHome","createAssignmentMachine","courseInfo","hasAssignerId","assignedCourseId","BEFORE_CLASS","topicList","READING_GUIDE","SET_COURSE_ID","ESSAY_LESSON","ESSAY_UNIT","ESSAY_INFO","SET_LESSON","SET_ASSIGNED_DATE","essayInfo","CREATE_ESSAY","SET_COURSE_INFO","SET_LINKED_COURSES_IDS","SET_QUESTION_LIST","SET_DUE_DATE","SET_DUE_TIME","SET_ASSIGNER_ID","SET_MAX_POINTS","SET_READINGS_READING_PAGES","SET_READINGS_READING_SECTIONS","SET_TOPIC_QUESTION_LIST","DELETE_TOPIC_QUESTION","createEssay","READING_GUIDE_LESSON","READING_GUIDE_UNIT","READING_GUIDE_INFO","CREATE_READING_GUIDE","SET_READING_GUIDE_ASSIGNED_DATE","SET_READING_GUIDE_DUE_DATE","SET_READING_GUIDE_DUE_TIME","SET_READING_GUIDE_MARKING_PERIOD","SET_READING_GUIDE_MAX_POINTS","SET_READING_GUIDE_READINGS_READING_PAGES","SET_READING_GUIDE_READINGS_READING_SECTIONS","createReadingGuide","CreateAssignmentContext","CreateAssignmentContextProvider","useCreateAssignmentContextPovider","EssayUnitSelect","CheckboxContainer","Icon","svg","HiddenCheckbox","attrs","StyledCheckbox","boxWidth","boxHeight","CheckBox","leftMargin","labelWidth","viewBox","assignEssayByCourseMachine","associatedLessonId","SET_STUDENT_IDS","SET_LESSON_ID","AssignEssayByCourseContext","AssignEssayByCourseContextProvider","useAssignEssayByCourseContextProvider","ASSIGN_ESSAYS_MUTATION","AssignEssay","assignEssays","FIND_ESSAYS_BY_LESSON_AND_COURSE_QUERY","AssignLesson","findEssaysByAssociatedLessonIdAndCourseId","FIND_LESSONS_BY_COURSE_QUERY","LessonSelect","setLessonId","findLessonByCourse","DueDateCheck","sortByDate","getTime","assignedLesson","lessonIndex","nextLesson","CREATE_ESSAY_MUTATION","FIND_WRITING_LEVELS_QUERY","CreateEssay","courseIdList","topicQuestion","setTopicQuestion","assignedCourseIds","writingLevelData","writingLevels","findStudentsByCourse","students","writingProgressTracker","overallWritingLevel","accum","cValue","selectedDevelopingEssays","selectedAcademicEssays","selectedAdvancedEssays","topicIndex","FIND_TEXT_SECTIONS_BY_ID_MUTATION","EssayTopicLoader","ids","hasEssayQuestions","FIND_LESSON_BY_ID_QUERY","EssayLessonInfo","findLessonById","FIND_LESSONS_BY_UNIT_QUERY","EssayLessonSelect","unitId","findLessonsByUnit","ReadingGuideUnitSelect","ReadingGuideLessonSelect","AssignedDateCheck","previousLesson","previousLessonDate","CREATE_READING_GUIDE_MUTATION","CHECK_QUIZ_QUESTIONS_QUERY","CreateReadingGuide","setCourseId","sortedCourses","currentCourseIndex","checkQuizQuestionsForTextSections","ReadingGuideLessonInfo","EssaysToGradeContainer","CourseSelect","CourseToSelect","CourseEssaysToGradeContainer","EssayTitle","EssayStatusSelector","EssayStatusSelect","toGradeIndicator","EssayListContainer","EssayList","EssayListItem","EssaySelect","OrderSwitchContainer","PaperBasedToggleContainer","PaperBasedContainer","CreateAssignment","EditAssignments","gradeEssayContainerMachine","paperBasedStudentId","paperBasedStudent","orderBy","gradeEssayContainer","SET_STUDENT_ID","SET_PAPER_BASED_STUDENT","SET_ORDER_BY","essayTypes","onTime","LATE","RESUBMITTED","ONTIME","resubmitted","GradeEssayContainerContext","GradeEssayContainerContextProvider","ArticleReviewManagerContainer","ArticleReviewManagerMenu","ArticleReviewFunctionSelect","ArticleReviewMainMenuDisplay","NoCourseDisplay","ReviewerContainer","ReviewerCourseSelectContainer","ReviewerCourseSelectBack","ReviewMainDisplay","CurrentMarkingPeriodContainer","MarkingPeriodSelectorBack","MarkingPeriodSelectorForward","needsGrading","DatesToReviewContainer","DateToReview","needsGradingIndicator","ReviewListContainer","ReviewList","ReviewName","ReturnReview","FIND_ESSAYS_TO_GRADE_BY_ID_QUERY","EssaysToGrade","useGradeEssayContainerContextProvider","setEssayList","markingPeriodToGrade","setMarkingPeriodToGrade","resubmittedEssayList","setResubmittedEssayList","teacherId","findEssaysToGradeById","essaysSubmittedOnTime","onTimeEssaysToGrade","lateEssays","lateEssaysToGrade","FIND_STUDENTS_BY_COURSE_ID_QUERY","FindAssignmentByStudent","setStudentId","setEssayId","setReadingGuideId","hasAssignments","AssignmentsToGrade","paperBasedToggle","togglePaperBased","AdditionalComments","DevelopingGradingTool","sectionSelector","setSectionSelector","rubricList","rubricEntriesList","concat","splitValues","rubricEntryValues","averageScore","indexOf","entries","AcademicGradingTool","automaticZero","toggleAutomaticZero","topicEntriesList","answerEntriesList","conclusionEntriesList","overallEntriesList","proofreadingEntriesList","TOPIC","PROOFREADING","topicScore","overallScore","proofreadingScore","weightedScore","totalScore","AdvancedGradingTool","rubricEditorMachine","writingLevelSelector","rubricSectionSelector","selectedRubricEntry","editableRubricEntry","rubricEntryId","selectEntry","SET_WRITING_LEVEL_SELECTOR","SET_RUBRIC_SECTION","SET_RUBRIC_SECTION_SELECTOR","SET_EDITABLE_ENTRY","edit","DELETE","SET_EDITABLE_ENTRY_WRITING_LEVEL_LIST","editableRubricWritingLevelList","delete","DELETED","RubricEditorContext","RubricEditorContextProvider","useRubricEditorContextProvider","SelectWritingLevel","SelectRubricSection","RubricEntries","filteredEntryList","FIND_RUBRIC_ENTRIES","SelectEntry","findRubricEntries","GradingTool","rubric","RETURN_GRADED_ESSAY_MUTATION","ReturnEssay","returnGradedEssay","DraftSelector","PreviousEssayViewer","FIND_ESSAY_TO_GRADE_QUERY","GradeEssay","loadingDraft","setloadingDraft","gradeDetailState","setGradeDetailState","lastSubmittedDraft","AssignEssaysByLesson","AssignEssays","UnitSelect","setUnitId","assignReadingGuideByCourseMachine","AssignReadingGuideByCourseContext","AssignReadingGuideByCourseContextProvider","useAssignReadingGuideByCourseContextProvider","ASSIGN_READING_GUIDE_MUTATION","AssignReadingGuide","assignReadingGuides","FIND_READING_GUIDE_BY_LESSON_AND_COURSE_QUERY","findReadingGuidesByAssociatedLessonAndCourseId","AssignReadingGuideByCourse","AssignReadingGuides","AssignAssignments","paperBasedMachine","assignmentType","loadAssignment","SET_ASSIGNMENT_ID","SET_ASSIGNMENT_TYPE","assignmentSelect","SET_READING_GUIDE_LATENESS","SET_READING_GUIDE_COMPLETION","PaperBasedContext","PaperBasedContextProvider","usePaperBasedContextProvider","paperBasedValue","resubmittedFinalDraft","submitPaperBasedEssay","resubmitEssayFinalDraft","isGraded","SetLateness","startPaperBasedReadingGuide","submitPaperBasedReadingGuide","FIND_ASSIGNMENT_BY_ID_QUERY","GradePaperBasedAssignment","findAssignmentById","articleReviewMachine","articleReviewToCreate","courseToReview","selectedDate","CREATE","REVIEW","SET_ASSIGNED_COURSE_ID","SET_COURSE_TO_REVIEW","SET_SELECTED_DATE","ArticleReviewContext","ArticleReviewContextProvider","useArticleReviewContextProvider","CREATE_ARTICLE_REVIEWS_MUTATION","CreateArticleReviews","createArticleReviews","readyToCreate","RETURN_ARTICLE_REVIEW_MUTATION","ArticleReviewReturn","reviewId","returnArticleReview","FIND_ARTICLE_REVIEWS_BY_COURSE_QUERY","ReviewDisplay","gradingNeededIndicator","setGradingNeededIndicator","setMp","findArticleReviewsByCourse","article","assignedDateList","dateToReview","reviewNeedsGrading","courseName","reviews","ReviewArticleReviews","ArticleReviewManager","FIND_ESSAYS_BY_TOPIC_QUERY","CheckEssays","setQuestion","findEssaysByTopic","ReadingGuideCheckContainer","ReadingGuidesToCheckContainer","ReadingGuideToSelectContainer","alternatingLine","ReadingGuides","ReadingGuideToSelectNameContainer","ReadingGuideToReviewContainer","REVIEW_READING_GUIDE_MUTATION","IndividualReadingGuide","setReadingGuideToReview","readingGuidesToCheck","GOOD_EFFORT","reviewReadingGuides","FIND_READING_GUIDES_BY_MARKING_PERIOD_QUERY","CheckReadingGuides","readingGuideToReview","findReadingGuidesByMarkingPeriod","reviewed","CheckAssignments","AssignmentDashboardDisplayContainer","AssignmentTitle","AssignmentDisplayOptionsContainer","AssignmentsDisplayOptionsLink","AssignmentDashboardDisplay","AssignmentDashboard","CourseDirectoryContainer","CourseDirectoryTitleContainer","IndividualCourseDirectContainer","IndividualCourseBlockContainer","highlighted","CourseManagerHomeContainer","CourseManagerHomeTitle","CourseManagerHomeTitleBackLink","CourseMenuContainer","CourseMenuItemBlock","CourseMenuItemBlockLink","AssignmentControlDisplayContainer","CourseDirectory","useGetCurrentCourse","hiddenSwitch","toggleHiddenSwitch","courseList","lessonEditorMachine","lessonSelect","SECTION_SELECT","SET_SECTION_ID_LIST","sectionSelect","setSections","SET_TEXT","SET_CHAPTER","SET_TEMPORARY_SECTION_ID_LIST","SET_PROTOCOL_LIST","LessonEditorContext","LessonEditorContextProvider","useLessonEditorContextProvider","setUnit","AssignedDate","InUnit","markingPeriodList","SectionList","firstSection","lastSection","newStartingPage","newEndingPage","SetSections","updateLesson","BeforeActivity","DuringActivities","setprotocolList","EssentialQuestion","ActivitiesEditor","FIND_COURSES_BY_ID_QUERY","CourseLink","courseData","findCoursesById","FIND_LESSON_FOR_LESSON_EDITOR_QUERY","LessonEditorInfo","modifiedVocabList","modifiedBeforeActivity","modifiedDuringActivity","modifiedAfterActivity","modifiedQuestionList","UPDATE_LESSON_MUTATION","LessonEditor","linkedCourseIds","addStudentsMachine","studentToRegister","email","middleName","schoolId","cohort","addStudentToCourse","REGISTER","ADD_TO_COURSE","register","ADD_FIRST_NAME","ADD_MIDDLE_NAME","ADD_LAST_NAME","ADD_SCHOOL_ID","ADD_EMAIL","ADD_COHORT","ADD_PASSWORD","ADD_USERNAME","SET_IEP_STATUS","ADD_STUDENT_IDS","RESET_REGISTER_INPUTS","addToCourse","REMOVE_STUDENT_IDS","AddStudentsContext","AddStudentsContextProvider","useAddStudentsContextProvider","RegisterStudentContainer","AddStudentContainer","PageTitle","FormContainer","InformationDetailInputContainer","YesNoContainer","YesNoSelect","InformationInput","BottomButtonContainer","FullScreenButtonContainer","BottomButton","AdditionalStudentSelect","REGISTER_STUDENT_MUTATION","FIND_USERS_QUERY","RegisterStudent","addToCourseToggle","setAddToCourseToggle","setAddIdFinished","userNamesInUse","findAllUsers","users","user","registerStudent","ADD_STUDENTS_TO_COURSE_MUTATION","FIND_ALL_STUDENTS_QUERY","INITIALIZE_STUDENT_MUTATION","AddToCourse","initializeStudents","studentIndex","initializeStudent","addStudentsToCourse","studentsNotInCourse","findAllStudents","studentsToAdd","FIND_COURSE_BY_ID_QUERY","AddStudents","findCourseById","SeatingChartContainer","StartingDisplay","ThirtySeatFloorPlan","ThirtySixSeatFloorPlan","TwentyFourSeatFloorPlan","ThirtySeatPairsFloorPlan","TwelveSeatFloorPlan","PairSeatingGroup","TripleSeatingGroup","LeftSide","RightSide","CenterSide","DeskContainer","IndividualDeskContainer","TripleSeatDeskContainer","DeskDisplay","active","picked","AssignedSeat","UnassignedSeat","AssignedDeskNumber","UnassignedDeskNumber","DeleteSelector","StudentSelector","AssignedDesk","desk","assignSeats","studentsInCourse","cohortBasedSeating","assignedStudent","ThirtySixSeatingChart","ThirtySeatPairSeatingChart","ASSIGN_REGULAR_SEATS_MUTATION","RegularSeating","formattedSeat","unAssignSeat","courseSize","hasStudents","AssignWhiteCohort","removeAssignedSeat","whiteCohortStudent","cohortBased","cohortType","whiteCohortStudentId","AssignRedCohort","redCohortStudent","redCohortStudentId","ASSIGN_COHORT_BASED_SEATS_MUTATION","REMOVE_COHORT_BASED_SEAT_MUTATION","AssignCohortBasedSeating","cohortSelect","setCohortSelect","AssignSeats","assignSeatsMachine","AssignSeatsContext","AssignSeatsContextProvider","RosterDashboardContainer","RosterNavigationContainer","RosterNavLink","CourseName","ViewRosterContainer","ViewRosterTitle","RosterItemsContainer","RosterItems","FIND_ROSTER_BY_COURSE_QUERY","ViewRoster","RosterDashboard","FIND_READING_GUIDE_DATA_FOR_COURSE_AND_LESSON_QUERY","ReadingGuideDataViewer","completionFraction","completedReadingGuidesNumber","problemSolutionTypes","causeEffectTypes","compareContrastTypes","sequenceTypes","majorIssueSolved","majorIssueUnsolved","ReadingGuideData","editCourseMachine","updateCourseInfo","courseType","SOCIAL_STUDIES","courseMaxSize","TWENTY_FOUR","editCourse","LOAD_COURSE_DATA","UPDATE_COURSE_NAME","UPDATE_COURSE_TYPE","UPDATE_END_TIME","UPDATE_START_TIME","UPDATE_HALF_DAY_END_TIME","UPDATE_HALF_DAY_START_TIME","UPDATE_SCHOOL_DAY_TYPE","UPDATE_COURSE_BASED_SEATING","UPDATE_COURSE_SIZE","EditCourseContext","EditCourseContextProvider","UPDATE_COURSE_INFO_MUTATION","FIND_COURSE_INFO_FOR_COURSE_EDITOR_QUERY","EditCourse","useEditCourseContextProvider","TWELVE","THIRTY","THIRTY_SIX","AssignmentManagerMachine","RESPONSIBILITY_POINTS","ARTICLE_REVIEW","SECONDARY_GRADES","SET_UNIT_ID","RESET_ESSAYS","AssignmentManagerContext","AssignmentManagerContextProvider","useAssignmentManagerContextProvider","ArticleReviewRows","setAssignmentList","createCSVToggle","NAME","STUDENTID","GRADE","ABSENT","EXEMPT","INCOMPLETE","MISSING","assignmentValues","ArticleReviews","setMarkingPeriod","dateFilter","setDateFilter","courseToFind","assignmentList","setCreateCSVToggle","headers","filename","EssayRows","FIND_ESSAYS_BY_LESSON_ID_QUERY","FIND_ESSAYS_BY_COURSE_ID_AND_TITLE_QUERY","essayName","setEssayName","essayTitle","findEssaysByAssociatedLessonId","essayNameData","findEssaysByCourseIdAndTitle","l","ResponsibilityPointRows","setRosterList","studentResponsibilityPoints","FIND_RESPONSIBILITY_POINTS_BY_COURSE_QUERY","ResponsibilityPoints","markingPeriodSelect","setMarkingPeriodSelect","rosterList","csvToggle","setCsvToggle","responsibilityPointList","findResponsibilityPointsByCourse","SecondaryGradeRowInfo","secondaryGradeScore","classSize","isNaN","FIND_ASSIGNMENTS_FOR_SECONDARY_QUERY","SecondaryGradeRows","totalMaxPoints","FIND_STUDENTS_BY_COURSE_FOR_SECONDARY_GRADE_FINDER_QUERY","SecondaryGrades","AssignmentManager","temporaryTasksMachine","taskNumber","taskToGradeNumber","absentList","tasks","SET_TASK_NUMBER","SET_TASK_TO_GRADE_NUMBER","ADD_NEW_ABSENT_LIST","ADD_TO_ABSENT_LIST","listToModify","studentIdToAdd","DELETE_FROM_ABSENT_LIST","studentToDelete","studentIdToDelete","SET_DATE_TO_REVIEW","TemporaryTasksContext","TemporaryTasksContextProvider","useTemporaryTasksContextProvider","TemporaryTasksContainer","TemporaryTasksMenuContainer","TemporaryTasksMenu","MenuItems","TemporaryTaskDisplay","TaskCreatorHeader","TaskToGradeSelectorContainer","TaskToGradeTitle","TaskListContainer","TaskListHeaders","EndOfContainer","TaskListTaskGraderContainer","TaskListData","TaskNameContainer","studentPresent","MarkAbsentContainer","MarkCompleteContainer","MarkCompleteButton","answered","CreateTaskButton","ReviewTasksContainer","TasksToSelectContainer","TaskTimerControlsContainer","TaskTimerPresetContainer","ReduceTaskTimer","TaskTimerPresetDisplay","IncreaseTaskTimer","StartTaskTimer","TaskTimeDisplayFormat","TaskTimerControlsDisplay","TaskTimerControl","TaskTimerResetStyle","CREATE_TEMPORARY_TASKS_MUTATION","CreateTask","dateIssued","createTask","MARK_TEMPORARY_TASK_ABSENT_MUTATION","MarkAbsent","setStudentPresent","GRADE_TEMPORARY_TASK_MUTATION","MarkComplete","gradeTask","gradeTemporaryTask","temporaryTask","lastGrade","TaskGrader","taskId","markTemporaryTaskAbsent","TaskList","taskList","absentStudentList","FIND_TEMPORARY_TASKS_QUERY","TaskCreator","findTemporaryTasks","temporaryTasks","taskNumberList","disablePlusSelectorSwitch","disableMinusSelectorSwitch","LoadTasks","taskNumberListArr","ReviewTasks","TaskTimerDisplay","presetTime","setStartTimer","doubleDigitSeconds","initialTime","direction","startImmediately","resume","pause","stop","timerState","Minutes","Seconds","formatValue","TaskTimer","presetMinuteValue","setPresetMinuteValue","startTimer","TemporaryTasks","courseSelectorSwitch","toggleCourseSelectorSwitch","fakeCourse","TOGGLE_ALLOW_ASSIGNMENTS_IN_CLASS_MUTATION","TOGGLE_READING_GUIDE_CHECK_MUTATION","CourseManagerHome","toggleAssignmentsAllowedInClass","toggleReadingGuideCheck","GET_COURSE_INFO_QUERY_FOR_COURSE_INFO","CourseInfoHome","findCourseInfoByCourseId","studentsWithHomeworkAnyDay","hasTodaysAssignments","s","thing","CourseManager","courseManager","createCourseMachine","courseTitle","TWENTY_SIX","createCourseTitle","CREATE_TITLE","ADD_COURSE_ID","createCourseInfo","NEXT_STEP","ADD_ANOTHER_COURSE","ADD_STARTING_TIME","ADD_ENDING_TIME","ADD_STARTING_HALFDAY_TIME","COHORT_BASED","ADD_ENDING_HALFDAY_TIME","ADD_SCHOOL_DAY_TYPE","ADD_COURSE_MAX_SIZE","ADD_COURSE_TYPE","nextSteps","CreateCourseContext","CreateCourseContextProvider","useCreateCourseContextProvider","CreateCourseContainer","CreateCourseInformationContainer","CreateCourseContainerTitleContainer","CreateCourseBodyContainer","CreateCourseInfoBodyContainer","CourseTitleContainer","CourseTitleInput","CourseTitleButtonContainer","CourseTitleButton","CourseInformationContainer","CourseInformationColumnContainer","TimeSelectionContainer","TimeSelectionInput","CREATE_COURSE_MUTATION","FIND_ALL_COURSE_TITLES_QUERY","CreateTitle","errorMessage","setErrorMessage","createCourse","handleError","CREATE_COURSE_INFO_MUTATION","ADD_COURSE_TO_TEACHER_MUTATION","REMOVE_COURSE_MUTATION","CreateCourseInfo","addToTeachersRoster","removeCourse","dayType","NextSteps","CreateCourse","CoursesHome","rubricBuilderMachine","build","SET_WRITING_LEVELS","SET_SECTION","SET_ENTRY","SET_HOW_TO_IMPROVE","RESET","BUILD_RUBRIC_ENTRY_MUTATION","RubricBuilder","resetList","buildRubricEntry","level","EditEntry","EditScore","EditSection","EditWritingLevel","writingLevelList","handleCheckbox","REMOVE_RUBRIC_ENTRY_MUTATION","DeleteEntry","removeRubricEntry","EditHowToImprove","UPDATE_RUBRIC_ENTRY_MUTATION","RubricEditorDisplay","deleteEntry","setDeleteEntry","updateRubricEntry","RubricEditor","RubricsDashboard","TeachersAidContainer","ClassControlPanelContainer","CenterPanelDisplay","PeriodSelectDisplay","PeriodDisplay","PeriodSelectDisplayContainer","CourseSelectButton","RandomStudentGeneratorContainer","RandomStudentGeneratorButton","ProtocolManagerContainer","ProtocolHeaderContainer","ProtocolHeader","ProtocolSelectorBackContainer","ProtocolSelectorBack","ProtocolSelectorTaskContainer","ProtocolSelectorTask","ProtocolSelectorNoProtocolsDisplay","ProtocolSelectorNextContainer","ProtocolSelectorNext","ProtocolSelectorContainer","ProtocolSelectorButton","ProtocolInfoContainer","ProtocolInfo","ProtocolControllerContainer","ProtocolControllerButton","DynamicLessonContainer","MainScreenManagerContainer","MainScreenControlButton","DynamicLessonHeader","CenteredDiv","DynamicLessonButtonContainer","DynamicLessonButton","currentLessonSetting","DynamicLessonOnButton","DynamicLessonOffButtonContainer","DynamicLessonOffButton","StudentInfoSelectorContainer","StudentInfoSelectorButton","teachersAidMachine","attendanceToggle","studentInfoSelector","courseSelectVisible","activeProtocol","presentStudentsIds","protocolSelect","selectedProtocol","protocolToCreate","protocolActivityType","activityTime","DURING","studentProtocolAssessment","assessment","REFUSED_TO_WORK","discussionLevel","NOT_REQUIRED","partnerIds","mainScreenSeatingChart","mainScreenStudentStatus","mainScreenVirtualProtocolResponses","mainScreenWarmUpExitTicketViewer","mainScreenHomeworkAssigner","currentMainScreenView","currentReadingGuideIndex","teachersAid","SET_CURRENT_READING_GUIDE_INDEX","LOAD_PROTOCOLS","SET_PRESENT_STUDENTS","controlPanelActions","mainScreenManager","CHANGE_MAIN_SCREEN_SEATING_CHART","CHANGE_MAIN_SCREEN_STUDENT_STATUS","CHANGE_MAIN_SCREEN_VIRTUAL_PROTOCOL_RESPONSES","CHANGE_MAIN_SCREEN_WARMUP_EXIT_TICKET_VIEWER","CHANGE_MAIN_SCREEN_HOMEWORK_ASSIGNER","SET_ATTENDANCE_TOGGLE","SET_STUDENT_INFO_SELECTOR","protocolManager","SELECT_PROTOCOL","UPDATE_LESSON_PROTOCOL","studentControlPanel","studentBehavior","ASSESS_PROTOCOL_DISPLAY","UPDATE_STUDENT_PROTOCOL","studentAttendance","UPDATE_COURSE_INFO","studentProtocol","ADD_PARTNERS","REMOVE_PARTNERS","DISCUSSION_ASSESSMENT","PROTOCOL_ASSESSMENT","TeachersAidContext","TeachersAidContextProvider","useTeachersAidContextProvider","ASSESS_PROTOCOL_MUTATION","AssessProtocol","toggleSwitch","loadStudentInfo","schoolDayInfo","currentActiveProtocol","assessStudentProtocol","partnerList","partnerDiscussionTypes","selectedStudent","partner","discussionType","RemoveAbsence","absenceId","removeAbsence","Absence","todaysAbsenceId","unexcusedLatenessId","excusedLatenessId","removeAbsenceCalled","absenceCheck","CREATE_STUDENT_ABSENCE_MUTATION","createAbsence","CREATE_LATENESS_QUERY","ExcusedLateness","removeLateness","updateResponsibilityPoints","dayLate","latenessType","EXCUSED","createLateness","excusedLatenessCheck","hasLatnesses","todaysExcusedLateness","isUnexcused","hasUnExcusedLatenesses","UNEXCUSED","UnexcusedLatness","unexcusedLatenessCheck","isExcused","REMOVE_ABSENCE_MUTATION","REMOVE_LATENESS_MUTATION","UPDATE_RESPONSIBILITY_POINTS_MUTATION","DailyAttendance","todaysAbsence","hasExcusedLatenesses","todaysUnexcusedLateness","EDIT_BEHAVIOR_TYPE_MUTATION","DELETE_BEHAVIOR_TYPE_MUTATION","EditBehaviors","deleteToggle","toggleDelete","editToggle","toggleEdit","behaviorCategory","forTeachersAid","behaviorValues","setBehaviorValues","behaviorTypeId","editBehaviorType","deleteBehavior","NEUTRAL","BehaviorHomeContainer","BehaviorHomeTitleDiv","BehaviorHomeDisplay","BehaviorLinksContainer","BehaviorLink","BehaviorListContainer","FIND_ALL_BEHAVIOR_TYPES_QUERY","BehaviorTypeList","findAllBehaviorTypes","behaviorTypes","CHECK_TEXT_ANAYLSIS_MUTATION","TextAnalysisCheck","textAnalysis","checkTextAnalysis","textAnalysisCompletion","check","textAnalysisId","startedPromptly","workedWellWithGroup","finishedEssentialQuestion","onTask","CREATE_BEHAVIOR_MUTATION","DailyBehavior","createStudentBehavior","behaviorsForTeachersAid","questionAndAnswerBehaviorList","QUESTION_AND_ANSWER","negativeBehaviorList","NEGATIVE_BEHAVIOR","preparedAndReady","preparednessBehaviorList","PREPAREDNESS","independentBehaviorList","INDEPENDENT_WORK","FIND_STUDENTS_OUT_OF_CLASS_QUERY","STUDENT_RETURNED_MUTATION","Status","studentReturnedToClass","studentsCurrentlyOutOfClass","findStudentOutOfClassByPeriodNameAndDate","studentsOutOfClass","outOfClassInstance","hasReturned","studentsReturnedToClass","outOfClassDestination","outOfClassId","CREATE_STUDENT_OUT_OF_CLASS_MUTATION","StudentStatus","createStudentOutOfClass","studentOutOfClass","hasStatus","status","outOfClassObject","destination","StudentControlPanelDisplay","behaviorSwitch","FIND_STUDENT_INFORMATION_QUERY","StudentInfo","findStudentByIdForTeachersAid","partners","studentInfoLoading","hasBehaviors","currentResponsibilityPoints","hasResponsibilityPoints","absence","textAnalysisToFind","hasStatuses","BATHROOM","PeriodSelect","GET_COURSE_INFO_QUERY","PeriodSelectorDisplay","loadCourse","UPDATE_LESSON_PROTOCOL_MUTATION","START_PROTOCOL_MUTATION","CREATE__PROTOCOL_MUTATION","SelectProtocol","createStudentProtocol","startProtocol","reactivateProtocol","DELETE_PROTOCOLS_MUTATION","FIND_ACTIVE_PROTOCOLS_QUERY","DeleteProtocols","findActiveProtocolsByCourse","deleteProtocols","FINISH_STUDENT_PROTOCOL_MUTATION","ActivatedProtocolDisplay","finishStudentProtocol","back","activityTypes","ProtocolSelector","ProtocolManager","currentActiveProtocolIndex","CONTROL_COOL_DOWN_MUTATION","CoolDownManager","updateDynamicLesson","controlCoolDown","AFTER","dynamicLessonUpdate","StudentInfoSelector","CONTROL_WARM_UP_MUTATION","WarmUpManager","controlWarmUp","BEFORE","UPDATE_DYNAMIC_LESSON_MUTATION","CREATE_BATCH_STUDENT_BEHAVIOR_MUTATION","DynamicLessonManager","UpdateDynamicLesson","createBatchStudentBehavior","handleClick","dynamicLessonSetting","lessonStarted","WARM_UP","EXIT_ACTIVITY","OFF","MainScreenManager","ControlPanelDisplay","ClassControlPanel","RandomStudentGenerator","maxLength","setArr","useRollingArray","floor","selectedStudents","registerNewStudent","randomCurrentStudent","currentStudent","setCurrentStudent","selectNewStudent","availableStudents","randomStudent","TimerContainer","TimerControlsContainer","TimerPresetContainer","ReduceTimer","TimerPresetDisplay","IncreaseTimer","StartTimer","TimeDisplayFormat","TimerControlsDisplay","TimerControl","ResetStyle","TimerDisplay","TimerPresets","FIND_STUDENT_INFO_FOR_DESK_QUERY","Desk","schoolDayState","findStudentById","redWeek","TwentyFourSeatChart","TwelveSeatChart","ThirtySeatChart","ThirtySixSeatChart","ThirtySeatPairs","SeatingChart","ResponseTitle","ResponseContainer","ResponseRowContainer","NameOfResponder","ResponseButtonContainer","AssessmentManagerButton","assessed","ResponseAssessorCategoriesContainer","ResponseAssessor","FIND_ACTIVE_PROTOCOL_BY_COURSE_QUERY","FIND_PROTOCOLS_BY_DATE_QUERY","ProtocolResponseClassList","ASSIGN_READING_GUIDE_FOR_TEACHERS_AID_MUTATION","AssignReadingGuideForTeachersAid","assignReadingGuide","FIND_READING_GUIDES_BY_COURSE_ID_AND_ASSIGNED_DATE_QUERY","LoadReadingGuides","findReadingGuidesByCourseIdAndAssignedDate","assignmentTitle","ReadingGuideSelect","completedReadingGuides","ReadingGuideViewer","getReadingGuides","AssignEssaysForTeachersAid","FIND_ESSAY_FOR_TODAYS_CLASS_QUERY","LoadEssays","TextAnalysisAssigner","FIND_QUIZZES_BY_ASSIGNED_DATE_QUERY","HomeworkAssigner","findQuizzesForCourseByAssignedDate","assignmentControlState","setAssignmentControlState","ProtocolResponseAssessment","ProtocolResponseManager","activityTimeState","setActivityTimeState","findProtocolsByDate","MainScreenDisplay","COURSE_QUERY","TeachersAid","assignedPresentStudents","outerWidth","ParentContactContainer","ParentContactTitle","Contact","contact","contactType","contentOfContact","DownloadContacts","contactInformation","setContactInformation","DATE","EMAIL_OR_PHONE_CALL","STUDENT_NAME","WHAT_WAS_DISCUSSED","WHO_I_SPOKE_WITH","FIND_ALL_PARENT_CONTACTS_BY_TEACHER_QUERY","AllContacts","findParentContactsByTeacherId","createContactMachine","contactToCreate","EMAIL","SET_STUDENT_NAME","SET_CONTACT_TYPE","SET_CONTENT","SET_TEACHER_ID","CreateContactContext","CreateContactContextProvider","useCreateContactContextProvider","FindAllStudents","CREATE_PARENT_CONTACT_MUTATION","CreateContact","createParentContact","ParentContacts","MarkingPeriodSelectorSwitch","setSelectedMarkingPeriod","markingPeriodIndex","setMarkingPeriodIndex","CreateContactForm","createParentContactInputs","setcreateParentContactInputs","FIND_PARENT_CONTACTS_BY_STUDENT_ID_QUERY","findContactsByStudentId","RESET_PASSWORD_MUTATION","ResetStudentPassword","doubleCheckToggle","toggleDoubleCheck","resetPassword","StudentGradeInformation","percentageGrade","calculatedGrade","SWITCH_TO_NEW_COURSE_MUTATION","SwitchCourse","confirmChangeToggle","toggleConfirm","courseToChangeTo","setCourseToChangeTo","newCourseId","oldCourseId","switchToNewCourse","WRITING_METRICS_QUERY","WritingMetrics","levelPoints","StudentInformationDisplay","responsibilityPointsCheck","FIND_TEMPORARY_TASKS_BY_STUDENT_ID_QUERY","TemporaryTasksInformation","markingPeriodToReview","totalTasks","findTemporaryTasksByStudentId","completedTasks","completionRate","FIND_STUDENT_ABSENCES_AND_LATENESSES_QUERY","AbsenceHome","absences","abs","excusedLatenesses","unexcusedLatenesses","lateness","BehaviorHome","FIND_STUDENT_OUT_OF_CLASS_BY_STUDENT_AND_MARKING_PERIOD_QUERY","OutOfClassHome","outOfClassObjectList","findStudentOutOfClassByStudentIdAndMarkingPeriod","studentOutOfClassListForMarkingPeriod","obj","departTime","returnTime","aTime","bTime","departingTime","totalTime","timeGone","ConductHome","conductSwitch","setConductSwitch","InformationDisplay","StudentInformation","setStudentName","studentList","toggleStudentList","studentSearchList","AdjectivesAndPrepositonalPhrases","testSentence","testCompleteSubject","testCompletePredicate","SimpleSubjectPredicate","setSentence","setSimpleSubject","setSimplePredicate","dividedSentence","period","lastWordWithOurPeriod","modifiedNewSentence","subjectGrader","predicateGrader","SubjectPredicateContainer","DirectionsContainer","SentenceContainer","MessageContainer","subjectPredicateGrader","SubjectPredicate2","Objects","original","isAnswered","neededHelpingVerb","auxillaryVerbCheck","LineToManipulate","nonContextSentence","transitiveVerb","sentenceAfterVerb","questionWordCheck","setQuestionWordCheck","handleCorrectSelection","GrammarPractice","flexDirection","questionDifficultyLevel","MultipleChoice","textSectionId","Tests","DevelopmentHome","CREATE_BEHAVIOR_TYPE_MUTATION","CreateBehavior","createBehavior","handlePointsAllocation","TeacherDashboardHome","Dashboard","nav","DashboardContainer","LoginWrapper","LoginTitle","LoginRow","ButtonContainer","Button","LOGIN_MUTATION","Login","inValid","setInValid","loginMutation","MenuNav","LessonNav","variants","ulVariants","liVariants","AssignmentNav","CoursesNav","coursesToNavigate","RubricsNav","ParentContactsNav","BehaviorNav","TeacherNav","StudentNav","open","closed","delay","moblieVariants","scale","Nav","isNavOpen","damping","Header","HomeLink","UserNameHeader","ProblemAndSolutionGuide","ProblemAndSolutionGuideContainer","ProblemAndSolutionGuideInstructionsContainer","ProblemAndSolutionGuideDiagramContainer","ProblemAndSolutionGuideDiagramColumn","ProblemAndSolutionGuideDiagramColumnHeader","ProblemAndSolutionGuideDiagramColumnInformation","ProblemAndSolutionGuideDiagramColumnInformationEntry","padding","App","setCurrentSchoolDay","isLoginVisible","AppContainer","prodLink","HttpLink","uri","credentials","client","ApolloClient","cache","InMemoryCache","typePolicies","Essay","fields","merge","TextSectionProtocols","link","connectToDevTools","ReactDOM","render","ApolloProvider","StrictMode","getElementById"],"mappings":"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ACD,GAAD,CAA4B1xC,MAAO,CAAEG,MAAO,cAA5C,UACE,cAACwxC,GAAD,iCACA,sHAIA,+BACE,kDACA,uBACA,+DACA,uBACA,8DACA,uBACA,qEACA,uBACA,oFC3CCyb,GAAc,SAAC,GAC1B,OADoD,eAElD,qCACE,cAAC9b,GAAD,kCACA,eAACC,GAAD,WACE,sEACA,+BACE,8DACA,uBACA,mEACA,uBACA,2DACA,uBACA,iEACA,+BACE,yHAIA,iJCnBC8b,GAAc,SAAC,GAC1B,OADoD,eAElD,qCACE,cAAC/b,GAAD,2BACA,cAACC,GAAD,UACE,+BACE,oGAGA,uBACA,qEACA,uBACA,iFACA,uBACA,mJAIA,uBACA,yOCnBG+b,GAAM,SAAC,GAClB,OADoC,eAElC,qCACE,cAAChc,GAAD,mBACA,cAACC,GAAD,UACE,+BACE,2DACA,6BACE,0GAKF,uBACA,6CACA,6BACE,kLAMF,uBACA,qEACA,6BACE,2FAEF,uBACA,2EACA,+BACE,qNAKA,iEAEF,uBACA,qDACA,+BACE,sNAKA,0FAEF,uBACA,uDACA,6BACE,mJAEiD,kBC/ChDgc,GAAU,SAAC,GACtB,OAD4C,eAE1C,qCACE,cAACjc,GAAD,6BACA,eAACG,GAAD,CAA6BzxC,MAAO,CAAEE,SAAU,OAAhD,UACE,eAACwxC,GAAD,WACE,cAACC,GAAD,iCACA,oBAAI3xC,MAAO,CAAEysB,UAAW,UAAxB,yDAGA,+BACE,4DACA,uBACA,sLAKA,uBACA,uFACA,uBACA,kGAGA,uBACA,sGAKJ,eAACilB,GAAD,WACE,cAACC,GAAD,+BACA,oBAAI3xC,MAAO,CAAEysB,UAAW,UAAxB,wCACA,+BACE,yHAIA,uBACA,sGAIA,uBACA,wHAIA,uBACA,sIAIA,6BACE,2IAKF,6BAGJ,eAACilB,GAAD,WACE,cAACC,GAAD,+BACA,oBAAI3xC,MAAO,CAAEysB,UAAW,UAAxB,mCACA,+BACE,iJAIA,uBACA,wSAOA,uBACA,+QC7EC+gC,GAAa,SAAC,GACzB,OADkD,eAEhD,qCACE,cAAClc,GAAD,yBACA,eAACG,GAAD,CAA6BzxC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","file":"static/js/main.87af8065.chunk.js","sourcesContent":["import { createContext, ReactNode, useContext } from 'react'\nimport { me } from '../schemaTypes'\nimport { useQuery, gql } from '@apollo/client'\n\nexport const ME_QUERY = gql`\n  query me {\n    me {\n      userName\n      firstName\n      lastName\n      password\n      isActive\n      _id\n      ... on Teacher {\n        __typename\n        title\n        teachesCourses {\n          _id\n          name\n          hasCourseInfo {\n            startsAt\n            endsAt\n            halfDayStartsAt\n            halfDayEndsAt\n            hourDelayStartsAt\n            hourDelayEndsAt\n            schoolDayType\n            assignmentsAllowedInClass\n            isHidden\n            checkReadingGuides\n          }\n        }\n      }\n      ... on Student {\n        __typename\n        hasIEP\n        inCourses {\n          _id\n          name\n          hasCourseInfo {\n            _id\n            startsAt\n            endsAt\n            halfDayStartsAt\n            halfDayEndsAt\n            hourDelayStartsAt\n            hourDelayEndsAt\n            schoolDayType\n            assignmentsAllowedInClass\n            isHidden\n            checkReadingGuides\n          }\n        }\n        hasProgressTracker {\n          readingGuideProgressTracker {\n            levelPoints\n            readingGuideLevel\n          }\n          writingProgressTracker {\n            levelPoints\n            overallWritingLevel\n          }\n        }\n        hasAbsences {\n          dayAbsent\n        }\n        #hasWritingMetrics {\n        # overallWritingMetric {\n        #  levelPoints\n        #}\n        #}\n      }\n    }\n  }\n`\n\nconst UserContext = createContext<any>(undefined)\n\ntype UserContextProps = {\n  children: ReactNode\n}\n\nexport const UserContextProvider = ({ children }: UserContextProps) => {\n  const { loading, data } = useQuery<me>(ME_QUERY, {\n    onCompleted: (data) => console.log(data),\n    onError: (error) => error && <div>Things went wrong, please refresh!</div>,\n  })\n\n  if (loading)\n    return (\n      <div\n        style={{\n          display: 'grid',\n          fontSize: '3vw',\n          color: 'var(--blue)',\n          height: '100vh',\n        }}\n      >\n        <div style={{ justifySelf: 'center', alignSelf: 'center' }}>\n          <span>Starting the Server </span>\n          <span aria-label=\"🚀🚀🚀\" role=\"img\">\n            🚀🚀🚀\n          </span>\n        </div>\n      </div>\n    )\n\n  return (\n    <UserContext.Provider value={data?.me}>{children}</UserContext.Provider>\n  )\n}\n\nexport function useUserContextProvider() {\n  const context = useContext(UserContext)\n\n  if (context === undefined) {\n    throw new Error(\n      'useUserContextProvider must be used within a UserContextProvider',\n    )\n  }\n  return context\n}\n","import styled from 'styled-components'\n\nexport const Standard8x12Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(8, 1fr);\n`\nexport const Standard7x12Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(7, 1fr);\n`\nexport const Standard4x6Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n`\n\nexport const LineInput = styled.input`\n  border: 1px solid var(--white);\n  border-bottom: 1px solid var(--blue);\n`\n\nexport const UnderlinedText = styled.div`\n  text-decoration: underline;\n`\nexport const UnderlinedCenteredText = styled(UnderlinedText)`\n  text-align: center;\n`\nexport const UnderlinedSegment = styled.span`\n  text-decoration: underline;\n`\n","import { Standard8x12Container } from '../../../../../appStyles'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const AssignmentsToCompleteContainer = styled(Standard8x12Container)`\n  height: 95vh;\n  border-top: 3px solid var(--white);\n`\n\nexport const AssignmentsTypeSelectorPanel = styled.div`\n  grid-row: 1/-1;\n  grid-column: 1/4;\n  background-color: var(--blue);\n  color: var(--white);\n\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  justify-items: left;\n  align-items: center;\n`\nexport const AssignmentsTypeSelectorHeader = styled.div`\n  text-decoration: underline;\n  font-size: 2.2rem;\n  justify-self: center;\n`\n\nexport type AssignmentsTypeStyleProps = {\n  selected: boolean\n}\n\nexport const AssignmentsTypeStyle = styled.div<AssignmentsTypeStyleProps>`\n  margin-left: 3%;\n  font-size: 2rem;\n  cursor: pointer;\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n`\n\nexport const AssignmentTypeContainer = styled(Standard8x12Container)`\n  grid-row: 1/-1;\n  grid-column: 4/-1;\n`\n\nexport const NoWorkContainer = styled.div`\n  grid-row: 4/-1;\n  grid-column: 5/-1;\n  justify-items: center;\n  align-items: center;\n  font-size: 3vh;\n`\nexport const MarkingPeriodSelectorContainer = styled.div`\n  grid-row: -2/-1;\n  grid-column: 1/-1;\n  display: grid;\n  width: 100%;\n  font-size: 2vw;\n  grid-template-columns: 1fr 1fr;\n`\n\nexport const MarkingPeriodSelectorTitle = styled.div`\n  justify-self: right;\n  align-self: center;\n  margin-right: 10%;\n`\n\nexport const MarkingPeriodSelectorSwitchContainer = styled.div`\n  justify-self: left;\n  align-self: center;\n  /* margin-left: 10%; */\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n  width: 60%;\n`\n\nexport const MarkingPeriodSelectedSwitchArrow = styled.div`\n  cursor: pointer;\n`\n\nexport const MarkingPeriodSelectedMarkingPeriod = styled.div``\n\nexport const AssignmentTypeTitle = styled.div`\n  display: grid;\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n  text-decoration: underline;\n`\nexport const AssignmentTypeContentContainer = styled.div`\n  display: grid;\n  grid-row: 2/-2;\n  grid-column: 2/-2;\n  grid-auto-rows: 10%;\n  overflow: scroll;\n`\n\nexport const CompletedAssignmentTypeContentContainer = styled.div`\n  grid-row: 2/-2;\n  grid-column: 2/-2;\n  grid-auto-rows: 10%;\n  overflow: scroll;\n`\nexport const CompletedAssignmentAssignmentAndScoreContainer = styled.div`\n  display: grid;\n  font-size: 3vh;\n  grid-template-columns: 5fr 1fr;\n`\nexport const AssignmentLink = styled(Link)`\n  /* font-size: 2rem; */\n  text-decoration: none;\n  color: var(--blue);\n`\nexport const PendingAssignmentLink = styled(Link)`\n  /* font-size: 2rem; */\n  text-decoration: none;\n  color: var(--grey);\n`\nexport const AssignmentScore = styled.div`\n  font-size: 3vh;\n  align-self: center;\n  justify-self: center;\n`\nexport const PendingAssignmentScore = styled.div`\n  font-size: 3vh;\n  align-self: center;\n  justify-self: center;\n  color: var(--grey);\n`\nexport const CompletionMessage = styled.div`\n  font-size: 2rem;\n`\nexport const AssignmentLinkLi = styled.li`\n  font-size: 3vh;\n  align-self: center;\n`\nexport const PendingAssignmentLinkLi = styled.li`\n  font-size: 3vh;\n  align-self: center;\n\n  color: var(--grey);\n`\n\nexport const AllAssignmentsMainContainer = styled.div`\n  grid-row: 1/-1;\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-rows: 1fr 2fr 13fr;\n`\nexport const AssignmentDisplayContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 15fr;\n  padding: 1vh;\n`\nexport const AssignmentDisplayTitle = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3vh;\n`\nexport const AssignmentTypeSelect = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n  font-size: 2vh;\n`\n\nexport const AssignmentDisplayCategoryDisplay = styled.div`\n  color: var(--white);\n  background-color: var(--blue);\n  display: grid;\n  font-size: 2vh;\n  align-items: center;\n  grid-auto-flow: column;\n  padding-left: 2vh;\n`\nexport const AssignmentsContainer = styled.div`\n  border: 3px solid var(--blue);\n  display: grid;\n  font-size: 1.5vh;\n  height: 55vh;\n  overflow: scroll;\n`\nexport const IndividualAssignment = styled.div`\n  display: grid;\n  justify-items: start;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  padding-left: 2vh;\n`\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createSchoolDay\n// ====================================================\n\nexport interface createSchoolDay_createSchoolDay_schoolDay {\n  __typename: \"SchoolDay\";\n  _id: string | null;\n}\n\nexport interface createSchoolDay_createSchoolDay {\n  __typename: \"CreateSchoolDayPayload\";\n  schoolDay: createSchoolDay_createSchoolDay_schoolDay;\n}\n\nexport interface createSchoolDay {\n  createSchoolDay: createSchoolDay_createSchoolDay;\n}\n\nexport interface createSchoolDayVariables {\n  input: CreateSchoolDayInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCurrentSchoolDayCount\n// ====================================================\n\nexport interface findCurrentSchoolDayCount_findSchoolDayTracker_schoolDayTracker {\n  __typename: \"SchoolDayTracker\";\n  schoolDayTracker: number;\n  schoolDayTypeTracker: SchoolDayType;\n  cohortWeekTracker: StudentCohortEnum;\n}\n\nexport interface findCurrentSchoolDayCount_findSchoolDayTracker {\n  __typename: \"FindSchoolDayPayload\";\n  schoolDayTracker: findCurrentSchoolDayCount_findSchoolDayTracker_schoolDayTracker;\n}\n\nexport interface findCurrentSchoolDayCount {\n  findSchoolDayTracker: findCurrentSchoolDayCount_findSchoolDayTracker;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createSignInSheets\n// ====================================================\n\nexport interface createSignInSheets_createSignInSheets_schoolDay_signInSheets_course {\n  __typename: \"Course\";\n  _id: string | null;\n}\n\nexport interface createSignInSheets_createSignInSheets_schoolDay_signInSheets {\n  __typename: \"StudentSignInSheet\";\n  course: createSignInSheets_createSignInSheets_schoolDay_signInSheets_course;\n}\n\nexport interface createSignInSheets_createSignInSheets_schoolDay {\n  __typename: \"SchoolDay\";\n  _id: string | null;\n  signInSheets: createSignInSheets_createSignInSheets_schoolDay_signInSheets[] | null;\n}\n\nexport interface createSignInSheets_createSignInSheets {\n  __typename: \"CreateSignInSheetsPayload\";\n  schoolDay: createSignInSheets_createSignInSheets_schoolDay;\n}\n\nexport interface createSignInSheets {\n  createSignInSheets: createSignInSheets_createSignInSheets;\n}\n\nexport interface createSignInSheetsVariables {\n  input: CreateSignInSheetsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateSchoolDay\n// ====================================================\n\nexport interface updateSchoolDay_updateSchoolDay_schoolDay {\n  __typename: \"SchoolDay\";\n  _id: string | null;\n  schoolDayLength: SchoolDayLengthEnum;\n}\n\nexport interface updateSchoolDay_updateSchoolDay {\n  __typename: \"UpdateSchoolDayPayload\";\n  schoolDay: updateSchoolDay_updateSchoolDay_schoolDay;\n}\n\nexport interface updateSchoolDay {\n  updateSchoolDay: updateSchoolDay_updateSchoolDay;\n}\n\nexport interface updateSchoolDayVariables {\n  input: UpdateSchoolDayInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCurrentSchoolDay\n// ====================================================\n\nexport interface findCurrentSchoolDay_findSchoolDayByDate_schoolDay_signInSheets_course {\n  __typename: \"Course\";\n  _id: string | null;\n}\n\nexport interface findCurrentSchoolDay_findSchoolDayByDate_schoolDay_signInSheets_studentsSignInlog {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCurrentSchoolDay_findSchoolDayByDate_schoolDay_signInSheets {\n  __typename: \"StudentSignInSheet\";\n  course: findCurrentSchoolDay_findSchoolDayByDate_schoolDay_signInSheets_course;\n  studentsSignInlog: findCurrentSchoolDay_findSchoolDayByDate_schoolDay_signInSheets_studentsSignInlog[] | null;\n}\n\nexport interface findCurrentSchoolDay_findSchoolDayByDate_schoolDay {\n  __typename: \"SchoolDay\";\n  _id: string | null;\n  cohortWeek: StudentCohortEnum;\n  schoolDayCount: number;\n  schoolDayLength: SchoolDayLengthEnum;\n  todaysDate: string;\n  currentSchoolDayType: SchoolDayType;\n  signInSheets: findCurrentSchoolDay_findSchoolDayByDate_schoolDay_signInSheets[] | null;\n}\n\nexport interface findCurrentSchoolDay_findSchoolDayByDate {\n  __typename: \"FindSchoolDayByDatePayload\";\n  schoolDay: findCurrentSchoolDay_findSchoolDayByDate_schoolDay | null;\n}\n\nexport interface findCurrentSchoolDay {\n  findSchoolDayByDate: findCurrentSchoolDay_findSchoolDayByDate;\n}\n\nexport interface findCurrentSchoolDayVariables {\n  input: FindSchoolDayByDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findArticleReviewsByStudent\n// ====================================================\n\nexport interface findArticleReviewsByStudent_findArticleReviewsByStudent_articleReviews {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n  assignedDate: string;\n  paperBased: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  submitted: boolean;\n}\n\nexport interface findArticleReviewsByStudent_findArticleReviewsByStudent {\n  __typename: \"FindArticleReviewsByStudentPayload\";\n  articleReviews: findArticleReviewsByStudent_findArticleReviewsByStudent_articleReviews[];\n}\n\nexport interface findArticleReviewsByStudent {\n  findArticleReviewsByStudent: findArticleReviewsByStudent_findArticleReviewsByStudent;\n}\n\nexport interface findArticleReviewsByStudentVariables {\n  input: FindArticleReviewsByStudentInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findArticleReviewById\n// ====================================================\n\nexport interface findArticleReviewById_findArticleReviewById_articleReview {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n  articleAuthor: string;\n  articleLink: string;\n  articleTitle: string;\n  assignedDate: string;\n  bias: boolean | null;\n  dueDate: string;\n  dueTime: string;\n  issue: string;\n  publishedDate: string | null;\n  solutions: string | null;\n  topicsImportance: string;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findArticleReviewById_findArticleReviewById {\n  __typename: \"FindArticleReviewByIdPayload\";\n  articleReview: findArticleReviewById_findArticleReviewById_articleReview;\n}\n\nexport interface findArticleReviewById {\n  findArticleReviewById: findArticleReviewById_findArticleReviewById;\n}\n\nexport interface findArticleReviewByIdVariables {\n  input: FindArticleReviewByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: submitArticleReview\n// ====================================================\n\nexport interface submitArticleReview_submitArticleReview_articleReview {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n}\n\nexport interface submitArticleReview_submitArticleReview {\n  __typename: \"SubmitArticleReviewPayload\";\n  articleReview: submitArticleReview_submitArticleReview_articleReview;\n}\n\nexport interface submitArticleReview {\n  submitArticleReview: submitArticleReview_submitArticleReview;\n}\n\nexport interface submitArticleReviewVariables {\n  input: SubmitArticleReviewInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateArticleReview\n// ====================================================\n\nexport interface updateArticleReview_updateArticleReview_articleReview {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n}\n\nexport interface updateArticleReview_updateArticleReview {\n  __typename: \"UpdateArticleReviewPayload\";\n  articleReview: updateArticleReview_updateArticleReview_articleReview;\n}\n\nexport interface updateArticleReview {\n  updateArticleReview: updateArticleReview_updateArticleReview;\n}\n\nexport interface updateArticleReviewVariables {\n  input: UpdateArticleReviewInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysToComplete\n// ====================================================\n\nexport interface findEssaysToComplete_findEssaysToCompleteByStudentId_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findEssaysToComplete_findEssaysToCompleteByStudentId_essays_topic {\n  __typename: \"Topic\";\n  writingLevel: WritingLevelEnum;\n}\n\nexport interface findEssaysToComplete_findEssaysToCompleteByStudentId_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  paperBased: boolean;\n  assigned: boolean;\n  missing: boolean;\n  readings: findEssaysToComplete_findEssaysToCompleteByStudentId_essays_readings;\n  topic: findEssaysToComplete_findEssaysToCompleteByStudentId_essays_topic;\n  markingPeriod: MarkingPeriodEnum;\n  exempt: boolean;\n}\n\nexport interface findEssaysToComplete_findEssaysToCompleteByStudentId {\n  __typename: \"FindEssaysToCompleteByStudentIdPayload\";\n  essays: findEssaysToComplete_findEssaysToCompleteByStudentId_essays[];\n}\n\nexport interface findEssaysToComplete {\n  findEssaysToCompleteByStudentId: findEssaysToComplete_findEssaysToCompleteByStudentId;\n}\n\nexport interface findEssaysToCompleteVariables {\n  input: FindEssaysToCompleteByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssayById\n// ====================================================\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure {\n  __typename: \"DevelopingSentenceStructure\";\n  subject: string;\n  verb: string;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer {\n  __typename: \"DevelopingOrganizer\";\n  basicQuestionType: BasicQuestionEnum | null;\n  developingSentenceStructure: findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure;\n  restatement: string;\n  answer: string;\n  conclusion: string;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure {\n  __typename: \"AcademicSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType {\n  __typename: \"ProblemSolutionAnswerType\";\n  problem: string;\n  reasonForProblem: string;\n  solvedBy: string;\n  whySolutionSolved: string;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType {\n  __typename: \"HowCauseEffectAnswerType\";\n  before: string;\n  cause: string;\n  after: string;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType {\n  __typename: \"WhyCauseEffectAnswerType\";\n  ultimateCause: string;\n  proximateCause: string;\n}\n\nexport type findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType = findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType | findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType | findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType;\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer {\n  __typename: \"AcademicOrganizer\";\n  academicSentenceStructure: findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure;\n  restatement: string;\n  conclusion: string;\n  questionType: QuestionTypeEnum | null;\n  answerType: findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType | null;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure {\n  __typename: \"AdvancedSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType {\n  __typename: \"ProblemSolutionAnswerType\";\n  problem: string;\n  reasonForProblem: string;\n  solvedBy: string;\n  whySolutionSolved: string;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType {\n  __typename: \"HowCauseEffectAnswerType\";\n  before: string;\n  cause: string;\n  after: string;\n}\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType {\n  __typename: \"WhyCauseEffectAnswerType\";\n  ultimateCause: string;\n  proximateCause: string;\n}\n\nexport type findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType = findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType | findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType | findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType;\n\nexport interface findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer {\n  __typename: \"AdvancedOrganizer\";\n  advancedSentenceStructure: findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure;\n  answerType: findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType | null;\n  restatement: string;\n  conclusion: string;\n  questionType: QuestionTypeEnum | null;\n}\n\nexport type findEssayById_findEssayById_essay_workingDraft_organizer = findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer | findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer | findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer;\n\nexport interface findEssayById_findEssayById_essay_workingDraft {\n  __typename: \"WorkingDraft\";\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer | null;\n  draft: string;\n}\n\nexport interface findEssayById_findEssayById_essay_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findEssayById_findEssayById_essay_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findEssayById_findEssayById_essay_topic {\n  __typename: \"Topic\";\n  question: string;\n  questionType: QuestionTypeEnum;\n  writingLevel: WritingLevelEnum;\n  essayQuestionId: string;\n}\n\nexport interface findEssayById_findEssayById_essay_lessonInfo_vocabList {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface findEssayById_findEssayById_essay_lessonInfo {\n  __typename: \"Lesson\";\n  vocabList: findEssayById_findEssayById_essay_lessonInfo_vocabList[];\n}\n\nexport interface findEssayById_findEssayById_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  workingDraft: findEssayById_findEssayById_essay_workingDraft;\n  readings: findEssayById_findEssayById_essay_readings;\n  hasOwner: findEssayById_findEssayById_essay_hasOwner;\n  markingPeriod: MarkingPeriodEnum;\n  dueDate: string;\n  dueTime: string;\n  topic: findEssayById_findEssayById_essay_topic;\n  lessonInfo: findEssayById_findEssayById_essay_lessonInfo | null;\n}\n\nexport interface findEssayById_findEssayById {\n  __typename: \"FindEssayByIdPayload\";\n  essay: findEssayById_findEssayById_essay;\n}\n\nexport interface findEssayById {\n  findEssayById: findEssayById_findEssayById;\n}\n\nexport interface findEssayByIdVariables {\n  input: FindEssayByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: UpdateWorkingDraft\n// ====================================================\n\nexport interface UpdateWorkingDraft_updateWorkingDraft_essay_workingDraft {\n  __typename: \"WorkingDraft\";\n  draft: string;\n}\n\nexport interface UpdateWorkingDraft_updateWorkingDraft_essay {\n  __typename: \"Essay\";\n  workingDraft: UpdateWorkingDraft_updateWorkingDraft_essay_workingDraft;\n}\n\nexport interface UpdateWorkingDraft_updateWorkingDraft {\n  __typename: \"UpdateWorkingDraftPayload\";\n  essay: UpdateWorkingDraft_updateWorkingDraft_essay;\n}\n\nexport interface UpdateWorkingDraft {\n  updateWorkingDraft: UpdateWorkingDraft_updateWorkingDraft;\n}\n\nexport interface UpdateWorkingDraftVariables {\n  input: UpdateWorkingDraftInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: setAnswerType\n// ====================================================\n\nexport interface setAnswerType_setAnswerType_essay_workingDraft_organizer_AdvancedOrganizer {\n  __typename: \"AdvancedOrganizer\" | \"DevelopingOrganizer\";\n}\n\nexport interface setAnswerType_setAnswerType_essay_workingDraft_organizer_AcademicOrganizer {\n  __typename: \"AcademicOrganizer\";\n  questionType: QuestionTypeEnum | null;\n}\n\nexport type setAnswerType_setAnswerType_essay_workingDraft_organizer = setAnswerType_setAnswerType_essay_workingDraft_organizer_AdvancedOrganizer | setAnswerType_setAnswerType_essay_workingDraft_organizer_AcademicOrganizer;\n\nexport interface setAnswerType_setAnswerType_essay_workingDraft {\n  __typename: \"WorkingDraft\";\n  organizer: setAnswerType_setAnswerType_essay_workingDraft_organizer | null;\n}\n\nexport interface setAnswerType_setAnswerType_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  workingDraft: setAnswerType_setAnswerType_essay_workingDraft;\n}\n\nexport interface setAnswerType_setAnswerType {\n  __typename: \"SetAnswerTypePayload\";\n  essay: setAnswerType_setAnswerType_essay;\n}\n\nexport interface setAnswerType {\n  setAnswerType: setAnswerType_setAnswerType;\n}\n\nexport interface setAnswerTypeVariables {\n  input: SetAnswerTypeInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateHowCauseEffect\n// ====================================================\n\nexport interface updateHowCauseEffect_updateHowCauseEffect_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface updateHowCauseEffect_updateHowCauseEffect {\n  __typename: \"UpdateHowCauseEffectPayload\";\n  essay: updateHowCauseEffect_updateHowCauseEffect_essay;\n}\n\nexport interface updateHowCauseEffect {\n  updateHowCauseEffect: updateHowCauseEffect_updateHowCauseEffect;\n}\n\nexport interface updateHowCauseEffectVariables {\n  input: UpdateHowCauseEffectInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateAcademicOrganizer\n// ====================================================\n\nexport interface updateAcademicOrganizer_updateAcademicOrganizer_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface updateAcademicOrganizer_updateAcademicOrganizer {\n  __typename: \"UpdateAcademicOrganizerPayload\";\n  essay: updateAcademicOrganizer_updateAcademicOrganizer_essay;\n}\n\nexport interface updateAcademicOrganizer {\n  updateAcademicOrganizer: updateAcademicOrganizer_updateAcademicOrganizer;\n}\n\nexport interface updateAcademicOrganizerVariables {\n  input: UpdateAcademicOrganizerInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateProblemSolution\n// ====================================================\n\nexport interface updateProblemSolution_updateProblemSolution_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface updateProblemSolution_updateProblemSolution {\n  __typename: \"UpdateProblemSolutionPayload\";\n  essay: updateProblemSolution_updateProblemSolution_essay;\n}\n\nexport interface updateProblemSolution {\n  updateProblemSolution: updateProblemSolution_updateProblemSolution;\n}\n\nexport interface updateProblemSolutionVariables {\n  input: UpdateProblemSolutionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateWhyCauseEffect\n// ====================================================\n\nexport interface updateWhyCauseEffect_updateWhyCauseEffect_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface updateWhyCauseEffect_updateWhyCauseEffect {\n  __typename: \"UpdateWhyCauseEffectPayload\";\n  essay: updateWhyCauseEffect_updateWhyCauseEffect_essay;\n}\n\nexport interface updateWhyCauseEffect {\n  updateWhyCauseEffect: updateWhyCauseEffect_updateWhyCauseEffect;\n}\n\nexport interface updateWhyCauseEffectVariables {\n  input: UpdateWhyCauseEffectInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateAdvancedOrganizer\n// ====================================================\n\nexport interface updateAdvancedOrganizer_updateAdvancedOrganizer_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface updateAdvancedOrganizer_updateAdvancedOrganizer {\n  __typename: \"UpdateAdvancedOrganizerPayload\";\n  essay: updateAdvancedOrganizer_updateAdvancedOrganizer_essay;\n}\n\nexport interface updateAdvancedOrganizer {\n  updateAdvancedOrganizer: updateAdvancedOrganizer_updateAdvancedOrganizer;\n}\n\nexport interface updateAdvancedOrganizerVariables {\n  input: UpdateAdvancedOrganizerInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateDevelopingOrganizer\n// ====================================================\n\nexport interface updateDevelopingOrganizer_updateDevelopingOrganizer_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface updateDevelopingOrganizer_updateDevelopingOrganizer {\n  __typename: \"UpdateDevelopingOrganizerPayload\";\n  essay: updateDevelopingOrganizer_updateDevelopingOrganizer_essay;\n}\n\nexport interface updateDevelopingOrganizer {\n  updateDevelopingOrganizer: updateDevelopingOrganizer_updateDevelopingOrganizer;\n}\n\nexport interface updateDevelopingOrganizerVariables {\n  input: UpdateDevelopingOrganizerInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: setOrganizer\n// ====================================================\n\nexport interface setOrganizer_setOrganizer_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure {\n  __typename: \"DevelopingSentenceStructure\";\n  subject: string;\n  verb: string;\n  subjectCompliment: string | null;\n  object: string | null;\n}\n\nexport interface setOrganizer_setOrganizer_essay_workingDraft_organizer_DevelopingOrganizer {\n  __typename: \"DevelopingOrganizer\";\n  developingSentenceStructure: setOrganizer_setOrganizer_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure;\n  restatement: string;\n  conclusion: string;\n}\n\nexport interface setOrganizer_setOrganizer_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure {\n  __typename: \"AcademicSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface setOrganizer_setOrganizer_essay_workingDraft_organizer_AcademicOrganizer {\n  __typename: \"AcademicOrganizer\";\n  academicSentenceStructure: setOrganizer_setOrganizer_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure;\n  restatement: string;\n  conclusion: string;\n}\n\nexport interface setOrganizer_setOrganizer_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure {\n  __typename: \"AdvancedSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface setOrganizer_setOrganizer_essay_workingDraft_organizer_AdvancedOrganizer {\n  __typename: \"AdvancedOrganizer\";\n  advancedSentenceStructure: setOrganizer_setOrganizer_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure;\n  restatement: string;\n  conclusion: string;\n}\n\nexport type setOrganizer_setOrganizer_essay_workingDraft_organizer = setOrganizer_setOrganizer_essay_workingDraft_organizer_DevelopingOrganizer | setOrganizer_setOrganizer_essay_workingDraft_organizer_AcademicOrganizer | setOrganizer_setOrganizer_essay_workingDraft_organizer_AdvancedOrganizer;\n\nexport interface setOrganizer_setOrganizer_essay_workingDraft {\n  __typename: \"WorkingDraft\";\n  organizer: setOrganizer_setOrganizer_essay_workingDraft_organizer | null;\n}\n\nexport interface setOrganizer_setOrganizer_essay {\n  __typename: \"Essay\";\n  workingDraft: setOrganizer_setOrganizer_essay_workingDraft;\n}\n\nexport interface setOrganizer_setOrganizer {\n  __typename: \"SetOrganizerPayload\";\n  essay: setOrganizer_setOrganizer_essay;\n}\n\nexport interface setOrganizer {\n  setOrganizer: setOrganizer_setOrganizer;\n}\n\nexport interface setOrganizerVariables {\n  input: SetOrganizerInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssayQuestionById\n// ====================================================\n\nexport interface findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts {\n  __typename: \"QuestionPartsContainer\";\n  originalQuestion: string;\n  modifiedQuestion: string;\n  questionWord: QuestionWordEnum;\n  helpingVerb: string;\n  completeSubject: string;\n  completePredicate: string;\n  simpleSubject: string;\n  simplePredicate: string;\n  nounType: NounTypeEnum;\n  verbType: VerbTypeEnum;\n  compoundNoun: boolean;\n  object: string | null;\n  subjectCompliment: string | null;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface findEssayQuestionById_findEssayQuestionById_essayQuestion {\n  __typename: \"EssayQuestion\";\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts;\n}\n\nexport interface findEssayQuestionById_findEssayQuestionById {\n  __typename: \"FindEssayQuestionByIdPayload\";\n  essayQuestion: findEssayQuestionById_findEssayQuestionById_essayQuestion;\n}\n\nexport interface findEssayQuestionById {\n  findEssayQuestionById: findEssayQuestionById_findEssayQuestionById;\n}\n\nexport interface findEssayQuestionByIdVariables {\n  input: FindEssayQuestionByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: setRestatement\n// ====================================================\n\nexport interface setRestatement_setRestatement {\n  __typename: \"SetRestatementPayload\";\n  set: boolean;\n}\n\nexport interface setRestatement {\n  setRestatement: setRestatement_setRestatement;\n}\n\nexport interface setRestatementVariables {\n  input: SetRestatementInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findReadingGuideByUserIdAndReadingSection\n// ====================================================\n\nexport interface findReadingGuideByUserIdAndReadingSection_findReadingGuideByUserIdAndReadingSection_readingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  exempt: boolean;\n  graded: boolean;\n}\n\nexport interface findReadingGuideByUserIdAndReadingSection_findReadingGuideByUserIdAndReadingSection {\n  __typename: \"FindReadingGuideByUserIdAndReadingSectionPayload\";\n  readingGuide: findReadingGuideByUserIdAndReadingSection_findReadingGuideByUserIdAndReadingSection_readingGuide | null;\n}\n\nexport interface findReadingGuideByUserIdAndReadingSection {\n  findReadingGuideByUserIdAndReadingSection: findReadingGuideByUserIdAndReadingSection_findReadingGuideByUserIdAndReadingSection;\n}\n\nexport interface findReadingGuideByUserIdAndReadingSectionVariables {\n  input: FindReadingGuideByUserIdAndReadingSectionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: submitEssayFinalDraft\n// ====================================================\n\nexport interface submitEssayFinalDraft_submitEssayFinalDraft_essay_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  gradingDraft: any;\n  draft: any;\n}\n\nexport interface submitEssayFinalDraft_submitEssayFinalDraft_essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submittedFinalDraft: submitEssayFinalDraft_submitEssayFinalDraft_essay_finalDraft_submittedFinalDraft[];\n}\n\nexport interface submitEssayFinalDraft_submitEssayFinalDraft_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  assigned: boolean;\n  finalDraft: submitEssayFinalDraft_submitEssayFinalDraft_essay_finalDraft | null;\n}\n\nexport interface submitEssayFinalDraft_submitEssayFinalDraft {\n  __typename: \"SubmitEssayFinalDraftPayload\";\n  essay: submitEssayFinalDraft_submitEssayFinalDraft_essay;\n}\n\nexport interface submitEssayFinalDraft {\n  submitEssayFinalDraft: submitEssayFinalDraft_submitEssayFinalDraft;\n}\n\nexport interface submitEssayFinalDraftVariables {\n  input: SubmitEssayFinalDraftInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCompletedEssayById\n// ====================================================\n\nexport interface findCompletedEssayById_findEssayById_essay_topic {\n  __typename: \"Topic\";\n  question: string;\n  writingLevel: WritingLevelEnum;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_score {\n  __typename: \"Score\";\n  maxPoints: number;\n  earnedPoints: number;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_finalDraft_submittedFinalDraft_rubricEntries {\n  __typename: \"RubricEntry\";\n  entry: string;\n  rubricSection: RubricSectionEnum;\n  score: number;\n  howToImprove: string | null;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  draft: any;\n  gradingDraft: any;\n  score: number;\n  draftNumber: number;\n  rubricEntries: findCompletedEssayById_findEssayById_essay_finalDraft_submittedFinalDraft_rubricEntries[];\n  additionalComments: string[] | null;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submittedFinalDraft: findCompletedEssayById_findEssayById_essay_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure {\n  __typename: \"DevelopingSentenceStructure\";\n  subject: string;\n  verb: string;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer {\n  __typename: \"DevelopingOrganizer\";\n  basicQuestionType: BasicQuestionEnum | null;\n  developingSentenceStructure: findCompletedEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure;\n  restatement: string;\n  answer: string;\n  conclusion: string;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure {\n  __typename: \"AcademicSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType {\n  __typename: \"ProblemSolutionAnswerType\";\n  problem: string;\n  reasonForProblem: string;\n  solvedBy: string;\n  whySolutionSolved: string;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType {\n  __typename: \"HowCauseEffectAnswerType\";\n  before: string;\n  cause: string;\n  after: string;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType {\n  __typename: \"WhyCauseEffectAnswerType\";\n  ultimateCause: string;\n  proximateCause: string;\n}\n\nexport type findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType = findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType | findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType | findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType;\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer {\n  __typename: \"AcademicOrganizer\";\n  academicSentenceStructure: findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure;\n  restatement: string;\n  conclusion: string;\n  questionType: QuestionTypeEnum | null;\n  answerType: findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType | null;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure {\n  __typename: \"AdvancedSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType {\n  __typename: \"ProblemSolutionAnswerType\";\n  problem: string;\n  reasonForProblem: string;\n  solvedBy: string;\n  whySolutionSolved: string;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType {\n  __typename: \"HowCauseEffectAnswerType\";\n  before: string;\n  cause: string;\n  after: string;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType {\n  __typename: \"WhyCauseEffectAnswerType\";\n  ultimateCause: string;\n  proximateCause: string;\n}\n\nexport type findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType = findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType | findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType | findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType;\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer {\n  __typename: \"AdvancedOrganizer\";\n  advancedSentenceStructure: findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure;\n  answerType: findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType | null;\n  restatement: string;\n  conclusion: string;\n  questionType: QuestionTypeEnum | null;\n}\n\nexport type findCompletedEssayById_findEssayById_essay_workingDraft_organizer = findCompletedEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer | findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer | findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer;\n\nexport interface findCompletedEssayById_findEssayById_essay_workingDraft {\n  __typename: \"WorkingDraft\";\n  draft: string;\n  organizer: findCompletedEssayById_findEssayById_essay_workingDraft_organizer | null;\n}\n\nexport interface findCompletedEssayById_findEssayById_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  topic: findCompletedEssayById_findEssayById_essay_topic;\n  readings: findCompletedEssayById_findEssayById_essay_readings;\n  score: findCompletedEssayById_findEssayById_essay_score;\n  finalDraft: findCompletedEssayById_findEssayById_essay_finalDraft | null;\n  workingDraft: findCompletedEssayById_findEssayById_essay_workingDraft;\n}\n\nexport interface findCompletedEssayById_findEssayById {\n  __typename: \"FindEssayByIdPayload\";\n  essay: findCompletedEssayById_findEssayById_essay;\n}\n\nexport interface findCompletedEssayById {\n  findEssayById: findCompletedEssayById_findEssayById;\n}\n\nexport interface findCompletedEssayByIdVariables {\n  input: FindEssayByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCompletedEssaysByStudentId\n// ====================================================\n\nexport interface findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_topic {\n  __typename: \"Topic\";\n  writingLevel: WritingLevelEnum;\n}\n\nexport interface findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submitted: boolean;\n  returned: boolean;\n}\n\nexport interface findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  readings: findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_readings;\n  topic: findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_topic;\n  markingPeriod: MarkingPeriodEnum;\n  finalDraft: findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_finalDraft | null;\n  score: findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays_score;\n}\n\nexport interface findCompletedEssaysByStudentId_findCompletedEssaysByStudentId {\n  __typename: \"FindCompletedEssaysByStudentIdPayload\";\n  essays: findCompletedEssaysByStudentId_findCompletedEssaysByStudentId_essays[];\n}\n\nexport interface findCompletedEssaysByStudentId {\n  findCompletedEssaysByStudentId: findCompletedEssaysByStudentId_findCompletedEssaysByStudentId;\n}\n\nexport interface findCompletedEssaysByStudentIdVariables {\n  input: FindCompletedEssaysByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: resubmitEssayFinalDraft\n// ====================================================\n\nexport interface resubmitEssayFinalDraft_resubmitEssayFinalDraft_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface resubmitEssayFinalDraft_resubmitEssayFinalDraft {\n  __typename: \"ResubmitEssayFinalDraftPayload\";\n  essay: resubmitEssayFinalDraft_resubmitEssayFinalDraft_essay;\n}\n\nexport interface resubmitEssayFinalDraft {\n  resubmitEssayFinalDraft: resubmitEssayFinalDraft_resubmitEssayFinalDraft;\n}\n\nexport interface resubmitEssayFinalDraftVariables {\n  input: ResubmitEssayFinalDraftInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: finishQuiz\n// ====================================================\n\nexport interface finishQuiz_finishQuiz_quiz {\n  __typename: \"Quiz\";\n  _id: string | null;\n}\n\nexport interface finishQuiz_finishQuiz {\n  __typename: \"FinishQuizPayload\";\n  quiz: finishQuiz_finishQuiz_quiz;\n}\n\nexport interface finishQuiz {\n  finishQuiz: finishQuiz_finishQuiz;\n}\n\nexport interface finishQuizVariables {\n  input: FinishQuizInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findQuizQuestionsByQuizzableSections\n// ====================================================\n\nexport interface findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList {\n  __typename: \"AnswerList\";\n  answer: string;\n  correct: boolean;\n  partiallyCorrect: boolean;\n  removable: boolean;\n}\n\nexport interface findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions {\n  __typename: \"QuizQuestion\";\n  _id: string | null;\n  difficultyLevel: QuizQuestionDifficultyLevelEnum;\n  questionType: QuizQuestionTypeEnum;\n  question: string;\n  answerList: findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList[];\n  associatedTextSectionId: string;\n}\n\nexport interface findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections {\n  __typename: \"FindQuizQuestionsByQuizzableSectionsPayload\";\n  quizQuestions: findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions[];\n}\n\nexport interface findQuizQuestionsByQuizzableSections {\n  findQuizQuestionsByQuizzableSections: findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections;\n}\n\nexport interface findQuizQuestionsByQuizzableSectionsVariables {\n  input: FindQuizQuestionsByQuizzableSectionsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: activateQuiz\n// ====================================================\n\nexport interface activateQuiz_activateQuiz {\n  __typename: \"ActivateQuizPayload\";\n  activated: boolean;\n}\n\nexport interface activateQuiz {\n  activateQuiz: activateQuiz_activateQuiz;\n}\n\nexport interface activateQuizVariables {\n  input: ActivateQuizInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: startQuiz\n// ====================================================\n\nexport interface startQuiz_startQuiz {\n  __typename: \"StartQuizPayload\";\n  started: boolean;\n}\n\nexport interface startQuiz {\n  startQuiz: startQuiz_startQuiz;\n}\n\nexport interface startQuizVariables {\n  input: StartQuizInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findQuizById\n// ====================================================\n\nexport interface findQuizById_findQuizById_quiz_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findQuizById_findQuizById_quiz {\n  __typename: \"Quiz\";\n  _id: string | null;\n  finishedQuiz: boolean;\n  startedQuiz: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  forcedFinish: boolean;\n  isActive: boolean;\n  quizzableSections: string[];\n  readings: findQuizById_findQuizById_quiz_readings;\n}\n\nexport interface findQuizById_findQuizById {\n  __typename: \"FindQuizByIdPayload\";\n  quiz: findQuizById_findQuizById_quiz;\n}\n\nexport interface findQuizById {\n  findQuizById: findQuizById_findQuizById;\n}\n\nexport interface findQuizByIdVariables {\n  input: FindQuizByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findReadingGuidesToComplete\n// ====================================================\n\nexport interface findReadingGuidesToComplete_findReadingGuidesToCompleteByStudentId_readingGuides_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findReadingGuidesToComplete_findReadingGuidesToCompleteByStudentId_readingGuides {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  paperBased: boolean;\n  graded: boolean;\n  readings: findReadingGuidesToComplete_findReadingGuidesToCompleteByStudentId_readingGuides_readings;\n  markingPeriod: MarkingPeriodEnum;\n  assigned: boolean;\n  completed: boolean;\n  dueDate: string;\n  dueTime: string;\n}\n\nexport interface findReadingGuidesToComplete_findReadingGuidesToCompleteByStudentId {\n  __typename: \"FindReadingGuidesToCompleteByStudentIdPayload\";\n  readingGuides: findReadingGuidesToComplete_findReadingGuidesToCompleteByStudentId_readingGuides[];\n}\n\nexport interface findReadingGuidesToComplete {\n  findReadingGuidesToCompleteByStudentId: findReadingGuidesToComplete_findReadingGuidesToCompleteByStudentId;\n}\n\nexport interface findReadingGuidesToCompleteVariables {\n  input: FindReadingGuidesToCompleteByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateReadingGuide\n// ====================================================\n\nexport interface updateReadingGuide_updateReadingGuide_readingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n}\n\nexport interface updateReadingGuide_updateReadingGuide {\n  __typename: \"UpdateReadingGuidePayload\";\n  readingGuide: updateReadingGuide_updateReadingGuide_readingGuide;\n}\n\nexport interface updateReadingGuide {\n  updateReadingGuide: updateReadingGuide_updateReadingGuide;\n}\n\nexport interface updateReadingGuideVariables {\n  input: UpdateReadingGuideInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateReadingGuideNew\n// ====================================================\n\nexport interface updateReadingGuideNew_updateReadingGuide_readingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n}\n\nexport interface updateReadingGuideNew_updateReadingGuide {\n  __typename: \"UpdateReadingGuidePayload\";\n  readingGuide: updateReadingGuideNew_updateReadingGuide_readingGuide;\n}\n\nexport interface updateReadingGuideNew {\n  updateReadingGuide: updateReadingGuideNew_updateReadingGuide;\n}\n\nexport interface updateReadingGuideNewVariables {\n  input: UpdateReadingGuideInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findReadingGuideById\n// ====================================================\n\nexport interface findReadingGuideById_findReadingGuideById_readingGuide_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findReadingGuideById_findReadingGuideById_readingGuide_lessonInfo_vocabList {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface findReadingGuideById_findReadingGuideById_readingGuide_lessonInfo {\n  __typename: \"Lesson\";\n  vocabList: findReadingGuideById_findReadingGuideById_readingGuide_lessonInfo_vocabList[];\n  assignedSectionIdList: string[];\n}\n\nexport interface findReadingGuideById_findReadingGuideById_readingGuide_readingGuideFinal_readingGuideQuestions {\n  __typename: \"ReadingGuideQuestion\";\n  answer: string;\n  questionType: string;\n}\n\nexport interface findReadingGuideById_findReadingGuideById_readingGuide_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  submitted: boolean;\n  readingGuideQuestions: findReadingGuideById_findReadingGuideById_readingGuide_readingGuideFinal_readingGuideQuestions[] | null;\n}\n\nexport interface findReadingGuideById_findReadingGuideById_readingGuide_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findReadingGuideById_findReadingGuideById_readingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  readings: findReadingGuideById_findReadingGuideById_readingGuide_readings;\n  dueDate: string;\n  dueTime: string;\n  lessonInfo: findReadingGuideById_findReadingGuideById_readingGuide_lessonInfo | null;\n  readingGuideFinal: findReadingGuideById_findReadingGuideById_readingGuide_readingGuideFinal | null;\n  markingPeriod: MarkingPeriodEnum;\n  hasOwner: findReadingGuideById_findReadingGuideById_readingGuide_hasOwner;\n}\n\nexport interface findReadingGuideById_findReadingGuideById {\n  __typename: \"FindReadingGuideByIdPayload\";\n  readingGuide: findReadingGuideById_findReadingGuideById_readingGuide;\n}\n\nexport interface findReadingGuideById {\n  findReadingGuideById: findReadingGuideById_findReadingGuideById;\n}\n\nexport interface findReadingGuideByIdVariables {\n  input: FindReadingGuideByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: startReadingGuide\n// ====================================================\n\nexport interface startReadingGuide_startReadingGuide_readingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n}\n\nexport interface startReadingGuide_startReadingGuide {\n  __typename: \"StartReadingGuidePayload\";\n  readingGuide: startReadingGuide_startReadingGuide_readingGuide;\n}\n\nexport interface startReadingGuide {\n  startReadingGuide: startReadingGuide_startReadingGuide;\n}\n\nexport interface startReadingGuideVariables {\n  input: StartReadingGuideInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: submitReadingGuide\n// ====================================================\n\nexport interface submitReadingGuide_submitReadingGuide_readingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n}\n\nexport interface submitReadingGuide_submitReadingGuide {\n  __typename: \"SubmitReadingGuidePayload\";\n  readingGuide: submitReadingGuide_submitReadingGuide_readingGuide;\n}\n\nexport interface submitReadingGuide {\n  submitReadingGuide: submitReadingGuide_submitReadingGuide;\n}\n\nexport interface submitReadingGuideVariables {\n  input: SubmitReadingGuideInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findQuizzesByStudentId\n// ====================================================\n\nexport interface findQuizzesByStudentId_findQuizzesByStudentId_quizzes_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findQuizzesByStudentId_findQuizzesByStudentId_quizzes {\n  __typename: \"Quiz\";\n  _id: string | null;\n  isActive: boolean;\n  assigned: boolean;\n  readings: findQuizzesByStudentId_findQuizzesByStudentId_quizzes_readings;\n  finishedQuiz: boolean;\n  startedQuiz: boolean;\n}\n\nexport interface findQuizzesByStudentId_findQuizzesByStudentId {\n  __typename: \"FindQuizzesByStudentIdPayload\";\n  quizzes: findQuizzesByStudentId_findQuizzesByStudentId_quizzes[];\n}\n\nexport interface findQuizzesByStudentId {\n  findQuizzesByStudentId: findQuizzesByStudentId_findQuizzesByStudentId;\n}\n\nexport interface findQuizzesByStudentIdVariables {\n  input: FindQuizzesByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: markExempt\n// ====================================================\n\nexport interface markExempt_markExempt {\n  __typename: \"MarkExemptPayload\";\n  marked: boolean;\n}\n\nexport interface markExempt {\n  markExempt: markExempt_markExempt;\n}\n\nexport interface markExemptVariables {\n  input: MarkExemptInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findSchoolDayAndLesson\n// ====================================================\n\nexport interface findSchoolDayAndLesson_findSchoolDayAndLesson {\n  __typename: \"FindSchoolDayAndLessonPayload\";\n  lessonToday: boolean;\n}\n\nexport interface findSchoolDayAndLesson {\n  findSchoolDayAndLesson: findSchoolDayAndLesson_findSchoolDayAndLesson;\n}\n\nexport interface findSchoolDayAndLessonVariables {\n  input: FindSchoolDayAndLessonInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createArticleReviews\n// ====================================================\n\nexport interface createArticleReviews_createArticleReviews_articleReviews {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n}\n\nexport interface createArticleReviews_createArticleReviews {\n  __typename: \"CreateArticleReviewsPayload\";\n  articleReviews: createArticleReviews_createArticleReviews_articleReviews[];\n}\n\nexport interface createArticleReviews {\n  createArticleReviews: createArticleReviews_createArticleReviews;\n}\n\nexport interface createArticleReviewsVariables {\n  input: CreateArticleReviewsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: returnArticleReview\n// ====================================================\n\nexport interface returnArticleReview_returnArticleReview_articleReview {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n}\n\nexport interface returnArticleReview_returnArticleReview {\n  __typename: \"ReturnArticleReviewPayload\";\n  articleReview: returnArticleReview_returnArticleReview_articleReview;\n}\n\nexport interface returnArticleReview {\n  returnArticleReview: returnArticleReview_returnArticleReview;\n}\n\nexport interface returnArticleReviewVariables {\n  input: ReturnArticleReviewInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findArticleReviewsByCourse\n// ====================================================\n\nexport interface findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n}\n\nexport interface findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews_hasOwner {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n  schoolId: string | null;\n  _id: string | null;\n}\n\nexport interface findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n  score: findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews_score;\n  hasOwner: findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews_hasOwner;\n  assignedDate: string;\n  dueDate: string;\n  completed: boolean;\n  late: boolean;\n  returned: boolean;\n}\n\nexport interface findArticleReviewsByCourse_findArticleReviewsByCourse {\n  __typename: \"FindArticleReviewsByCoursePayload\";\n  articleReviews: findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews[];\n}\n\nexport interface findArticleReviewsByCourse {\n  findArticleReviewsByCourse: findArticleReviewsByCourse_findArticleReviewsByCourse;\n}\n\nexport interface findArticleReviewsByCourseVariables {\n  input: FindArticleReviewsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assignEssays\n// ====================================================\n\nexport interface assignEssays_assignEssays_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface assignEssays_assignEssays {\n  __typename: \"AssignEssaysPayload\";\n  essays: assignEssays_assignEssays_essays[];\n}\n\nexport interface assignEssays {\n  assignEssays: assignEssays_assignEssays;\n}\n\nexport interface assignEssaysVariables {\n  input: AssignEssaysInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysByAssociatedLessonIdAndCourseId\n// ====================================================\n\nexport interface findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId_essays_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId_essays {\n  __typename: \"Essay\";\n  assigned: boolean;\n  hasOwner: findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId_essays_hasOwner;\n  readings: findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId_essays_readings;\n  dueDate: string;\n  assignedDate: string;\n}\n\nexport interface findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId {\n  __typename: \"FindEssaysByAssociatedLessonIdAndCourseIdPayload\";\n  essays: findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId_essays[];\n}\n\nexport interface findEssaysByAssociatedLessonIdAndCourseId {\n  findEssaysByAssociatedLessonIdAndCourseId: findEssaysByAssociatedLessonIdAndCourseId_findEssaysByAssociatedLessonIdAndCourseId;\n}\n\nexport interface findEssaysByAssociatedLessonIdAndCourseIdVariables {\n  input: FindEssaysByAssociatedLessonIdAndCourseIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonsByCourse\n// ====================================================\n\nexport interface findLessonsByCourse_findLessonByCourse_lessons {\n  __typename: \"Lesson\";\n  _id: string | null;\n  lessonName: string;\n  assignedDate: any;\n  lessonType: LessonTypeEnum;\n}\n\nexport interface findLessonsByCourse_findLessonByCourse {\n  __typename: \"FindLessonByCoursePayload\";\n  lessons: findLessonsByCourse_findLessonByCourse_lessons[];\n}\n\nexport interface findLessonsByCourse {\n  findLessonByCourse: findLessonsByCourse_findLessonByCourse;\n}\n\nexport interface findLessonsByCourseVariables {\n  input: FindLessonByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findReadingGuidesByAssociatedLessonAndCourseId\n// ====================================================\n\nexport interface findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides {\n  __typename: \"ReadingGuide\";\n  assigned: boolean;\n  hasOwner: findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_hasOwner;\n  readings: findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_readings;\n  dueDate: string;\n  assignedDate: string;\n}\n\nexport interface findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId {\n  __typename: \"FindReadingGuidesByAssociatedLessonAndCourseIdPayload\";\n  readingGuides: findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides[];\n}\n\nexport interface findReadingGuidesByAssociatedLessonAndCourseId {\n  findReadingGuidesByAssociatedLessonAndCourseId: findReadingGuidesByAssociatedLessonAndCourseId_findReadingGuidesByAssociatedLessonAndCourseId;\n}\n\nexport interface findReadingGuidesByAssociatedLessonAndCourseIdVariables {\n  input: FindReadingGuidesByAssociatedLessonAndCourseIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assignReadingGuides\n// ====================================================\n\nexport interface assignReadingGuides_assignReadingGuides_readingGuides {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n}\n\nexport interface assignReadingGuides_assignReadingGuides {\n  __typename: \"AssignReadingGuidesPayload\";\n  readingGuides: assignReadingGuides_assignReadingGuides_readingGuides[];\n}\n\nexport interface assignReadingGuides {\n  assignReadingGuides: assignReadingGuides_assignReadingGuides;\n}\n\nexport interface assignReadingGuidesVariables {\n  input: AssignReadingGuidesInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysByTopic\n// ====================================================\n\nexport interface findEssaysByTopic_findEssaysByTopic_essays_hasOwner {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findEssaysByTopic_findEssaysByTopic_essays_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  gradingDraft: any;\n}\n\nexport interface findEssaysByTopic_findEssaysByTopic_essays_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submittedFinalDraft: findEssaysByTopic_findEssaysByTopic_essays_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findEssaysByTopic_findEssaysByTopic_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  hasOwner: findEssaysByTopic_findEssaysByTopic_essays_hasOwner;\n  finalDraft: findEssaysByTopic_findEssaysByTopic_essays_finalDraft | null;\n}\n\nexport interface findEssaysByTopic_findEssaysByTopic {\n  __typename: \"FindEssaysByTopicPayload\";\n  essays: findEssaysByTopic_findEssaysByTopic_essays[];\n}\n\nexport interface findEssaysByTopic {\n  findEssaysByTopic: findEssaysByTopic_findEssaysByTopic;\n}\n\nexport interface findEssaysByTopicVariables {\n  input: FindEssaysByTopicInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findReadingGuidesByMarkingPeriod\n// ====================================================\n\nexport interface findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_hasOwner {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_readingGuideFinal_readingGuideQuestions {\n  __typename: \"ReadingGuideQuestion\";\n  answer: string;\n  questionType: string;\n}\n\nexport interface findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  readingGuideQuestions: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_readingGuideFinal_readingGuideQuestions[] | null;\n  submitted: boolean;\n}\n\nexport interface findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  hasOwner: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_hasOwner;\n  reviewed: boolean;\n  completed: boolean;\n  exempt: boolean;\n  effort: ReadingGuideReviewOptionsEnum;\n  readings: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_readings;\n  dueDate: string;\n  readingGuideFinal: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides_readingGuideFinal | null;\n}\n\nexport interface findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod {\n  __typename: \"FindReadingGuidesByMarkingPeriodPayload\";\n  readingGuides: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides[];\n}\n\nexport interface findReadingGuidesByMarkingPeriod {\n  findReadingGuidesByMarkingPeriod: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod;\n}\n\nexport interface findReadingGuidesByMarkingPeriodVariables {\n  input: FindReadingGuidesByMarkingPeriodInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createEssay\n// ====================================================\n\nexport interface createEssay_createEssay_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface createEssay_createEssay {\n  __typename: \"CreateEssayPayload\";\n  essays: createEssay_createEssay_essays[];\n}\n\nexport interface createEssay {\n  createEssay: createEssay_createEssay;\n}\n\nexport interface createEssayVariables {\n  input: CreateEssayInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findWritingLevelsForCourse\n// ====================================================\n\nexport interface findWritingLevelsForCourse_findStudentsByCourse_students_hasProgressTracker_writingProgressTracker {\n  __typename: \"WritingMetric\";\n  overallWritingLevel: WritingLevelEnum;\n}\n\nexport interface findWritingLevelsForCourse_findStudentsByCourse_students_hasProgressTracker {\n  __typename: \"ProgressTracker\";\n  writingProgressTracker: findWritingLevelsForCourse_findStudentsByCourse_students_hasProgressTracker_writingProgressTracker;\n}\n\nexport interface findWritingLevelsForCourse_findStudentsByCourse_students {\n  __typename: \"Student\";\n  hasProgressTracker: findWritingLevelsForCourse_findStudentsByCourse_students_hasProgressTracker;\n}\n\nexport interface findWritingLevelsForCourse_findStudentsByCourse {\n  __typename: \"FindStudentsByCoursePayload\";\n  students: findWritingLevelsForCourse_findStudentsByCourse_students[];\n}\n\nexport interface findWritingLevelsForCourse {\n  findStudentsByCourse: findWritingLevelsForCourse_findStudentsByCourse;\n}\n\nexport interface findWritingLevelsForCourseVariables {\n  input: FindStudentsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonById\n// ====================================================\n\nexport interface findLessonById_findLessonById_lesson_questionList {\n  __typename: \"TextSectionQuestions\";\n  question: string;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface findLessonById_findLessonById_lesson_pageNumbers {\n  __typename: \"PageNumbers\";\n  startingPage: number;\n  endingPage: number;\n}\n\nexport interface findLessonById_findLessonById_lesson_assignedSections {\n  __typename: \"LessonTextSections\";\n  startingSection: string;\n  endingSection: string;\n}\n\nexport interface findLessonById_findLessonById_lesson_assignedCourses_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  startsAt: string;\n  endsAt: string;\n  schoolDayType: SchoolDayType;\n}\n\nexport interface findLessonById_findLessonById_lesson_assignedCourses {\n  __typename: \"Course\";\n  hasCourseInfo: findLessonById_findLessonById_lesson_assignedCourses_hasCourseInfo;\n  _id: string | null;\n}\n\nexport interface findLessonById_findLessonById_lesson {\n  __typename: \"Lesson\";\n  _id: string | null;\n  assignedMarkingPeriod: MarkingPeriodEnum;\n  assignedDate: any;\n  questionList: findLessonById_findLessonById_lesson_questionList[];\n  pageNumbers: findLessonById_findLessonById_lesson_pageNumbers;\n  assignedSections: findLessonById_findLessonById_lesson_assignedSections;\n  assignedSectionIdList: string[];\n  assignedCourses: findLessonById_findLessonById_lesson_assignedCourses[];\n}\n\nexport interface findLessonById_findLessonById {\n  __typename: \"FindLessonByIdPayload\";\n  lesson: findLessonById_findLessonById_lesson;\n}\n\nexport interface findLessonById {\n  findLessonById: findLessonById_findLessonById;\n}\n\nexport interface findLessonByIdVariables {\n  input: FindLessonByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonsByUnit\n// ====================================================\n\nexport interface findLessonsByUnit_findLessonsByUnit_lessons {\n  __typename: \"Lesson\";\n  _id: string | null;\n  lessonName: string;\n  assignedDate: any;\n  lessonType: LessonTypeEnum;\n}\n\nexport interface findLessonsByUnit_findLessonsByUnit {\n  __typename: \"FindLessonsByUnitPayload\";\n  lessons: findLessonsByUnit_findLessonsByUnit_lessons[];\n}\n\nexport interface findLessonsByUnit {\n  findLessonsByUnit: findLessonsByUnit_findLessonsByUnit;\n}\n\nexport interface findLessonsByUnitVariables {\n  input: FindLessonsByUnitInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTextSectionsByIdForEssayQuestionLoader\n// ====================================================\n\nexport interface findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions_questionParts {\n  __typename: \"QuestionPartsContainer\";\n  originalQuestion: string;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions {\n  __typename: \"EssayQuestion\";\n  _id: string | null;\n  questionParts: findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions_questionParts;\n}\n\nexport interface findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections {\n  __typename: \"TextSection\";\n  hasEssayQuestions: findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions[];\n}\n\nexport interface findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById {\n  __typename: \"FindTextSectionsByIdPayload\";\n  textSections: findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections[];\n}\n\nexport interface findTextSectionsByIdForEssayQuestionLoader {\n  findTextSectionsById: findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById;\n}\n\nexport interface findTextSectionsByIdForEssayQuestionLoaderVariables {\n  input: FindTextSectionsByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createReadingGuide\n// ====================================================\n\nexport interface createReadingGuide_createReadingGuide_readingGuides {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n}\n\nexport interface createReadingGuide_createReadingGuide {\n  __typename: \"CreateReadingGuidePayload\";\n  readingGuides: createReadingGuide_createReadingGuide_readingGuides[];\n}\n\nexport interface createReadingGuide {\n  createReadingGuide: createReadingGuide_createReadingGuide;\n}\n\nexport interface createReadingGuideVariables {\n  input: CreateReadingGuideInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: checkQuizQuestionsForTextSections\n// ====================================================\n\nexport interface checkQuizQuestionsForTextSections_checkQuizQuestionsForTextSections {\n  __typename: \"CheckQuizQuestionsForTextSectionsPayload\";\n  textSectionIds: string[];\n}\n\nexport interface checkQuizQuestionsForTextSections {\n  checkQuizQuestionsForTextSections: checkQuizQuestionsForTextSections_checkQuizQuestionsForTextSections;\n}\n\nexport interface checkQuizQuestionsForTextSectionsVariables {\n  input: CheckQuizQuestionsForTextSectionsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysToGradeById\n// ====================================================\n\nexport interface findEssaysToGradeById_findEssaysToGradeById_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findEssaysToGradeById_findEssaysToGradeById_essays_hasOwner_inCourses {\n  __typename: \"Course\";\n  _id: string | null;\n}\n\nexport interface findEssaysToGradeById_findEssaysToGradeById_essays_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  inCourses: findEssaysToGradeById_findEssaysToGradeById_essays_hasOwner_inCourses[];\n}\n\nexport interface findEssaysToGradeById_findEssaysToGradeById_essays_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  draftNumber: number;\n  graded: boolean;\n}\n\nexport interface findEssaysToGradeById_findEssaysToGradeById_essays_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  returned: boolean;\n  submitted: boolean;\n  submitTime: any | null;\n  submittedFinalDraft: findEssaysToGradeById_findEssaysToGradeById_essays_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findEssaysToGradeById_findEssaysToGradeById_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  late: boolean;\n  assigned: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  readings: findEssaysToGradeById_findEssaysToGradeById_essays_readings;\n  hasOwner: findEssaysToGradeById_findEssaysToGradeById_essays_hasOwner;\n  finalDraft: findEssaysToGradeById_findEssaysToGradeById_essays_finalDraft | null;\n}\n\nexport interface findEssaysToGradeById_findEssaysToGradeById {\n  __typename: \"FindEssaysToGradeByIdPayload\";\n  essays: findEssaysToGradeById_findEssaysToGradeById_essays[];\n}\n\nexport interface findEssaysToGradeById {\n  findEssaysToGradeById: findEssaysToGradeById_findEssaysToGradeById;\n}\n\nexport interface findEssaysToGradeByIdVariables {\n  input: FindEssaysToGradeByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssayToGradeById\n// ====================================================\n\nexport interface findEssayToGradeById_findEssayById_essay_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_topic {\n  __typename: \"Topic\";\n  question: string;\n  writingLevel: WritingLevelEnum;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure {\n  __typename: \"DevelopingSentenceStructure\";\n  subject: string;\n  verb: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer {\n  __typename: \"DevelopingOrganizer\";\n  restatement: string;\n  developingSentenceStructure: findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer_developingSentenceStructure;\n  basicQuestionType: BasicQuestionEnum | null;\n  answer: string;\n  conclusion: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure {\n  __typename: \"AcademicSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType {\n  __typename: \"HowCauseEffectAnswerType\";\n  before: string;\n  cause: string;\n  after: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType {\n  __typename: \"ProblemSolutionAnswerType\";\n  problem: string;\n  reasonForProblem: string;\n  solvedBy: string;\n  whySolutionSolved: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType {\n  __typename: \"WhyCauseEffectAnswerType\";\n  ultimateCause: string;\n  proximateCause: string;\n}\n\nexport type findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType = findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType;\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer {\n  __typename: \"AcademicOrganizer\";\n  academicSentenceStructure: findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_academicSentenceStructure;\n  questionType: QuestionTypeEnum | null;\n  answerType: findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType | null;\n  restatement: string;\n  conclusion: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure {\n  __typename: \"AdvancedSentenceStructure\";\n  subject: string;\n  verb: string;\n  object: string | null;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType {\n  __typename: \"HowCauseEffectAnswerType\";\n  before: string;\n  cause: string;\n  after: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType {\n  __typename: \"ProblemSolutionAnswerType\";\n  problem: string;\n  reasonForProblem: string;\n  solvedBy: string;\n  whySolutionSolved: string;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType {\n  __typename: \"WhyCauseEffectAnswerType\";\n  ultimateCause: string;\n  proximateCause: string;\n}\n\nexport type findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType = findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType;\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer {\n  __typename: \"AdvancedOrganizer\";\n  advancedSentenceStructure: findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_advancedSentenceStructure;\n  questionType: QuestionTypeEnum | null;\n  answerType: findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType | null;\n  restatement: string;\n  conclusion: string;\n}\n\nexport type findEssayToGradeById_findEssayById_essay_workingDraft_organizer = findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer;\n\nexport interface findEssayToGradeById_findEssayById_essay_workingDraft {\n  __typename: \"WorkingDraft\";\n  organizer: findEssayToGradeById_findEssayById_essay_workingDraft_organizer | null;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_finalDraft_submittedFinalDraft_rubricEntries {\n  __typename: \"RubricEntry\";\n  entry: string;\n  score: number;\n  rubricSection: RubricSectionEnum;\n  howToImprove: string | null;\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  draft: any;\n  gradingDraft: any;\n  draftNumber: number;\n  score: number;\n  additionalComments: string[] | null;\n  rubricEntries: findEssayToGradeById_findEssayById_essay_finalDraft_submittedFinalDraft_rubricEntries[];\n}\n\nexport interface findEssayToGradeById_findEssayById_essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submitTime: any | null;\n  submitted: boolean;\n  returned: boolean;\n  submittedFinalDraft: findEssayToGradeById_findEssayById_essay_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findEssayToGradeById_findEssayById_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  assigned: boolean;\n  hasOwner: findEssayToGradeById_findEssayById_essay_hasOwner;\n  topic: findEssayToGradeById_findEssayById_essay_topic;\n  dueDate: string;\n  dueTime: string;\n  readings: findEssayToGradeById_findEssayById_essay_readings;\n  workingDraft: findEssayToGradeById_findEssayById_essay_workingDraft;\n  finalDraft: findEssayToGradeById_findEssayById_essay_finalDraft | null;\n}\n\nexport interface findEssayToGradeById_findEssayById {\n  __typename: \"FindEssayByIdPayload\";\n  essay: findEssayToGradeById_findEssayById_essay;\n}\n\nexport interface findEssayToGradeById {\n  findEssayById: findEssayToGradeById_findEssayById;\n}\n\nexport interface findEssayToGradeByIdVariables {\n  input: FindEssayByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: returnGradedEssay\n// ====================================================\n\nexport interface returnGradedEssay_returnGradedEssay_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  assigned: boolean;\n}\n\nexport interface returnGradedEssay_returnGradedEssay {\n  __typename: \"ReturnGradedEssayPayload\";\n  essay: returnGradedEssay_returnGradedEssay_essay;\n}\n\nexport interface returnGradedEssay {\n  returnGradedEssay: returnGradedEssay_returnGradedEssay;\n}\n\nexport interface returnGradedEssayVariables {\n  input: ReturnGradedEssayInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateGradingDraft\n// ====================================================\n\nexport interface updateGradingDraft_updateGradingDraft_essay {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface updateGradingDraft_updateGradingDraft {\n  __typename: \"UpdateGradingDraftPayload\";\n  essay: updateGradingDraft_updateGradingDraft_essay;\n}\n\nexport interface updateGradingDraft {\n  updateGradingDraft: updateGradingDraft_updateGradingDraft;\n}\n\nexport interface updateGradingDraftVariables {\n  input: UpdateGradingDraftInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentsByCourse\n// ====================================================\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Quiz_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Quiz {\n  __typename: \"Quiz\" | \"SpecialAssignment\" | \"TextAnalysis\";\n  _id: string | null;\n  markingPeriod: MarkingPeriodEnum;\n  readings: findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Quiz_readings;\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Essay_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submitted: boolean;\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  markingPeriod: MarkingPeriodEnum;\n  readings: findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Essay_readings;\n  finalDraft: findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Essay_finalDraft | null;\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_ReadingGuide_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_ReadingGuide_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  submitted: boolean;\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse_students_hasAssignments_ReadingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  markingPeriod: MarkingPeriodEnum;\n  readings: findStudentsByCourse_findStudentsByCourse_students_hasAssignments_ReadingGuide_readings;\n  readingGuideFinal: findStudentsByCourse_findStudentsByCourse_students_hasAssignments_ReadingGuide_readingGuideFinal | null;\n  graded: boolean;\n}\n\nexport type findStudentsByCourse_findStudentsByCourse_students_hasAssignments = findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Quiz | findStudentsByCourse_findStudentsByCourse_students_hasAssignments_Essay | findStudentsByCourse_findStudentsByCourse_students_hasAssignments_ReadingGuide;\n\nexport interface findStudentsByCourse_findStudentsByCourse_students {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  hasAssignments: findStudentsByCourse_findStudentsByCourse_students_hasAssignments[];\n}\n\nexport interface findStudentsByCourse_findStudentsByCourse {\n  __typename: \"FindStudentsByCoursePayload\";\n  students: findStudentsByCourse_findStudentsByCourse_students[];\n}\n\nexport interface findStudentsByCourse {\n  findStudentsByCourse: findStudentsByCourse_findStudentsByCourse;\n}\n\nexport interface findStudentsByCourseVariables {\n  input: FindStudentsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAssignmentById\n// ====================================================\n\nexport interface findAssignmentById_findAssignmentById_assignment_Quiz_hasOwner {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Quiz_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Quiz {\n  __typename: \"Quiz\" | \"SpecialAssignment\" | \"TextAnalysis\";\n  _id: string | null;\n  hasOwner: findAssignmentById_findAssignmentById_assignment_Quiz_hasOwner;\n  late: boolean;\n  readings: findAssignmentById_findAssignmentById_assignment_Quiz_readings;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay_hasOwner {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay_workingDraft {\n  __typename: \"WorkingDraft\";\n  draft: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay_topic {\n  __typename: \"Topic\";\n  writingLevel: WritingLevelEnum;\n  question: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay_finalDraft_submittedFinalDraft_rubricEntries {\n  __typename: \"RubricEntry\";\n  _id: string | null;\n  entry: string;\n  score: number;\n  rubricSection: RubricSectionEnum;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  draft: any;\n  gradingDraft: any;\n  draftNumber: number;\n  graded: boolean;\n  score: number;\n  additionalComments: string[] | null;\n  rubricEntries: findAssignmentById_findAssignmentById_assignment_Essay_finalDraft_submittedFinalDraft_rubricEntries[];\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submitTime: any | null;\n  submitted: boolean;\n  returned: boolean;\n  submittedFinalDraft: findAssignmentById_findAssignmentById_assignment_Essay_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_Essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  hasOwner: findAssignmentById_findAssignmentById_assignment_Essay_hasOwner;\n  late: boolean;\n  readings: findAssignmentById_findAssignmentById_assignment_Essay_readings;\n  workingDraft: findAssignmentById_findAssignmentById_assignment_Essay_workingDraft;\n  topic: findAssignmentById_findAssignmentById_assignment_Essay_topic;\n  finalDraft: findAssignmentById_findAssignmentById_assignment_Essay_finalDraft | null;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_ReadingGuide_hasOwner {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_ReadingGuide_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_ReadingGuide_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  submitted: boolean;\n}\n\nexport interface findAssignmentById_findAssignmentById_assignment_ReadingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  hasOwner: findAssignmentById_findAssignmentById_assignment_ReadingGuide_hasOwner;\n  late: boolean;\n  readings: findAssignmentById_findAssignmentById_assignment_ReadingGuide_readings;\n  paperBased: boolean;\n  graded: boolean;\n  completed: boolean;\n  readingGuideFinal: findAssignmentById_findAssignmentById_assignment_ReadingGuide_readingGuideFinal | null;\n}\n\nexport type findAssignmentById_findAssignmentById_assignment = findAssignmentById_findAssignmentById_assignment_Quiz | findAssignmentById_findAssignmentById_assignment_Essay | findAssignmentById_findAssignmentById_assignment_ReadingGuide;\n\nexport interface findAssignmentById_findAssignmentById {\n  __typename: \"FindAssignmentByIdPayload\";\n  assignment: findAssignmentById_findAssignmentById_assignment;\n}\n\nexport interface findAssignmentById {\n  findAssignmentById: findAssignmentById_findAssignmentById;\n}\n\nexport interface findAssignmentByIdVariables {\n  input: FindAssignmentByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findReadingGuideDataForCourseAndLesson\n// ====================================================\n\nexport interface findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  submitted: boolean;\n}\n\nexport interface findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides {\n  __typename: \"ReadingGuide\";\n  assigned: boolean;\n  hasOwner: findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_hasOwner;\n  readings: findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_readings;\n  completed: boolean;\n  graded: boolean;\n  readingGuideFinal: findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides_readingGuideFinal | null;\n}\n\nexport interface findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId {\n  __typename: \"FindReadingGuidesByAssociatedLessonAndCourseIdPayload\";\n  readingGuides: findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId_readingGuides[];\n}\n\nexport interface findReadingGuideDataForCourseAndLesson {\n  findReadingGuidesByAssociatedLessonAndCourseId: findReadingGuideDataForCourseAndLesson_findReadingGuidesByAssociatedLessonAndCourseId;\n}\n\nexport interface findReadingGuideDataForCourseAndLessonVariables {\n  input: FindReadingGuidesByAssociatedLessonAndCourseIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAllBehaviorTypes\n// ====================================================\n\nexport interface findAllBehaviorTypes_findAllBehaviorTypes_behaviorTypes {\n  __typename: \"BehaviorType\";\n  _id: string | null;\n  behaviorName: string;\n  behaviorQuality: BehaviorQualityEnum;\n  behaviorCategory: BehaviorCategoryEnum;\n  points: number;\n  forTeachersAid: boolean;\n}\n\nexport interface findAllBehaviorTypes_findAllBehaviorTypes {\n  __typename: \"FindAllBehaviorTypesPayload\";\n  behaviorTypes: findAllBehaviorTypes_findAllBehaviorTypes_behaviorTypes[];\n}\n\nexport interface findAllBehaviorTypes {\n  findAllBehaviorTypes: findAllBehaviorTypes_findAllBehaviorTypes;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createBehaviorType\n// ====================================================\n\nexport interface createBehaviorType_createBehaviorType_behaviorType {\n  __typename: \"BehaviorType\";\n  behaviorName: string;\n  behaviorQuality: BehaviorQualityEnum;\n  behaviorCategory: BehaviorCategoryEnum;\n  points: number;\n}\n\nexport interface createBehaviorType_createBehaviorType {\n  __typename: \"CreateBehaviorTypePayload\";\n  behaviorType: createBehaviorType_createBehaviorType_behaviorType;\n}\n\nexport interface createBehaviorType {\n  createBehaviorType: createBehaviorType_createBehaviorType;\n}\n\nexport interface createBehaviorTypeVariables {\n  input: CreateBehaviorTypeInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: editBehaviorType\n// ====================================================\n\nexport interface editBehaviorType_editBehaviorTypes {\n  __typename: \"EditBehaviorTypesPayload\";\n  updated: boolean;\n}\n\nexport interface editBehaviorType {\n  editBehaviorTypes: editBehaviorType_editBehaviorTypes;\n}\n\nexport interface editBehaviorTypeVariables {\n  input: EditBehaviorTypesInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: deleteBehaviorType\n// ====================================================\n\nexport interface deleteBehaviorType_deleteBehaviorType {\n  __typename: \"DeleteBehaviorTypePayload\";\n  deleted: boolean;\n}\n\nexport interface deleteBehaviorType {\n  deleteBehaviorType: deleteBehaviorType_deleteBehaviorType;\n}\n\nexport interface deleteBehaviorTypeVariables {\n  input: DeleteBehaviorTypeInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAssignmentsByCourseId\n// ====================================================\n\nexport interface findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n  readingPages: string;\n}\n\nexport interface findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments {\n  __typename: \"Essay\" | \"Quiz\" | \"ReadingGuide\" | \"SpecialAssignment\" | \"TextAnalysis\";\n  _id: string | null;\n  score: findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments_score;\n  readings: findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments_readings;\n  missing: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  late: boolean;\n  gradeType: GradeTypeEnum;\n  exempt: boolean;\n  dueTime: string;\n  assigned: boolean;\n}\n\nexport interface findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner {\n  __typename: \"Student\";\n  lastName: string;\n  firstName: string;\n  schoolId: string | null;\n  hasAssignments: findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments[];\n}\n\nexport interface findAssignmentsByCourseId_findAssignmentsByCourseId_assignments {\n  __typename: \"Essay\" | \"Quiz\" | \"ReadingGuide\" | \"SpecialAssignment\" | \"TextAnalysis\";\n  hasOwner: findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner;\n}\n\nexport interface findAssignmentsByCourseId_findAssignmentsByCourseId {\n  __typename: \"FindAssignmentsByCourseIdPayload\";\n  assignments: findAssignmentsByCourseId_findAssignmentsByCourseId_assignments[];\n}\n\nexport interface findAssignmentsByCourseId {\n  findAssignmentsByCourseId: findAssignmentsByCourseId_findAssignmentsByCourseId;\n}\n\nexport interface findAssignmentsByCourseIdVariables {\n  input: FindAssignmentsByCourseIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysByAssociatedLessonId\n// ====================================================\n\nexport interface findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  schoolId: string | null;\n}\n\nexport interface findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n}\n\nexport interface findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  returned: boolean;\n  submitted: boolean;\n}\n\nexport interface findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  readings: findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_readings;\n  hasOwner: findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_hasOwner;\n  score: findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_score;\n  finalDraft: findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays_finalDraft | null;\n  exempt: boolean;\n}\n\nexport interface findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId {\n  __typename: \"FindEssaysByAssociatedLessonIdPayload\";\n  essays: findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays[];\n}\n\nexport interface findEssaysByAssociatedLessonId {\n  findEssaysByAssociatedLessonId: findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId;\n}\n\nexport interface findEssaysByAssociatedLessonIdVariables {\n  input: FindEssaysByAssociatedLessonIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysByCourseIdAndTitle\n// ====================================================\n\nexport interface findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  schoolId: string | null;\n}\n\nexport interface findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n}\n\nexport interface findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  returned: boolean;\n  submitted: boolean;\n}\n\nexport interface findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  readings: findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_readings;\n  hasOwner: findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_hasOwner;\n  score: findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_score;\n  finalDraft: findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays_finalDraft | null;\n  exempt: boolean;\n}\n\nexport interface findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle {\n  __typename: \"FindEssaysByCourseIdAndTitlePayload\";\n  essays: findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle_essays[];\n}\n\nexport interface findEssaysByCourseIdAndTitle {\n  findEssaysByCourseIdAndTitle: findEssaysByCourseIdAndTitle_findEssaysByCourseIdAndTitle;\n}\n\nexport interface findEssaysByCourseIdAndTitleVariables {\n  input: FindEssaysByCourseIdAndTitleInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findResponsibilityPointsByCourse\n// ====================================================\n\nexport interface findResponsibilityPointsByCourse_findResponsibilityPointsByCourse_responsibilityPointList_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  schoolId: string | null;\n}\n\nexport interface findResponsibilityPointsByCourse_findResponsibilityPointsByCourse_responsibilityPointList {\n  __typename: \"ResponsibilityPoints\";\n  student: findResponsibilityPointsByCourse_findResponsibilityPointsByCourse_responsibilityPointList_student;\n  responsibilityPoints: number;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findResponsibilityPointsByCourse_findResponsibilityPointsByCourse {\n  __typename: \"FindResponsibilityPointsByCoursePayload\";\n  responsibilityPointList: findResponsibilityPointsByCourse_findResponsibilityPointsByCourse_responsibilityPointList[];\n}\n\nexport interface findResponsibilityPointsByCourse {\n  findResponsibilityPointsByCourse: findResponsibilityPointsByCourse_findResponsibilityPointsByCourse;\n}\n\nexport interface findResponsibilityPointsByCourseVariables {\n  input: FindResponsibilityPointsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAssignmentByStudentIdForSecondary\n// ====================================================\n\nexport interface findAssignmentByStudentIdForSecondary_findAssignmentByStudentId_assignments_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAssignmentByStudentIdForSecondary_findAssignmentByStudentId_assignments {\n  __typename: \"Essay\" | \"Quiz\" | \"ReadingGuide\" | \"SpecialAssignment\" | \"TextAnalysis\";\n  _id: string | null;\n  assigned: boolean;\n  missing: boolean;\n  score: findAssignmentByStudentIdForSecondary_findAssignmentByStudentId_assignments_score;\n  gradeType: GradeTypeEnum;\n  dueDate: string;\n  dueTime: string;\n  exempt: boolean;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findAssignmentByStudentIdForSecondary_findAssignmentByStudentId {\n  __typename: \"FindAssignmentByStudentIdPayload\";\n  assignments: findAssignmentByStudentIdForSecondary_findAssignmentByStudentId_assignments[];\n}\n\nexport interface findAssignmentByStudentIdForSecondary {\n  findAssignmentByStudentId: findAssignmentByStudentIdForSecondary_findAssignmentByStudentId;\n}\n\nexport interface findAssignmentByStudentIdForSecondaryVariables {\n  input: FindAssignmentByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentsByCourseForSecondaryGradeFinder\n// ====================================================\n\nexport interface findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse_students {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  schoolId: string | null;\n}\n\nexport interface findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse {\n  __typename: \"FindStudentsByCoursePayload\";\n  students: findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse_students[];\n}\n\nexport interface findStudentsByCourseForSecondaryGradeFinder {\n  findStudentsByCourse: findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse;\n}\n\nexport interface findStudentsByCourseForSecondaryGradeFinderVariables {\n  input: FindStudentsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCourseInfoByCourseIdForCourseInfo\n// ====================================================\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Quiz {\n  __typename: \"Quiz\" | \"SpecialAssignment\" | \"TextAnalysis\";\n  dueDate: string;\n  missing: boolean;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  graded: boolean;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submitted: boolean;\n  submittedFinalDraft: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay {\n  __typename: \"Essay\";\n  dueDate: string;\n  missing: boolean;\n  _id: string | null;\n  finalDraft: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay_finalDraft | null;\n  hasOwner: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay_hasOwner;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_ReadingGuide_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_ReadingGuide {\n  __typename: \"ReadingGuide\";\n  dueDate: string;\n  missing: boolean;\n  completed: boolean;\n  hasOwner: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_ReadingGuide_hasOwner;\n}\n\nexport type findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments = findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Quiz | findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay | findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_ReadingGuide;\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Quiz {\n  __typename: \"Quiz\" | \"SpecialAssignment\" | \"TextAnalysis\";\n  missing: boolean;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  graded: boolean;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submitted: boolean;\n  submittedFinalDraft: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay {\n  __typename: \"Essay\";\n  missing: boolean;\n  _id: string | null;\n  finalDraft: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay_finalDraft | null;\n  hasOwner: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay_hasOwner;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_ReadingGuide_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_ReadingGuide {\n  __typename: \"ReadingGuide\";\n  missing: boolean;\n  completed: boolean;\n  hasOwner: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_ReadingGuide_hasOwner;\n}\n\nexport type findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments = findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Quiz | findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_Essay | findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments_ReadingGuide;\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysBehaviors_behavior {\n  __typename: \"BehaviorType\";\n  behaviorCategory: BehaviorCategoryEnum;\n  behaviorName: string;\n  behaviorQuality: BehaviorQualityEnum;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysBehaviors_student {\n  __typename: \"Student\";\n  _id: string | null;\n  lastName: string;\n  firstName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysBehaviors {\n  __typename: \"StudentBehavior\";\n  behavior: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysBehaviors_behavior;\n  responsibilityPoints: number;\n  student: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysBehaviors_student;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasBehaviors_behavior {\n  __typename: \"BehaviorType\";\n  behaviorCategory: BehaviorCategoryEnum;\n  behaviorName: string;\n  behaviorQuality: BehaviorQualityEnum;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasBehaviors_student {\n  __typename: \"Student\";\n  _id: string | null;\n  lastName: string;\n  firstName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasBehaviors {\n  __typename: \"StudentBehavior\";\n  behavior: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasBehaviors_behavior;\n  responsibilityPoints: number;\n  student: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasBehaviors_student;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysProtocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n  lastName: string;\n  firstName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysProtocols {\n  __typename: \"Protocol\";\n  completed: boolean;\n  student: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysProtocols_student;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n  lastName: string;\n  firstName: string;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols {\n  __typename: \"Protocol\";\n  completed: boolean;\n  student: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols_student;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents {\n  __typename: \"Student\";\n  _id: string | null;\n  hasAbsences: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAbsences[];\n  hasAssignments: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments[];\n  hasTodaysAssignments: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysAssignments[];\n  hasTodaysBehaviors: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysBehaviors[];\n  hasBehaviors: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasBehaviors[];\n  hasTodaysProtocols: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasTodaysProtocols[];\n  hasProtocols: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols[];\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course {\n  __typename: \"Course\";\n  name: string;\n  hasStudents: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents[];\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo {\n  __typename: \"CourseInfo\";\n  course: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId {\n  __typename: \"FindCourseInfoByCourseIdPayload\";\n  courseInfo: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfo {\n  findCourseInfoByCourseId: findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId;\n}\n\nexport interface findCourseInfoByCourseIdForCourseInfoVariables {\n  input: FindCourseInfoByCourseIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: toggleAssignmentsAllowedInClass\n// ====================================================\n\nexport interface toggleAssignmentsAllowedInClass_toggleAssignmentsAllowedInClass {\n  __typename: \"ToggleAssignmentsAllowedInClassPayload\";\n  toggled: boolean;\n}\n\nexport interface toggleAssignmentsAllowedInClass {\n  toggleAssignmentsAllowedInClass: toggleAssignmentsAllowedInClass_toggleAssignmentsAllowedInClass;\n}\n\nexport interface toggleAssignmentsAllowedInClassVariables {\n  input: ToggleAssignmentsAllowedInClassInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: toggleReadingGuideCheck\n// ====================================================\n\nexport interface toggleReadingGuideCheck_toggleReadingGuideCheck {\n  __typename: \"ToggleReadingGuideCheckPayload\";\n  toggled: boolean;\n}\n\nexport interface toggleReadingGuideCheck {\n  toggleReadingGuideCheck: toggleReadingGuideCheck_toggleReadingGuideCheck;\n}\n\nexport interface toggleReadingGuideCheckVariables {\n  input: ToggleReadingGuideCheckInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createCourseInfo\n// ====================================================\n\nexport interface createCourseInfo_createCourseInfo_courseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n}\n\nexport interface createCourseInfo_createCourseInfo {\n  __typename: \"CreateCourseInfoPayload\";\n  courseInfo: createCourseInfo_createCourseInfo_courseInfo;\n}\n\nexport interface createCourseInfo {\n  createCourseInfo: createCourseInfo_createCourseInfo;\n}\n\nexport interface createCourseInfoVariables {\n  input: CreateCourseInfoInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: addCourseToTeacher\n// ====================================================\n\nexport interface addCourseToTeacher_addCourseToTeacher_teacher {\n  __typename: \"Teacher\";\n  _id: string | null;\n}\n\nexport interface addCourseToTeacher_addCourseToTeacher {\n  __typename: \"AddCourseToTeacherPayload\";\n  teacher: addCourseToTeacher_addCourseToTeacher_teacher;\n}\n\nexport interface addCourseToTeacher {\n  addCourseToTeacher: addCourseToTeacher_addCourseToTeacher;\n}\n\nexport interface addCourseToTeacherVariables {\n  input: AddCourseToTeacherInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeCourse\n// ====================================================\n\nexport interface removeCourse_removeCourse {\n  __typename: \"RemoveCoursePayload\";\n  removed: boolean;\n}\n\nexport interface removeCourse {\n  removeCourse: removeCourse_removeCourse;\n}\n\nexport interface removeCourseVariables {\n  input: RemoveCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createCourse\n// ====================================================\n\nexport interface createCourse_createCourse_course {\n  __typename: \"Course\";\n  _id: string | null;\n}\n\nexport interface createCourse_createCourse {\n  __typename: \"CreateCoursePayload\";\n  course: createCourse_createCourse_course;\n}\n\nexport interface createCourse {\n  createCourse: createCourse_createCourse;\n}\n\nexport interface createCourseVariables {\n  input: CreateCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAllCourseTitles\n// ====================================================\n\nexport interface findAllCourseTitles_findAllCourseTitles_courses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n}\n\nexport interface findAllCourseTitles_findAllCourseTitles {\n  __typename: \"FindAllCourseTitlesPayload\";\n  courses: findAllCourseTitles_findAllCourseTitles_courses[];\n}\n\nexport interface findAllCourseTitles {\n  findAllCourseTitles: findAllCourseTitles_findAllCourseTitles;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateCourseInfo\n// ====================================================\n\nexport interface updateCourseInfo_updateCourseInfo_courseInfo_course_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n}\n\nexport interface updateCourseInfo_updateCourseInfo_courseInfo_course {\n  __typename: \"Course\";\n  _id: string | null;\n  hasCourseInfo: updateCourseInfo_updateCourseInfo_courseInfo_course_hasCourseInfo;\n}\n\nexport interface updateCourseInfo_updateCourseInfo_courseInfo {\n  __typename: \"CourseInfo\";\n  course: updateCourseInfo_updateCourseInfo_courseInfo_course;\n}\n\nexport interface updateCourseInfo_updateCourseInfo {\n  __typename: \"UpdateCourseInfoPayload\";\n  courseInfo: updateCourseInfo_updateCourseInfo_courseInfo;\n}\n\nexport interface updateCourseInfo {\n  updateCourseInfo: updateCourseInfo_updateCourseInfo;\n}\n\nexport interface updateCourseInfoVariables {\n  input: UpdateCourseInfoInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCourseByIdForCourseEditor\n// ====================================================\n\nexport interface findCourseByIdForCourseEditor_findCourseById_course_hasCourseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findCourseByIdForCourseEditor_findCourseById_course_hasCourseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  student: findCourseByIdForCourseEditor_findCourseById_course_hasCourseInfo_assignedSeats_student | null;\n}\n\nexport interface findCourseByIdForCourseEditor_findCourseById_course_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  courseType: CourseTypeEnum;\n  endsAt: string;\n  halfDayEndsAt: string;\n  halfDayStartsAt: string;\n  schoolDayType: SchoolDayType;\n  startsAt: string;\n  assignedSeats: findCourseByIdForCourseEditor_findCourseById_course_hasCourseInfo_assignedSeats[];\n  cohortBasedSeating: boolean;\n}\n\nexport interface findCourseByIdForCourseEditor_findCourseById_course {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n  hasCourseInfo: findCourseByIdForCourseEditor_findCourseById_course_hasCourseInfo;\n}\n\nexport interface findCourseByIdForCourseEditor_findCourseById {\n  __typename: \"FindCourseByIdPayload\";\n  course: findCourseByIdForCourseEditor_findCourseById_course;\n}\n\nexport interface findCourseByIdForCourseEditor {\n  findCourseById: findCourseByIdForCourseEditor_findCourseById;\n}\n\nexport interface findCourseByIdForCourseEditorVariables {\n  input: FindCourseByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: addStudentsToCourse\n// ====================================================\n\nexport interface addStudentsToCourse_addStudentsToCourse_students {\n  __typename: \"Student\";\n  _id: string | null;\n  userName: string;\n}\n\nexport interface addStudentsToCourse_addStudentsToCourse {\n  __typename: \"AddStudentsToCoursePayload\";\n  students: addStudentsToCourse_addStudentsToCourse_students[];\n}\n\nexport interface addStudentsToCourse {\n  addStudentsToCourse: addStudentsToCourse_addStudentsToCourse;\n}\n\nexport interface addStudentsToCourseVariables {\n  input: AddStudentsToCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAllStudents\n// ====================================================\n\nexport interface findAllStudents_findAllStudents_students_inCourses_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  courseType: CourseTypeEnum;\n}\n\nexport interface findAllStudents_findAllStudents_students_inCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  hasCourseInfo: findAllStudents_findAllStudents_students_inCourses_hasCourseInfo;\n}\n\nexport interface findAllStudents_findAllStudents_students {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  inCourses: findAllStudents_findAllStudents_students_inCourses[];\n}\n\nexport interface findAllStudents_findAllStudents {\n  __typename: \"FindAllStudentsPayload\";\n  students: findAllStudents_findAllStudents_students[];\n}\n\nexport interface findAllStudents {\n  findAllStudents: findAllStudents_findAllStudents;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: initializeStudent\n// ====================================================\n\nexport interface initializeStudent_initializeStudents_students {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface initializeStudent_initializeStudents {\n  __typename: \"InitializeStudentsPayload\";\n  students: initializeStudent_initializeStudents_students[];\n}\n\nexport interface initializeStudent {\n  initializeStudents: initializeStudent_initializeStudents;\n}\n\nexport interface initializeStudentVariables {\n  input: InitializeStudentsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCourseByIdForStudentRegistration\n// ====================================================\n\nexport interface findCourseByIdForStudentRegistration_findCourseById_course_hasStudents {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  virtual: boolean;\n  cohort: StudentCohortEnum;\n}\n\nexport interface findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats_redCohortStudent {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats_whiteCohortStudent {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  deskNumber: number;\n  student: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats_student | null;\n  redCohortStudent: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats_redCohortStudent | null;\n  whiteCohortStudent: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats_whiteCohortStudent | null;\n}\n\nexport interface findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n  courseType: CourseTypeEnum;\n  cohortBasedSeating: boolean;\n  assignedSeats: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats[];\n}\n\nexport interface findCourseByIdForStudentRegistration_findCourseById_course {\n  __typename: \"Course\";\n  _id: string | null;\n  hasStudents: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents[];\n  hasCourseInfo: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo;\n}\n\nexport interface findCourseByIdForStudentRegistration_findCourseById {\n  __typename: \"FindCourseByIdPayload\";\n  course: findCourseByIdForStudentRegistration_findCourseById_course;\n}\n\nexport interface findCourseByIdForStudentRegistration {\n  findCourseById: findCourseByIdForStudentRegistration_findCourseById;\n}\n\nexport interface findCourseByIdForStudentRegistrationVariables {\n  input: FindCourseByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: registerStudent\n// ====================================================\n\nexport interface registerStudent_registerStudent_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  userName: string;\n  email: string | null;\n}\n\nexport interface registerStudent_registerStudent {\n  __typename: \"RegisterStudentPayload\";\n  student: registerStudent_registerStudent_student;\n}\n\nexport interface registerStudent {\n  registerStudent: registerStudent_registerStudent;\n}\n\nexport interface registerStudentVariables {\n  input: RegisterStudentInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAllUsers\n// ====================================================\n\nexport interface findAllUsers_findAllUsers_users_StudentForTeachersAid {\n  __typename: \"StudentForTeachersAid\";\n}\n\nexport interface findAllUsers_findAllUsers_users_Student {\n  __typename: \"Student\";\n  userName: string;\n}\n\nexport interface findAllUsers_findAllUsers_users_Teacher {\n  __typename: \"Teacher\";\n  userName: string;\n}\n\nexport type findAllUsers_findAllUsers_users = findAllUsers_findAllUsers_users_StudentForTeachersAid | findAllUsers_findAllUsers_users_Student | findAllUsers_findAllUsers_users_Teacher;\n\nexport interface findAllUsers_findAllUsers {\n  __typename: \"FindAllUsersPayload\";\n  users: findAllUsers_findAllUsers_users[];\n}\n\nexport interface findAllUsers {\n  findAllUsers: findAllUsers_findAllUsers;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assignCohortBasedSeats\n// ====================================================\n\nexport interface assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n}\n\nexport interface assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats_redCohortStudent {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n}\n\nexport interface assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats_whiteCohortStudent {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n}\n\nexport interface assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  deskNumber: number;\n  student: assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats_student | null;\n  redCohortStudent: assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats_redCohortStudent | null;\n  whiteCohortStudent: assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats_whiteCohortStudent | null;\n}\n\nexport interface assignCohortBasedSeats_assignSeats_courseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n  assignedSeats: assignCohortBasedSeats_assignSeats_courseInfo_assignedSeats[];\n}\n\nexport interface assignCohortBasedSeats_assignSeats {\n  __typename: \"AssignSeatsPayload\";\n  courseInfo: assignCohortBasedSeats_assignSeats_courseInfo;\n}\n\nexport interface assignCohortBasedSeats {\n  assignSeats: assignCohortBasedSeats_assignSeats;\n}\n\nexport interface assignCohortBasedSeatsVariables {\n  input: AssignSeatsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeCohortBasedSeat\n// ====================================================\n\nexport interface removeCohortBasedSeat_removeAssignedSeat_courseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n}\n\nexport interface removeCohortBasedSeat_removeAssignedSeat {\n  __typename: \"RemoveAssignedSeatPayload\";\n  courseInfo: removeCohortBasedSeat_removeAssignedSeat_courseInfo;\n}\n\nexport interface removeCohortBasedSeat {\n  removeAssignedSeat: removeCohortBasedSeat_removeAssignedSeat;\n}\n\nexport interface removeCohortBasedSeatVariables {\n  input: RemoveAssignedSeatInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assignRegularSeats\n// ====================================================\n\nexport interface assignRegularSeats_assignSeats_courseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n}\n\nexport interface assignRegularSeats_assignSeats_courseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  deskNumber: number;\n  student: assignRegularSeats_assignSeats_courseInfo_assignedSeats_student | null;\n}\n\nexport interface assignRegularSeats_assignSeats_courseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n  assignedSeats: assignRegularSeats_assignSeats_courseInfo_assignedSeats[];\n}\n\nexport interface assignRegularSeats_assignSeats {\n  __typename: \"AssignSeatsPayload\";\n  courseInfo: assignRegularSeats_assignSeats_courseInfo;\n}\n\nexport interface assignRegularSeats {\n  assignSeats: assignRegularSeats_assignSeats;\n}\n\nexport interface assignRegularSeatsVariables {\n  input: AssignSeatsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findRosterByCourse\n// ====================================================\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasProtocols {\n  __typename: \"Protocol\";\n  completed: boolean;\n  assessment: ProtocolAssessmentEnum | null;\n  discussionLevel: DiscussionTypesEnum | null;\n}\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasUnExcusedLatenesses {\n  __typename: \"UnexcusedLateness\";\n  markingPeriod: MarkingPeriodEnum;\n  dayLate: string;\n}\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasExcusedLatenesses {\n  __typename: \"ExcusedLateness\";\n  markingPeriod: MarkingPeriodEnum;\n  dayLate: string;\n}\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasAbsences {\n  __typename: \"StudentAbsence\";\n  markingPeriod: MarkingPeriodEnum;\n  dayAbsent: any;\n}\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasAssignments {\n  __typename: \"Essay\" | \"Quiz\" | \"ReadingGuide\" | \"SpecialAssignment\" | \"TextAnalysis\";\n}\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  _id: string | null;\n  userName: string;\n  lastName: string;\n  firstName: string;\n  hasProtocols: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasProtocols[];\n  hasUnExcusedLatenesses: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasUnExcusedLatenesses[];\n  hasExcusedLatenesses: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasExcusedLatenesses[];\n  hasAbsences: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasAbsences[];\n  hasAssignments: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student_hasAssignments[];\n}\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  deskNumber: number;\n  student: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats_student | null;\n}\n\nexport interface findRosterByCourse_findCourseById_course_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  assignedSeats: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats[];\n}\n\nexport interface findRosterByCourse_findCourseById_course {\n  __typename: \"Course\";\n  hasCourseInfo: findRosterByCourse_findCourseById_course_hasCourseInfo;\n}\n\nexport interface findRosterByCourse_findCourseById {\n  __typename: \"FindCourseByIdPayload\";\n  course: findRosterByCourse_findCourseById_course;\n}\n\nexport interface findRosterByCourse {\n  findCourseById: findRosterByCourse_findCourseById;\n}\n\nexport interface findRosterByCourseVariables {\n  input: FindCourseByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createTemporaryTasks\n// ====================================================\n\nexport interface createTemporaryTasks_createTemporaryTasks_temporaryTasks_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface createTemporaryTasks_createTemporaryTasks_temporaryTasks {\n  __typename: \"TemporaryTask\";\n  _id: string | null;\n  dateIssued: string;\n  student: createTemporaryTasks_createTemporaryTasks_temporaryTasks_student;\n  studentPresent: boolean;\n  taskNumber: number;\n}\n\nexport interface createTemporaryTasks_createTemporaryTasks {\n  __typename: \"CreateTemporaryTasksPayload\";\n  temporaryTasks: createTemporaryTasks_createTemporaryTasks_temporaryTasks[];\n}\n\nexport interface createTemporaryTasks {\n  createTemporaryTasks: createTemporaryTasks_createTemporaryTasks;\n}\n\nexport interface createTemporaryTasksVariables {\n  input: CreateTemporaryTasksInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: markTemporaryTaskAbsent\n// ====================================================\n\nexport interface markTemporaryTaskAbsent_markTemporaryTaskAbsent_temporaryTask {\n  __typename: \"TemporaryTask\";\n  _id: string | null;\n}\n\nexport interface markTemporaryTaskAbsent_markTemporaryTaskAbsent {\n  __typename: \"MarkTemporaryTaskAbsentPayload\";\n  temporaryTask: markTemporaryTaskAbsent_markTemporaryTaskAbsent_temporaryTask;\n}\n\nexport interface markTemporaryTaskAbsent {\n  markTemporaryTaskAbsent: markTemporaryTaskAbsent_markTemporaryTaskAbsent;\n}\n\nexport interface markTemporaryTaskAbsentVariables {\n  input: MarkTemporaryTaskAbsentInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: gradeTemporaryTask\n// ====================================================\n\nexport interface gradeTemporaryTask_gradeTemporaryTask_temporaryTask_student {\n  __typename: \"Student\";\n  firstName: string;\n}\n\nexport interface gradeTemporaryTask_gradeTemporaryTask_temporaryTask {\n  __typename: \"TemporaryTask\";\n  _id: string | null;\n  student: gradeTemporaryTask_gradeTemporaryTask_temporaryTask_student;\n  answered: boolean;\n}\n\nexport interface gradeTemporaryTask_gradeTemporaryTask {\n  __typename: \"GradeTemporaryTaskPayload\";\n  temporaryTask: gradeTemporaryTask_gradeTemporaryTask_temporaryTask;\n}\n\nexport interface gradeTemporaryTask {\n  gradeTemporaryTask: gradeTemporaryTask_gradeTemporaryTask;\n}\n\nexport interface gradeTemporaryTaskVariables {\n  input: GradeTemporaryTaskInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTemporaryTasksToReview\n// ====================================================\n\nexport interface findTemporaryTasksToReview_findTemporaryTasks_temporaryTasks_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findTemporaryTasksToReview_findTemporaryTasks_temporaryTasks {\n  __typename: \"TemporaryTask\";\n  _id: string | null;\n  dateIssued: string;\n  student: findTemporaryTasksToReview_findTemporaryTasks_temporaryTasks_student;\n  studentPresent: boolean;\n  taskNumber: number;\n  answered: boolean;\n}\n\nexport interface findTemporaryTasksToReview_findTemporaryTasks {\n  __typename: \"FindTemporaryTasksPayload\";\n  temporaryTasks: findTemporaryTasksToReview_findTemporaryTasks_temporaryTasks[];\n}\n\nexport interface findTemporaryTasksToReview {\n  findTemporaryTasks: findTemporaryTasksToReview_findTemporaryTasks;\n}\n\nexport interface findTemporaryTasksToReviewVariables {\n  input: FindTemporaryTasksInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTemporaryTasks\n// ====================================================\n\nexport interface findTemporaryTasks_findTemporaryTasks_temporaryTasks_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findTemporaryTasks_findTemporaryTasks_temporaryTasks {\n  __typename: \"TemporaryTask\";\n  _id: string | null;\n  dateIssued: string;\n  student: findTemporaryTasks_findTemporaryTasks_temporaryTasks_student;\n  studentPresent: boolean;\n  taskNumber: number;\n  answered: boolean;\n  lastGrade: number;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findTemporaryTasks_findTemporaryTasks {\n  __typename: \"FindTemporaryTasksPayload\";\n  temporaryTasks: findTemporaryTasks_findTemporaryTasks_temporaryTasks[];\n}\n\nexport interface findTemporaryTasks {\n  findTemporaryTasks: findTemporaryTasks_findTemporaryTasks;\n}\n\nexport interface findTemporaryTasksVariables {\n  input: FindTemporaryTasksInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findChaptersByTextId\n// ====================================================\n\nexport interface findChaptersByTextId_findChaptersByTextId_chapters {\n  __typename: \"Chapter\";\n  _id: string | null;\n  chapterTitle: string;\n}\n\nexport interface findChaptersByTextId_findChaptersByTextId {\n  __typename: \"FindChaptersByTextIdPayload\";\n  chapters: findChaptersByTextId_findChaptersByTextId_chapters[];\n}\n\nexport interface findChaptersByTextId {\n  findChaptersByTextId: findChaptersByTextId_findChaptersByTextId;\n}\n\nexport interface findChaptersByTextIdVariables {\n  input: FindChaptersByTextIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: CreateEssayQuestion\n// ====================================================\n\nexport interface CreateEssayQuestion_createEssayQuestion_essayQuestion {\n  __typename: \"EssayQuestion\";\n  _id: string | null;\n}\n\nexport interface CreateEssayQuestion_createEssayQuestion {\n  __typename: \"CreateEssayQuestionPayload\";\n  essayQuestion: CreateEssayQuestion_createEssayQuestion_essayQuestion;\n}\n\nexport interface CreateEssayQuestion {\n  createEssayQuestion: CreateEssayQuestion_createEssayQuestion;\n}\n\nexport interface CreateEssayQuestionVariables {\n  input: CreateEssayQuestionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCoursesById\n// ====================================================\n\nexport interface findCoursesById_findCoursesById_courses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n}\n\nexport interface findCoursesById_findCoursesById {\n  __typename: \"FindCoursesByIdPayload\";\n  courses: findCoursesById_findCoursesById_courses[];\n}\n\nexport interface findCoursesById {\n  findCoursesById: findCoursesById_findCoursesById;\n}\n\nexport interface findCoursesByIdVariables {\n  input: FindCoursesByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateLesson\n// ====================================================\n\nexport interface updateLesson_updateLesson_lessons {\n  __typename: \"Lesson\";\n  _id: string | null;\n}\n\nexport interface updateLesson_updateLesson {\n  __typename: \"UpdateLessonPayload\";\n  lessons: updateLesson_updateLesson_lessons[];\n}\n\nexport interface updateLesson {\n  updateLesson: updateLesson_updateLesson;\n}\n\nexport interface updateLessonVariables {\n  input: UpdateLessonInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonByIdForLessonEditor\n// ====================================================\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_inUnit {\n  __typename: \"Unit\";\n  _id: string | null;\n  unitName: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_assignedCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_assignedSections {\n  __typename: \"LessonTextSections\";\n  startingSection: string;\n  endingSection: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_pageNumbers {\n  __typename: \"PageNumbers\";\n  startingPage: number;\n  endingPage: number;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_vocabList {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_beforeActivity {\n  __typename: \"TextSectionProtocols\";\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  task: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_duringActivities {\n  __typename: \"TextSectionProtocols\";\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  task: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_afterActivity {\n  __typename: \"TextSectionProtocols\";\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  task: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson_questionList {\n  __typename: \"TextSectionQuestions\";\n  question: string;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById_lesson {\n  __typename: \"Lesson\";\n  _id: string | null;\n  assignedDate: any;\n  inUnit: findLessonByIdForLessonEditor_findLessonById_lesson_inUnit;\n  assignedMarkingPeriod: MarkingPeriodEnum;\n  assignedCourses: findLessonByIdForLessonEditor_findLessonById_lesson_assignedCourses[];\n  assignedSections: findLessonByIdForLessonEditor_findLessonById_lesson_assignedSections;\n  pageNumbers: findLessonByIdForLessonEditor_findLessonById_lesson_pageNumbers;\n  assignedSectionIdList: string[];\n  vocabList: findLessonByIdForLessonEditor_findLessonById_lesson_vocabList[];\n  beforeActivity: findLessonByIdForLessonEditor_findLessonById_lesson_beforeActivity;\n  duringActivities: findLessonByIdForLessonEditor_findLessonById_lesson_duringActivities[];\n  afterActivity: findLessonByIdForLessonEditor_findLessonById_lesson_afterActivity;\n  questionList: findLessonByIdForLessonEditor_findLessonById_lesson_questionList[];\n  essentialQuestion: string;\n  lessonName: string;\n}\n\nexport interface findLessonByIdForLessonEditor_findLessonById {\n  __typename: \"FindLessonByIdPayload\";\n  lesson: findLessonByIdForLessonEditor_findLessonById_lesson;\n}\n\nexport interface findLessonByIdForLessonEditor {\n  findLessonById: findLessonByIdForLessonEditor_findLessonById;\n}\n\nexport interface findLessonByIdForLessonEditorVariables {\n  input: FindLessonByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonsByAssignedDate\n// ====================================================\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_inUnit {\n  __typename: \"Unit\";\n  _id: string | null;\n  unitName: string;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_assignedCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_assignedSections {\n  __typename: \"LessonTextSections\";\n  startingSection: string;\n  endingSection: string;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_pageNumbers {\n  __typename: \"PageNumbers\";\n  startingPage: number;\n  endingPage: number;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_vocabList {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_beforeActivity {\n  __typename: \"TextSectionProtocols\";\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  task: string;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_duringActivities {\n  __typename: \"TextSectionProtocols\";\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  task: string;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_afterActivity {\n  __typename: \"TextSectionProtocols\";\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  task: string;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_questionList {\n  __typename: \"TextSectionQuestions\";\n  question: string;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate_lessons {\n  __typename: \"Lesson\";\n  _id: string | null;\n  lessonName: string;\n  assignedDate: any;\n  inUnit: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_inUnit;\n  assignedMarkingPeriod: MarkingPeriodEnum;\n  assignedCourses: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_assignedCourses[];\n  assignedSections: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_assignedSections;\n  pageNumbers: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_pageNumbers;\n  assignedSectionIdList: string[];\n  vocabList: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_vocabList[];\n  beforeActivity: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_beforeActivity;\n  duringActivities: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_duringActivities[];\n  afterActivity: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_afterActivity;\n  questionList: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons_questionList[];\n  essentialQuestion: string;\n  lessonType: LessonTypeEnum;\n}\n\nexport interface findLessonsByAssignedDate_findLessonsByAssignedDate {\n  __typename: \"FindLessonsByAssignedDatePayload\";\n  lessons: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons[] | null;\n}\n\nexport interface findLessonsByAssignedDate {\n  findLessonsByAssignedDate: findLessonsByAssignedDate_findLessonsByAssignedDate;\n}\n\nexport interface findLessonsByAssignedDateVariables {\n  input: FindLessonsByAssignedDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssayQuestionsForLesson\n// ====================================================\n\nexport interface findEssayQuestionsForLesson_findEssayQuestionsForLesson_essayQuestions_questionParts {\n  __typename: \"QuestionPartsContainer\";\n  originalQuestion: string;\n}\n\nexport interface findEssayQuestionsForLesson_findEssayQuestionsForLesson_essayQuestions {\n  __typename: \"EssayQuestion\";\n  _id: string | null;\n  questionParts: findEssayQuestionsForLesson_findEssayQuestionsForLesson_essayQuestions_questionParts;\n  sgoQuestion: boolean;\n}\n\nexport interface findEssayQuestionsForLesson_findEssayQuestionsForLesson {\n  __typename: \"FindEssayQuestionsForLessonPayload\";\n  essayQuestions: findEssayQuestionsForLesson_findEssayQuestionsForLesson_essayQuestions[];\n}\n\nexport interface findEssayQuestionsForLesson {\n  findEssayQuestionsForLesson: findEssayQuestionsForLesson_findEssayQuestionsForLesson;\n}\n\nexport interface findEssayQuestionsForLessonVariables {\n  input: FindEssayQuestionsForLessonInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: markLessonForSGO\n// ====================================================\n\nexport interface markLessonForSGO_markLessonForSGO {\n  __typename: \"MarkLessonForSGOPayload\";\n  marked: boolean;\n}\n\nexport interface markLessonForSGO {\n  markLessonForSGO: markLessonForSGO_markLessonForSGO;\n}\n\nexport interface markLessonForSGOVariables {\n  input: MarkLessonForSGOInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: getCoursesForUser\n// ====================================================\n\nexport interface getCoursesForUser_findUserData_user_Student {\n  __typename: \"Student\" | \"StudentForTeachersAid\";\n  _id: string | null;\n}\n\nexport interface getCoursesForUser_findUserData_user_Teacher_teachesCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n}\n\nexport interface getCoursesForUser_findUserData_user_Teacher {\n  __typename: \"Teacher\";\n  _id: string | null;\n  teachesCourses: getCoursesForUser_findUserData_user_Teacher_teachesCourses[];\n}\n\nexport type getCoursesForUser_findUserData_user = getCoursesForUser_findUserData_user_Student | getCoursesForUser_findUserData_user_Teacher;\n\nexport interface getCoursesForUser_findUserData {\n  __typename: \"FindUserDataPayload\";\n  user: getCoursesForUser_findUserData_user;\n}\n\nexport interface getCoursesForUser {\n  findUserData: getCoursesForUser_findUserData;\n}\n\nexport interface getCoursesForUserVariables {\n  input: FindUserDataInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createLesson\n// ====================================================\n\nexport interface createLesson_createLesson_lessons {\n  __typename: \"Lesson\";\n  _id: string | null;\n  assignedMarkingPeriod: MarkingPeriodEnum;\n}\n\nexport interface createLesson_createLesson {\n  __typename: \"CreateLessonPayload\";\n  lessons: createLesson_createLesson_lessons[];\n}\n\nexport interface createLesson {\n  createLesson: createLesson_createLesson;\n}\n\nexport interface createLessonVariables {\n  input: CreateLessonInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createEssentialQuestion\n// ====================================================\n\nexport interface createEssentialQuestion_createEssentialQuestion_essentialQuestion {\n  __typename: \"EssentialQuestion\";\n  _id: string | null;\n}\n\nexport interface createEssentialQuestion_createEssentialQuestion {\n  __typename: \"CreateEssentialQuestionPayload\";\n  essentialQuestion: createEssentialQuestion_createEssentialQuestion_essentialQuestion;\n}\n\nexport interface createEssentialQuestion {\n  createEssentialQuestion: createEssentialQuestion_createEssentialQuestion;\n}\n\nexport interface createEssentialQuestionVariables {\n  input: CreateEssentialQuestionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssentialQuestionsByAssociatedTextSectionIds\n// ====================================================\n\nexport interface findEssentialQuestionsByAssociatedTextSectionIds_findEssentialQuestionsByAssociatedTextSectionIds_essentialQuestions {\n  __typename: \"EssentialQuestion\";\n  _id: string | null;\n  question: string;\n}\n\nexport interface findEssentialQuestionsByAssociatedTextSectionIds_findEssentialQuestionsByAssociatedTextSectionIds {\n  __typename: \"FindEssentialQuestionsByAssociatedTextSectionIdsPayload\";\n  essentialQuestions: findEssentialQuestionsByAssociatedTextSectionIds_findEssentialQuestionsByAssociatedTextSectionIds_essentialQuestions[];\n}\n\nexport interface findEssentialQuestionsByAssociatedTextSectionIds {\n  findEssentialQuestionsByAssociatedTextSectionIds: findEssentialQuestionsByAssociatedTextSectionIds_findEssentialQuestionsByAssociatedTextSectionIds;\n}\n\nexport interface findEssentialQuestionsByAssociatedTextSectionIdsVariables {\n  input: FindEssentialQuestionsByAssociatedTextSectionIdsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTextSectionsById\n// ====================================================\n\nexport interface findTextSectionsById_findTextSectionsById_textSections_hasVocab {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface findTextSectionsById_findTextSectionsById_textSections_hasProtocols {\n  __typename: \"TextSectionProtocols\";\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  task: string;\n}\n\nexport interface findTextSectionsById_findTextSectionsById_textSections_hasQuestions {\n  __typename: \"TextSectionQuestions\";\n  questionType: QuestionTypeEnum;\n  question: string;\n}\n\nexport interface findTextSectionsById_findTextSectionsById_textSections_pageNumbers {\n  __typename: \"PageNumbers\";\n  startingPage: number;\n  endingPage: number;\n}\n\nexport interface findTextSectionsById_findTextSectionsById_textSections {\n  __typename: \"TextSection\";\n  _id: string | null;\n  header: string;\n  hasVocab: findTextSectionsById_findTextSectionsById_textSections_hasVocab[] | null;\n  hasProtocols: findTextSectionsById_findTextSectionsById_textSections_hasProtocols[] | null;\n  hasQuestions: findTextSectionsById_findTextSectionsById_textSections_hasQuestions[] | null;\n  pageNumbers: findTextSectionsById_findTextSectionsById_textSections_pageNumbers;\n}\n\nexport interface findTextSectionsById_findTextSectionsById {\n  __typename: \"FindTextSectionsByIdPayload\";\n  textSections: findTextSectionsById_findTextSectionsById_textSections[];\n}\n\nexport interface findTextSectionsById {\n  findTextSectionsById: findTextSectionsById_findTextSectionsById;\n}\n\nexport interface findTextSectionsByIdVariables {\n  input: FindTextSectionsByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findUnits\n// ====================================================\n\nexport interface findUnits_findUnits_units {\n  __typename: \"Unit\";\n  _id: string | null;\n  unitName: string;\n}\n\nexport interface findUnits_findUnits {\n  __typename: \"FindUnitsPayload\";\n  units: findUnits_findUnits_units[];\n}\n\nexport interface findUnits {\n  findUnits: findUnits_findUnits;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createUnit\n// ====================================================\n\nexport interface createUnit_createUnit_unit {\n  __typename: \"Unit\";\n  _id: string | null;\n}\n\nexport interface createUnit_createUnit {\n  __typename: \"CreateUnitPayload\";\n  unit: createUnit_createUnit_unit;\n}\n\nexport interface createUnit {\n  createUnit: createUnit_createUnit;\n}\n\nexport interface createUnitVariables {\n  input: CreateUnitInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createQuizzesByCourse\n// ====================================================\n\nexport interface createQuizzesByCourse_createQuizzesByCourse_quizzes {\n  __typename: \"Quiz\";\n  _id: string | null;\n}\n\nexport interface createQuizzesByCourse_createQuizzesByCourse {\n  __typename: \"CreateQuizzesByCoursePayload\";\n  quizzes: createQuizzesByCourse_createQuizzesByCourse_quizzes[];\n}\n\nexport interface createQuizzesByCourse {\n  createQuizzesByCourse: createQuizzesByCourse_createQuizzesByCourse;\n}\n\nexport interface createQuizzesByCourseVariables {\n  input: CreateQuizzesByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonsByAssignedDateForQuizzableLessons\n// ====================================================\n\nexport interface findLessonsByAssignedDateForQuizzableLessons_findLessonsByAssignedDate_lessons_assignedCourses {\n  __typename: \"Course\";\n  _id: string | null;\n}\n\nexport interface findLessonsByAssignedDateForQuizzableLessons_findLessonsByAssignedDate_lessons {\n  __typename: \"Lesson\";\n  assignedCourses: findLessonsByAssignedDateForQuizzableLessons_findLessonsByAssignedDate_lessons_assignedCourses[];\n}\n\nexport interface findLessonsByAssignedDateForQuizzableLessons_findLessonsByAssignedDate {\n  __typename: \"FindLessonsByAssignedDatePayload\";\n  lessons: findLessonsByAssignedDateForQuizzableLessons_findLessonsByAssignedDate_lessons[] | null;\n}\n\nexport interface findLessonsByAssignedDateForQuizzableLessons {\n  findLessonsByAssignedDate: findLessonsByAssignedDateForQuizzableLessons_findLessonsByAssignedDate;\n}\n\nexport interface findLessonsByAssignedDateForQuizzableLessonsVariables {\n  input: FindLessonsByAssignedDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: AddNewChapter\n// ====================================================\n\nexport interface AddNewChapter_addNewChapter_chapter {\n  __typename: \"Chapter\";\n  _id: string | null;\n}\n\nexport interface AddNewChapter_addNewChapter {\n  __typename: \"AddNewChapterPayload\";\n  chapter: AddNewChapter_addNewChapter_chapter;\n}\n\nexport interface AddNewChapter {\n  addNewChapter: AddNewChapter_addNewChapter;\n}\n\nexport interface AddNewChapterVariables {\n  input: AddNewChapterInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: addNewText\n// ====================================================\n\nexport interface addNewText_addNewText_text {\n  __typename: \"Text\";\n  _id: string | null;\n}\n\nexport interface addNewText_addNewText {\n  __typename: \"AddNewTextPayload\";\n  text: addNewText_addNewText_text;\n}\n\nexport interface addNewText {\n  addNewText: addNewText_addNewText;\n}\n\nexport interface addNewTextVariables {\n  input: AddNewTextInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findChaptersInText\n// ====================================================\n\nexport interface findChaptersInText_findChaptersInText_chapters {\n  __typename: \"Chapter\";\n  _id: string | null;\n  chapterTitle: string;\n}\n\nexport interface findChaptersInText_findChaptersInText {\n  __typename: \"FindChaptersInTextPayload\";\n  chapters: findChaptersInText_findChaptersInText_chapters[];\n}\n\nexport interface findChaptersInText {\n  findChaptersInText: findChaptersInText_findChaptersInText;\n}\n\nexport interface findChaptersInTextVariables {\n  input: FindChaptersInTextInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createTextSection\n// ====================================================\n\nexport interface createTextSection_createTextSection_textSection {\n  __typename: \"TextSection\";\n  _id: string | null;\n}\n\nexport interface createTextSection_createTextSection {\n  __typename: \"CreateTextSectionPayload\";\n  textSection: createTextSection_createTextSection_textSection;\n}\n\nexport interface createTextSection {\n  createTextSection: createTextSection_createTextSection;\n}\n\nexport interface createTextSectionVariables {\n  input: CreateTextSectionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: questionTypeEnum\n// ====================================================\n\nexport interface questionTypeEnum_QuestionTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface questionTypeEnum_QuestionTypeEnum {\n  __typename: \"__Type\";\n  enumValues: questionTypeEnum_QuestionTypeEnum_enumValues[] | null;\n}\n\nexport interface questionTypeEnum {\n  QuestionTypeEnum: questionTypeEnum_QuestionTypeEnum | null;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTexts\n// ====================================================\n\nexport interface findTexts_findTexts_texts {\n  __typename: \"Text\";\n  _id: string | null;\n  textTitle: string;\n  ownerId: string;\n}\n\nexport interface findTexts_findTexts {\n  __typename: \"FindTextsPayload\";\n  texts: findTexts_findTexts_texts[];\n}\n\nexport interface findTexts {\n  findTexts: findTexts_findTexts;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTextsForTextSectionEditor\n// ====================================================\n\nexport interface findTextsForTextSectionEditor_findTexts_texts {\n  __typename: \"Text\";\n  _id: string | null;\n  textTitle: string;\n  ownerId: string;\n}\n\nexport interface findTextsForTextSectionEditor_findTexts {\n  __typename: \"FindTextsPayload\";\n  texts: findTextsForTextSectionEditor_findTexts_texts[];\n}\n\nexport interface findTextsForTextSectionEditor {\n  findTexts: findTextsForTextSectionEditor_findTexts;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createQuizQuestion\n// ====================================================\n\nexport interface createQuizQuestion_createQuizQuestion_quizQuestion {\n  __typename: \"QuizQuestion\";\n  _id: string | null;\n}\n\nexport interface createQuizQuestion_createQuizQuestion {\n  __typename: \"CreateQuizQuestionPayload\";\n  quizQuestion: createQuizQuestion_createQuizQuestion_quizQuestion;\n}\n\nexport interface createQuizQuestion {\n  createQuizQuestion: createQuizQuestion_createQuizQuestion;\n}\n\nexport interface createQuizQuestionVariables {\n  input: CreateQuizQuestionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findQuizQuestionsByTextSectionId\n// ====================================================\n\nexport interface findQuizQuestionsByTextSectionId_findQuizQuestionsByTextSectionId_quizQuestions_answerList {\n  __typename: \"AnswerList\";\n  correct: boolean;\n  partiallyCorrect: boolean;\n}\n\nexport interface findQuizQuestionsByTextSectionId_findQuizQuestionsByTextSectionId_quizQuestions {\n  __typename: \"QuizQuestion\";\n  _id: string | null;\n  question: string;\n  answerList: findQuizQuestionsByTextSectionId_findQuizQuestionsByTextSectionId_quizQuestions_answerList[];\n  questionType: QuizQuestionTypeEnum;\n  difficultyLevel: QuizQuestionDifficultyLevelEnum;\n}\n\nexport interface findQuizQuestionsByTextSectionId_findQuizQuestionsByTextSectionId {\n  __typename: \"FindQuizQuestionsByTextSectionIdPayload\";\n  quizQuestions: findQuizQuestionsByTextSectionId_findQuizQuestionsByTextSectionId_quizQuestions[];\n}\n\nexport interface findQuizQuestionsByTextSectionId {\n  findQuizQuestionsByTextSectionId: findQuizQuestionsByTextSectionId_findQuizQuestionsByTextSectionId;\n}\n\nexport interface findQuizQuestionsByTextSectionIdVariables {\n  input: FindQuizQuestionsByTextSectionIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: FindTextSectionById\n// ====================================================\n\nexport interface FindTextSectionById_findTextSectionById_textSection_pageNumbers {\n  __typename: \"PageNumbers\";\n  startingPage: number;\n  endingPage: number;\n}\n\nexport interface FindTextSectionById_findTextSectionById_textSection_hasVocab {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface FindTextSectionById_findTextSectionById_textSection_hasQuestions {\n  __typename: \"TextSectionQuestions\";\n  question: string;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface FindTextSectionById_findTextSectionById_textSection_hasProtocols {\n  __typename: \"TextSectionProtocols\";\n  activityType: ProtocolActivityTypes;\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  task: string;\n}\n\nexport interface FindTextSectionById_findTextSectionById_textSection {\n  __typename: \"TextSection\";\n  _id: string | null;\n  header: string;\n  pageNumbers: FindTextSectionById_findTextSectionById_textSection_pageNumbers;\n  orderNumber: number | null;\n  hasVocab: FindTextSectionById_findTextSectionById_textSection_hasVocab[] | null;\n  hasQuestions: FindTextSectionById_findTextSectionById_textSection_hasQuestions[] | null;\n  hasProtocols: FindTextSectionById_findTextSectionById_textSection_hasProtocols[] | null;\n}\n\nexport interface FindTextSectionById_findTextSectionById {\n  __typename: \"FindTextSectionByIdPayload\";\n  textSection: FindTextSectionById_findTextSectionById_textSection;\n}\n\nexport interface FindTextSectionById {\n  findTextSectionById: FindTextSectionById_findTextSectionById;\n}\n\nexport interface FindTextSectionByIdVariables {\n  input: FindTextSectionByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateTextSection\n// ====================================================\n\nexport interface updateTextSection_updateTextSection_textSection {\n  __typename: \"TextSection\";\n  _id: string | null;\n}\n\nexport interface updateTextSection_updateTextSection {\n  __typename: \"UpdateTextSectionPayload\";\n  textSection: updateTextSection_updateTextSection_textSection;\n}\n\nexport interface updateTextSection {\n  updateTextSection: updateTextSection_updateTextSection;\n}\n\nexport interface updateTextSectionVariables {\n  input: UpdateTextSectionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTextSectionsByChapter\n// ====================================================\n\nexport interface findTextSectionsByChapter_findTextSectionsByChapter_textSections {\n  __typename: \"TextSection\";\n  _id: string | null;\n  header: string;\n  orderNumber: number | null;\n}\n\nexport interface findTextSectionsByChapter_findTextSectionsByChapter {\n  __typename: \"FindTextSectionsByChapterPayload\";\n  textSections: findTextSectionsByChapter_findTextSectionsByChapter_textSections[];\n}\n\nexport interface findTextSectionsByChapter {\n  findTextSectionsByChapter: findTextSectionsByChapter_findTextSectionsByChapter;\n}\n\nexport interface findTextSectionsByChapterVariables {\n  input: FindTextSectionsByChapterInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findParentContactsByTeacherId\n// ====================================================\n\nexport interface findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts {\n  __typename: \"ParentContact\";\n  _id: string | null;\n  student: findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts_student;\n  date: string;\n  contactType: ContactTypeEnum;\n  contentOfContact: string;\n}\n\nexport interface findParentContactsByTeacherId_findParentContactsByTeacherId {\n  __typename: \"FindParentContactsByTeacherIdPayload\";\n  parentContacts: findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts[];\n}\n\nexport interface findParentContactsByTeacherId {\n  findParentContactsByTeacherId: findParentContactsByTeacherId_findParentContactsByTeacherId;\n}\n\nexport interface findParentContactsByTeacherIdVariables {\n  input: FindParentContactsByTeacherIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createParentContact\n// ====================================================\n\nexport interface createParentContact_createParentContact_parentContact {\n  __typename: \"ParentContact\";\n  _id: string | null;\n}\n\nexport interface createParentContact_createParentContact {\n  __typename: \"CreateParentContactPayload\";\n  parentContact: createParentContact_createParentContact_parentContact;\n}\n\nexport interface createParentContact {\n  createParentContact: createParentContact_createParentContact;\n}\n\nexport interface createParentContactVariables {\n  input: CreateParentContactInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentsByCourseForParentContacts\n// ====================================================\n\nexport interface findStudentsByCourseForParentContacts_findStudentsByCourse_students {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findStudentsByCourseForParentContacts_findStudentsByCourse {\n  __typename: \"FindStudentsByCoursePayload\";\n  students: findStudentsByCourseForParentContacts_findStudentsByCourse_students[];\n}\n\nexport interface findStudentsByCourseForParentContacts {\n  findStudentsByCourse: findStudentsByCourseForParentContacts_findStudentsByCourse;\n}\n\nexport interface findStudentsByCourseForParentContactsVariables {\n  input: FindStudentsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: buildRubricEntry\n// ====================================================\n\nexport interface buildRubricEntry_buildRubricEntry_rubricEntry {\n  __typename: \"RubricEntry\";\n  entry: string;\n  score: number;\n  rubricSection: RubricSectionEnum;\n  rubricWritingLevels: WritingLevelEnum[];\n}\n\nexport interface buildRubricEntry_buildRubricEntry {\n  __typename: \"BuildRubricEntryPayload\";\n  rubricEntry: buildRubricEntry_buildRubricEntry_rubricEntry;\n}\n\nexport interface buildRubricEntry {\n  buildRubricEntry: buildRubricEntry_buildRubricEntry;\n}\n\nexport interface buildRubricEntryVariables {\n  input: BuildRubricEntryInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeRubricEntry\n// ====================================================\n\nexport interface removeRubricEntry_removeRubricEntry {\n  __typename: \"RemoveRubricEntryPayload\";\n  removed: boolean;\n}\n\nexport interface removeRubricEntry {\n  removeRubricEntry: removeRubricEntry_removeRubricEntry;\n}\n\nexport interface removeRubricEntryVariables {\n  input: RemoveRubricEntryInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateRubricEntry\n// ====================================================\n\nexport interface updateRubricEntry_updateRubricEntry_rubricEntry {\n  __typename: \"RubricEntry\";\n  _id: string | null;\n  entry: string;\n  score: number;\n  rubricSection: RubricSectionEnum;\n  rubricWritingLevels: WritingLevelEnum[];\n}\n\nexport interface updateRubricEntry_updateRubricEntry {\n  __typename: \"UpdateRubricEntryPayload\";\n  rubricEntry: updateRubricEntry_updateRubricEntry_rubricEntry;\n}\n\nexport interface updateRubricEntry {\n  updateRubricEntry: updateRubricEntry_updateRubricEntry;\n}\n\nexport interface updateRubricEntryVariables {\n  input: UpdateRubricEntryInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findRubricEntries\n// ====================================================\n\nexport interface findRubricEntries_findRubricEntries_rubricEntries {\n  __typename: \"RubricEntry\";\n  _id: string | null;\n  entry: string;\n  score: number;\n  rubricSection: RubricSectionEnum;\n  rubricWritingLevels: WritingLevelEnum[];\n  howToImprove: string | null;\n}\n\nexport interface findRubricEntries_findRubricEntries {\n  __typename: \"FindRubricEntriesPayload\";\n  rubricEntries: findRubricEntries_findRubricEntries_rubricEntries[];\n}\n\nexport interface findRubricEntries {\n  findRubricEntries: findRubricEntries_findRubricEntries;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAssignmentByStudentId\n// ====================================================\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment {\n  __typename: \"SpecialAssignment\" | \"TextAnalysis\";\n  _id: string | null;\n  assigned: boolean;\n  readings: findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment_readings;\n  score: findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment_score;\n  exempt: boolean;\n  dueDate: string;\n  dueTime: string;\n  assignedDate: string;\n  gradeType: GradeTypeEnum;\n  hasOwner: findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment_hasOwner;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_finalDraft_submittedFinalDraft_rubricEntries {\n  __typename: \"RubricEntry\";\n  rubricSection: RubricSectionEnum;\n  score: number;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  graded: boolean;\n  rubricEntries: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_finalDraft_submittedFinalDraft_rubricEntries[];\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  returned: boolean;\n  submitted: boolean;\n  submittedFinalDraft: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay {\n  __typename: \"Essay\";\n  _id: string | null;\n  assigned: boolean;\n  readings: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_readings;\n  score: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_score;\n  exempt: boolean;\n  dueDate: string;\n  dueTime: string;\n  assignedDate: string;\n  gradeType: GradeTypeEnum;\n  hasOwner: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_hasOwner;\n  markingPeriod: MarkingPeriodEnum;\n  finalDraft: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay_finalDraft | null;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  submitted: boolean;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  assigned: boolean;\n  readings: findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_readings;\n  score: findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_score;\n  exempt: boolean;\n  dueDate: string;\n  dueTime: string;\n  assignedDate: string;\n  gradeType: GradeTypeEnum;\n  hasOwner: findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_hasOwner;\n  markingPeriod: MarkingPeriodEnum;\n  completed: boolean;\n  graded: boolean;\n  readingGuideFinal: findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide_readingGuideFinal | null;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz {\n  __typename: \"Quiz\";\n  _id: string | null;\n  assigned: boolean;\n  readings: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz_readings;\n  score: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz_score;\n  exempt: boolean;\n  dueDate: string;\n  dueTime: string;\n  assignedDate: string;\n  gradeType: GradeTypeEnum;\n  hasOwner: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz_hasOwner;\n  markingPeriod: MarkingPeriodEnum;\n  finishedQuiz: boolean;\n  isActive: boolean;\n  startedQuiz: boolean;\n}\n\nexport type findAssignmentByStudentId_findAssignmentByStudentId_assignments = findAssignmentByStudentId_findAssignmentByStudentId_assignments_SpecialAssignment | findAssignmentByStudentId_findAssignmentByStudentId_assignments_Essay | findAssignmentByStudentId_findAssignmentByStudentId_assignments_ReadingGuide | findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz;\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_articleReviews_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId_articleReviews {\n  __typename: \"ArticleReview\";\n  _id: string | null;\n  score: findAssignmentByStudentId_findAssignmentByStudentId_articleReviews_score;\n  assignedDate: string;\n  exempt: boolean;\n  submitted: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  dueDate: string;\n  dueTime: string;\n}\n\nexport interface findAssignmentByStudentId_findAssignmentByStudentId {\n  __typename: \"FindAssignmentByStudentIdPayload\";\n  assignments: findAssignmentByStudentId_findAssignmentByStudentId_assignments[];\n  articleReviews: findAssignmentByStudentId_findAssignmentByStudentId_articleReviews[];\n}\n\nexport interface findAssignmentByStudentId {\n  findAssignmentByStudentId: findAssignmentByStudentId_findAssignmentByStudentId;\n}\n\nexport interface findAssignmentByStudentIdVariables {\n  input: FindAssignmentByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentAbsencesAndLatenesses\n// ====================================================\n\nexport interface findStudentAbsencesAndLatenesses_findStudentById_student_hasLatnesses {\n  __typename: \"StudentLateness\";\n  dayLate: string;\n  latenessType: LatenessTypeEnum;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findStudentAbsencesAndLatenesses_findStudentById_student_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findStudentAbsencesAndLatenesses_findStudentById_student {\n  __typename: \"Student\";\n  _id: string | null;\n  hasLatnesses: findStudentAbsencesAndLatenesses_findStudentById_student_hasLatnesses[];\n  hasAbsences: findStudentAbsencesAndLatenesses_findStudentById_student_hasAbsences[];\n}\n\nexport interface findStudentAbsencesAndLatenesses_findStudentById {\n  __typename: \"FindStudentByIdPayload\";\n  student: findStudentAbsencesAndLatenesses_findStudentById_student;\n}\n\nexport interface findStudentAbsencesAndLatenesses {\n  findStudentById: findStudentAbsencesAndLatenesses_findStudentById;\n}\n\nexport interface findStudentAbsencesAndLatenessesVariables {\n  input: FindStudentByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentOutOfClassByStudentIdAndMarkingPeriod\n// ====================================================\n\nexport interface findStudentOutOfClassByStudentIdAndMarkingPeriod_findStudentOutOfClassByStudentIdAndMarkingPeriod_studentOutOfClassListForMarkingPeriod_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findStudentOutOfClassByStudentIdAndMarkingPeriod_findStudentOutOfClassByStudentIdAndMarkingPeriod_studentOutOfClassListForMarkingPeriod {\n  __typename: \"StudentOutOfClass\";\n  student: findStudentOutOfClassByStudentIdAndMarkingPeriod_findStudentOutOfClassByStudentIdAndMarkingPeriod_studentOutOfClassListForMarkingPeriod_student;\n  date: string;\n  departTime: string;\n  hasReturned: boolean;\n  outOfClassDestination: OutOfClassDestinationEnum;\n  returnTime: string;\n}\n\nexport interface findStudentOutOfClassByStudentIdAndMarkingPeriod_findStudentOutOfClassByStudentIdAndMarkingPeriod {\n  __typename: \"FindStudentOutOfClassByStudentIdAndMarkingPeriodPayload\";\n  studentOutOfClassListForMarkingPeriod: findStudentOutOfClassByStudentIdAndMarkingPeriod_findStudentOutOfClassByStudentIdAndMarkingPeriod_studentOutOfClassListForMarkingPeriod[];\n}\n\nexport interface findStudentOutOfClassByStudentIdAndMarkingPeriod {\n  findStudentOutOfClassByStudentIdAndMarkingPeriod: findStudentOutOfClassByStudentIdAndMarkingPeriod_findStudentOutOfClassByStudentIdAndMarkingPeriod;\n}\n\nexport interface findStudentOutOfClassByStudentIdAndMarkingPeriodVariables {\n  input: FindStudentOutOfClassByStudentIdAndMarkingPeriodInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findContactsByStudentId\n// ====================================================\n\nexport interface findContactsByStudentId_findContactsByStudentId_parentContacts {\n  __typename: \"ParentContact\";\n  _id: string | null;\n  date: string;\n  contentOfContact: string;\n  contactType: ContactTypeEnum;\n}\n\nexport interface findContactsByStudentId_findContactsByStudentId {\n  __typename: \"FindContactsByStudentIdPayload\";\n  parentContacts: findContactsByStudentId_findContactsByStudentId_parentContacts[];\n}\n\nexport interface findContactsByStudentId {\n  findContactsByStudentId: findContactsByStudentId_findContactsByStudentId;\n}\n\nexport interface findContactsByStudentIdVariables {\n  input: FindContactsByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findResponsibilityPointsByStudentId\n// ====================================================\n\nexport interface findResponsibilityPointsByStudentId_findResponsibilityPointsByStudentId_responsibilityPoints {\n  __typename: \"ResponsibilityPoints\";\n  responsibilityPoints: number;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findResponsibilityPointsByStudentId_findResponsibilityPointsByStudentId {\n  __typename: \"FindResponsibilityPointsByStudentIdPayload\";\n  responsibilityPoints: findResponsibilityPointsByStudentId_findResponsibilityPointsByStudentId_responsibilityPoints[];\n}\n\nexport interface findResponsibilityPointsByStudentId {\n  findResponsibilityPointsByStudentId: findResponsibilityPointsByStudentId_findResponsibilityPointsByStudentId;\n}\n\nexport interface findResponsibilityPointsByStudentIdVariables {\n  input: FindResponsibilityPointsByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: switchToNewCourse\n// ====================================================\n\nexport interface switchToNewCourse_switchToNewCourse_student_inCourses {\n  __typename: \"Course\";\n  name: string;\n  _id: string | null;\n}\n\nexport interface switchToNewCourse_switchToNewCourse_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  userName: string;\n  inCourses: switchToNewCourse_switchToNewCourse_student_inCourses[];\n}\n\nexport interface switchToNewCourse_switchToNewCourse {\n  __typename: \"SwitchToNewCoursePayload\";\n  student: switchToNewCourse_switchToNewCourse_student;\n}\n\nexport interface switchToNewCourse {\n  switchToNewCourse: switchToNewCourse_switchToNewCourse;\n}\n\nexport interface switchToNewCourseVariables {\n  input: SwitchToNewCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentByIdForWritingMetrics\n// ====================================================\n\nexport interface findStudentByIdForWritingMetrics_findStudentById_student_hasProgressTracker_writingProgressTracker {\n  __typename: \"WritingMetric\";\n  levelPoints: number;\n  overallWritingLevel: WritingLevelEnum;\n}\n\nexport interface findStudentByIdForWritingMetrics_findStudentById_student_hasProgressTracker_readingGuideProgressTracker {\n  __typename: \"ReadingGuideMetric\";\n  levelPoints: number;\n  readingGuideLevel: ReadingGuideMetricEnum;\n}\n\nexport interface findStudentByIdForWritingMetrics_findStudentById_student_hasProgressTracker {\n  __typename: \"ProgressTracker\";\n  writingProgressTracker: findStudentByIdForWritingMetrics_findStudentById_student_hasProgressTracker_writingProgressTracker;\n  readingGuideProgressTracker: findStudentByIdForWritingMetrics_findStudentById_student_hasProgressTracker_readingGuideProgressTracker;\n}\n\nexport interface findStudentByIdForWritingMetrics_findStudentById_student {\n  __typename: \"Student\";\n  hasProgressTracker: findStudentByIdForWritingMetrics_findStudentById_student_hasProgressTracker;\n}\n\nexport interface findStudentByIdForWritingMetrics_findStudentById {\n  __typename: \"FindStudentByIdPayload\";\n  student: findStudentByIdForWritingMetrics_findStudentById_student;\n}\n\nexport interface findStudentByIdForWritingMetrics {\n  findStudentById: findStudentByIdForWritingMetrics_findStudentById;\n}\n\nexport interface findStudentByIdForWritingMetricsVariables {\n  input: FindStudentByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: resetPassword\n// ====================================================\n\nexport interface resetPassword_resetPassword_user {\n  __typename: \"Student\" | \"StudentForTeachersAid\" | \"Teacher\";\n  _id: string | null;\n  firstName: string;\n}\n\nexport interface resetPassword_resetPassword {\n  __typename: \"ResetPasswordPayload\";\n  user: resetPassword_resetPassword_user;\n}\n\nexport interface resetPassword {\n  resetPassword: resetPassword_resetPassword;\n}\n\nexport interface resetPasswordVariables {\n  input: ResetPasswordInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysByStudentId\n// ====================================================\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays_topic {\n  __typename: \"Topic\";\n  essayQuestionId: string;\n  question: string;\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays_hasOwner {\n  __typename: \"Student\";\n  lastName: string;\n  firstName: string;\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays_finalDraft_submittedFinalDraft_rubricEntries {\n  __typename: \"RubricEntry\";\n  rubricSection: RubricSectionEnum;\n  score: number;\n  entry: string;\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  score: number;\n  draft: any;\n  rubricEntries: findEssaysByStudentId_findEssaysByStudentId_essays_finalDraft_submittedFinalDraft_rubricEntries[];\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submittedFinalDraft: findEssaysByStudentId_findEssaysByStudentId_essays_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  markingPeriod: MarkingPeriodEnum;\n  score: findEssaysByStudentId_findEssaysByStudentId_essays_score;\n  topic: findEssaysByStudentId_findEssaysByStudentId_essays_topic;\n  readings: findEssaysByStudentId_findEssaysByStudentId_essays_readings;\n  assignedDate: string;\n  hasOwner: findEssaysByStudentId_findEssaysByStudentId_essays_hasOwner;\n  finalDraft: findEssaysByStudentId_findEssaysByStudentId_essays_finalDraft | null;\n}\n\nexport interface findEssaysByStudentId_findEssaysByStudentId {\n  __typename: \"FindEssaysByStudentIdPayload\";\n  essays: findEssaysByStudentId_findEssaysByStudentId_essays[];\n}\n\nexport interface findEssaysByStudentId {\n  findEssaysByStudentId: findEssaysByStudentId_findEssaysByStudentId;\n}\n\nexport interface findEssaysByStudentIdVariables {\n  input: FindEssaysByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssayQuestionByIdForSGO\n// ====================================================\n\nexport interface findEssayQuestionByIdForSGO_findEssayQuestionById_essayQuestion {\n  __typename: \"EssayQuestion\";\n  sgoQuestion: boolean;\n}\n\nexport interface findEssayQuestionByIdForSGO_findEssayQuestionById {\n  __typename: \"FindEssayQuestionByIdPayload\";\n  essayQuestion: findEssayQuestionByIdForSGO_findEssayQuestionById_essayQuestion;\n}\n\nexport interface findEssayQuestionByIdForSGO {\n  findEssayQuestionById: findEssayQuestionByIdForSGO_findEssayQuestionById;\n}\n\nexport interface findEssayQuestionByIdForSGOVariables {\n  input: FindEssayQuestionByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findSGOEssaysByStudentId\n// ====================================================\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n}\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_topic {\n  __typename: \"Topic\";\n  essayQuestionId: string;\n}\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_finalDraft_submittedFinalDraft_rubricEntries {\n  __typename: \"RubricEntry\";\n  rubricSection: RubricSectionEnum;\n  score: number;\n  entry: string;\n}\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_finalDraft_submittedFinalDraft {\n  __typename: \"SubmittedFinalDraft\";\n  score: number;\n  rubricEntries: findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_finalDraft_submittedFinalDraft_rubricEntries[];\n}\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  submittedFinalDraft: findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_finalDraft_submittedFinalDraft[];\n}\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  markingPeriod: MarkingPeriodEnum;\n  assignedDate: string;\n  score: findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_score;\n  topic: findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_topic;\n  readings: findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_readings;\n  finalDraft: findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_finalDraft | null;\n}\n\nexport interface findSGOEssaysByStudentId_findSGOEssaysByStudentId {\n  __typename: \"FindSGOEssaysByStudentIdPayload\";\n  essays: findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays[];\n}\n\nexport interface findSGOEssaysByStudentId {\n  findSGOEssaysByStudentId: findSGOEssaysByStudentId_findSGOEssaysByStudentId;\n}\n\nexport interface findSGOEssaysByStudentIdVariables {\n  input: FindSGOEssaysByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAllQuestions\n// ====================================================\n\nexport interface findAllQuestions_findAllQuestions {\n  __typename: \"FindAllQuestionsPayload\";\n  questions: string[];\n}\n\nexport interface findAllQuestions {\n  findAllQuestions: findAllQuestions_findAllQuestions;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAllStudentsForStudentInformation\n// ====================================================\n\nexport interface findAllStudentsForStudentInformation_findAllStudents_students_inCourses {\n  __typename: \"Course\";\n  name: string;\n  _id: string | null;\n}\n\nexport interface findAllStudentsForStudentInformation_findAllStudents_students {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  userName: string;\n  inCourses: findAllStudentsForStudentInformation_findAllStudents_students_inCourses[];\n}\n\nexport interface findAllStudentsForStudentInformation_findAllStudents {\n  __typename: \"FindAllStudentsPayload\";\n  students: findAllStudentsForStudentInformation_findAllStudents_students[];\n}\n\nexport interface findAllStudentsForStudentInformation {\n  findAllStudents: findAllStudentsForStudentInformation_findAllStudents;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findTemporaryTasksByStudentId\n// ====================================================\n\nexport interface findTemporaryTasksByStudentId_findTemporaryTasksByStudentId_temporaryTasks {\n  __typename: \"TemporaryTask\";\n  _id: string | null;\n  dateIssued: string;\n  answered: boolean;\n  studentPresent: boolean;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findTemporaryTasksByStudentId_findTemporaryTasksByStudentId {\n  __typename: \"FindTemporaryTasksByStudentIdPayload\";\n  temporaryTasks: findTemporaryTasksByStudentId_findTemporaryTasksByStudentId_temporaryTasks[];\n}\n\nexport interface findTemporaryTasksByStudentId {\n  findTemporaryTasksByStudentId: findTemporaryTasksByStudentId_findTemporaryTasksByStudentId;\n}\n\nexport interface findTemporaryTasksByStudentIdVariables {\n  input: FindTemporaryTasksByStudentIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCourseInfoByCourseId\n// ====================================================\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_course_hasStudents {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  schoolId: string | null;\n  lastName: string;\n  cohort: StudentCohortEnum;\n  hasAbsences: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAbsences[];\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_course {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n  hasStudents: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_course_hasStudents[];\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_redCohortStudent_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_redCohortStudent {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  cohort: StudentCohortEnum;\n  hasAbsences: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_redCohortStudent_hasAbsences[];\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_whiteCohortStudent_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_whiteCohortStudent {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  cohort: StudentCohortEnum;\n  hasAbsences: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_whiteCohortStudent_hasAbsences[];\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_student_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  cohort: StudentCohortEnum;\n  hasAbsences: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_student_hasAbsences[];\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  deskNumber: number;\n  redCohortStudent: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_redCohortStudent | null;\n  whiteCohortStudent: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_whiteCohortStudent | null;\n  student: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats_student | null;\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n  startsAt: string;\n  course: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_course;\n  endsAt: string;\n  schoolDayType: SchoolDayType;\n  cohortBasedSeating: boolean;\n  assignedSeats: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats[];\n}\n\nexport interface findCourseInfoByCourseId_findCourseInfoByCourseId {\n  __typename: \"FindCourseInfoByCourseIdPayload\";\n  courseInfo: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo;\n}\n\nexport interface findCourseInfoByCourseId {\n  findCourseInfoByCourseId: findCourseInfoByCourseId_findCourseInfoByCourseId;\n}\n\nexport interface findCourseInfoByCourseIdVariables {\n  input: FindCourseInfoByCourseIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: controlCoolDown\n// ====================================================\n\nexport interface controlCoolDown_controlCoolDown_protocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n}\n\nexport interface controlCoolDown_controlCoolDown {\n  __typename: \"ControlCoolDownPayload\";\n  protocols: controlCoolDown_controlCoolDown_protocols[];\n}\n\nexport interface controlCoolDown {\n  controlCoolDown: controlCoolDown_controlCoolDown;\n}\n\nexport interface controlCoolDownVariables {\n  input: ControlCoolDownInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateDynamicLesson\n// ====================================================\n\nexport interface updateDynamicLesson_UpdateDynamicLesson_lesson {\n  __typename: \"Lesson\";\n  _id: string | null;\n  dynamicLesson: DynamicLessonEnums;\n}\n\nexport interface updateDynamicLesson_UpdateDynamicLesson {\n  __typename: \"UpdateDynamicLessonPayload\";\n  lesson: updateDynamicLesson_UpdateDynamicLesson_lesson;\n}\n\nexport interface updateDynamicLesson {\n  UpdateDynamicLesson: updateDynamicLesson_UpdateDynamicLesson;\n}\n\nexport interface updateDynamicLessonVariables {\n  input: UpdateDynamicLessonInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createBatchStudentBehavior\n// ====================================================\n\nexport interface createBatchStudentBehavior_createBatchStudentBehavior_studentBehaviors {\n  __typename: \"StudentBehavior\";\n  _id: string | null;\n}\n\nexport interface createBatchStudentBehavior_createBatchStudentBehavior {\n  __typename: \"CreateBatchStudentBehaviorPayload\";\n  studentBehaviors: createBatchStudentBehavior_createBatchStudentBehavior_studentBehaviors[];\n}\n\nexport interface createBatchStudentBehavior {\n  createBatchStudentBehavior: createBatchStudentBehavior_createBatchStudentBehavior;\n}\n\nexport interface createBatchStudentBehaviorVariables {\n  input: CreateBatchStudentBehaviorInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: controlWarmUp\n// ====================================================\n\nexport interface controlWarmUp_controlWarmUp_protocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n}\n\nexport interface controlWarmUp_controlWarmUp {\n  __typename: \"ControlWarmUpPayload\";\n  protocols: controlWarmUp_controlWarmUp_protocols[];\n}\n\nexport interface controlWarmUp {\n  controlWarmUp: controlWarmUp_controlWarmUp;\n}\n\nexport interface controlWarmUpVariables {\n  input: ControlWarmUpInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: finishStudentProtocol\n// ====================================================\n\nexport interface finishStudentProtocol_finishProtocol {\n  __typename: \"FinishProtocolPayload\";\n  finished: boolean;\n}\n\nexport interface finishStudentProtocol {\n  finishProtocol: finishStudentProtocol_finishProtocol;\n}\n\nexport interface finishStudentProtocolVariables {\n  input: FinishProtocolInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: deleteProtocols\n// ====================================================\n\nexport interface deleteProtocols_removeProtocol {\n  __typename: \"RemoveProtocolPayload\";\n  deleteCount: number;\n}\n\nexport interface deleteProtocols {\n  removeProtocol: deleteProtocols_removeProtocol;\n}\n\nexport interface deleteProtocolsVariables {\n  input: RemoveProtocolInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findActiveProtocolsByCourseForProtocolRemoval\n// ====================================================\n\nexport interface findActiveProtocolsByCourseForProtocolRemoval_findActiveProtocolsByCourse_protocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findActiveProtocolsByCourseForProtocolRemoval_findActiveProtocolsByCourse_protocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n  task: string;\n  assignedDate: string;\n  student: findActiveProtocolsByCourseForProtocolRemoval_findActiveProtocolsByCourse_protocols_student;\n}\n\nexport interface findActiveProtocolsByCourseForProtocolRemoval_findActiveProtocolsByCourse {\n  __typename: \"FindActiveProtocolsByCoursePayload\";\n  protocols: findActiveProtocolsByCourseForProtocolRemoval_findActiveProtocolsByCourse_protocols[];\n}\n\nexport interface findActiveProtocolsByCourseForProtocolRemoval {\n  findActiveProtocolsByCourse: findActiveProtocolsByCourseForProtocolRemoval_findActiveProtocolsByCourse;\n}\n\nexport interface findActiveProtocolsByCourseForProtocolRemovalVariables {\n  input: FindActiveProtocolsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateLessonProtocol\n// ====================================================\n\nexport interface updateLessonProtocol_updateLessonProtocol_lesson_duringActivities {\n  __typename: \"TextSectionProtocols\";\n  isActive: boolean;\n}\n\nexport interface updateLessonProtocol_updateLessonProtocol_lesson {\n  __typename: \"Lesson\";\n  _id: string | null;\n  duringActivities: updateLessonProtocol_updateLessonProtocol_lesson_duringActivities[];\n}\n\nexport interface updateLessonProtocol_updateLessonProtocol {\n  __typename: \"UpdateProtocolPayload\";\n  lesson: updateLessonProtocol_updateLessonProtocol_lesson;\n}\n\nexport interface updateLessonProtocol {\n  updateLessonProtocol: updateLessonProtocol_updateLessonProtocol;\n}\n\nexport interface updateLessonProtocolVariables {\n  input: UpdateLessonProtocolInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: startProtocol\n// ====================================================\n\nexport interface startProtocol_startProtocol_lesson_duringActivities {\n  __typename: \"TextSectionProtocols\";\n  isActive: boolean;\n}\n\nexport interface startProtocol_startProtocol_lesson {\n  __typename: \"Lesson\";\n  _id: string | null;\n  duringActivities: startProtocol_startProtocol_lesson_duringActivities[];\n}\n\nexport interface startProtocol_startProtocol {\n  __typename: \"StartProtocolPayload\";\n  lesson: startProtocol_startProtocol_lesson;\n}\n\nexport interface startProtocol {\n  startProtocol: startProtocol_startProtocol;\n}\n\nexport interface startProtocolVariables {\n  input: StartProtocolInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createStudentProtocol\n// ====================================================\n\nexport interface createStudentProtocol_createProtocol_protocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n}\n\nexport interface createStudentProtocol_createProtocol_protocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n  student: createStudentProtocol_createProtocol_protocols_student;\n}\n\nexport interface createStudentProtocol_createProtocol {\n  __typename: \"CreateProtocolPayload\";\n  protocols: createStudentProtocol_createProtocol_protocols[];\n}\n\nexport interface createStudentProtocol {\n  createProtocol: createStudentProtocol_createProtocol;\n}\n\nexport interface createStudentProtocolVariables {\n  input: CreateProtocolInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assignEssayInTeachersAid\n// ====================================================\n\nexport interface assignEssayInTeachersAid_assignEssays_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n}\n\nexport interface assignEssayInTeachersAid_assignEssays {\n  __typename: \"AssignEssaysPayload\";\n  essays: assignEssayInTeachersAid_assignEssays_essays[];\n}\n\nexport interface assignEssayInTeachersAid {\n  assignEssays: assignEssayInTeachersAid_assignEssays;\n}\n\nexport interface assignEssayInTeachersAidVariables {\n  input: AssignEssaysInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findEssaysByAssociatedLessonIdForTodaysClass\n// ====================================================\n\nexport interface findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId_essays_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId_essays_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId_essays {\n  __typename: \"Essay\";\n  _id: string | null;\n  hasOwner: findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId_essays_hasOwner;\n  dueDate: string;\n  assigned: boolean;\n  readings: findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId_essays_readings;\n}\n\nexport interface findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId {\n  __typename: \"FindEssaysByAssociatedLessonIdPayload\";\n  essays: findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId_essays[];\n}\n\nexport interface findEssaysByAssociatedLessonIdForTodaysClass {\n  findEssaysByAssociatedLessonId: findEssaysByAssociatedLessonIdForTodaysClass_findEssaysByAssociatedLessonId;\n}\n\nexport interface findEssaysByAssociatedLessonIdForTodaysClassVariables {\n  input: FindEssaysByAssociatedLessonIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: unAssignQuizByQuizId\n// ====================================================\n\nexport interface unAssignQuizByQuizId_unAssignQuizByQuizId {\n  __typename: \"UnAssignQuizByQuizIdPayload\";\n  unAssigned: boolean;\n}\n\nexport interface unAssignQuizByQuizId {\n  unAssignQuizByQuizId: unAssignQuizByQuizId_unAssignQuizByQuizId;\n}\n\nexport interface unAssignQuizByQuizIdVariables {\n  input: UnAssignQuizByQuizIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: forceFinishQuiz\n// ====================================================\n\nexport interface forceFinishQuiz_forceFinishQuiz {\n  __typename: \"ForceFinishQuizPayload\";\n  finished: boolean;\n}\n\nexport interface forceFinishQuiz {\n  forceFinishQuiz: forceFinishQuiz_forceFinishQuiz;\n}\n\nexport interface forceFinishQuizVariables {\n  input: ForceFinishQuizInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assignQuizzesByStudentIdsAndDate\n// ====================================================\n\nexport interface assignQuizzesByStudentIdsAndDate_assignQuizzesByStudentIdsAndDate_quizzes {\n  __typename: \"Quiz\";\n  _id: string | null;\n}\n\nexport interface assignQuizzesByStudentIdsAndDate_assignQuizzesByStudentIdsAndDate {\n  __typename: \"AssignQuizzesByStudentIdsAndDatePayload\";\n  quizzes: assignQuizzesByStudentIdsAndDate_assignQuizzesByStudentIdsAndDate_quizzes[];\n}\n\nexport interface assignQuizzesByStudentIdsAndDate {\n  assignQuizzesByStudentIdsAndDate: assignQuizzesByStudentIdsAndDate_assignQuizzesByStudentIdsAndDate;\n}\n\nexport interface assignQuizzesByStudentIdsAndDateVariables {\n  input: AssignQuizzesByStudentIdsAndDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assignReadingGuidesForTeachersAid\n// ====================================================\n\nexport interface assignReadingGuidesForTeachersAid_assignReadingGuides_readingGuides {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n}\n\nexport interface assignReadingGuidesForTeachersAid_assignReadingGuides {\n  __typename: \"AssignReadingGuidesPayload\";\n  readingGuides: assignReadingGuidesForTeachersAid_assignReadingGuides_readingGuides[];\n}\n\nexport interface assignReadingGuidesForTeachersAid {\n  assignReadingGuides: assignReadingGuidesForTeachersAid_assignReadingGuides;\n}\n\nexport interface assignReadingGuidesForTeachersAidVariables {\n  input: AssignReadingGuidesInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findReadingGuidesByCourseIdAndAssignedDate\n// ====================================================\n\nexport interface findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides_hasOwner {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  submitted: boolean;\n}\n\nexport interface findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides {\n  __typename: \"ReadingGuide\";\n  _id: string | null;\n  hasOwner: findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides_hasOwner;\n  assigned: boolean;\n  exempt: boolean;\n  graded: boolean;\n  dueDate: string;\n  associatedLessonId: string | null;\n  readings: findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides_readings;\n  readingGuideFinal: findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides_readingGuideFinal | null;\n}\n\nexport interface findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate {\n  __typename: \"FindReadingGuidesByCourseIdAndAssignedDatePayload\";\n  readingGuides: findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides[];\n}\n\nexport interface findReadingGuidesByCourseIdAndAssignedDate {\n  findReadingGuidesByCourseIdAndAssignedDate: findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate;\n}\n\nexport interface findReadingGuidesByCourseIdAndAssignedDateVariables {\n  input: FindReadingGuidesByCourseIdAndAssignedDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findQuizzesForCourseByAssignedDate\n// ====================================================\n\nexport interface findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes_hasOwner {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n  _id: string | null;\n}\n\nexport interface findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes {\n  __typename: \"Quiz\";\n  _id: string | null;\n  hasOwner: findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes_hasOwner;\n  assigned: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  assignedDate: string;\n  exempt: boolean;\n  isActive: boolean;\n  startedQuiz: boolean;\n  finishedQuiz: boolean;\n  readings: findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes_readings;\n  score: findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes_score;\n}\n\nexport interface findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate {\n  __typename: \"FindQuizzesForCourseByAssignedDatePayload\";\n  quizzes: findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes[];\n}\n\nexport interface findQuizzesForCourseByAssignedDate {\n  findQuizzesForCourseByAssignedDate: findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate;\n}\n\nexport interface findQuizzesForCourseByAssignedDateVariables {\n  input: FindQuizzesForCourseByAssignedDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findActiveProtocolsByCourse\n// ====================================================\n\nexport interface findActiveProtocolsByCourse_findActiveProtocolsByCourse_protocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n  schoolId: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findActiveProtocolsByCourse_findActiveProtocolsByCourse_protocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n  student: findActiveProtocolsByCourse_findActiveProtocolsByCourse_protocols_student;\n  response: string | null;\n  assessment: ProtocolAssessmentEnum | null;\n  activityTime: ActivityTimeEnum;\n}\n\nexport interface findActiveProtocolsByCourse_findActiveProtocolsByCourse {\n  __typename: \"FindActiveProtocolsByCoursePayload\";\n  protocols: findActiveProtocolsByCourse_findActiveProtocolsByCourse_protocols[];\n}\n\nexport interface findActiveProtocolsByCourse {\n  findActiveProtocolsByCourse: findActiveProtocolsByCourse_findActiveProtocolsByCourse;\n}\n\nexport interface findActiveProtocolsByCourseVariables {\n  input: FindActiveProtocolsByCourseInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findProtocolsByDate\n// ====================================================\n\nexport interface findProtocolsByDate_findProtocolsByDate_protocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n  schoolId: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findProtocolsByDate_findProtocolsByDate_protocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n  student: findProtocolsByDate_findProtocolsByDate_protocols_student;\n  response: string | null;\n  assessment: ProtocolAssessmentEnum | null;\n  activityTime: ActivityTimeEnum;\n  task: string;\n  lessonId: string;\n  markingPeriod: MarkingPeriodEnum;\n  protocolActivityType: ProtocolActivityTypes;\n  assignedDate: string;\n  academicOutcomeType: AcademicOutcomeTypes;\n}\n\nexport interface findProtocolsByDate_findProtocolsByDate {\n  __typename: \"FindProtocolResponsesPayload\";\n  protocols: findProtocolsByDate_findProtocolsByDate_protocols[];\n}\n\nexport interface findProtocolsByDate {\n  findProtocolsByDate: findProtocolsByDate_findProtocolsByDate;\n}\n\nexport interface findProtocolsByDateVariables {\n  input: FindProtocolResponsesInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assessIndividualProtocols\n// ====================================================\n\nexport interface assessIndividualProtocols_assessIndividualProtocols_protocol {\n  __typename: \"Protocol\";\n  _id: string | null;\n  response: string | null;\n}\n\nexport interface assessIndividualProtocols_assessIndividualProtocols {\n  __typename: \"AssessIndividualProtocolsPayload\";\n  protocol: assessIndividualProtocols_assessIndividualProtocols_protocol;\n}\n\nexport interface assessIndividualProtocols {\n  assessIndividualProtocols: assessIndividualProtocols_assessIndividualProtocols;\n}\n\nexport interface assessIndividualProtocolsVariables {\n  input: AssessIndividualProtocolsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findVirtualResponses\n// ====================================================\n\nexport interface findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasLessons_duringActivities {\n  __typename: \"TextSectionProtocols\";\n  isActive: boolean;\n}\n\nexport interface findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasLessons {\n  __typename: \"Lesson\";\n  duringActivities: findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasLessons_duringActivities[];\n}\n\nexport interface findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n  student: findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols_student;\n  isActive: boolean;\n  response: string | null;\n  assignedDate: string;\n  markingPeriod: MarkingPeriodEnum;\n  task: string;\n  protocolActivityType: ProtocolActivityTypes;\n}\n\nexport interface findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasStudents {\n  __typename: \"Student\";\n  hasProtocols: findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasProtocols[];\n}\n\nexport interface findVirtualResponses_findCourseInfoByCourseId_courseInfo_course {\n  __typename: \"Course\";\n  hasLessons: findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasLessons[];\n  hasStudents: findVirtualResponses_findCourseInfoByCourseId_courseInfo_course_hasStudents[];\n}\n\nexport interface findVirtualResponses_findCourseInfoByCourseId_courseInfo {\n  __typename: \"CourseInfo\";\n  course: findVirtualResponses_findCourseInfoByCourseId_courseInfo_course;\n}\n\nexport interface findVirtualResponses_findCourseInfoByCourseId {\n  __typename: \"FindCourseInfoByCourseIdPayload\";\n  courseInfo: findVirtualResponses_findCourseInfoByCourseId_courseInfo;\n}\n\nexport interface findVirtualResponses {\n  findCourseInfoByCourseId: findVirtualResponses_findCourseInfoByCourseId;\n}\n\nexport interface findVirtualResponsesVariables {\n  input: FindCourseInfoByCourseIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: reviewReadingGuides\n// ====================================================\n\nexport interface reviewReadingGuides_reviewReadingGuides {\n  __typename: \"ReviewReadingGuidesPayload\";\n  reviewed: boolean;\n}\n\nexport interface reviewReadingGuides {\n  reviewReadingGuides: reviewReadingGuides_reviewReadingGuides;\n}\n\nexport interface reviewReadingGuidesVariables {\n  input: ReviewReadingGuidesInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentInfoByStudentIdForDesk\n// ====================================================\n\nexport interface findStudentInfoByStudentIdForDesk_findStudentById_student_hasAbsences {\n  __typename: \"StudentAbsence\";\n  _id: string | null;\n  dayAbsent: any;\n}\n\nexport interface findStudentInfoByStudentIdForDesk_findStudentById_student {\n  __typename: \"Student\";\n  _id: string | null;\n  isActive: boolean;\n  firstName: string;\n  hasAbsences: findStudentInfoByStudentIdForDesk_findStudentById_student_hasAbsences[];\n}\n\nexport interface findStudentInfoByStudentIdForDesk_findStudentById {\n  __typename: \"FindStudentByIdPayload\";\n  student: findStudentInfoByStudentIdForDesk_findStudentById_student;\n}\n\nexport interface findStudentInfoByStudentIdForDesk {\n  findStudentById: findStudentInfoByStudentIdForDesk_findStudentById;\n}\n\nexport interface findStudentInfoByStudentIdForDeskVariables {\n  input: FindStudentByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay\n// ====================================================\n\nexport interface findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay_findStudentOutOfClassByPeriodNameAndDate_studentsOutOfClass_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay_findStudentOutOfClassByPeriodNameAndDate_studentsOutOfClass {\n  __typename: \"StudentOutOfClass\";\n  _id: string | null;\n  date: string;\n  departTime: string;\n  hasReturned: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  outOfClassDestination: OutOfClassDestinationEnum;\n  returnTime: string;\n  student: findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay_findStudentOutOfClassByPeriodNameAndDate_studentsOutOfClass_student;\n}\n\nexport interface findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay_findStudentOutOfClassByPeriodNameAndDate {\n  __typename: \"FindStudentOutOfClassByPeriodNameAndDatePayload\";\n  studentsOutOfClass: findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay_findStudentOutOfClassByPeriodNameAndDate_studentsOutOfClass[];\n}\n\nexport interface findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay {\n  findStudentOutOfClassByPeriodNameAndDate: findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay_findStudentOutOfClassByPeriodNameAndDate;\n}\n\nexport interface findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplayVariables {\n  input: FindStudentOutOfClassByPeriodNameAndDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: studentReturnedToClass\n// ====================================================\n\nexport interface studentReturnedToClass_studentReturnedToClass {\n  __typename: \"StudentReturnedToClassPayload\";\n  returned: boolean;\n}\n\nexport interface studentReturnedToClass {\n  studentReturnedToClass: studentReturnedToClass_studentReturnedToClass;\n}\n\nexport interface studentReturnedToClassVariables {\n  input: StudentReturnedToClassInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentQuestions\n// ====================================================\n\nexport interface findStudentQuestions_findStudentQuestions_studentQuestions_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findStudentQuestions_findStudentQuestions_studentQuestions {\n  __typename: \"StudentQuestion\";\n  student: findStudentQuestions_findStudentQuestions_studentQuestions_student;\n  question: string;\n  timeAsked: string;\n}\n\nexport interface findStudentQuestions_findStudentQuestions {\n  __typename: \"FindStudentQuestionsPayload\";\n  studentQuestions: findStudentQuestions_findStudentQuestions_studentQuestions[];\n}\n\nexport interface findStudentQuestions {\n  findStudentQuestions: findStudentQuestions_findStudentQuestions;\n}\n\nexport interface findStudentQuestionsVariables {\n  input: FindStudentQuestionsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createAbsence\n// ====================================================\n\nexport interface createAbsence_createAbsence_studentAbsence {\n  __typename: \"StudentAbsence\";\n  _id: string | null;\n}\n\nexport interface createAbsence_createAbsence {\n  __typename: \"CreateAbsencePayload\";\n  studentAbsence: createAbsence_createAbsence_studentAbsence;\n}\n\nexport interface createAbsence {\n  createAbsence: createAbsence_createAbsence;\n}\n\nexport interface createAbsenceVariables {\n  input: CreateAbsenceInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeAbsence\n// ====================================================\n\nexport interface removeAbsence_removeAbsence {\n  __typename: \"RemoveAbsencePayload\";\n  removed: boolean;\n}\n\nexport interface removeAbsence {\n  removeAbsence: removeAbsence_removeAbsence;\n}\n\nexport interface removeAbsenceVariables {\n  input: RemoveAbsenceInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeLateness\n// ====================================================\n\nexport interface removeLateness_removeLateness {\n  __typename: \"RemoveLatenessPayload\";\n  removed: boolean;\n}\n\nexport interface removeLateness {\n  removeLateness: removeLateness_removeLateness;\n}\n\nexport interface removeLatenessVariables {\n  input: RemoveLatenessInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateResponsibilityPoints\n// ====================================================\n\nexport interface updateResponsibilityPoints_updateResponsibilityPoints_responsibilityPoints {\n  __typename: \"ResponsibilityPoints\";\n  _id: string | null;\n  responsibilityPoints: number;\n}\n\nexport interface updateResponsibilityPoints_updateResponsibilityPoints {\n  __typename: \"UpdateResponsibilityPointsPayload\";\n  responsibilityPoints: updateResponsibilityPoints_updateResponsibilityPoints_responsibilityPoints;\n}\n\nexport interface updateResponsibilityPoints {\n  updateResponsibilityPoints: updateResponsibilityPoints_updateResponsibilityPoints;\n}\n\nexport interface updateResponsibilityPointsVariables {\n  input: UpdateResponsibilityPointsInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createLateness\n// ====================================================\n\nexport interface createLateness_createLateness_studentLateness {\n  __typename: \"StudentLateness\";\n  _id: string | null;\n}\n\nexport interface createLateness_createLateness {\n  __typename: \"CreateLatenessPayload\";\n  studentLateness: createLateness_createLateness_studentLateness;\n}\n\nexport interface createLateness {\n  createLateness: createLateness_createLateness;\n}\n\nexport interface createLatenessVariables {\n  input: CreateLatenessInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createUnexcusedLateness\n// ====================================================\n\nexport interface createUnexcusedLateness_createUnexcusedLateness_unexcusedLateness {\n  __typename: \"UnexcusedLateness\";\n  _id: string | null;\n}\n\nexport interface createUnexcusedLateness_createUnexcusedLateness {\n  __typename: \"CreateUnexcusedLatenessPayload\";\n  unexcusedLateness: createUnexcusedLateness_createUnexcusedLateness_unexcusedLateness;\n}\n\nexport interface createUnexcusedLateness {\n  createUnexcusedLateness: createUnexcusedLateness_createUnexcusedLateness;\n}\n\nexport interface createUnexcusedLatenessVariables {\n  input: CreateUnexcusedLatenessInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findBehaviorsByStudentIdAndDate\n// ====================================================\n\nexport interface findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate_behaviors_student {\n  __typename: \"Student\";\n  firstName: string;\n}\n\nexport interface findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate_behaviors_behavior {\n  __typename: \"BehaviorType\";\n  _id: string | null;\n  behaviorName: string;\n  behaviorCategory: BehaviorCategoryEnum;\n  behaviorQuality: BehaviorQualityEnum;\n  points: number;\n}\n\nexport interface findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate_behaviors {\n  __typename: \"StudentBehavior\";\n  _id: string | null;\n  student: findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate_behaviors_student;\n  behavior: findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate_behaviors_behavior;\n  responsibilityPoints: number;\n}\n\nexport interface findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate {\n  __typename: \"FindBehaviorsByStudentIdAndDatePayload\";\n  behaviors: findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate_behaviors[];\n}\n\nexport interface findBehaviorsByStudentIdAndDate {\n  findBehaviorsByStudentIdAndDate: findBehaviorsByStudentIdAndDate_findBehaviorsByStudentIdAndDate;\n}\n\nexport interface findBehaviorsByStudentIdAndDateVariables {\n  input: FindBehaviorsByStudentIdAndDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeStudentBehavior\n// ====================================================\n\nexport interface removeStudentBehavior_removeStudentBehavior {\n  __typename: \"RemoveStudentBehaviorPayload\";\n  removed: boolean;\n}\n\nexport interface removeStudentBehavior {\n  removeStudentBehavior: removeStudentBehavior_removeStudentBehavior;\n}\n\nexport interface removeStudentBehaviorVariables {\n  input: RemoveStudentBehaviorInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createStudentBehavior\n// ====================================================\n\nexport interface createStudentBehavior_createStudentBehavior_studentBehavior_student {\n  __typename: \"Student\";\n  firstName: string;\n}\n\nexport interface createStudentBehavior_createStudentBehavior_studentBehavior {\n  __typename: \"StudentBehavior\";\n  _id: string | null;\n  student: createStudentBehavior_createStudentBehavior_studentBehavior_student;\n}\n\nexport interface createStudentBehavior_createStudentBehavior {\n  __typename: \"CreateStudentBehaviorPayload\";\n  studentBehavior: createStudentBehavior_createStudentBehavior_studentBehavior;\n}\n\nexport interface createStudentBehavior {\n  createStudentBehavior: createStudentBehavior_createStudentBehavior;\n}\n\nexport interface createStudentBehaviorVariables {\n  input: CreateStudentBehaviorInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: assessStudentProtocol\n// ====================================================\n\nexport interface assessStudentProtocol_assessStudentProtocol_protocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface assessStudentProtocol_assessStudentProtocol_protocols_partners {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface assessStudentProtocol_assessStudentProtocol_protocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n  student: assessStudentProtocol_assessStudentProtocol_protocols_student;\n  partners: assessStudentProtocol_assessStudentProtocol_protocols_partners[] | null;\n}\n\nexport interface assessStudentProtocol_assessStudentProtocol {\n  __typename: \"AssessStudentProtocolPayload\";\n  protocols: assessStudentProtocol_assessStudentProtocol_protocols[];\n}\n\nexport interface assessStudentProtocol {\n  assessStudentProtocol: assessStudentProtocol_assessStudentProtocol;\n}\n\nexport interface assessStudentProtocolVariables {\n  input: AssessStudentProtocolInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createStudentOutOfClass\n// ====================================================\n\nexport interface createStudentOutOfClass_createStudentOutOfClass_studentOutOfClass {\n  __typename: \"StudentOutOfClass\";\n  _id: string | null;\n}\n\nexport interface createStudentOutOfClass_createStudentOutOfClass {\n  __typename: \"CreateStudentOutOfClassPayload\";\n  studentOutOfClass: createStudentOutOfClass_createStudentOutOfClass_studentOutOfClass;\n}\n\nexport interface createStudentOutOfClass {\n  createStudentOutOfClass: createStudentOutOfClass_createStudentOutOfClass;\n}\n\nexport interface createStudentOutOfClassVariables {\n  input: CreateStudentOutOfClassInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findStudentByIdForTeachersAid\n// ====================================================\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_Essay {\n  __typename: \"Essay\" | \"Quiz\" | \"ReadingGuide\" | \"SpecialAssignment\";\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis {\n  __typename: \"TextAnalysis\";\n  _id: string | null;\n  textAnalysisCompletion: TextAnalysisCompletionEnum;\n  exempt: boolean;\n}\n\nexport type findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments = findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_Essay | findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis;\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAbsences {\n  __typename: \"StudentAbsence\";\n  _id: string | null;\n  dayAbsent: any;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasLatnesses {\n  __typename: \"StudentLateness\";\n  _id: string | null;\n  dayLate: string;\n  latenessType: LatenessTypeEnum;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasUnExcusedLatenesses {\n  __typename: \"UnexcusedLateness\";\n  _id: string | null;\n  dayLate: string;\n  latenessType: LatenessTypeEnum;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasExcusedLatenesses {\n  __typename: \"ExcusedLateness\";\n  _id: string | null;\n  dayLate: string;\n  latenessType: LatenessTypeEnum;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasResponsibilityPoints {\n  __typename: \"ResponsibilityPoints\";\n  _id: string | null;\n  markingPeriod: MarkingPeriodEnum;\n  responsibilityPoints: number;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols_partners {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols {\n  __typename: \"Protocol\";\n  _id: string | null;\n  completed: boolean;\n  assignedDate: string;\n  academicOutcomeType: AcademicOutcomeTypes;\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols_student;\n  isActive: boolean;\n  task: string;\n  partners: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols_partners[] | null;\n  discussionLevel: DiscussionTypesEnum | null;\n  assessment: ProtocolAssessmentEnum | null;\n  protocolActivityType: ProtocolActivityTypes;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors_behavior {\n  __typename: \"BehaviorType\";\n  _id: string | null;\n  behaviorCategory: BehaviorCategoryEnum;\n  behaviorName: string;\n  points: number;\n  behaviorQuality: BehaviorQualityEnum;\n  forTeachersAid: boolean;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors {\n  __typename: \"StudentBehavior\";\n  _id: string | null;\n  behavior: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors_behavior;\n  date: string;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasStatus {\n  __typename: \"StudentOutOfClass\";\n  _id: string | null;\n  date: string;\n  departTime: string;\n  hasReturned: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  outOfClassDestination: OutOfClassDestinationEnum;\n  returnTime: string;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasStatuses {\n  __typename: \"StudentOutOfClass\";\n  _id: string | null;\n  date: string;\n  departTime: string;\n  hasReturned: boolean;\n  markingPeriod: MarkingPeriodEnum;\n  outOfClassDestination: OutOfClassDestinationEnum;\n  returnTime: string;\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student {\n  __typename: \"StudentForTeachersAid\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  hasAssignments: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments[];\n  hasAbsences: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAbsences[];\n  hasLatnesses: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasLatnesses[];\n  hasUnExcusedLatenesses: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasUnExcusedLatenesses[];\n  hasExcusedLatenesses: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasExcusedLatenesses[];\n  hasResponsibilityPoints: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasResponsibilityPoints;\n  hasProtocols: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols[];\n  hasBehaviors: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors[];\n  hasStatus: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasStatus[];\n  hasStatuses: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasStatuses[];\n}\n\nexport interface findStudentByIdForTeachersAid_findStudentByIdForTeachersAid {\n  __typename: \"FindStudentByIdForTeachersAidPayload\";\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student;\n}\n\nexport interface findStudentByIdForTeachersAid {\n  findStudentByIdForTeachersAid: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid;\n}\n\nexport interface findStudentByIdForTeachersAidVariables {\n  input: FindStudentByIdForTeachersAidInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: checkTextAnalysis\n// ====================================================\n\nexport interface checkTextAnalysis_checkTextAnalysis {\n  __typename: \"CheckTextAnalysisPayload\";\n  checked: boolean;\n}\n\nexport interface checkTextAnalysis {\n  checkTextAnalysis: checkTextAnalysis_checkTextAnalysis;\n}\n\nexport interface checkTextAnalysisVariables {\n  input: CheckTextAnalysisInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCourseByIdForTeachersAid\n// ====================================================\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasStudents_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasStudents {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  hasAbsences: findCourseByIdForTeachersAid_findCourseById_course_hasStudents_hasAbsences[];\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student_hasStatus_student {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n  _id: string | null;\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student_hasStatus {\n  __typename: \"StudentOutOfClass\";\n  student: findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student_hasStatus_student;\n  departTime: string;\n  hasReturned: boolean;\n  outOfClassDestination: OutOfClassDestinationEnum;\n  date: string;\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  _id: string | null;\n  firstName: string;\n  lastName: string;\n  hasAbsences: findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student_hasAbsences[];\n  hasStatus: findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student_hasStatus[];\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  student: findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student | null;\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  assignedSeats: findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats[];\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById_course {\n  __typename: \"Course\";\n  name: string;\n  hasStudents: findCourseByIdForTeachersAid_findCourseById_course_hasStudents[];\n  hasCourseInfo: findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo;\n}\n\nexport interface findCourseByIdForTeachersAid_findCourseById {\n  __typename: \"FindCourseByIdPayload\";\n  course: findCourseByIdForTeachersAid_findCourseById_course;\n}\n\nexport interface findCourseByIdForTeachersAid {\n  findCourseById: findCourseByIdForTeachersAid_findCourseById;\n}\n\nexport interface findCourseByIdForTeachersAidVariables {\n  input: FindCourseByIdInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: changePassword\n// ====================================================\n\nexport interface changePassword_changePassword_user {\n  __typename: \"Student\" | \"StudentForTeachersAid\" | \"Teacher\";\n  _id: string | null;\n}\n\nexport interface changePassword_changePassword {\n  __typename: \"ChangePasswordPayload\";\n  user: changePassword_changePassword_user;\n}\n\nexport interface changePassword {\n  changePassword: changePassword_changePassword;\n}\n\nexport interface changePasswordVariables {\n  input: ChangePasswordInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: login\n// ====================================================\n\nexport interface login_login_user {\n  __typename: \"Student\" | \"StudentForTeachersAid\" | \"Teacher\";\n  _id: string | null;\n}\n\nexport interface login_login {\n  __typename: \"LoginPayload\";\n  user: login_login_user;\n}\n\nexport interface login {\n  login: login_login;\n}\n\nexport interface loginVariables {\n  input: LoginInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: logout\n// ====================================================\n\nexport interface logout {\n  logout: boolean;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: passwordCheck\n// ====================================================\n\nexport interface passwordCheck_passwordCheck {\n  __typename: \"PasswordCheckPayload\";\n  firstTimeLoginIn: boolean;\n}\n\nexport interface passwordCheck {\n  passwordCheck: passwordCheck_passwordCheck;\n}\n\nexport interface passwordCheckVariables {\n  input: PasswordCheckInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateUserActive\n// ====================================================\n\nexport interface updateUserActive_updateUserActive {\n  __typename: \"UpdateUserActivePayload\";\n  updated: boolean;\n}\n\nexport interface updateUserActive {\n  updateUserActive: updateUserActive_updateUserActive;\n}\n\nexport interface updateUserActiveVariables {\n  input: UpdateUserActiveInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findActiveProtocolByStudent\n// ====================================================\n\nexport interface findActiveProtocolByStudent_findActiveProtocolByStudent_protocol {\n  __typename: \"Protocol\";\n  _id: string | null;\n  completed: boolean;\n  assignedDate: string;\n  academicOutcomeType: AcademicOutcomeTypes;\n  task: string;\n  isActive: boolean;\n  response: string | null;\n}\n\nexport interface findActiveProtocolByStudent_findActiveProtocolByStudent {\n  __typename: \"FindActiveProtocolByStudentPayload\";\n  protocol: findActiveProtocolByStudent_findActiveProtocolByStudent_protocol;\n}\n\nexport interface findActiveProtocolByStudent {\n  findActiveProtocolByStudent: findActiveProtocolByStudent_findActiveProtocolByStudent;\n}\n\nexport interface findActiveProtocolByStudentVariables {\n  input: FindActiveProtocolByStudentInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: respondToProtocol\n// ====================================================\n\nexport interface respondToProtocol_respondToProtocol_protocol {\n  __typename: \"Protocol\";\n  _id: string | null;\n  response: string | null;\n}\n\nexport interface respondToProtocol_respondToProtocol {\n  __typename: \"RespondToProtocolPayload\";\n  protocol: respondToProtocol_respondToProtocol_protocol;\n}\n\nexport interface respondToProtocol {\n  respondToProtocol: respondToProtocol_respondToProtocol;\n}\n\nexport interface respondToProtocolVariables {\n  input: RespondToProtocolInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonStatus\n// ====================================================\n\nexport interface findLessonStatus_findLessonStatus_lesson_vocabList {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_pageNumbers {\n  __typename: \"PageNumbers\";\n  startingPage: number;\n  endingPage: number;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_assignedCourses_hasCourseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_assignedCourses_hasCourseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  deskNumber: number;\n  student: findLessonStatus_findLessonStatus_lesson_assignedCourses_hasCourseInfo_assignedSeats_student | null;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_assignedCourses_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  assignedSeats: findLessonStatus_findLessonStatus_lesson_assignedCourses_hasCourseInfo_assignedSeats[];\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_assignedCourses_hasSignInSheets_studentsSignInlog {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_assignedCourses_hasSignInSheets {\n  __typename: \"StudentSignInSheet\";\n  studentsSignInlog: findLessonStatus_findLessonStatus_lesson_assignedCourses_hasSignInSheets_studentsSignInlog[] | null;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_assignedCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n  hasCourseInfo: findLessonStatus_findLessonStatus_lesson_assignedCourses_hasCourseInfo;\n  hasSignInSheets: findLessonStatus_findLessonStatus_lesson_assignedCourses_hasSignInSheets[];\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_assignedSections {\n  __typename: \"LessonTextSections\";\n  startingSection: string;\n  endingSection: string;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_duringActivities {\n  __typename: \"TextSectionProtocols\";\n  task: string;\n  activityType: ProtocolActivityTypes;\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  isActive: boolean;\n  directions: string | null;\n  completed: boolean;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_beforeActivity {\n  __typename: \"TextSectionProtocols\";\n  task: string;\n  activityType: ProtocolActivityTypes;\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  isActive: boolean;\n  completed: boolean;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson_afterActivity {\n  __typename: \"TextSectionProtocols\";\n  task: string;\n  activityType: ProtocolActivityTypes;\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  isActive: boolean;\n  completed: boolean;\n}\n\nexport interface findLessonStatus_findLessonStatus_lesson {\n  __typename: \"Lesson\";\n  _id: string | null;\n  lessonName: string;\n  vocabList: findLessonStatus_findLessonStatus_lesson_vocabList[];\n  assignedMarkingPeriod: MarkingPeriodEnum;\n  pageNumbers: findLessonStatus_findLessonStatus_lesson_pageNumbers;\n  assignedCourses: findLessonStatus_findLessonStatus_lesson_assignedCourses[];\n  assignedSections: findLessonStatus_findLessonStatus_lesson_assignedSections;\n  hasNumberOfParagraphs: number;\n  objectives: string | null;\n  essentialQuestion: string;\n  duringActivities: findLessonStatus_findLessonStatus_lesson_duringActivities[];\n  protocolCount: number | null;\n  beforeActivity: findLessonStatus_findLessonStatus_lesson_beforeActivity;\n  afterActivity: findLessonStatus_findLessonStatus_lesson_afterActivity;\n  dynamicLesson: DynamicLessonEnums;\n  lessonType: LessonTypeEnum;\n  lessonStarted: boolean;\n}\n\nexport interface findLessonStatus_findLessonStatus {\n  __typename: \"FindLessonStatusPayload\";\n  lesson: findLessonStatus_findLessonStatus_lesson;\n}\n\nexport interface findLessonStatus {\n  findLessonStatus: findLessonStatus_findLessonStatus;\n}\n\nexport interface findLessonStatusVariables {\n  input: FindLessonStatusInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findLessonByCourseAndDate\n// ====================================================\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_vocabList {\n  __typename: \"TextSectionVocab\";\n  word: string;\n  definition: string;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_pageNumbers {\n  __typename: \"PageNumbers\";\n  startingPage: number;\n  endingPage: number;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo_assignedSeats_student {\n  __typename: \"Student\";\n  firstName: string;\n  lastName: string;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo_assignedSeats {\n  __typename: \"StudentSeat\";\n  deskNumber: number;\n  student: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo_assignedSeats_student | null;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  assignedSeats: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo_assignedSeats[];\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasSignInSheets_studentsSignInlog {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasSignInSheets {\n  __typename: \"StudentSignInSheet\";\n  studentsSignInlog: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasSignInSheets_studentsSignInlog[] | null;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n  hasCourseInfo: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo;\n  hasSignInSheets: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasSignInSheets[];\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedSections {\n  __typename: \"LessonTextSections\";\n  startingSection: string;\n  endingSection: string;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities {\n  __typename: \"TextSectionProtocols\";\n  task: string;\n  activityType: ProtocolActivityTypes;\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  isActive: boolean;\n  completed: boolean;\n  directions: string | null;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_beforeActivity {\n  __typename: \"TextSectionProtocols\";\n  task: string;\n  activityType: ProtocolActivityTypes;\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  isActive: boolean;\n  completed: boolean;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_afterActivity {\n  __typename: \"TextSectionProtocols\";\n  task: string;\n  activityType: ProtocolActivityTypes;\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  isActive: boolean;\n  completed: boolean;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate_lesson {\n  __typename: \"Lesson\";\n  _id: string | null;\n  lessonName: string;\n  vocabList: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_vocabList[];\n  assignedMarkingPeriod: MarkingPeriodEnum;\n  pageNumbers: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_pageNumbers;\n  assignedCourses: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses[];\n  assignedSections: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedSections;\n  objectives: string | null;\n  essentialQuestion: string;\n  protocolCount: number | null;\n  duringActivities: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities[];\n  beforeActivity: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_beforeActivity;\n  afterActivity: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_afterActivity;\n  dynamicLesson: DynamicLessonEnums;\n  lessonType: LessonTypeEnum;\n  lessonStarted: boolean;\n}\n\nexport interface findLessonByCourseAndDate_findLessonByCourseAndDate {\n  __typename: \"FindLessonByCourseAndDatePayload\";\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson | null;\n}\n\nexport interface findLessonByCourseAndDate {\n  findLessonByCourseAndDate: findLessonByCourseAndDate_findLessonByCourseAndDate;\n}\n\nexport interface findLessonByCourseAndDateVariables {\n  input: FindLessonByCourseAndDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: studentSignedInCheck\n// ====================================================\n\nexport interface studentSignedInCheck_findSchoolDayByDate_schoolDay_signInSheets_studentsSignInlog {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface studentSignedInCheck_findSchoolDayByDate_schoolDay_signInSheets {\n  __typename: \"StudentSignInSheet\";\n  studentsSignInlog: studentSignedInCheck_findSchoolDayByDate_schoolDay_signInSheets_studentsSignInlog[] | null;\n}\n\nexport interface studentSignedInCheck_findSchoolDayByDate_schoolDay {\n  __typename: \"SchoolDay\";\n  _id: string | null;\n  signInSheets: studentSignedInCheck_findSchoolDayByDate_schoolDay_signInSheets[] | null;\n}\n\nexport interface studentSignedInCheck_findSchoolDayByDate {\n  __typename: \"FindSchoolDayByDatePayload\";\n  schoolDay: studentSignedInCheck_findSchoolDayByDate_schoolDay | null;\n}\n\nexport interface studentSignedInCheck {\n  findSchoolDayByDate: studentSignedInCheck_findSchoolDayByDate;\n}\n\nexport interface studentSignedInCheckVariables {\n  input: FindSchoolDayByDateInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: studentSignIn\n// ====================================================\n\nexport interface studentSignIn_studentSignIn_schoolDay {\n  __typename: \"SchoolDay\";\n  _id: string | null;\n}\n\nexport interface studentSignIn_studentSignIn {\n  __typename: \"StudentSignInPayload\";\n  schoolDay: studentSignIn_studentSignIn_schoolDay;\n}\n\nexport interface studentSignIn {\n  studentSignIn: studentSignIn_studentSignIn;\n}\n\nexport interface studentSignInVariables {\n  input: StudentSignInInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: createStudentQuestion\n// ====================================================\n\nexport interface createStudentQuestion_createStudentQuestion_studentQuestions_questions_student {\n  __typename: \"Student\";\n  _id: string | null;\n}\n\nexport interface createStudentQuestion_createStudentQuestion_studentQuestions_questions {\n  __typename: \"StudentQuestion\";\n  student: createStudentQuestion_createStudentQuestion_studentQuestions_questions_student;\n  question: string;\n}\n\nexport interface createStudentQuestion_createStudentQuestion_studentQuestions {\n  __typename: \"StudentQuestions\";\n  _id: string | null;\n  questions: createStudentQuestion_createStudentQuestion_studentQuestions_questions[];\n}\n\nexport interface createStudentQuestion_createStudentQuestion {\n  __typename: \"CreateStudentQuestionPayload\";\n  studentQuestions: createStudentQuestion_createStudentQuestion_studentQuestions;\n}\n\nexport interface createStudentQuestion {\n  createStudentQuestion: createStudentQuestion_createStudentQuestion;\n}\n\nexport interface createStudentQuestionVariables {\n  input: CreateStudentQuestionInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: enumValues\n// ====================================================\n\nexport interface enumValues_MarkingPeriod_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_MarkingPeriod {\n  __typename: \"__Type\";\n  enumValues: enumValues_MarkingPeriod_enumValues[] | null;\n}\n\nexport interface enumValues_WritingLevelEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_WritingLevelEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_WritingLevelEnum_enumValues[] | null;\n}\n\nexport interface enumValues_QuestionTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_QuestionTypeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_QuestionTypeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_RubricSectionEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_RubricSectionEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_RubricSectionEnum_enumValues[] | null;\n}\n\nexport interface enumValues_TimeOfDay_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_TimeOfDay {\n  __typename: \"__Type\";\n  enumValues: enumValues_TimeOfDay_enumValues[] | null;\n}\n\nexport interface enumValues_InformationStructureEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_InformationStructureEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_InformationStructureEnum_enumValues[] | null;\n}\n\nexport interface enumValues_DiscussionTypesEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_DiscussionTypesEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_DiscussionTypesEnum_enumValues[] | null;\n}\n\nexport interface enumValues_ProtocolAssessmentEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_ProtocolAssessmentEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_ProtocolAssessmentEnum_enumValues[] | null;\n}\n\nexport interface enumValues_CourseMaxSizeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_CourseMaxSizeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_CourseMaxSizeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_CourseTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_CourseTypeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_CourseTypeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_SchoolDayType_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_SchoolDayType {\n  __typename: \"__Type\";\n  enumValues: enumValues_SchoolDayType_enumValues[] | null;\n}\n\nexport interface enumValues_AcademicOutcomeTypes_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_AcademicOutcomeTypes {\n  __typename: \"__Type\";\n  enumValues: enumValues_AcademicOutcomeTypes_enumValues[] | null;\n}\n\nexport interface enumValues_ProtocolActivityTypes_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_ProtocolActivityTypes {\n  __typename: \"__Type\";\n  enumValues: enumValues_ProtocolActivityTypes_enumValues[] | null;\n}\n\nexport interface enumValues_ContactTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_ContactTypeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_ContactTypeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_NounTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_NounTypeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_NounTypeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_VerbTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_VerbTypeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_VerbTypeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_QuestionWordEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_QuestionWordEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_QuestionWordEnum_enumValues[] | null;\n}\n\nexport interface enumValues_LessonTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_LessonTypeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_LessonTypeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_BehaviorEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_BehaviorEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_BehaviorEnum_enumValues[] | null;\n}\n\nexport interface enumValues_QuizQuestionDifficultyLevelEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_QuizQuestionDifficultyLevelEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_QuizQuestionDifficultyLevelEnum_enumValues[] | null;\n}\n\nexport interface enumValues_QuizQuestionTypeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_QuizQuestionTypeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_QuizQuestionTypeEnum_enumValues[] | null;\n}\n\nexport interface enumValues_ReadingGuideReviewOptionsEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_ReadingGuideReviewOptionsEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_ReadingGuideReviewOptionsEnum_enumValues[] | null;\n}\n\nexport interface enumValues_SchoolDayLengthEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_SchoolDayLengthEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_SchoolDayLengthEnum_enumValues[] | null;\n}\n\nexport interface enumValues_BehaviorQualityEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_BehaviorQualityEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_BehaviorQualityEnum_enumValues[] | null;\n}\n\nexport interface enumValues_BehaviorCategoryEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_BehaviorCategoryEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_BehaviorCategoryEnum_enumValues[] | null;\n}\n\nexport interface enumValues_OutOfClassDestinationEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_OutOfClassDestinationEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_OutOfClassDestinationEnum_enumValues[] | null;\n}\n\nexport interface enumValues_TextAnalysisCompletionEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_TextAnalysisCompletionEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_TextAnalysisCompletionEnum_enumValues[] | null;\n}\n\nexport interface enumValues_ReadingGuideMetricEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_ReadingGuideMetricEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_ReadingGuideMetricEnum_enumValues[] | null;\n}\n\nexport interface enumValues_ActivityTimeEnum_enumValues {\n  __typename: \"__EnumValue\";\n  name: string;\n}\n\nexport interface enumValues_ActivityTimeEnum {\n  __typename: \"__Type\";\n  enumValues: enumValues_ActivityTimeEnum_enumValues[] | null;\n}\n\nexport interface enumValues {\n  MarkingPeriod: enumValues_MarkingPeriod | null;\n  WritingLevelEnum: enumValues_WritingLevelEnum | null;\n  QuestionTypeEnum: enumValues_QuestionTypeEnum | null;\n  RubricSectionEnum: enumValues_RubricSectionEnum | null;\n  TimeOfDay: enumValues_TimeOfDay | null;\n  InformationStructureEnum: enumValues_InformationStructureEnum | null;\n  DiscussionTypesEnum: enumValues_DiscussionTypesEnum | null;\n  ProtocolAssessmentEnum: enumValues_ProtocolAssessmentEnum | null;\n  CourseMaxSizeEnum: enumValues_CourseMaxSizeEnum | null;\n  CourseTypeEnum: enumValues_CourseTypeEnum | null;\n  SchoolDayType: enumValues_SchoolDayType | null;\n  AcademicOutcomeTypes: enumValues_AcademicOutcomeTypes | null;\n  ProtocolActivityTypes: enumValues_ProtocolActivityTypes | null;\n  ContactTypeEnum: enumValues_ContactTypeEnum | null;\n  NounTypeEnum: enumValues_NounTypeEnum | null;\n  VerbTypeEnum: enumValues_VerbTypeEnum | null;\n  QuestionWordEnum: enumValues_QuestionWordEnum | null;\n  LessonTypeEnum: enumValues_LessonTypeEnum | null;\n  BehaviorEnum: enumValues_BehaviorEnum | null;\n  QuizQuestionDifficultyLevelEnum: enumValues_QuizQuestionDifficultyLevelEnum | null;\n  QuizQuestionTypeEnum: enumValues_QuizQuestionTypeEnum | null;\n  ReadingGuideReviewOptionsEnum: enumValues_ReadingGuideReviewOptionsEnum | null;\n  SchoolDayLengthEnum: enumValues_SchoolDayLengthEnum | null;\n  BehaviorQualityEnum: enumValues_BehaviorQualityEnum | null;\n  BehaviorCategoryEnum: enumValues_BehaviorCategoryEnum | null;\n  OutOfClassDestinationEnum: enumValues_OutOfClassDestinationEnum | null;\n  TextAnalysisCompletionEnum: enumValues_TextAnalysisCompletionEnum | null;\n  ReadingGuideMetricEnum: enumValues_ReadingGuideMetricEnum | null;\n  ActivityTimeEnum: enumValues_ActivityTimeEnum | null;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findCurrentMarkingPeriod\n// ====================================================\n\nexport interface findCurrentMarkingPeriod_findCurrentMarkingPeriod_markingPeriod {\n  __typename: \"MarkingPeriod\";\n  currentMarkingPeriod: MarkingPeriodEnum;\n}\n\nexport interface findCurrentMarkingPeriod_findCurrentMarkingPeriod {\n  __typename: \"FindCurrentMarkingPeriodPayload\";\n  markingPeriod: findCurrentMarkingPeriod_findCurrentMarkingPeriod_markingPeriod;\n}\n\nexport interface findCurrentMarkingPeriod {\n  findCurrentMarkingPeriod: findCurrentMarkingPeriod_findCurrentMarkingPeriod;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: SetCurrentMarkingPeriod\n// ====================================================\n\nexport interface SetCurrentMarkingPeriod_setCurrentMarkingPeriod_markingPeriod {\n  __typename: \"MarkingPeriod\";\n  currentMarkingPeriod: MarkingPeriodEnum;\n}\n\nexport interface SetCurrentMarkingPeriod_setCurrentMarkingPeriod {\n  __typename: \"SetCurrentMarkingPeriodPayload\";\n  markingPeriod: SetCurrentMarkingPeriod_setCurrentMarkingPeriod_markingPeriod;\n}\n\nexport interface SetCurrentMarkingPeriod {\n  setCurrentMarkingPeriod: SetCurrentMarkingPeriod_setCurrentMarkingPeriod;\n}\n\nexport interface SetCurrentMarkingPeriodVariables {\n  input: SetCurrentMarkingPeriodInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: me\n// ====================================================\n\nexport interface me_me_StudentForTeachersAid {\n  __typename: \"StudentForTeachersAid\";\n  userName: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  isActive: boolean;\n  _id: string | null;\n}\n\nexport interface me_me_Teacher_teachesCourses_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  startsAt: string;\n  endsAt: string;\n  halfDayStartsAt: string;\n  halfDayEndsAt: string;\n  hourDelayStartsAt: string;\n  hourDelayEndsAt: string;\n  schoolDayType: SchoolDayType;\n  assignmentsAllowedInClass: boolean;\n  isHidden: boolean;\n  checkReadingGuides: boolean;\n}\n\nexport interface me_me_Teacher_teachesCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n  hasCourseInfo: me_me_Teacher_teachesCourses_hasCourseInfo;\n}\n\nexport interface me_me_Teacher {\n  __typename: \"Teacher\";\n  userName: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  isActive: boolean;\n  _id: string | null;\n  title: TitleEnum;\n  teachesCourses: me_me_Teacher_teachesCourses[];\n}\n\nexport interface me_me_Student_inCourses_hasCourseInfo {\n  __typename: \"CourseInfo\";\n  _id: string | null;\n  startsAt: string;\n  endsAt: string;\n  halfDayStartsAt: string;\n  halfDayEndsAt: string;\n  hourDelayStartsAt: string;\n  hourDelayEndsAt: string;\n  schoolDayType: SchoolDayType;\n  assignmentsAllowedInClass: boolean;\n  isHidden: boolean;\n  checkReadingGuides: boolean;\n}\n\nexport interface me_me_Student_inCourses {\n  __typename: \"Course\";\n  _id: string | null;\n  name: string;\n  hasCourseInfo: me_me_Student_inCourses_hasCourseInfo;\n}\n\nexport interface me_me_Student_hasProgressTracker_readingGuideProgressTracker {\n  __typename: \"ReadingGuideMetric\";\n  levelPoints: number;\n  readingGuideLevel: ReadingGuideMetricEnum;\n}\n\nexport interface me_me_Student_hasProgressTracker_writingProgressTracker {\n  __typename: \"WritingMetric\";\n  levelPoints: number;\n  overallWritingLevel: WritingLevelEnum;\n}\n\nexport interface me_me_Student_hasProgressTracker {\n  __typename: \"ProgressTracker\";\n  readingGuideProgressTracker: me_me_Student_hasProgressTracker_readingGuideProgressTracker;\n  writingProgressTracker: me_me_Student_hasProgressTracker_writingProgressTracker;\n}\n\nexport interface me_me_Student_hasAbsences {\n  __typename: \"StudentAbsence\";\n  dayAbsent: any;\n}\n\nexport interface me_me_Student {\n  __typename: \"Student\";\n  userName: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  isActive: boolean;\n  _id: string | null;\n  hasIEP: boolean | null;\n  inCourses: me_me_Student_inCourses[];\n  hasProgressTracker: me_me_Student_hasProgressTracker;\n  hasAbsences: me_me_Student_hasAbsences[];\n}\n\nexport type me_me = me_me_StudentForTeachersAid | me_me_Teacher | me_me_Student;\n\nexport interface me {\n  me: me_me | null;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: checkAssignmentsAllowedInClass\n// ====================================================\n\nexport interface checkAssignmentsAllowedInClass_checkAssignmentsAllowedInClass {\n  __typename: \"CheckAssignmentsAllowedInClassPayload\";\n  allowed: boolean;\n}\n\nexport interface checkAssignmentsAllowedInClass {\n  checkAssignmentsAllowedInClass: checkAssignmentsAllowedInClass_checkAssignmentsAllowedInClass;\n}\n\nexport interface checkAssignmentsAllowedInClassVariables {\n  input: CheckAssignmentsAllowedInClassInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: findAllMarkingPeriodGrades\n// ====================================================\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Quiz_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Quiz_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Quiz {\n  __typename: \"Quiz\";\n  markingPeriod: MarkingPeriodEnum;\n  dueDate: string;\n  dueTime: string;\n  exempt: boolean;\n  missing: boolean;\n  score: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Quiz_score;\n  gradeType: GradeTypeEnum;\n  readings: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Quiz_readings;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_topic {\n  __typename: \"Topic\";\n  essayQuestionId: string;\n  question: string;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_readings {\n  __typename: \"Readings\";\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_finalDraft {\n  __typename: \"FinalDraftContainer\";\n  returned: boolean;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay {\n  __typename: \"Essay\";\n  markingPeriod: MarkingPeriodEnum;\n  dueDate: string;\n  dueTime: string;\n  exempt: boolean;\n  missing: boolean;\n  topic: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_topic;\n  readings: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_readings;\n  gradeType: GradeTypeEnum;\n  score: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_score;\n  finalDraft: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay_finalDraft | null;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide_readings {\n  __typename: \"Readings\";\n  readingSections: string;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide_readingGuideFinal {\n  __typename: \"ReadingGuideFinalContainer\";\n  submitted: boolean;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide {\n  __typename: \"ReadingGuide\";\n  markingPeriod: MarkingPeriodEnum;\n  dueDate: string;\n  dueTime: string;\n  exempt: boolean;\n  missing: boolean;\n  readings: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide_readings;\n  gradeType: GradeTypeEnum;\n  score: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide_score;\n  effort: ReadingGuideReviewOptionsEnum;\n  readingGuideFinal: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide_readingGuideFinal | null;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_SpecialAssignment_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_SpecialAssignment {\n  __typename: \"SpecialAssignment\";\n  markingPeriod: MarkingPeriodEnum;\n  dueDate: string;\n  dueTime: string;\n  exempt: boolean;\n  missing: boolean;\n  gradeType: GradeTypeEnum;\n  score: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_SpecialAssignment_score;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_TextAnalysis_score {\n  __typename: \"Score\";\n  earnedPoints: number;\n  maxPoints: number;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_TextAnalysis {\n  __typename: \"TextAnalysis\";\n  markingPeriod: MarkingPeriodEnum;\n  dueDate: string;\n  dueTime: string;\n  exempt: boolean;\n  missing: boolean;\n  gradeType: GradeTypeEnum;\n  score: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_TextAnalysis_score;\n}\n\nexport type findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments = findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Quiz | findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_Essay | findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_ReadingGuide | findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_SpecialAssignment | findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments_TextAnalysis;\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_responsibilityPoints {\n  __typename: \"ResponsibilityPoints\";\n  responsibilityPoints: number;\n}\n\nexport interface findAllMarkingPeriodGrades_findAllMarkingPeriodGrades {\n  __typename: \"FindAllMarkingPeriodGradesPayload\";\n  assignments: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments[];\n  responsibilityPoints: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_responsibilityPoints;\n}\n\nexport interface findAllMarkingPeriodGrades {\n  findAllMarkingPeriodGrades: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades;\n}\n\nexport interface findAllMarkingPeriodGradesVariables {\n  input: FindAllMarkingPeriodGradesInput;\n}\n\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum AcademicOutcomeTypes {\n  CAUSE_AND_EFFECT_RECOGNITION = \"CAUSE_AND_EFFECT_RECOGNITION\",\n  LOGIC_BUILDING = \"LOGIC_BUILDING\",\n  SCHEMA_BUIDING = \"SCHEMA_BUIDING\",\n  SOCRATIC_QUESTIONS = \"SOCRATIC_QUESTIONS\",\n}\n\nexport enum ActivityTimeEnum {\n  AFTER = \"AFTER\",\n  BEFORE = \"BEFORE\",\n  DURING = \"DURING\",\n}\n\nexport enum BasicQuestionEnum {\n  HOW = \"HOW\",\n  WHY = \"WHY\",\n}\n\nexport enum BehaviorCategoryEnum {\n  INDEPENDENT_WORK = \"INDEPENDENT_WORK\",\n  NEGATIVE_BEHAVIOR = \"NEGATIVE_BEHAVIOR\",\n  POSITIVE_BEHAVIOR = \"POSITIVE_BEHAVIOR\",\n  PREPAREDNESS = \"PREPAREDNESS\",\n  QUESTION_AND_ANSWER = \"QUESTION_AND_ANSWER\",\n}\n\nexport enum BehaviorQualityEnum {\n  NEGATIVE = \"NEGATIVE\",\n  NEUTRAL = \"NEUTRAL\",\n  POSITIVE = \"POSITIVE\",\n}\n\nexport enum ContactTypeEnum {\n  CONFERENCE = \"CONFERENCE\",\n  EMAIL = \"EMAIL\",\n  PHONE = \"PHONE\",\n  VIDEO = \"VIDEO\",\n}\n\nexport enum CourseMaxSizeEnum {\n  THIRTY = \"THIRTY\",\n  THIRTY_SIX = \"THIRTY_SIX\",\n  TWELVE = \"TWELVE\",\n  TWENTY_FOUR = \"TWENTY_FOUR\",\n  TWENTY_SIX = \"TWENTY_SIX\",\n}\n\nexport enum CourseTypeEnum {\n  ENGLISH_LANGUAGE_ARTS = \"ENGLISH_LANGUAGE_ARTS\",\n  MATH = \"MATH\",\n  RELATED_ARTS = \"RELATED_ARTS\",\n  SCIENCE = \"SCIENCE\",\n  SOCIAL_STUDIES = \"SOCIAL_STUDIES\",\n}\n\nexport enum DiscussionTypesEnum {\n  DISCUSSED = \"DISCUSSED\",\n  LITTLE_TO_NO_DISCUSSION = \"LITTLE_TO_NO_DISCUSSION\",\n  NOT_REQUIRED = \"NOT_REQUIRED\",\n  SOME_DISCUSSION = \"SOME_DISCUSSION\",\n  THOROUGHLY_DISCUSSED = \"THOROUGHLY_DISCUSSED\",\n}\n\nexport enum DynamicLessonEnums {\n  ASSIGNED_SEATING = \"ASSIGNED_SEATING\",\n  EXIT_ACTIVITY = \"EXIT_ACTIVITY\",\n  LESSON_DETAILS = \"LESSON_DETAILS\",\n  OFF = \"OFF\",\n  ON = \"ON\",\n  PROTOCOLS = \"PROTOCOLS\",\n  VOCAB = \"VOCAB\",\n  WARM_UP = \"WARM_UP\",\n}\n\nexport enum GradeTypeEnum {\n  PRIMARY = \"PRIMARY\",\n  SECONDARY = \"SECONDARY\",\n  SUPPORTIVE = \"SUPPORTIVE\",\n}\n\nexport enum LatenessTypeEnum {\n  EXCUSED = \"EXCUSED\",\n  UNEXCUSED = \"UNEXCUSED\",\n}\n\nexport enum LessonTypeEnum {\n  INTRODUCTORY = \"INTRODUCTORY\",\n  REINFORCEMENT = \"REINFORCEMENT\",\n}\n\nexport enum MarkingPeriodEnum {\n  FIRST = \"FIRST\",\n  FOURTH = \"FOURTH\",\n  SECOND = \"SECOND\",\n  THIRD = \"THIRD\",\n}\n\nexport enum NounTypeEnum {\n  IDEA = \"IDEA\",\n  IDEAS = \"IDEAS\",\n  PEOPLE = \"PEOPLE\",\n  PERSON = \"PERSON\",\n  PLACE = \"PLACE\",\n  PLACES = \"PLACES\",\n  THING = \"THING\",\n  THINGS = \"THINGS\",\n}\n\nexport enum OutOfClassDestinationEnum {\n  BAND_CHOIR = \"BAND_CHOIR\",\n  BATHROOM = \"BATHROOM\",\n  GUIDANCE = \"GUIDANCE\",\n  LOCKER = \"LOCKER\",\n  NURSE = \"NURSE\",\n  OFFICE = \"OFFICE\",\n  OTHER_CLASS = \"OTHER_CLASS\",\n}\n\nexport enum ProtocolActivityTypes {\n  INDIVIDUAL = \"INDIVIDUAL\",\n  SMALL_GROUP = \"SMALL_GROUP\",\n  THINK_PAIR_SHARE = \"THINK_PAIR_SHARE\",\n}\n\nexport enum ProtocolAssessmentEnum {\n  NO_EFFORT = \"NO_EFFORT\",\n  REFUSED_TO_WORK = \"REFUSED_TO_WORK\",\n  WORKED_POORLY = \"WORKED_POORLY\",\n  WORKED_VERY_WELL = \"WORKED_VERY_WELL\",\n  WORKED_WELL = \"WORKED_WELL\",\n}\n\nexport enum QuestionTypeEnum {\n  HOW_CAUSE_EFFECT = \"HOW_CAUSE_EFFECT\",\n  HOW_PROBLEM_SOLUTION = \"HOW_PROBLEM_SOLUTION\",\n  WHY_CAUSE_EFFECT = \"WHY_CAUSE_EFFECT\",\n}\n\nexport enum QuestionWordEnum {\n  HOW = \"HOW\",\n  WHY = \"WHY\",\n}\n\nexport enum QuizQuestionDifficultyLevelEnum {\n  CHALLENGING = \"CHALLENGING\",\n  DIFFICULT = \"DIFFICULT\",\n  EASY = \"EASY\",\n}\n\nexport enum QuizQuestionTypeEnum {\n  MULTIPLE_CHOICE = \"MULTIPLE_CHOICE\",\n  TRUE_FALSE = \"TRUE_FALSE\",\n}\n\nexport enum ReadingGuideMetricEnum {\n  ACADEMIC = \"ACADEMIC\",\n  ADVANCED = \"ADVANCED\",\n  BASIC = \"BASIC\",\n  DEVELOPING = \"DEVELOPING\",\n  MASTER = \"MASTER\",\n}\n\nexport enum ReadingGuideReviewOptionsEnum {\n  DID_NOT_ANSWER_QUESTIONS_CORRECTLY = \"DID_NOT_ANSWER_QUESTIONS_CORRECTLY\",\n  GOOD_EFFORT = \"GOOD_EFFORT\",\n  LITTLE_EFFORT = \"LITTLE_EFFORT\",\n  NO_EFFORT = \"NO_EFFORT\",\n  OFF_TOPIC = \"OFF_TOPIC\",\n  SOME_EFFORT = \"SOME_EFFORT\",\n  USED_OUTSIDE_INFO = \"USED_OUTSIDE_INFO\",\n}\n\nexport enum RubricSectionEnum {\n  ANSWER = \"ANSWER\",\n  CONCLUSION = \"CONCLUSION\",\n  OVERALL = \"OVERALL\",\n  PROOFREADING = \"PROOFREADING\",\n  TOPIC = \"TOPIC\",\n}\n\nexport enum SchoolDayLengthEnum {\n  FULL = \"FULL\",\n  HALF = \"HALF\",\n  NINETY_MINUTE_DELAY = \"NINETY_MINUTE_DELAY\",\n  ONE_HOUR_DELAY = \"ONE_HOUR_DELAY\",\n}\n\nexport enum SchoolDayType {\n  A = \"A\",\n  AB = \"AB\",\n  B = \"B\",\n}\n\nexport enum StudentCohortEnum {\n  RED = \"RED\",\n  WHITE = \"WHITE\",\n}\n\nexport enum TextAnalysisCompletionEnum {\n  FULL_COMPLETION = \"FULL_COMPLETION\",\n  MAIN_IDEAS_ONLY = \"MAIN_IDEAS_ONLY\",\n  MARKUP_ONLY = \"MARKUP_ONLY\",\n  NO_ATTEMPT = \"NO_ATTEMPT\",\n  PARTIAL_COMPLETION = \"PARTIAL_COMPLETION\",\n}\n\nexport enum TimeOfDay {\n  AFTER_SCHOOL = \"AFTER_SCHOOL\",\n  BEFORE_CLASS = \"BEFORE_CLASS\",\n  BEFORE_SCHOOL = \"BEFORE_SCHOOL\",\n  END_OF_CLASS = \"END_OF_CLASS\",\n}\n\nexport enum TitleEnum {\n  MISS = \"MISS\",\n  MR = \"MR\",\n  MRS = \"MRS\",\n  MS = \"MS\",\n}\n\nexport enum VerbTypeEnum {\n  ACTION = \"ACTION\",\n  BEING = \"BEING\",\n  FEELING = \"FEELING\",\n  HAVING = \"HAVING\",\n}\n\nexport enum WritingLevelEnum {\n  ACADEMIC = \"ACADEMIC\",\n  ADVANCED = \"ADVANCED\",\n  DEVELOPING = \"DEVELOPING\",\n}\n\nexport interface AcademicSentenceStructureInput {\n  object?: string | null;\n  subject: string;\n  subjectCompliment?: string | null;\n  verb: string;\n}\n\nexport interface ActivateQuizInput {\n  activate: boolean;\n  quizId: string;\n}\n\nexport interface AddCourseToTeacherInput {\n  courseId: string;\n  teacherId: string;\n}\n\nexport interface AddNewChapterInput {\n  chapterNumber: number;\n  chapterTitle: string;\n  textTitle: string;\n}\n\nexport interface AddNewTextInput {\n  ownerId: string;\n  textTitle: string;\n}\n\nexport interface AddStudentsToCourseInput {\n  courseId: string;\n  studentIds: string[];\n}\n\nexport interface AdvancedSentenceStructureInput {\n  object?: string | null;\n  subject: string;\n  subjectCompliment?: string | null;\n  verb: string;\n}\n\nexport interface AnswerListInput {\n  answer: string;\n  correct: boolean;\n  partiallyCorrect: boolean;\n  removable: boolean;\n}\n\nexport interface AssessIndividualProtocolsInput {\n  assessment?: ProtocolAssessmentEnum | null;\n  markingPeriod: MarkingPeriodEnum;\n  protocolId: string;\n  responsibilityPoints: number;\n}\n\nexport interface AssessStudentProtocolInput {\n  assessment?: ProtocolAssessmentEnum | null;\n  assignedDate?: string | null;\n  discussionLevel?: DiscussionTypesEnum | null;\n  markingPeriod: MarkingPeriodEnum;\n  partnerIds?: string[] | null;\n  protocolActivityType: ProtocolActivityTypes;\n  responsibilityPoints: number;\n  studentId: string;\n  task: string;\n}\n\nexport interface AssignEssaysInput {\n  assignedDate: any;\n  associatedLessonId: string;\n  dueDate: any;\n  studentIds: string[];\n}\n\nexport interface AssignQuizzesByStudentIdsAndDateInput {\n  assign: boolean;\n  assignedDate?: string | null;\n  studentIds: string[];\n}\n\nexport interface AssignReadingGuidesInput {\n  assignedDate: any;\n  associatedLessonId: string;\n  dueDate: any;\n  studentIds: string[];\n}\n\nexport interface AssignSeatsInput {\n  cohortBasedSeating: boolean;\n  courseId: string;\n  seat?: StudentSeatInput | null;\n}\n\nexport interface BuildRubricEntryInput {\n  entry: string;\n  howToImprove?: string | null;\n  rubricSection: RubricSectionEnum;\n  rubricWritingLevels: WritingLevelEnum[];\n  score: number;\n}\n\nexport interface ChangePasswordInput {\n  newPassword: string;\n  oldPassword: string;\n  userName: string;\n}\n\nexport interface CheckAssignmentsAllowedInClassInput {\n  courseId: string;\n}\n\nexport interface CheckQuizQuestionsForTextSectionsInput {\n  textSectionIds: string[];\n}\n\nexport interface CheckTextAnalysisInput {\n  finishedEssentialQuestion: boolean;\n  onTask: boolean;\n  startedPromptly: boolean;\n  textAnalysisCompletion: TextAnalysisCompletionEnum;\n  textAnalysisId: string;\n  workedWellWithGroup: boolean;\n}\n\nexport interface ControlCoolDownInput {\n  academicOutcomeType: AcademicOutcomeTypes;\n  activityTime: ActivityTimeEnum;\n  isActive: boolean;\n  lessonId: string;\n  markingPeriod: MarkingPeriodEnum;\n  protocolActivityType: ProtocolActivityTypes;\n  studentIds: string[];\n  task: string;\n}\n\nexport interface ControlWarmUpInput {\n  academicOutcomeType: AcademicOutcomeTypes;\n  activityTime: ActivityTimeEnum;\n  isActive: boolean;\n  lessonId: string;\n  markingPeriod: MarkingPeriodEnum;\n  protocolActivityType: ProtocolActivityTypes;\n  studentIds: string[];\n  task: string;\n}\n\nexport interface CreateAbsenceInput {\n  dayAbsent: any;\n  markingPeriod: MarkingPeriodEnum;\n  studentId: string;\n}\n\nexport interface CreateArticleReviewsInput {\n  assignedCourseId: string[];\n  assignedDate: string;\n  dueDate: string;\n  dueTime: TimeOfDay;\n  hasAssignerId: string;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface CreateBatchStudentBehaviorInput {\n  behaviorTypeId: string;\n  markingPeriod: MarkingPeriodEnum;\n  responsibilityPoints: number;\n  studentIds: string[];\n}\n\nexport interface CreateBehaviorTypeInput {\n  behaviorCategory: BehaviorCategoryEnum;\n  behaviorName: string;\n  behaviorQuality: BehaviorQualityEnum;\n  forTeachersAid: boolean;\n  points: number;\n}\n\nexport interface CreateCourseInfoInput {\n  cohortBasedSeating: boolean;\n  courseId: string;\n  courseMaxSize: CourseMaxSizeEnum;\n  courseType: CourseTypeEnum;\n  endsAt: string;\n  halfDayEndsAt: string;\n  halfDayStartsAt: string;\n  hourDelayEndsAt: string;\n  hourDelayStartsAt: string;\n  schoolDayType: SchoolDayType;\n  startsAt: string;\n}\n\nexport interface CreateCourseInput {\n  name: string;\n}\n\nexport interface CreateEssayInput {\n  assignedCourseId: string[];\n  assignedDate: string;\n  associatedLessonId: string;\n  dueDate: string;\n  dueTime: TimeOfDay;\n  hasAssignerId: string;\n  markingPeriod: MarkingPeriodEnum;\n  maxPoints: number;\n  readings: ReadingsInput;\n  topicList: TopicInput[];\n}\n\nexport interface CreateEssayQuestionInput {\n  associatedTextSectionsIds: string[];\n  questionPartsInput: QuestionPartsContainerInput;\n}\n\nexport interface CreateEssentialQuestionInput {\n  associatedTextSectionsIds: string[];\n  question: string;\n}\n\nexport interface CreateLatenessInput {\n  dayLate: string;\n  latenessType: LatenessTypeEnum;\n  markingPeriod: MarkingPeriodEnum;\n  studentId: string;\n}\n\nexport interface CreateLessonInput {\n  afterActivity: TextSectionProtocolsInput;\n  assignedCourses: string[];\n  assignedDate: any;\n  assignedMarkingPeriod: MarkingPeriodEnum;\n  assignedSectionIdList: string[];\n  assignedSections: LessonTextSectionsInput;\n  beforeActivity: TextSectionProtocolsInput;\n  duringActivities: TextSectionProtocolsInput[];\n  essentialQuestion: string;\n  inUnit: string;\n  lessonName: string;\n  lessonType: LessonTypeEnum;\n  pageNumbers: PageNumbersInput;\n  questionList: TextSectionQuestionsInput[];\n  vocabList: TextSectionVocabInput[];\n}\n\nexport interface CreateParentContactInput {\n  contactType: ContactTypeEnum;\n  contentOfContact: string;\n  date: string;\n  studentId: string;\n  teacherId: string;\n}\n\nexport interface CreateProtocolInput {\n  academicOutcomeType: AcademicOutcomeTypes;\n  activityTime: ActivityTimeEnum;\n  lessonId: string;\n  markingPeriod: MarkingPeriodEnum;\n  protocolActivityType: ProtocolActivityTypes;\n  studentIds: string[];\n  task: string;\n}\n\nexport interface CreateQuizQuestionInput {\n  answerList: AnswerListInput[];\n  associatedTextSectionId: string;\n  difficultyLevel: QuizQuestionDifficultyLevelEnum;\n  question: string;\n  questionType: QuizQuestionTypeEnum;\n}\n\nexport interface CreateQuizzesByCourseInput {\n  assignedDate: string;\n  assignedSectionIds: string[];\n  courseIds: string[];\n  dueDate: string;\n  dueTime: string;\n  hasAssigner: string;\n  markingPeriod: MarkingPeriodEnum;\n  readings: ReadingsInput;\n}\n\nexport interface CreateReadingGuideInput {\n  assignedCourseIds: string[];\n  assignedDate: string;\n  associatedLessonId: string;\n  dueDate: string;\n  dueTime: TimeOfDay;\n  hasAssignerId: string;\n  markingPeriod: MarkingPeriodEnum;\n  maxPoints: number;\n  readings: ReadingsInput;\n}\n\nexport interface CreateSchoolDayInput {\n  cohortWeek: StudentCohortEnum;\n  currentSchoolDayType: SchoolDayType;\n  schoolDayCount: number;\n  schoolDayLength: SchoolDayLengthEnum;\n}\n\nexport interface CreateSignInSheetsInput {\n  courseIds: string[];\n  todaysDate: string;\n}\n\nexport interface CreateStudentBehaviorInput {\n  behaviorTypeId: string;\n  date: string;\n  markingPeriod: MarkingPeriodEnum;\n  responsibilityPoints: number;\n  studentId: string;\n}\n\nexport interface CreateStudentOutOfClassInput {\n  date: string;\n  markingPeriod: MarkingPeriodEnum;\n  outOfClassDestination: OutOfClassDestinationEnum;\n  studentId: string;\n}\n\nexport interface CreateStudentQuestionInput {\n  courseId: string;\n  question: string;\n  studentId: string;\n}\n\nexport interface CreateTemporaryTasksInput {\n  courseId: string;\n  dateIssued: string;\n  markingPeriod: MarkingPeriodEnum;\n  taskNumber: number;\n}\n\nexport interface CreateTextSectionInput {\n  fromChapterId: string;\n  hasProtocols: TextSectionProtocolsInput[];\n  hasQuestions: TextSectionQuestionsInput[];\n  hasVocab: TextSectionVocabInput[];\n  header: string;\n  numberOfParagraphs: number;\n  orderNumber?: number | null;\n  pageNumbers: PageNumbersInput;\n}\n\nexport interface CreateUnexcusedLatenessInput {\n  dayLate: string;\n  markingPeriod: MarkingPeriodEnum;\n  studentId: string;\n}\n\nexport interface CreateUnitInput {\n  unitName: string;\n}\n\nexport interface DeleteBehaviorTypeInput {\n  behaviorTypeId: string;\n}\n\nexport interface DevelopingSentenceStructureInput {\n  object?: string | null;\n  subject: string;\n  subjectCompliment?: string | null;\n  verb: string;\n}\n\nexport interface EditBehaviorTypesInput {\n  behaviorCategory: BehaviorCategoryEnum;\n  behaviorName: string;\n  behaviorQuality: BehaviorQualityEnum;\n  behaviorTypeId: string;\n  forTeachersAid: boolean;\n  points: number;\n}\n\nexport interface FindActiveProtocolByStudentInput {\n  studentId: string;\n}\n\nexport interface FindActiveProtocolsByCourseInput {\n  courseId: string;\n}\n\nexport interface FindAllMarkingPeriodGradesInput {\n  markingPeriod: MarkingPeriodEnum;\n  studentId: string;\n}\n\nexport interface FindArticleReviewByIdInput {\n  articleReviewId: string;\n}\n\nexport interface FindArticleReviewsByCourseInput {\n  courseId: string;\n  markingPeriod?: MarkingPeriodEnum | null;\n}\n\nexport interface FindArticleReviewsByStudentInput {\n  markingPeriod: MarkingPeriodEnum;\n  studentId: string;\n}\n\nexport interface FindAssignmentByIdInput {\n  assignmentId: string;\n}\n\nexport interface FindAssignmentByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindAssignmentsByCourseIdInput {\n  courseId: string;\n}\n\nexport interface FindBehaviorsByStudentIdAndDateInput {\n  date: string;\n  studentId: string;\n}\n\nexport interface FindChaptersByTextIdInput {\n  textId: string;\n}\n\nexport interface FindChaptersInTextInput {\n  textTitle: string;\n}\n\nexport interface FindCompletedEssaysByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindContactsByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindCourseByIdInput {\n  courseId: string;\n}\n\nexport interface FindCourseInfoByCourseIdInput {\n  courseId: string;\n}\n\nexport interface FindCoursesByIdInput {\n  _ids: string[];\n}\n\nexport interface FindEssayByIdInput {\n  _id: string;\n}\n\nexport interface FindEssayQuestionByIdInput {\n  essayQuestionId: string;\n}\n\nexport interface FindEssayQuestionsForLessonInput {\n  sectionIds: string[];\n}\n\nexport interface FindEssaysByAssociatedLessonIdAndCourseIdInput {\n  courseId: string;\n  lessonId: string;\n}\n\nexport interface FindEssaysByAssociatedLessonIdInput {\n  associatedLessonId: string;\n}\n\nexport interface FindEssaysByCourseIdAndTitleInput {\n  courseId: string;\n  essayTitle: string;\n}\n\nexport interface FindEssaysByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindEssaysByTopicInput {\n  question: string;\n}\n\nexport interface FindEssaysToCompleteByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindEssaysToGradeByIdInput {\n  teacherId: string;\n}\n\nexport interface FindEssentialQuestionsByAssociatedTextSectionIdsInput {\n  textSectionIds: string[];\n}\n\nexport interface FindLessonByCourseAndDateInput {\n  courseId: string;\n  lessonDate: any;\n}\n\nexport interface FindLessonByCourseInput {\n  courseId: string;\n}\n\nexport interface FindLessonByIdInput {\n  _id: string;\n}\n\nexport interface FindLessonStatusInput {\n  lessonId: string;\n}\n\nexport interface FindLessonsByAssignedDateInput {\n  assignedDate: string;\n}\n\nexport interface FindLessonsByUnitInput {\n  courseId: string;\n  unitId: string;\n}\n\nexport interface FindParentContactsByTeacherIdInput {\n  teacherId: string;\n}\n\nexport interface FindProtocolResponsesInput {\n  courseId: string;\n  date: string;\n}\n\nexport interface FindQuizByIdInput {\n  quizId: string;\n}\n\nexport interface FindQuizQuestionsByQuizzableSectionsInput {\n  quizzableSectionIds: string[];\n}\n\nexport interface FindQuizQuestionsByTextSectionIdInput {\n  associatedTextSectionId: string;\n}\n\nexport interface FindQuizzesByStudentIdInput {\n  markingPeriod: MarkingPeriodEnum;\n  studentId: string;\n}\n\nexport interface FindQuizzesForCourseByAssignedDateInput {\n  assignedDate: string;\n  courseId: string;\n}\n\nexport interface FindReadingGuideByIdInput {\n  readingGuideId: string;\n}\n\nexport interface FindReadingGuideByUserIdAndReadingSectionInput {\n  readingSections: string;\n  studentId: string;\n}\n\nexport interface FindReadingGuidesByAssociatedLessonAndCourseIdInput {\n  courseId: string;\n  lessonId: string;\n}\n\nexport interface FindReadingGuidesByCourseIdAndAssignedDateInput {\n  assignedDate?: string | null;\n  courseId: string;\n}\n\nexport interface FindReadingGuidesByMarkingPeriodInput {\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface FindReadingGuidesToCompleteByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindResponsibilityPointsByCourseInput {\n  courseId: string;\n}\n\nexport interface FindResponsibilityPointsByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindSGOEssaysByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindSchoolDayAndLessonInput {\n  courseId: string;\n  todaysDate: string;\n}\n\nexport interface FindSchoolDayByDateInput {\n  date: any;\n}\n\nexport interface FindStudentByIdForTeachersAidInput {\n  studentId: string;\n}\n\nexport interface FindStudentByIdInput {\n  studentId: string;\n}\n\nexport interface FindStudentOutOfClassByPeriodNameAndDateInput {\n  courseId: string;\n  date: string;\n}\n\nexport interface FindStudentOutOfClassByStudentIdAndMarkingPeriodInput {\n  markingPeriod: MarkingPeriodEnum;\n  studentId: string;\n}\n\nexport interface FindStudentQuestionsInput {\n  courseId: string;\n  date: string;\n}\n\nexport interface FindStudentsByCourseInput {\n  courseId: string;\n}\n\nexport interface FindTemporaryTasksByStudentIdInput {\n  studentId: string;\n}\n\nexport interface FindTemporaryTasksInput {\n  courseId: string;\n  dateIssued: string;\n}\n\nexport interface FindTextSectionByIdInput {\n  _id: string;\n}\n\nexport interface FindTextSectionsByChapterInput {\n  fromChapterId: string;\n}\n\nexport interface FindTextSectionsByIdInput {\n  _ids: string[];\n}\n\nexport interface FindUserDataInput {\n  _id: string;\n}\n\nexport interface FinishProtocolInput {\n  assignedDate: any;\n  lessonId: string;\n  studentIds: string[];\n  task: string;\n}\n\nexport interface FinishQuizInput {\n  earnedPoints: number;\n  quizId: string;\n  responsibilityPoints: number;\n}\n\nexport interface ForceFinishQuizInput {\n  quizId: string;\n}\n\nexport interface GradeTemporaryTaskInput {\n  _id: string;\n  answered: boolean;\n  lastGrade: number;\n  responsibilityPoints: number;\n}\n\nexport interface InitializeStudentsInput {\n  courseId: string;\n  studentIds: string[];\n}\n\nexport interface LessonTextSectionsInput {\n  endingSection: string;\n  startingSection: string;\n}\n\nexport interface LoginInput {\n  password: string;\n  userName: string;\n}\n\nexport interface MarkExemptInput {\n  assignmentId: string;\n  exemptStatus: boolean;\n}\n\nexport interface MarkLessonForSGOInput {\n  sectionIds: string[];\n}\n\nexport interface MarkTemporaryTaskAbsentInput {\n  studentPresent?: boolean | null;\n  taskId: string;\n}\n\nexport interface PageNumbersInput {\n  endingPage: number;\n  startingPage: number;\n}\n\nexport interface PasswordCheckInput {\n  password: string;\n}\n\nexport interface QuestionPartsContainerInput {\n  completePredicate: string;\n  completeSubject: string;\n  compoundNoun: boolean;\n  helpingVerb: string;\n  modifiedQuestion: string;\n  nounType: NounTypeEnum;\n  object?: string | null;\n  originalQuestion: string;\n  questionType: QuestionTypeEnum;\n  questionWord: QuestionWordEnum;\n  simplePredicate: string;\n  simpleSubject: string;\n  subjectCompliment?: string | null;\n  verbType: VerbTypeEnum;\n}\n\nexport interface ReadingsInput {\n  readingPages: string;\n  readingSections: string;\n}\n\nexport interface RegisterStudentInput {\n  cohort: StudentCohortEnum;\n  email?: string | null;\n  firstName: string;\n  hasIEP?: boolean | null;\n  lastName: string;\n  middleName?: string | null;\n  password: string;\n  schoolId?: string | null;\n  userName: string;\n  virtual: boolean;\n}\n\nexport interface RemoveAbsenceInput {\n  _id: string;\n}\n\nexport interface RemoveAssignedSeatInput {\n  cohortBased: boolean;\n  cohortType?: StudentCohortEnum | null;\n  courseId: string;\n  deskNumber: number;\n}\n\nexport interface RemoveCourseInput {\n  courseId: string;\n}\n\nexport interface RemoveLatenessInput {\n  _id: string;\n}\n\nexport interface RemoveProtocolInput {\n  assignedDate: any;\n  lessonId: string;\n  markingPeriod: MarkingPeriodEnum;\n  studentIds: string[];\n  task: string;\n}\n\nexport interface RemoveRubricEntryInput {\n  rubricEntryId: string;\n}\n\nexport interface RemoveStudentBehaviorInput {\n  markingPeriod: MarkingPeriodEnum;\n  studentBehaviorId: string;\n}\n\nexport interface ResetPasswordInput {\n  userId: string;\n}\n\nexport interface RespondToProtocolInput {\n  protocolId: string;\n  response: string;\n}\n\nexport interface ResubmitEssayFinalDraftInput {\n  essayId: string;\n  submittedFinalDraft: SubmittedFinalDraftsInput;\n}\n\nexport interface ReturnArticleReviewInput {\n  articleReviewId: string;\n}\n\nexport interface ReturnGradedEssayInput {\n  _id: string;\n  additionalComments?: string[] | null;\n  draftNumber: number;\n  gradingDraft: string;\n  rubricEntries: ReturnedRubricEntryInput[];\n  score: number;\n}\n\nexport interface ReturnedRubricEntryInput {\n  _id?: string | null;\n  entry: string;\n  howToImprove?: string | null;\n  rubricSection: RubricSectionEnum;\n  score: number;\n}\n\nexport interface ReviewReadingGuidesInput {\n  effort: ReadingGuideReviewOptionsEnum;\n  readingGuideId: string;\n}\n\nexport interface RubricEntryInput {\n  entry: string;\n  rubricSection: RubricSectionEnum;\n  rubricWritingLevels: WritingLevelEnum[];\n  score: number;\n}\n\nexport interface SetAnswerTypeInput {\n  essayId: string;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface SetCurrentMarkingPeriodInput {\n  currentMarkingPeriod: MarkingPeriodEnum;\n}\n\nexport interface SetOrganizerInput {\n  essayId: string;\n  writingLevel: WritingLevelEnum;\n}\n\nexport interface SetRestatementInput {\n  essayId: string;\n  restatement: string;\n}\n\nexport interface StartProtocolInput {\n  isActive: boolean;\n  lessonId: string;\n  task: string;\n}\n\nexport interface StartQuizInput {\n  quizId: string;\n}\n\nexport interface StartReadingGuideInput {\n  paperBased: boolean;\n  readingGuideId: string;\n}\n\nexport interface StudentReturnedToClassInput {\n  outOfClassId: string;\n}\n\nexport interface StudentSeatInput {\n  deskNumber: number;\n  redCohortStudentId?: string | null;\n  studentId?: string | null;\n  whiteCohortStudentId?: string | null;\n}\n\nexport interface StudentSignInInput {\n  courseId: string;\n  lessonDate: string;\n  studentId: string;\n  virtual?: boolean | null;\n}\n\nexport interface SubmitArticleReviewInput {\n  articleReviewId: string;\n  markingPeriod: MarkingPeriodEnum;\n}\n\nexport interface SubmitEssayFinalDraftInput {\n  _id: string;\n  late: boolean;\n  paperBased: boolean;\n  responsibilityPoints: number;\n  submittedFinalDraft: SubmittedFinalDraftsInput;\n  submitTime: string;\n}\n\nexport interface SubmitReadingGuideInput {\n  completeReadingGuide?: boolean | null;\n  late: boolean;\n  paperBased: boolean;\n  readingGuideId: string;\n  responsibilityPoints: number;\n  submitTime: string;\n}\n\nexport interface SubmittedFinalDraftsInput {\n  additionalComments?: string[] | null;\n  draft: any;\n  draftNumber: number;\n  graded: boolean;\n  gradingDraft: any;\n  rubricEntries: RubricEntryInput[];\n  score: number;\n}\n\nexport interface SwitchToNewCourseInput {\n  newCourseId: string;\n  oldCourseId: string;\n  studentId: string;\n}\n\nexport interface TextSectionProtocolsInput {\n  academicOutcomeTypes: AcademicOutcomeTypes;\n  activityType: ProtocolActivityTypes;\n  completed: boolean;\n  directions?: string | null;\n  isActive: boolean;\n  task: string;\n}\n\nexport interface TextSectionQuestionsInput {\n  question: string;\n  questionType: QuestionTypeEnum;\n}\n\nexport interface TextSectionVocabInput {\n  definition: string;\n  word: string;\n}\n\nexport interface ToggleAssignmentsAllowedInClassInput {\n  courseId: string;\n}\n\nexport interface ToggleReadingGuideCheckInput {\n  courseId: string;\n}\n\nexport interface TopicInput {\n  essayQuestionId: string;\n  question: string;\n  questionType: QuestionTypeEnum;\n  writingLevel: WritingLevelEnum;\n}\n\nexport interface UnAssignQuizByQuizIdInput {\n  quizId: string;\n}\n\nexport interface UpdateAcademicOrganizerInput {\n  academicSentenceStructure: AcademicSentenceStructureInput;\n  conclusion: string;\n  essayId: string;\n  restatement: string;\n}\n\nexport interface UpdateAdvancedOrganizerInput {\n  advancedSentenceStructure: AdvancedSentenceStructureInput;\n  conclusion: string;\n  essayId: string;\n  restatement: string;\n}\n\nexport interface UpdateArticleReviewInput {\n  articleAuthor: string;\n  articleLink: string;\n  articleReviewId: string;\n  articleTitle: string;\n  bias?: boolean | null;\n  issue: string;\n  publishedDate?: string | null;\n  solutions?: string | null;\n  topicsImportance: string;\n}\n\nexport interface UpdateCourseInfoInput {\n  cohortBasedSeating?: boolean | null;\n  courseId: string;\n  courseMaxSize: CourseMaxSizeEnum;\n  courseType?: CourseTypeEnum | null;\n  endsAt?: string | null;\n  halfDayEndsAt?: string | null;\n  halfDayStartsAt?: string | null;\n  name: string;\n  schoolDayType?: SchoolDayType | null;\n  startsAt?: string | null;\n}\n\nexport interface UpdateDevelopingOrganizerInput {\n  answer: string;\n  basicQuestionType: BasicQuestionEnum;\n  conclusion: string;\n  developingSentenceStructure: DevelopingSentenceStructureInput;\n  essayId: string;\n  restatement: string;\n}\n\nexport interface UpdateDynamicLessonInput {\n  dynamicLessonUpdate: DynamicLessonEnums;\n  lessonId: string;\n}\n\nexport interface UpdateGradingDraftInput {\n  draftNumber?: number | null;\n  essayId: string;\n  gradingDraft?: any | null;\n}\n\nexport interface UpdateHowCauseEffectInput {\n  after: string;\n  before: string;\n  cause: string;\n  essayId: string;\n}\n\nexport interface UpdateLessonInput {\n  afterActivity: TextSectionProtocolsInput;\n  assignedDate: any;\n  assignedMarkingPeriod: MarkingPeriodEnum;\n  assignedSectionIdList: string[];\n  assignedSections: LessonTextSectionsInput;\n  beforeActivity: TextSectionProtocolsInput;\n  duringActivities: TextSectionProtocolsInput[];\n  essentialQuestion: string;\n  inUnit: string;\n  lessonName: string;\n  linkedCourseIds: string[];\n  pageNumbers: PageNumbersInput;\n  questionList: TextSectionQuestionsInput[];\n  vocabList: TextSectionVocabInput[];\n}\n\nexport interface UpdateLessonProtocolInput {\n  assignedDate: any;\n  isActive: boolean;\n  lessonId: string;\n  studentIds: string[];\n  task: string;\n}\n\nexport interface UpdateProblemSolutionInput {\n  essayId: string;\n  problem: string;\n  reasonForProblem: string;\n  solvedBy: string;\n  whySolutionSolved: string;\n}\n\nexport interface UpdateReadingGuideInput {\n  answer?: string | null;\n  questionType?: string | null;\n  readingGuideId: string;\n}\n\nexport interface UpdateResponsibilityPointsInput {\n  markingPeriod?: MarkingPeriodEnum | null;\n  points: number;\n  studentId: string;\n}\n\nexport interface UpdateRubricEntryInput {\n  entry: string;\n  howToImprove?: string | null;\n  rubricEntryId: string;\n  rubricSection: RubricSectionEnum;\n  rubricWritingLevels: WritingLevelEnum[];\n  score: number;\n}\n\nexport interface UpdateSchoolDayInput {\n  schoolDayId: string;\n  schoolDayLength: SchoolDayLengthEnum;\n  updatedCohortWeek: StudentCohortEnum;\n  updatedCurrentSchoolDayType: SchoolDayType;\n  updatedDate: any;\n  updatedSchoolDayCount: number;\n}\n\nexport interface UpdateTextSectionInput {\n  _id: string;\n  fromChapterId: string;\n  hasProtocols: TextSectionProtocolsInput[];\n  hasQuestions: TextSectionQuestionsInput[];\n  hasVocab: TextSectionVocabInput[];\n  header: string;\n  numberOfParagraphs: number;\n  orderNumber?: number | null;\n  pageNumbers: PageNumbersInput;\n}\n\nexport interface UpdateUserActiveInput {\n  isActive: boolean;\n  userId: string;\n}\n\nexport interface UpdateWhyCauseEffectInput {\n  essayId: string;\n  proximateCause: string;\n  ultimateCause: string;\n}\n\nexport interface UpdateWorkingDraftInput {\n  _id: string;\n  updatedDraft: any;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import { Machine, assign } from 'xstate'\nimport { MarkingPeriodEnum } from '../../../../../schemaTypes'\n\nexport type studentAssignmentMachineSchema = {\n  states: {\n    essaysToComplete: {}\n    completedEssays: {}\n    readingGuidesToComplete: {}\n    articleReviewsToComplete: {}\n    quizzes: {}\n    allAssignments: {}\n  }\n}\nexport type studentAssignmentMachineEvent =\n  | { type: 'PREVIOUS' }\n  | { type: 'ESSAYS_TO_COMPLETE' }\n  | { type: 'COMPLETED_ESSAYS' }\n  | { type: 'READING_GUIDES' }\n  | { type: 'ARTICLE_REVIEWS' }\n  | { type: 'QUIZZES' }\n  | { type: 'ALL_ASSIGNMENTS' }\n  | { type: 'SET_MARKING_PERIOD'; payload: MarkingPeriodEnum }\n\nexport type studentAssignmentMachineContext = {\n  selectedMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const studentAssignmentMachine = Machine<\n  studentAssignmentMachineContext,\n  studentAssignmentMachineSchema,\n  studentAssignmentMachineEvent\n>({\n  id: 'studentAssignments',\n  initial: 'essaysToComplete',\n  context: {\n    selectedMarkingPeriod: MarkingPeriodEnum.FIRST,\n  },\n  states: {\n    essaysToComplete: {\n      on: {\n        COMPLETED_ESSAYS: 'completedEssays',\n        READING_GUIDES: 'readingGuidesToComplete',\n        ARTICLE_REVIEWS: 'articleReviewsToComplete',\n        QUIZZES: 'quizzes',\n        ALL_ASSIGNMENTS: 'allAssignments',\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedMarkingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    completedEssays: {\n      on: {\n        ESSAYS_TO_COMPLETE: 'essaysToComplete',\n        READING_GUIDES: 'readingGuidesToComplete',\n        ARTICLE_REVIEWS: 'articleReviewsToComplete',\n        QUIZZES: 'quizzes',\n        ALL_ASSIGNMENTS: 'allAssignments',\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedMarkingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    readingGuidesToComplete: {\n      on: {\n        COMPLETED_ESSAYS: 'completedEssays',\n        ESSAYS_TO_COMPLETE: 'essaysToComplete',\n        ARTICLE_REVIEWS: 'articleReviewsToComplete',\n        QUIZZES: 'quizzes',\n        ALL_ASSIGNMENTS: 'allAssignments',\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedMarkingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    articleReviewsToComplete: {\n      on: {\n        ESSAYS_TO_COMPLETE: 'essaysToComplete',\n        COMPLETED_ESSAYS: 'completedEssays',\n        READING_GUIDES: 'readingGuidesToComplete',\n        QUIZZES: 'quizzes',\n        ALL_ASSIGNMENTS: 'allAssignments',\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedMarkingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    quizzes: {\n      on: {\n        ESSAYS_TO_COMPLETE: 'essaysToComplete',\n        COMPLETED_ESSAYS: 'completedEssays',\n        READING_GUIDES: 'readingGuidesToComplete',\n        ARTICLE_REVIEWS: 'articleReviewsToComplete',\n        ALL_ASSIGNMENTS: 'allAssignments',\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedMarkingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    allAssignments: {\n      on: {\n        ESSAYS_TO_COMPLETE: 'essaysToComplete',\n        COMPLETED_ESSAYS: 'completedEssays',\n        READING_GUIDES: 'readingGuidesToComplete',\n        ARTICLE_REVIEWS: 'articleReviewsToComplete',\n        QUIZZES: 'quizzes',\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedMarkingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  studentAssignmentMachine,\n  studentAssignmentMachineContext,\n  studentAssignmentMachineEvent,\n} from './studentAssignmentMachine'\n\nconst StudentAssignmentContext = createContext<any>(undefined)\n\ntype StudentAssignmentContextProps = {\n  children: ReactNode\n}\n\nexport const StudentAssignmentContextProvider: FC<\n  StudentAssignmentContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(studentAssignmentMachine)\n  return (\n    <StudentAssignmentContext.Provider value={[state, event]}>\n      {children}\n    </StudentAssignmentContext.Provider>\n  )\n}\n\nexport function useStudentAssignmentContextProvider() {\n  const context = useContext(StudentAssignmentContext)\n  if (context === undefined) {\n    throw new Error(\n      'useStudentAssignmentContextProvider must be used within a StudentAssignmentContextProvider',\n    )\n  }\n  return context as [\n    State<\n      studentAssignmentMachineContext,\n      studentAssignmentMachineEvent,\n      any,\n      any\n    >,\n    (event: studentAssignmentMachineEvent) => void,\n  ]\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport { useToggle } from '../../../../../../hooks'\nimport {\n  findEssaysToComplete_findEssaysToCompleteByStudentId_essays,\n  findReadingGuideByUserIdAndReadingSection,\n  findReadingGuideByUserIdAndReadingSectionVariables,\n  me_me_Student,\n} from '../../../../../../schemaTypes'\nimport { AssignmentLink } from '../../state-n-styles/assignmentsStyles'\n\nexport type ReadingGuideCheckProps = {\n  essay: findEssaysToComplete_findEssaysToCompleteByStudentId_essays\n}\n\nexport const CHECK_READING_GUIDE_STATUS_QUERY = gql`\n  query findReadingGuideByUserIdAndReadingSection(\n    $input: FindReadingGuideByUserIdAndReadingSectionInput!\n  ) {\n    findReadingGuideByUserIdAndReadingSection(input: $input) {\n      readingGuide {\n        _id\n        exempt\n        graded\n      }\n    }\n  }\n`\n\nexport const ReadingGuideCheck = ({ essay }: ReadingGuideCheckProps) => {\n  const me: me_me_Student = useUserContextProvider()\n  const [isHovering, setIsHovering] = useState(false)\n  // const [readingGuideChecker, toggleReadingGuideChecker] = useToggle(true)\n\n  const { loading, data } = useQuery<\n    findReadingGuideByUserIdAndReadingSection,\n    findReadingGuideByUserIdAndReadingSectionVariables\n  >(CHECK_READING_GUIDE_STATUS_QUERY, {\n    variables: {\n      input: {\n        studentId: me._id!,\n        readingSections: essay.readings.readingSections,\n      },\n    },\n    // onCompleted: (data) =>\n    //   console.log(\n    //     isHovering &&\n    //       data.findReadingGuideByUserIdAndReadingSection.readingGuide?.graded\n    //   ),\n    // pollInterval: 1000,\n    fetchPolicy: 'network-only',\n    onError: (error) => console.error(error),\n  })\n\n  const readingGuideNeeded =\n    data?.findReadingGuideByUserIdAndReadingSection.readingGuide &&\n    !data?.findReadingGuideByUserIdAndReadingSection.readingGuide?.exempt &&\n    !data?.findReadingGuideByUserIdAndReadingSection.readingGuide?.graded\n\n  if (loading) return <div>Loading </div>\n  return me.inCourses[0].hasCourseInfo.checkReadingGuides ? (\n    <>\n      {\n        <AssignmentLink\n          onMouseEnter={() => !isHovering && setIsHovering(true)}\n          onMouseOut={() => isHovering && setIsHovering(false)}\n          to={\n            !readingGuideNeeded\n              ? `essay/toComplete/${essay._id!}`\n              : `reading-guide/toComplete/${data?.findReadingGuideByUserIdAndReadingSection.readingGuide?._id}`\n          }\n          key={essay._id!}\n        >\n          <>\n            {isHovering && readingGuideNeeded\n              ? 'You need to complete the reading guide first! Click to start.'\n              : essay.readings.readingSections}\n          </>\n        </AssignmentLink>\n      }\n    </>\n  ) : (\n    <AssignmentLink\n      onMouseEnter={() => !isHovering && setIsHovering(true)}\n      onMouseOut={() => isHovering && setIsHovering(false)}\n      to={`essay/toComplete/${essay._id!}`}\n      key={essay._id!}\n    >\n      {essay.readings.readingSections}\n    </AssignmentLink>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findEssaysToComplete,\n  findEssaysToCompleteVariables,\n  me_me_Student,\n} from '../../../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport { Link } from 'react-router-dom'\nimport {\n  AssignmentTypeTitle,\n  AssignmentTypeContentContainer,\n  AssignmentLink,\n  CompletionMessage,\n  AssignmentLinkLi,\n} from '../../state-n-styles/assignmentsStyles'\n\nimport { useStudentAssignmentContextProvider } from '../../state-n-styles/StudentAssignmentContext'\nimport { ReadingGuideCheck } from './ReadingGuideCheck'\n\nexport type AssignedEssaySelectProps = {}\n\nexport const ESSAYS_TO_COMPLETE_QUERY = gql`\n  query findEssaysToComplete($input: FindEssaysToCompleteByStudentIdInput!) {\n    findEssaysToCompleteByStudentId(input: $input) {\n      essays {\n        _id\n        paperBased\n        assigned\n        missing\n        readings {\n          readingSections\n        }\n        topic {\n          writingLevel\n        }\n        markingPeriod\n        exempt\n      }\n    }\n  }\n`\n\nexport const AssignedEssaySelect: FC<AssignedEssaySelectProps> = () => {\n  const me: me_me_Student = useUserContextProvider()\n  const [state] = useStudentAssignmentContextProvider()\n\n  const { loading, data } = useQuery<\n    findEssaysToComplete,\n    findEssaysToCompleteVariables\n  >(ESSAYS_TO_COMPLETE_QUERY, {\n    variables: {\n      input: { studentId: me._id! },\n    },\n    // pollInterval: 1000,\n    fetchPolicy: 'network-only',\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const essaysForMarkingPeriod = data?.findEssaysToCompleteByStudentId.essays\n    .filter(\n      (essay) => essay.markingPeriod === state.context.selectedMarkingPeriod,\n    )\n    .filter((essay) => !essay.exempt)!\n\n  const allEssaysComplete =\n    essaysForMarkingPeriod &&\n    essaysForMarkingPeriod.length > 0 &&\n    essaysForMarkingPeriod.every((essay) => !essay.missing && !essay.assigned)\n\n  const noEssaysHaveBeenAssigned =\n    (essaysForMarkingPeriod &&\n      essaysForMarkingPeriod.every(\n        (essay) => essay.missing && !essay.assigned,\n      )) ||\n    (essaysForMarkingPeriod && essaysForMarkingPeriod.length === 0)\n\n  return (\n    <>\n      <AssignmentTypeTitle>\n        <div>Essays to Complete</div>\n      </AssignmentTypeTitle>\n      {loading ? null : (\n        <>\n          {allEssaysComplete ? (\n            <AssignmentTypeContentContainer>\n              <CompletionMessage>\n                <ul>\n                  <li>All Essays for Marking Period Complete</li>\n                </ul>\n              </CompletionMessage>\n            </AssignmentTypeContentContainer>\n          ) : noEssaysHaveBeenAssigned ? (\n            <AssignmentTypeContentContainer>\n              <CompletionMessage>\n                <ul>\n                  <li>No Essays Assigned</li>\n                </ul>\n              </CompletionMessage>\n            </AssignmentTypeContentContainer>\n          ) : (\n            <>\n              {essaysForMarkingPeriod && (\n                <AssignmentTypeContentContainer>\n                  {essaysForMarkingPeriod &&\n                    essaysForMarkingPeriod\n                      .filter((essay) => !essay.paperBased && essay.assigned)\n                      .map((essay) => (\n                        <ul key={essay._id}>\n                          <AssignmentLinkLi>\n                            <ReadingGuideCheck essay={essay} />\n                          </AssignmentLinkLi>\n                        </ul>\n                      ))}\n                </AssignmentTypeContentContainer>\n              )}\n              {/* {essaysForMarkingPeriod && essaysForMarkingPeriod.length === 0 && (\n                <AssignmentTypeContentContainer>\n                  <CompletionMessage>\n                    <ul>\n                      <li>No Essays Assigned</li>\n                    </ul>\n                  </CompletionMessage>\n                </AssignmentTypeContentContainer>\n              )} */}\n            </>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport {\n  me_me_Student,\n  findReadingGuidesToComplete,\n  findReadingGuidesToCompleteVariables,\n} from '../../../../../../schemaTypes'\nimport {\n  AssignmentTypeTitle,\n  AssignmentTypeContentContainer,\n  AssignmentLink,\n  CompletionMessage,\n  AssignmentLinkLi,\n} from '../../state-n-styles/assignmentsStyles'\nimport { useStudentAssignmentContextProvider } from '../../state-n-styles/StudentAssignmentContext'\n\nexport type AssignedReadingGuideSelectProps = {}\n\nexport const READING_GUIDES_TO_COMPLETE_QUERY = gql`\n  query findReadingGuidesToComplete(\n    $input: FindReadingGuidesToCompleteByStudentIdInput!\n  ) {\n    findReadingGuidesToCompleteByStudentId(input: $input) {\n      readingGuides {\n        _id\n        paperBased\n        graded\n        readings {\n          readingSections\n        }\n        markingPeriod\n        assigned\n        completed\n        dueDate\n        dueTime\n      }\n    }\n  }\n`\nexport const AssignedReadingGuideSelect =\n  ({}: AssignedReadingGuideSelectProps) => {\n    const me: me_me_Student = useUserContextProvider()\n    const [state] = useStudentAssignmentContextProvider()\n\n    const { loading, data } = useQuery<\n      findReadingGuidesToComplete,\n      findReadingGuidesToCompleteVariables\n    >(READING_GUIDES_TO_COMPLETE_QUERY, {\n      variables: {\n        input: { studentId: me._id! },\n      },\n      fetchPolicy: 'network-only',\n      // pollInterval: 1000,\n      onCompleted: (data) =>\n        console.log(data.findReadingGuidesToCompleteByStudentId),\n      onError: (error) => console.error(error),\n    })\n    const readingGuidesForMarkingPeriod =\n      data?.findReadingGuidesToCompleteByStudentId.readingGuides.filter(\n        (guide) => guide.markingPeriod === state.context.selectedMarkingPeriod,\n      )!\n\n    const allReadingGuidesComplete = false\n    // readingGuidesForMarkingPeriod && readingGuidesForMarkingPeriod.length > 0\n    // &&\n    // readingGuidesForMarkingPeriod\n    //   .filter(\n    //     (rg) =>\n    //       Date.parse(new Date().toLocaleString()) >\n    //       Date.parse(`${rg.dueDate}, ${rg.dueTime}`)\n    //   )\n    //   .every((rg) => rg.completed)\n\n    const noReadingGuidesAssigned =\n      (readingGuidesForMarkingPeriod &&\n        readingGuidesForMarkingPeriod.every(\n          (rg) => !rg.graded && !rg.assigned,\n        )) ||\n      (readingGuidesForMarkingPeriod &&\n        readingGuidesForMarkingPeriod.length === 0)\n\n    return (\n      <>\n        <AssignmentTypeTitle>\n          <div>Reading Guides to Complete</div>\n        </AssignmentTypeTitle>\n        {loading ? null : (\n          <>\n            {allReadingGuidesComplete ? (\n              <AssignmentTypeContentContainer>\n                <CompletionMessage>\n                  <ul>\n                    <li>All Reading Guides for Marking Period Complete</li>\n                  </ul>\n                </CompletionMessage>\n              </AssignmentTypeContentContainer>\n            ) : noReadingGuidesAssigned ? (\n              <AssignmentTypeContentContainer>\n                <CompletionMessage>\n                  <ul>\n                    <li>No Reading Guides Assigned</li>\n                  </ul>\n                </CompletionMessage>\n              </AssignmentTypeContentContainer>\n            ) : (\n              <AssignmentTypeContentContainer>\n                {readingGuidesForMarkingPeriod &&\n                  readingGuidesForMarkingPeriod\n                    .filter(\n                      (readingGuide) =>\n                        !readingGuide.paperBased &&\n                        !readingGuide.graded &&\n                        readingGuide.assigned,\n                    )\n                    .map((readingGuide) => (\n                      <ul key={readingGuide._id!}>\n                        <AssignmentLinkLi>\n                          <AssignmentLink\n                            to={`reading-guide/toComplete/${readingGuide._id!}`}\n                            key={readingGuide._id!}\n                          >\n                            {readingGuide.readings.readingSections}\n                          </AssignmentLink>\n                        </AssignmentLinkLi>\n                      </ul>\n                    ))}\n              </AssignmentTypeContentContainer>\n            )}\n          </>\n        )}\n      </>\n    )\n  }\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport {\n  findArticleReviewsByStudent,\n  findArticleReviewsByStudentVariables,\n  me_me_Student,\n} from '../../../../../schemaTypes'\nimport {\n  AssignmentTypeTitle,\n  AssignmentTypeContentContainer,\n  CompletionMessage,\n  AssignmentLink,\n  AssignmentLinkLi,\n} from '../state-n-styles/assignmentsStyles'\nimport { useStudentAssignmentContextProvider } from '../state-n-styles/StudentAssignmentContext'\n\nexport type ArticleReviewSelectProps = {}\nexport const ARTICE_REVIEWS_TO_COMPLETE_QUERY = gql`\n  query findArticleReviewsByStudent($input: FindArticleReviewsByStudentInput!) {\n    findArticleReviewsByStudent(input: $input) {\n      articleReviews {\n        _id\n        assignedDate\n        paperBased\n        markingPeriod\n        submitted\n      }\n    }\n  }\n`\nexport const ArticleReviewSelect: FC<ArticleReviewSelectProps> = () => {\n  const me: me_me_Student = useUserContextProvider()\n  const [state] = useStudentAssignmentContextProvider()\n\n  const { loading, data } = useQuery<\n    findArticleReviewsByStudent,\n    findArticleReviewsByStudentVariables\n  >(ARTICE_REVIEWS_TO_COMPLETE_QUERY, {\n    variables: {\n      input: {\n        studentId: me._id!,\n        markingPeriod: state.context.selectedMarkingPeriod,\n      },\n    },\n    pollInterval: 1000,\n    onCompleted: (data) =>\n      console.log(data.findArticleReviewsByStudent.articleReviews),\n    onError: (error) => console.error(error),\n  })\n\n  const articleReviewsForMarkingPeriod =\n    data?.findArticleReviewsByStudent.articleReviews.filter(\n      (articleReview) =>\n        articleReview.markingPeriod === state.context.selectedMarkingPeriod &&\n        !articleReview.submitted,\n    )\n\n  return (\n    <>\n      <AssignmentTypeTitle>\n        <div>Article Reviews to complete</div>\n      </AssignmentTypeTitle>\n      {loading ? null : (\n        <>\n          {articleReviewsForMarkingPeriod!.length === 0 ? (\n            <AssignmentTypeContentContainer>\n              <CompletionMessage>\n                <ul>\n                  <li>All Article Reviews for Marking Period Complete</li>\n                </ul>\n              </CompletionMessage>\n            </AssignmentTypeContentContainer>\n          ) : (\n            <AssignmentTypeContentContainer>\n              {articleReviewsForMarkingPeriod!\n                .filter((review) => !review.paperBased)\n                .map((review) => (\n                  <ul key={review._id!}>\n                    <AssignmentLinkLi>\n                      <AssignmentLink\n                        to={`articleReview/toComplete/${review._id!}`}\n                      >\n                        {review.assignedDate}\n                      </AssignmentLink>\n                    </AssignmentLinkLi>\n                  </ul>\n                ))}\n            </AssignmentTypeContentContainer>\n          )}\n          {data?.findArticleReviewsByStudent.articleReviews.length === 0 && (\n            <AssignmentTypeContentContainer>\n              <CompletionMessage>\n                <ul>\n                  <li>No Article Reviews Assigned</li>\n                </ul>\n              </CompletionMessage>\n            </AssignmentTypeContentContainer>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { createContext, FC, ReactNode, useContext } from 'react'\n\nimport { useQuery, gql } from '@apollo/client'\n\nexport const ENUM_VALUES = gql`\n  query enumValues {\n    MarkingPeriod: __type(name: \"MarkingPeriodEnum\") {\n      enumValues {\n        name\n      }\n    }\n    WritingLevelEnum: __type(name: \"WritingLevelEnum\") {\n      enumValues {\n        name\n      }\n    }\n    QuestionTypeEnum: __type(name: \"QuestionTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    RubricSectionEnum: __type(name: \"RubricSectionEnum\") {\n      enumValues {\n        name\n      }\n    }\n    TimeOfDay: __type(name: \"TimeOfDay\") {\n      enumValues {\n        name\n      }\n    }\n    InformationStructureEnum: __type(name: \"InformationStructureEnum\") {\n      enumValues {\n        name\n      }\n    }\n    DiscussionTypesEnum: __type(name: \"DiscussionTypesEnum\") {\n      enumValues {\n        name\n      }\n    }\n    ProtocolAssessmentEnum: __type(name: \"ProtocolAssessmentEnum\") {\n      enumValues {\n        name\n      }\n    }\n    CourseMaxSizeEnum: __type(name: \"CourseMaxSizeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    CourseTypeEnum: __type(name: \"CourseTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    SchoolDayType: __type(name: \"SchoolDayType\") {\n      enumValues {\n        name\n      }\n    }\n    AcademicOutcomeTypes: __type(name: \"AcademicOutcomeTypes\") {\n      enumValues {\n        name\n      }\n    }\n    ProtocolActivityTypes: __type(name: \"ProtocolActivityTypes\") {\n      enumValues {\n        name\n      }\n    }\n    ContactTypeEnum: __type(name: \"ContactTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    NounTypeEnum: __type(name: \"NounTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    VerbTypeEnum: __type(name: \"VerbTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    QuestionWordEnum: __type(name: \"QuestionWordEnum\") {\n      enumValues {\n        name\n      }\n    }\n    LessonTypeEnum: __type(name: \"LessonTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    BehaviorEnum: __type(name: \"BehaviorEnum\") {\n      enumValues {\n        name\n      }\n    }\n    QuizQuestionDifficultyLevelEnum: __type(\n      name: \"QuizQuestionDifficultyLevelEnum\"\n    ) {\n      enumValues {\n        name\n      }\n    }\n    QuizQuestionTypeEnum: __type(name: \"QuizQuestionTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n    ReadingGuideReviewOptionsEnum: __type(\n      name: \"ReadingGuideReviewOptionsEnum\"\n    ) {\n      enumValues {\n        name\n      }\n    }\n    SchoolDayLengthEnum: __type(name: \"SchoolDayLengthEnum\") {\n      enumValues {\n        name\n      }\n    }\n    BehaviorQualityEnum: __type(name: \"BehaviorQualityEnum\") {\n      enumValues {\n        name\n      }\n    }\n    BehaviorCategoryEnum: __type(name: \"BehaviorCategoryEnum\") {\n      enumValues {\n        name\n      }\n    }\n    OutOfClassDestinationEnum: __type(name: \"OutOfClassDestinationEnum\") {\n      enumValues {\n        name\n      }\n    }\n    TextAnalysisCompletionEnum: __type(name: \"TextAnalysisCompletionEnum\") {\n      enumValues {\n        name\n      }\n    }\n    ReadingGuideMetricEnum: __type(name: \"ReadingGuideMetricEnum\") {\n      enumValues {\n        name\n      }\n    }\n    ActivityTimeEnum: __type(name: \"ActivityTimeEnum\") {\n      enumValues {\n        name\n      }\n    }\n  }\n`\n\nconst EnumContext = createContext<any>(undefined)\n\ntype EnumContextProps = {\n  children: ReactNode\n}\n\nexport const EnumContextProvider: FC<EnumContextProps> = ({ children }) => {\n  const { loading, error, data } = useQuery<any>(ENUM_VALUES, {\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => error && <div>Things went wrong, please refresh!</div>,\n  })\n  if (loading)\n    return (\n      <div\n        style={{\n          display: 'grid',\n          fontSize: '3vw',\n          color: 'var(--blue)',\n          height: '100vh',\n        }}\n      >\n        <div style={{ justifySelf: 'center', alignSelf: 'center' }}>\n          <span>Almost there... </span>\n        </div>\n      </div>\n    )\n\n  return (\n    <EnumContext.Provider\n      value={{\n        markingPeriodEnum: data?.MarkingPeriod?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        writingLevelEnum: data?.WritingLevelEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        questionTypeEnum: data?.QuestionTypeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        rubricSectionEnum: data?.RubricSectionEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        timeOfDayEnum: data?.TimeOfDay?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        informationStructureEnum:\n          data?.InformationStructureEnum?.enumValues?.map(\n            (value: any) => value.name,\n          )!,\n        discussionTypesEnum: data?.DiscussionTypesEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        protocolAssessmentEnum: data?.ProtocolAssessmentEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        courseMaxSizeEnum: data?.CourseMaxSizeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        courseTypeEnum: data?.CourseTypeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        schoolDayType: data?.SchoolDayType?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        schoolDayLengthEnum: data?.SchoolDayLengthEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        academicOutcomeTypes: data?.AcademicOutcomeTypes?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        protocolActivityTypes: data?.ProtocolActivityTypes?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        contactTypeEnum: data?.ContactTypeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        nounTypeEnum: data?.NounTypeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        verbTypeEnum: data?.VerbTypeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        questionWordEnum: data?.QuestionWordEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        lessonTypeEnum: data?.LessonTypeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        behaviorEnum: data?.BehaviorEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        quizQuestionDifficultyLevelEnum:\n          data?.QuizQuestionDifficultyLevelEnum?.enumValues?.map(\n            (value: any) => value.name,\n          )!,\n        quizQuestionTypeEnum: data?.QuizQuestionTypeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        readingGuideReviewOptionsEnum:\n          data?.ReadingGuideReviewOptionsEnum?.enumValues?.map(\n            (value: any) => value.name,\n          )!,\n        behaviorQualityEnum: data?.BehaviorQualityEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        behaviorCategoryEnum: data?.BehaviorCategoryEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        outOfClassDestinationEnum:\n          data?.OutOfClassDestinationEnum?.enumValues?.map(\n            (value: any) => value.name,\n          )!,\n        textAnalysisCompletionEnum:\n          data?.TextAnalysisCompletionEnum?.enumValues?.map(\n            (value: any) => value.name,\n          )!,\n        readingGuideMetricEnum: data?.ReadingGuideMetricEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n        activityTimeEnum: data?.activityTimeEnum?.enumValues?.map(\n          (value: any) => value.name,\n        )!,\n      }}\n    >\n      {children}\n    </EnumContext.Provider>\n  )\n}\n\nexport function useEnumContextProvider() {\n  const context = useContext(EnumContext)\n\n  if (context === undefined) {\n    throw new Error(\n      'useEnumContextProvider must be used within a EnumContextProvider',\n    )\n  }\n\n  return context\n}\n","import { Machine, assign } from 'xstate'\nimport { MarkingPeriodEnum } from '../../schemaTypes'\n\nexport type markingPeriodMachineSchema = {\n  states: {\n    markingPeriod: {}\n  }\n}\n\nexport type markingPeriodMachineEvent = {\n  type: 'SET_MARKING_PERIOD'\n  payload: MarkingPeriodEnum\n}\n\nexport type markingPeriodMachineContext = {\n  currentMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const markingPeriodMachine = Machine<\n  markingPeriodMachineContext,\n  markingPeriodMachineSchema,\n  markingPeriodMachineEvent\n>({\n  id: 'markingPeriodMachine',\n  initial: 'markingPeriod',\n  context: {\n    currentMarkingPeriod: MarkingPeriodEnum.FIRST,\n  },\n  states: {\n    markingPeriod: {\n      on: {\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              currentMarkingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { FC, useContext, ReactNode, createContext } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport { findCurrentMarkingPeriod } from '../../schemaTypes'\nimport {\n  markingPeriodMachine,\n  markingPeriodMachineContext,\n  markingPeriodMachineEvent,\n} from './markingPeriodMachine'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\n\nexport const MARKING_PERIOD_QUERY = gql`\n  query findCurrentMarkingPeriod {\n    findCurrentMarkingPeriod {\n      markingPeriod {\n        currentMarkingPeriod\n      }\n    }\n  }\n`\nexport const SET_CURRENT_MARKING_PERIOD_MUTATION = gql`\n  mutation SetCurrentMarkingPeriod($input: SetCurrentMarkingPeriodInput!) {\n    setCurrentMarkingPeriod(input: $input) {\n      markingPeriod {\n        currentMarkingPeriod\n      }\n    }\n  }\n`\n\nconst MarkingPeriodContext = createContext<any>(undefined)\n\ntype MarkingPeriodContext = {\n  children: ReactNode\n}\n\nexport const MarkingPeriodContextProvider: FC<MarkingPeriodContext> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(markingPeriodMachine)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { loading, error, data } = useQuery<findCurrentMarkingPeriod>(\n    MARKING_PERIOD_QUERY,\n    {\n      onCompleted: (data) =>\n        event({\n          type: 'SET_MARKING_PERIOD',\n          payload:\n            data?.findCurrentMarkingPeriod.markingPeriod.currentMarkingPeriod,\n        }),\n      onError: (error) =>\n        error && <div>Things went wrong, please refresh!</div>,\n    },\n  )\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: 'grid',\n          fontSize: '3vw',\n          color: 'var(--blue)',\n          height: '100vh',\n        }}\n      >\n        <div style={{ justifySelf: 'center', alignSelf: 'center' }}>\n          <span>Getting things ready, be patient! </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <MarkingPeriodContext.Provider value={[state, event]}>\n      {children}\n    </MarkingPeriodContext.Provider>\n  )\n}\n\nexport function useMarkingPeriodContextProvider() {\n  const context = useContext(MarkingPeriodContext)\n  if (context === undefined) {\n    throw new Error(\n      'useMarkingPeriodContextProvider must be used within a MarkingPeriodContextProvider',\n    )\n  }\n  return context as [\n    State<markingPeriodMachineContext, markingPeriodMachineEvent, any, any>,\n    (event: markingPeriodMachineEvent) => void,\n  ]\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { MarkingPeriodEnum } from '../../../../schemaTypes'\nimport {\n  MarkingPeriodSelectedSwitchArrow,\n  MarkingPeriodSelectorContainer,\n  MarkingPeriodSelectorSwitchContainer,\n  MarkingPeriodSelectorTitle,\n} from './state-n-styles/assignmentsStyles'\nimport { useStudentAssignmentContextProvider } from './state-n-styles/StudentAssignmentContext'\n\nexport type MarkingPeriodSelectorProps = {}\n\nexport const MarkingPeriodSelector = ({}: MarkingPeriodSelectorProps) => {\n  const [state, event] = useStudentAssignmentContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = markingPeriodState.context\n\n  const markingPeriodNumber = markingPeriodEnum.findIndex(\n    (element: MarkingPeriodEnum) => element === currentMarkingPeriod,\n  )\n\n  const [index, setIndex] = useState(markingPeriodNumber)\n\n  useEffect(() => {\n    event({ type: 'SET_MARKING_PERIOD', payload: markingPeriodEnum[index] })\n  }, [index])\n\n  return (\n    <MarkingPeriodSelectorContainer>\n      <MarkingPeriodSelectorTitle>\n        Select Marking Period\n      </MarkingPeriodSelectorTitle>\n      <MarkingPeriodSelectorSwitchContainer>\n        <MarkingPeriodSelectedSwitchArrow\n          onClick={() => {\n            if (index > 0) {\n              setIndex((c: number) => c - 1)\n            }\n          }}\n        >\n          &lt;\n        </MarkingPeriodSelectedSwitchArrow>\n        <div> {state.context.selectedMarkingPeriod} </div>\n        <MarkingPeriodSelectedSwitchArrow\n          onClick={() => {\n            if (index < markingPeriodEnum.length - 1) {\n              setIndex((c: number) => c + 1)\n            }\n          }}\n        >\n          &gt;\n        </MarkingPeriodSelectedSwitchArrow>\n      </MarkingPeriodSelectorSwitchContainer>\n    </MarkingPeriodSelectorContainer>\n  )\n}\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React from 'react'\nimport { useMarkingPeriodContextProvider } from '../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport {\n  findQuizzesByStudentId,\n  findQuizzesByStudentIdVariables,\n  me_me,\n  startQuiz,\n  startQuizVariables,\n} from '../../../../../schemaTypes'\nimport {\n  AssignmentLink,\n  AssignmentLinkLi,\n  AssignmentTypeContentContainer,\n  AssignmentTypeTitle,\n  CompletionMessage,\n} from '../state-n-styles/assignmentsStyles'\nimport { FIND_QUIZZES_BY_STUDENT_ID_QUERY } from '../StudentAssignments'\n\nexport type QuizSelectProps = {}\n\nexport const ACTIVATE_QUIZ_MUTATION = gql`\n  mutation activateQuiz($input: ActivateQuizInput!) {\n    activateQuiz(input: $input) {\n      activated\n    }\n  }\n`\n\nexport const START_QUIZ_MUTATION = gql`\n  mutation startQuiz($input: StartQuizInput!) {\n    startQuiz(input: $input) {\n      started\n    }\n  }\n`\n\nexport const QuizSelect = ({}: QuizSelectProps) => {\n  const me: me_me = useUserContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { loading, data } = useQuery<\n    findQuizzesByStudentId,\n    findQuizzesByStudentIdVariables\n  >(FIND_QUIZZES_BY_STUDENT_ID_QUERY, {\n    variables: {\n      input: {\n        studentId: me._id!,\n        markingPeriod: markingPeriodState.context.currentMarkingPeriod,\n      },\n    },\n    pollInterval: 1000,\n    fetchPolicy: 'network-only',\n    onCompleted: (data) => console.log(data.findQuizzesByStudentId.quizzes),\n    onError: (error) => console.error(error),\n  })\n  const [startQuiz] = useMutation<startQuiz, startQuizVariables>(\n    START_QUIZ_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [],\n    },\n  )\n  const quizToTake = data?.findQuizzesByStudentId.quizzes.filter(\n    (quiz) => quiz.assigned,\n  )!\n\n  return (\n    <>\n      <AssignmentTypeTitle>Quizzes to Complete</AssignmentTypeTitle>\n      {loading ? null : (\n        <>\n          {quizToTake.length > 0 ? (\n            <AssignmentTypeContentContainer>\n              <CompletionMessage>\n                <ul>\n                  <AssignmentLinkLi>\n                    <AssignmentLink\n                      to={`quiz/toComplete/${quizToTake[0]._id}`}\n                      onClick={() =>\n                        !quizToTake[0].startedQuiz &&\n                        startQuiz({\n                          variables: {\n                            input: {\n                              // activate: true,\n                              quizId: quizToTake[0]._id!,\n                            },\n                          },\n                        })\n                      }\n                    >\n                      {quizToTake[0].readings.readingSections}\n                    </AssignmentLink>\n                  </AssignmentLinkLi>\n                </ul>\n              </CompletionMessage>\n            </AssignmentTypeContentContainer>\n          ) : (\n            <AssignmentTypeContentContainer>\n              <CompletionMessage>\n                <ul>\n                  <li>No Quiz</li>\n                </ul>\n              </CompletionMessage>\n            </AssignmentTypeContentContainer>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  CreateSchoolDayInput,\n  StudentCohortEnum,\n  SchoolDayType,\n  findCurrentSchoolDay_findSchoolDayByDate_schoolDay,\n  SchoolDayLengthEnum,\n} from '../../../../schemaTypes'\n\nexport type schoolDayMachineSchema = {\n  states: {\n    currentSchoolDay: {}\n    createSchoolDay: {}\n    editSchoolDay: {}\n  }\n}\nexport type schoolDayMachineEvent =\n  | { type: 'CREATE_SCHOOL_DAY' }\n  | { type: 'EDIT_SCHOOL_DAY' }\n  | { type: 'CURRENT_SCHOOL_DAY' }\n  | { type: 'SET_CURRENT_SCHOOL_DAY_COUNT'; payload: number }\n  | { type: 'SET_CURRENT_SCHOOL_DAY_TYPE'; payload: SchoolDayType }\n  | { type: 'SET_CURRENT_SCHOOL_DAY_LENGTH'; payload: SchoolDayLengthEnum }\n  | { type: 'SET_CURRENT_COHORT_WEEK'; payload: StudentCohortEnum }\n  | {\n      type: 'SET_TODAYS_SCHOOL_DAY'\n      payload: findCurrentSchoolDay_findSchoolDayByDate_schoolDay\n    }\n\nexport type schoolDayMachineContext = {\n  createSchoolDay: CreateSchoolDayInput\n  currentSchoolDay: findCurrentSchoolDay_findSchoolDayByDate_schoolDay\n}\n\nexport const schoolDayMachine = Machine<\n  schoolDayMachineContext,\n  schoolDayMachineSchema,\n  schoolDayMachineEvent\n>({\n  id: 'schoolDay',\n  initial: 'currentSchoolDay',\n  context: {\n    createSchoolDay: {\n      cohortWeek: StudentCohortEnum.RED,\n      currentSchoolDayType: SchoolDayType.A,\n      schoolDayCount: 0,\n      schoolDayLength: SchoolDayLengthEnum.FULL,\n    },\n    currentSchoolDay: {\n      __typename: 'SchoolDay',\n      _id: '',\n      cohortWeek: StudentCohortEnum.RED,\n      currentSchoolDayType: SchoolDayType.A,\n      schoolDayCount: 0,\n      signInSheets: [],\n      todaysDate: '',\n      schoolDayLength: SchoolDayLengthEnum.FULL,\n    },\n  },\n  states: {\n    currentSchoolDay: {\n      on: {\n        CREATE_SCHOOL_DAY: 'createSchoolDay',\n        EDIT_SCHOOL_DAY: 'editSchoolDay',\n        SET_TODAYS_SCHOOL_DAY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              currentSchoolDay: {\n                ...ctx.currentSchoolDay,\n                __typename: 'SchoolDay',\n                _id: evt.payload._id,\n                cohortWeek: evt.payload.cohortWeek,\n                currentSchoolDayType: evt.payload.currentSchoolDayType,\n                schoolDayCount: evt.payload.schoolDayCount,\n                signInSheets: evt.payload.signInSheets,\n                schoolDayLength: evt.payload.schoolDayLength,\n              },\n            }\n          }),\n        },\n      },\n    },\n    createSchoolDay: {\n      on: {\n        CURRENT_SCHOOL_DAY: 'currentSchoolDay',\n        SET_CURRENT_SCHOOL_DAY_COUNT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              createSchoolDay: {\n                ...ctx.createSchoolDay,\n                schoolDayCount: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_CURRENT_SCHOOL_DAY_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              createSchoolDay: {\n                ...ctx.createSchoolDay,\n                currentSchoolDayType: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_CURRENT_SCHOOL_DAY_LENGTH: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              createSchoolDay: {\n                ...ctx.createSchoolDay,\n                schoolDayLength: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_CURRENT_COHORT_WEEK: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              createSchoolDay: {\n                ...ctx.createSchoolDay,\n                cohortWeek: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n    editSchoolDay: {\n      on: {\n        CURRENT_SCHOOL_DAY: 'currentSchoolDay',\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  schoolDayMachine,\n  schoolDayMachineContext,\n  schoolDayMachineEvent,\n} from './schoolDayMachine'\n\nconst SchoolDayContext = createContext<any>(undefined)\n\ntype SchoolDayContextProps = {\n  children: ReactNode\n}\n\nexport const SchoolDayContextProvider: FC<SchoolDayContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(schoolDayMachine)\n  return (\n    <SchoolDayContext.Provider value={[state, event]}>\n      {children}\n    </SchoolDayContext.Provider>\n  )\n}\n\nexport function useSchoolDayContextProvider() {\n  const context = useContext(SchoolDayContext)\n  if (context === undefined) {\n    throw new Error(\n      'useSchoolDayContextProvider must be used within a SchoolDayContextProvider',\n    )\n  }\n  return context as [\n    State<schoolDayMachineContext, schoolDayMachineEvent, any, any>,\n    (event: schoolDayMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { findCurrentSchoolDay_findSchoolDayByDate_schoolDay } from '../../../schemaTypes'\n\nexport type CurrentSchoolDayProps = {\n  schoolDay: findCurrentSchoolDay_findSchoolDayByDate_schoolDay\n}\n\nexport const CurrentSchoolDay = ({ schoolDay }: CurrentSchoolDayProps) => {\n  return (\n    <>\n      <div>Current Day of School</div>\n      <div> {schoolDay.schoolDayCount}</div>\n      <div>School days left until Summer Break</div>\n      <div>{180 - schoolDay.schoolDayCount}</div>\n\n      {/* <div>Today's Date: {schoolDay.todaysDate}</div> */}\n      {/* <div>\n        Current Cohort Week:{' '}\n        {schoolDay.cohortWeek === 'RED' ? 'Red Week' : 'White Week'}\n      </div>\n      <div>{schoolDay.currentSchoolDayType} Day</div> */}\n    </>\n  )\n}\n","import { RubricEntryInput } from './schemaTypes'\n\nexport function average(nums: number[]) {\n  return nums.reduce((a, b) => a + b) / nums.length\n}\n\nexport const copyToClipBoard = (text: string) => {\n  return () => {\n    navigator.clipboard.writeText(text)\n  }\n}\nexport const primaryGradeCalculator = (\n  earnedPoints: number,\n  maxPoints: number,\n) => {\n  return (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) * 50\n}\n\nexport const secondaryGradeCalculator = (\n  earnedPoints: number,\n  maxPoints: number,\n) => {\n  return (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) * 40\n}\n\nexport const supportiveGradeCalculator = (points: number) => {\n  return (Math.round(1000 * points) / 1000) * 0.1\n}\n\nexport const responsibilityPointConverter = (\n  grade: number,\n  pointTotal: number,\n) => {\n  if (grade < 60) {\n    return pointTotal * 1\n  } else if (grade >= 60 && grade < 70) {\n    return pointTotal * 0.75\n  } else if (grade >= 70 && grade < 80) {\n    return pointTotal * 0.5\n  } else if (grade >= 80 && grade < 90) {\n    return pointTotal * 0.4\n  } else if (grade >= 90 && grade < 100) {\n    return pointTotal * 0.25\n  } else return pointTotal * 0.1\n}\n\nexport const totalGrade = (\n  primaryGrade: number,\n  secondaryGrade: number,\n  supportiveGrade: number,\n) => {\n  const number = Number(\n    Number(primaryGrade) + Number(secondaryGrade) + Number(supportiveGrade),\n  ).toFixed(3)\n\n  return Math.round(Number(number) * 10) / 10\n}\n\nexport const letterGrade = (percentageGrade: number) => {\n  if (percentageGrade > 89) {\n    return 'A'\n  }\n  if (percentageGrade > 79 && percentageGrade < 90) {\n    return 'B'\n  }\n  if (percentageGrade > 69 && percentageGrade < 80) {\n    return 'C'\n  }\n  if (percentageGrade > 59 && percentageGrade < 70) {\n    return 'D'\n  } else return 'F'\n}\nexport const capitalizer = (word: string) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1).toLowerCase()\n}\nexport const sentenceCapitalizer = (sentence: string) => {\n  const splitSentence = sentence.split('')\n  // console.log(splitSentence[0].toUpperCase() + splitSentence.slice(1).join(''))\n  return (\n    splitSentence[0].toUpperCase() +\n    splitSentence.slice(1).join(' ').replace(' | ', '')\n  )\n}\n\nexport const timeAFunction = (startTime: string, endTime: string) => {\n  const startTimeMinutes = +startTime\n    .split('')\n    .slice(startTime.length - 10, startTime.length - 8)\n    .join('')\n  const startTimeSeconds = +startTime\n    .split('')\n    .slice(startTime.length - 7, startTime.length - 1)\n    .join('')\n  const endTimeMinutes = +endTime\n    .split('')\n    .slice(endTime.length - 10, endTime.length - 8)\n    .join('')\n  const endTimeSeconds = +endTime\n    .split('')\n    .slice(endTime.length - 7, endTime.length - 1)\n    .join('')\n  return endTimeMinutes - startTimeMinutes === 0\n    ? endTimeSeconds - startTimeSeconds\n    : endTimeSeconds -\n        startTimeSeconds +\n        (60 * endTimeMinutes - startTimeMinutes)\n}\n\nexport const sortByRubricEntryScore = (\n  a: RubricEntryInput,\n  b: RubricEntryInput,\n) => {\n  if (a.score < b.score) {\n    return 1\n  } else return -1\n}\n\nexport const dateInputConverter = (date: string) => {\n  const year = new Date(date).getFullYear()\n  const day =\n    Number(new Date(date).getDate()) < 10\n      ? '0' + new Date(date).getDate()\n      : new Date(date).getDate()\n  const month =\n    Number(new Date(date).getMonth() + 1) < 10\n      ? '0' + Number(new Date(date).getMonth() + 1).toString()\n      : new Date(date).getMonth() + 1\n  return year + '-' + month + '-' + day\n}\n\nexport const dateConverter = (date: string) => {\n  if (date.charAt(5) === '0' && date.charAt(8) === '0') {\n    return (\n      date.substring(6, 7) +\n      '/' +\n      date.substring(9) +\n      '/' +\n      date.substring(0, 4)\n    )\n  } else if (date.charAt(5) === '0' && date.charAt(8) !== '0') {\n    return (\n      date.substring(6, 7) +\n      '/' +\n      date.substring(8) +\n      '/' +\n      date.substring(0, 4)\n    )\n  } else if (date.charAt(5) !== '0' && date.charAt(8) === '0') {\n    return (\n      date.substring(5, 7) +\n      '/' +\n      date.substring(9) +\n      '/' +\n      date.substring(0, 4)\n    )\n  } else\n    return (\n      date.substring(5, 7) +\n      '/' +\n      date.substring(8) +\n      '/' +\n      date.substring(0, 4)\n    )\n}\n\nexport const timeConverter = (time: string) => {\n  let convertedTime: string[] = []\n  if (time.split('').length === 10) {\n    convertedTime = ['0', ...time.split('')]\n    return convertedTime.join('')\n  }\n\n  return time\n}\n\nexport const timeFinder = (time: string) => {\n  return `${new Date().toLocaleDateString()}, ${time}`\n}\n\nexport const time = new Date().toLocaleString()\nexport const militaryTime = new Date().toLocaleTimeString('en-US', {\n  hour12: false,\n})\nexport const date = new Date().toLocaleDateString()\nexport const noon = `${new Date().toLocaleDateString()}, 12:00:00 PM`\nexport const evening = `${new Date().toLocaleDateString()}, 5:00:00 PM`\n\nexport const dueTimeDisplay = (time: string) =>\n  time.substring(0, 1) === '0'\n    ? time.substring(1, 5) + ' ' + time.substring(9, 11)\n    : time.substring(0, 5) + ' ' + time.substring(9, 11)\n\n// export const informationStructure = (item: InformationStructureEnum) => {\n//   return item === 'SEQUENCE'\n//     ? 'Sequence'\n//     : item === 'CAUSE_EFFECT'\n//     ? 'Cause and Effect'\n//     : item === 'PROBLEM_SOLUTION'\n//     ? 'Problem and Solution'\n//     : 'Compare and Contrast'\n// }\n\nexport const splitSentenceByWord = (originalSentence: string) => {\n  const splitOriginalSentence = originalSentence.split(' ')\n\n  const endingPunctuation =\n    originalSentence[originalSentence.length - 1].split('')[\n      originalSentence[originalSentence.length - 1].split('').length - 1\n    ]\n\n  const lastWord = splitOriginalSentence[splitOriginalSentence.length - 1]\n    .split('')\n    .slice(\n      0,\n      splitOriginalSentence[splitOriginalSentence.length - 1].split('').length -\n        1,\n    )\n    .join('')\n\n  return [\n    ...splitOriginalSentence.slice(0, splitOriginalSentence.length - 1),\n    lastWord,\n    endingPunctuation,\n  ]\n}\n\nexport const macBookPro = window.screen.width === 1792\nexport const macBook = window.screen.width === 1280\nexport const ipad = window.screen.width === 1024\nexport const iPhone = window.screen.width === 375\n\nexport const todaysLocaleDate: string = new Date()\n  .toLocaleString()\n  .substring(0, 9)\n\nexport const sortByLetter = (a: any, b: any) => {\n  let nameA = a.name.toUpperCase() // ignore upper and lowercase\n  let nameB = b.name.toUpperCase() // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1\n  }\n  if (nameA > nameB) {\n    return 1\n  }\n\n  // names must be equal\n  return 0\n}\n\nexport const apostopheRemover = (word: string) => {\n  return word.split(\"'\").join('')\n}\n\nexport const phraseCapitalizer = (phrase: string) => {\n  return phrase\n    .split(' ')\n    .map((word) => word.charAt(0).toUpperCase() + word.substr(1).toLowerCase())\n    .join(' ')\n}\n\nexport const underscoreEliminator = (string: string) => {\n  return string.split('_').join(' ')\n}\n\nexport const timeChanger = (value: string) => {\n  const hour = value.slice(0, 2)\n  const minute = value.slice(2, 6)\n  const regHour = +hour > 12 ? +hour - 12 : +hour\n  const ampm = +hour > 11 ? ' PM' : ' AM'\n  const time = regHour + minute + ':00' + ampm\n  return time\n}\n\nexport const irregularPastTenseVerbList = (verb: string) => {\n  const lowerCaseVerb = verb.toLowerCase()\n\n  if (lowerCaseVerb === 'run') {\n    return 'ran'\n  }\n  if (lowerCaseVerb === 'swim') {\n    return 'swam'\n  }\n  if (lowerCaseVerb === 'get') {\n    return 'got'\n  }\n  if (lowerCaseVerb === 'fight') {\n    return 'fought'\n  }\n  if (lowerCaseVerb === 'have') {\n    return 'had'\n  }\n  if (lowerCaseVerb === 'begin') {\n    return 'began'\n  }\n  if (lowerCaseVerb === 'bring') {\n    return 'brought'\n  }\n  if (lowerCaseVerb === 'buy') {\n    return 'bought'\n  }\n  if (lowerCaseVerb === 'break') {\n    return 'broke'\n  }\n  if (lowerCaseVerb === 'write') {\n    return 'wrote'\n  }\n  if (lowerCaseVerb === 'ride') {\n    return 'rode'\n  }\n  if (lowerCaseVerb === 'hide') {\n    return 'hid'\n  }\n  if (lowerCaseVerb === 'take') {\n    return 'took'\n  }\n  if (lowerCaseVerb === 'send') {\n    return 'sent'\n  }\n  if (lowerCaseVerb === 'sell') {\n    return 'sold'\n  }\n  if (lowerCaseVerb === 'pay') {\n    return 'paid'\n  }\n  if (lowerCaseVerb === 'meet') {\n    return 'met'\n  }\n  if (lowerCaseVerb === 'make') {\n    return 'made'\n  }\n  if (lowerCaseVerb === 'lead') {\n    return 'led'\n  }\n  if (lowerCaseVerb === 'lose') {\n    return 'lost'\n  }\n  if (lowerCaseVerb === 'go') {\n    return 'went'\n  }\n  if (lowerCaseVerb === 'give') {\n    return 'gave'\n  }\n  if (lowerCaseVerb === 'feel') {\n    return 'felt'\n  }\n  if (lowerCaseVerb === 'eat') {\n    return 'ate'\n  }\n  if (lowerCaseVerb === 'carry') {\n    return 'carried'\n  }\n  if (lowerCaseVerb === 'admit') {\n    return 'admitted'\n  }\n  if (lowerCaseVerb === 'rebel') {\n    return 'rebelled'\n  }\n  if (lowerCaseVerb === 'deter') {\n    return 'deterred'\n  }\n  if (lowerCaseVerb === 'excel') {\n    return 'excelled'\n  }\n  if (lowerCaseVerb === 'prefer') {\n    return 'preferred'\n  }\n  if (lowerCaseVerb === 'submit') {\n    return 'submitted'\n  }\n  if (lowerCaseVerb === 'do') {\n    return 'did'\n  }\n  if (lowerCaseVerb === 'grow') {\n    return 'grew'\n  }\n  if (lowerCaseVerb === 'become') {\n    return 'became'\n  }\n  if (lowerCaseVerb === 'forbid') {\n    return 'forbade'\n  }\n  if (lowerCaseVerb === 'choose') {\n    return 'chose'\n  }\n  if (lowerCaseVerb === 'come') {\n    return 'came'\n  }\n  if (lowerCaseVerb === 'keep') {\n    return 'kept'\n  }\n  if (lowerCaseVerb === 'stop') {\n    return 'stopped'\n  }\n  if (lowerCaseVerb === 'split') {\n    return 'split'\n  }\n  if (lowerCaseVerb === 'build') {\n    return 'built'\n  }\n  if (lowerCaseVerb === 'win') {\n    return 'won'\n  }\n\n  return verb\n}\n\nexport const specialVerbsInPastTense = (verb: string) => {\n  const lowerCaseVerb = verb.toLowerCase()\n  if (lowerCaseVerb === 'stop') {\n    return 'stopped'\n  }\n  if (lowerCaseVerb === 'control') {\n    return 'controlled'\n  }\n  if (lowerCaseVerb === 'plan') {\n    return 'planned'\n  }\n  if (lowerCaseVerb === 'split') {\n    return 'split'\n  }\n  if (lowerCaseVerb === 'put') {\n    return 'put'\n  }\n  if (lowerCaseVerb === 'let') {\n    return 'let'\n  }\n  if (lowerCaseVerb === 'set') {\n    return 'set'\n  }\n  if (lowerCaseVerb === 'hit') {\n    return 'hit'\n  }\n  if (lowerCaseVerb === 'cost') {\n    return 'cost'\n  }\n  if (lowerCaseVerb === 'hurt') {\n    return 'hurt'\n  }\n  if (lowerCaseVerb === 'shut') {\n    return 'shut'\n  }\n  if (lowerCaseVerb === 'quit') {\n    return 'quit'\n  }\n  if (lowerCaseVerb === 'spread') {\n    return 'spread'\n  }\n  return verb\n}\nexport const verbsThatChangeInIngFormList = (verb: string) => {\n  const lowerCaseVerb = verb.toLowerCase()\n\n  if (lowerCaseVerb === 'run') {\n    return 'running'\n  }\n  if (lowerCaseVerb === 'get') {\n    return 'getting'\n  }\n  if (lowerCaseVerb === 'begin') {\n    return 'beginning'\n  }\n  if (lowerCaseVerb === 'sell') {\n    return 'selling'\n  }\n  if (lowerCaseVerb === 'hit') {\n    return 'hitting'\n  }\n  if (lowerCaseVerb === 'win') {\n    return 'winning'\n  }\n  if (lowerCaseVerb === 'plan') {\n    return 'planning'\n  }\n  if (lowerCaseVerb === 'were' || lowerCaseVerb === 'was') {\n    return 'being'\n  }\n\n  return verb\n}\n\nexport const verbsThatChangeInIngFormat = (word: string) => {\n  return verbsThatChangeInIngFormList(word) !== word\n    ? verbsThatChangeInIngFormList(word)\n    : word.charAt(word.length - 1) === 'e'\n      ? word.slice(0, word.length - 1) + 'ing'\n      : word + 'ing'\n}\n\nexport const isLetterUpperCase = (letter: string) => /^[A-Z]*$/.test(letter)\n\nexport const twentyFourStudentClassSize = [\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24,\n]\n\nexport const twelveStudentClassSize = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\nexport const redCohort = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n]\nexport const whiteCohort = [\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n]\n// export function replaceAt(array: any[], index: number, value: any) {\n//   const ret = array.slice(0)\n//   ret[index] = value\n//   return ret\n// }\n\nexport function isNegative(num: number) {\n  if (Math.sign(num) === 1) return true\n  else return false\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const TeacherDashboardContainer = styled.div`\n  display: grid;\n  height: 95vh;\n  grid-template-rows: 1fr 2fr;\n`\n\nexport const TeacherHomeScreenOptionsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: 1fr;\n  grid-auto-flow: row;\n  grid-gap: 1vh;\n  padding: 2vh;\n`\n\nexport const TeacherDirectoryOptions = styled.div`\n  display: grid;\n  /* grid-template-rows: 1fr 1fr; */\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  font-size: 3vh;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\nexport const TeacherDirectoryOptionsLink = styled(Link)`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  font-size: 3vh;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\nexport const SchoolDayContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n`\n\nexport const CreateSchoolDayButton = styled.button`\n  width: 80%;\n  font-size: 2vh;\n  background-color: var(--blue);\n  color: var(--white);\n  grid-column: 1/-1;\n  align-self: center;\n  justify-self: center;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\n\nexport const CreateSchoolDayContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: 1fr 1fr;\n  grid-auto-flow: row;\n  height: 100%;\n  width: 100%;\n`\nexport const CreateSchoolDayCenteredItem = styled.div`\n  grid-column: 1/-1;\n  align-self: center;\n  justify-self: center;\n`\nexport const CreateSchoolDayInformationContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n","import React, { FC, useEffect } from 'react'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createSchoolDay,\n  createSchoolDayVariables,\n  findCurrentSchoolDayCount,\n  StudentCohortEnum,\n  SchoolDayType,\n  SchoolDayLengthEnum,\n} from '../../../schemaTypes'\nimport { useSchoolDayContextProvider } from './state/SchoolDayContext'\nimport { useEnumContextProvider } from '../../../contexts/EnumContext'\nimport { phraseCapitalizer, underscoreEliminator } from '../../../utils'\nimport {\n  CreateSchoolDayButton,\n  CreateSchoolDayCenteredItem,\n  CreateSchoolDayContainer,\n  CreateSchoolDayInformationContainer,\n} from '../teacher/teacherDashboardStyles'\n\nexport type CreateSchoolDayProps = {}\n\nexport const CREATE_SCHOOL_DAY_MUTATION = gql`\n  mutation createSchoolDay($input: CreateSchoolDayInput!) {\n    createSchoolDay(input: $input) {\n      schoolDay {\n        _id\n      }\n    }\n  }\n`\nexport const FIND_CURRENT_SCHOOL_DAY_COUNT_QUERY = gql`\n  query findCurrentSchoolDayCount {\n    findSchoolDayTracker {\n      schoolDayTracker {\n        schoolDayTracker\n        schoolDayTypeTracker\n        cohortWeekTracker\n      }\n    }\n  }\n`\nexport const CreateSchoolDay = ({}: CreateSchoolDayProps) => {\n  const [state, event] = useSchoolDayContextProvider()\n  const { schoolDayLengthEnum } = useEnumContextProvider()\n\n  useQuery<findCurrentSchoolDayCount>(FIND_CURRENT_SCHOOL_DAY_COUNT_QUERY, {\n    onCompleted: (data) => {\n      event({\n        type: 'SET_CURRENT_SCHOOL_DAY_COUNT',\n        payload: data.findSchoolDayTracker.schoolDayTracker.schoolDayTracker,\n      })\n      event({\n        type: 'SET_CURRENT_SCHOOL_DAY_TYPE',\n        payload:\n          data.findSchoolDayTracker.schoolDayTracker.schoolDayTypeTracker,\n      })\n      event({\n        type: 'SET_CURRENT_COHORT_WEEK',\n        payload: data.findSchoolDayTracker.schoolDayTracker.cohortWeekTracker,\n      })\n    },\n\n    onError: (error) => console.error(error),\n  })\n\n  const [createSchoolDay] = useMutation<\n    createSchoolDay,\n    createSchoolDayVariables\n  >(CREATE_SCHOOL_DAY_MUTATION, {\n    variables: {\n      input: {\n        cohortWeek: state.context.createSchoolDay.cohortWeek,\n        schoolDayCount: state.context.createSchoolDay.schoolDayCount + 1,\n        currentSchoolDayType: SchoolDayType.AB,\n        schoolDayLength: state.context.createSchoolDay.schoolDayLength,\n        // state.context.createSchoolDay.currentSchoolDayType,\n        // state.context.createSchoolDay.currentSchoolDayType === SchoolDayType.A\n        //   ? SchoolDayType.B\n        //   : SchoolDayType.A,\n      },\n    },\n    onCompleted: (data) => event({ type: 'CURRENT_SCHOOL_DAY' }),\n    refetchQueries: ['findCurrentSchoolDayCount', 'findCurrentSchoolDay'],\n  })\n\n  useEffect(() => {\n    event({\n      type: 'SET_CURRENT_SCHOOL_DAY_TYPE',\n      payload:\n        state.context.createSchoolDay.currentSchoolDayType === SchoolDayType.A\n          ? SchoolDayType.B\n          : SchoolDayType.A,\n    })\n  }, [])\n\n  const redWeek =\n    state.context.createSchoolDay.cohortWeek === StudentCohortEnum.RED\n  const whiteWeek =\n    state.context.createSchoolDay.cohortWeek === StudentCohortEnum.WHITE\n\n  // const aDay =\n  //   state.context.createSchoolDay.currentSchoolDayType === SchoolDayType.A\n  // const bDay =\n  //   state.context.createSchoolDay.currentSchoolDayType === SchoolDayType.B\n\n  return (\n    <CreateSchoolDayContainer>\n      <CreateSchoolDayCenteredItem>\n        Create School Day\n      </CreateSchoolDayCenteredItem>\n      {/* <>\n        <div>Cohort Week</div>\n        <div\n          style={\n            redWeek\n              ? { color: 'var(--red)', cursor: 'default' }\n              : { color: 'var(--blue)', cursor: 'default' }\n          }\n          onClick={() =>\n            event({\n              type: 'SET_CURRENT_COHORT_WEEK',\n              payload: StudentCohortEnum.RED,\n            })\n          }\n        >\n          Red Week\n        </div>\n        <div\n          style={\n            whiteWeek\n              ? { color: 'var(--red)', cursor: 'default' }\n              : { color: 'var(--blue)', cursor: 'default' }\n          }\n          onClick={() =>\n            event({\n              type: 'SET_CURRENT_COHORT_WEEK',\n              payload: StudentCohortEnum.WHITE,\n            })\n          }\n        >\n          White Week\n        </div>\n      </> */}\n      {/* <>\n        <div>What type of School Day?</div>\n        {\n          // state.context.createSchoolDay.currentSchoolDayType ===\n          // SchoolDayType.A ?\n          //  (\n          <>\n            <div\n              style={\n                state.context.createSchoolDay.currentSchoolDayType ===\n                SchoolDayType.B\n                  ? { color: 'var(--red)' }\n                  : { color: 'var(--blue)' }\n              }\n              onClick={() =>\n                event({\n                  type: 'SET_CURRENT_SCHOOL_DAY_TYPE',\n                  payload: SchoolDayType.B,\n                })\n              }\n            >\n              B Day\n            </div>\n\n            <div\n              style={\n                state.context.createSchoolDay.currentSchoolDayType ===\n                SchoolDayType.A\n                  ? { color: 'var(--red)' }\n                  : { color: 'var(--blue)' }\n              }\n              onClick={() =>\n                event({\n                  type: 'SET_CURRENT_SCHOOL_DAY_TYPE',\n                  payload: SchoolDayType.A,\n                })\n              }\n            >\n              A Day\n            </div>\n          </>\n        }\n      </> */}\n\n      <CreateSchoolDayInformationContainer>\n        <div>What day of school is it?</div>\n        <div>{state.context.createSchoolDay.schoolDayCount + 1}</div>\n      </CreateSchoolDayInformationContainer>\n      <CreateSchoolDayInformationContainer>\n        <div>School Day Length?</div>\n        <select\n          style={{ background: 'transparent', fontSize: '1.6vh' }}\n          onChange={(e: any) =>\n            event({\n              type: 'SET_CURRENT_SCHOOL_DAY_LENGTH',\n              payload: e.target.value,\n            })\n          }\n        >\n          {schoolDayLengthEnum.map((length: SchoolDayLengthEnum) => (\n            <option\n              key={length}\n              value={length}\n              style={{ color: 'var(--blue)' }}\n            >\n              {underscoreEliminator(phraseCapitalizer(length))}\n            </option>\n          ))}\n        </select>\n      </CreateSchoolDayInformationContainer>\n      <CreateSchoolDayButton\n        style={{\n          gridColumn: '1/-1',\n          alignSelf: 'center',\n          justifySelf: 'center',\n        }}\n        onClick={() => createSchoolDay()}\n      >\n        Let's Start the Day!\n      </CreateSchoolDayButton>\n    </CreateSchoolDayContainer>\n  )\n}\n","const customMediaQuery = (maxWidth: number) =>\n  `@media (max-width: ${maxWidth}px)`\n\nexport const media = {\n  custom: customMediaQuery,\n  macBookPro16: customMediaQuery(1792),\n  macBook: customMediaQuery(1280),\n  iPad: customMediaQuery(1024),\n  iPhone: customMediaQuery(375),\n}\n","import styled from 'styled-components'\n\nimport { Link } from 'react-router-dom'\nimport { LoginToggleProps } from '../../App'\nimport { media } from './media'\n\nconst fontSize = 3\n\nexport const HomeScreenTitle = styled.div`\n  font-size: ${fontSize + 2}vh;\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n  align-items: center;\n  justify-items: center;\n`\nexport const ButtonBox = styled.div`\n  display: grid;\n  /* grid-template-rows: 1fr 1fr; */\n  /* border: 1px solid var(--blue); */\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  height: 80%;\n  width: 80%;\n  background-color: var(--blue);\n  color: var(--white);\n  font-size: 3vh;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n    color: var(--blue);\n    background-color: var(--white);\n  }\n`\nexport const LoginContainer = styled.div`\n  display: grid;\n  justify-items: end;\n`\n\nexport const HomePageContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 2fr;\n  justify-items: center;\n  align-content: space-evenly;\n  height: 95vh;\n`\n\nexport const MainScreen = styled.div`\n  display: grid;\n  width: 40rem;\n  height: 25rem;\n  background-color: var(--white);\n  color: var(--blue);\n`\n\nexport const HomeScreenContainer = styled.div`\n  display: grid;\n  height: 95vh;\n  grid-template-rows: 1fr 2fr;\n`\nexport const StudentHomeScreenOptionsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: 1fr 1fr;\n  grid-auto-flow: row;\n  grid-gap: 1vh;\n  padding: 2vh;\n`\n\nexport const StudentHomeScreenOptionsNonLink = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n    /* color: var(--white); */\n    /* background-color: var(--blue); */\n  }\n`\nexport const StudentHomeScreenOptions = styled(Link)`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n    /* color: var(--white); */\n    /* background-color: var(--blue); */\n  }\n`\n// export const StudentHomeScreenOptionsLink = styled(StudentHomeScreenOptions)`\n\n// `\n\nexport const LogoutOption = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n    /* color: var(--white); */\n    /* background-color: var(--blue); */\n  }\n\n  font-size: ${fontSize}vh;\n`\nexport const OptionTitle = styled.div`\n  font-size: ${fontSize}vh;\n`\nexport const GetStartedButtonContainer = styled.div`\n  grid-row: 4/5;\n  grid-column: 1/-1;\n  display: grid;\n  grid-auto-columns: 1fr;\n  justify-items: center;\n  align-items: center;\n`\nexport const StudentGradeContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n  font-size: ${fontSize}vh;\n`\n\nexport const GradeDisplay = styled.div`\n  font-size: ${fontSize}vh;\n`\n\nexport const StudentOptionsLinkButton = styled.button`\n  width: 10vh;\n  height: 3vh;\n  margin-top: 10%;\n  font-size: 1.1vw;\n  color: var(--white);\n  background-color: var(--blue);\n  box-shadow: 3px 3px 3px var(--grey);\n`\n\nexport const GetStartedButton = styled.button`\n  /* ${media.macBookPro16} { */\n  width: 15vh;\n  height: 5vh;\n  font-size: ${fontSize}vh;\n  color: var(--white);\n  background-color: var(--blue);\n  box-shadow: 3px 3px 3px var(--grey);\n  justify-self: center;\n  /* } */\n  /* ${media.iPhone} {\n    width: 7rem;\n    height: 2rem;\n    font-size: 1.1vw;\n    color: var(--white);\n    background-color: var(--blue);\n  } */\n`\n\nexport const StyledLink = styled(Link)`\n  color: var(--white);\n  text-decoration: none;\n  /* font-size: 1rem; */\n`\n\nexport const HomeLink = styled(StyledLink)`\n  font-size: 1.5rem;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n  padding-left: 2%;\n`\nexport const DashboardLink = styled(StyledLink)`\n  font-size: 1.5rem;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n  padding-right: 2%;\n`\n\nexport const LoginLink = styled(StyledLink)`\n  font-size: 1.5rem;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n  padding-right: 2%;\n`\n\nexport const LogoutLink = styled.div`\n  color: var(--white);\n  cursor: pointer;\n  ${media.iPhone} {\n    font-size: 2vh;\n  }\n  padding-right: 2%;\n`\n\nexport const LoginToggle = styled.div<LoginToggleProps>`\n  font-size: 2rem;\n  color: var(--white);\n  cursor: pointer;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n  margin-right: 2%;\n`\nexport const PasswordContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  width: 100%;\n  height: 100%;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const PasswordChangeContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const PasswordChangeItemContainers = styled.div`\n  display: grid;\n  height: 100%;\n  font-size: 3vh;\n  justify-items: center;\n  align-content: space-evenly;\n`\nexport const NewPasswordInput = styled.input`\n  width: 70vh;\n  height: 3vh;\n  font-size: 2vh;\n  background-color: transparent;\n`\nexport const AcceptNewPasswordButton = styled.button`\n  width: 40vh;\n\n  background: var(--blue);\n  color: var(--white);\n  font-size: smaller;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\n\nexport const EditSchoolDayContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  /* grid-template-rows: 1fr 1fr 1fr 1fr; */\n  grid-template-columns: 1fr 1fr;\n  grid-auto-flow: row;\n`\nexport const EditSchoolDayTitle = styled.div`\n  grid-column: 1/-1;\n  align-self: center;\n  justify-self: center;\n`\n","import { gql, useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useEnumContextProvider } from '../../../contexts/EnumContext'\nimport {\n  findCurrentSchoolDay_findSchoolDayByDate_schoolDay,\n  SchoolDayLengthEnum,\n  updateSchoolDay,\n  updateSchoolDayVariables,\n} from '../../../schemaTypes'\nimport { underscoreEliminator, phraseCapitalizer } from '../../../utils'\nimport {\n  EditSchoolDayContainer,\n  EditSchoolDayTitle,\n} from '../../home/homeStyles'\nimport { CreateSchoolDayButton } from '../teacher/teacherDashboardStyles'\nimport { useSchoolDayContextProvider } from './state/SchoolDayContext'\n\nexport type EditSchoolDayProps = {\n  schoolDay: findCurrentSchoolDay_findSchoolDayByDate_schoolDay\n}\n\nexport const EDIT_SCHOOL_DAY_MUTATION = gql`\n  mutation updateSchoolDay($input: UpdateSchoolDayInput!) {\n    updateSchoolDay(input: $input) {\n      schoolDay {\n        _id\n        schoolDayLength\n      }\n    }\n  }\n`\n\nexport const EditSchoolDay = ({ schoolDay }: EditSchoolDayProps) => {\n  const [state, event] = useSchoolDayContextProvider()\n  const { schoolDayLengthEnum } = useEnumContextProvider()\n  const [editedSchoolDayLength, setEditedSchoolDayLength] =\n    useState<SchoolDayLengthEnum>(schoolDay.schoolDayLength)\n\n  const [updateSchoolDay] = useMutation<\n    updateSchoolDay,\n    updateSchoolDayVariables\n  >(EDIT_SCHOOL_DAY_MUTATION, {\n    // variables: {\n    //   input: {\n    //     schoolDayId: schoolDay._id!,\n    //     updatedCohortWeek: schoolDay.cohortWeek,\n    //     updatedCurrentSchoolDayType: schoolDay.currentSchoolDayType,\n    //     updatedDate: schoolDay.todaysDate,\n    //     updatedSchoolDayCount: schoolDay.schoolDayCount,\n    //     schoolDayLength: editedSchoolDayLength,\n    //   },\n    // },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findCurrentSchoolDay'],\n  })\n  const handleSchoolDayLengthChange = (e: any) => {\n    setEditedSchoolDayLength(e.target.value)\n    console.log(editedSchoolDayLength)\n    updateSchoolDay()\n  }\n\n  return (\n    <EditSchoolDayContainer>\n      <EditSchoolDayTitle>Edit School Day</EditSchoolDayTitle>\n      <EditSchoolDayTitle>\n        <div>School Day Length?</div>\n        <select\n          style={{ background: 'transparent', fontSize: '1.6vh' }}\n          value={state.context.currentSchoolDay.schoolDayLength}\n          onChange={(e: any) => {\n            updateSchoolDay({\n              variables: {\n                input: {\n                  schoolDayId: schoolDay._id!,\n                  updatedCohortWeek: schoolDay.cohortWeek,\n                  updatedCurrentSchoolDayType: schoolDay.currentSchoolDayType,\n                  updatedDate: schoolDay.todaysDate,\n                  updatedSchoolDayCount: schoolDay.schoolDayCount,\n                  schoolDayLength: e.target.value,\n                },\n              },\n            })\n          }}\n        >\n          {schoolDayLengthEnum.map((length: SchoolDayLengthEnum) => (\n            <option\n              key={length}\n              value={length}\n              style={{ color: 'var(--blue)' }}\n            >\n              {underscoreEliminator(phraseCapitalizer(length))}\n            </option>\n          ))}\n        </select>\n      </EditSchoolDayTitle>\n      <CreateSchoolDayButton>Remove School Day</CreateSchoolDayButton>\n      <CreateSchoolDayButton\n        onClick={() => event({ type: 'CURRENT_SCHOOL_DAY' })}\n      >\n        Go Back\n      </CreateSchoolDayButton>\n    </EditSchoolDayContainer>\n  )\n}\n","import React, { FC, Fragment } from 'react'\nimport { useSchoolDayContextProvider } from './state/SchoolDayContext'\nimport { CurrentSchoolDay } from './CurrentSchoolDay'\nimport { CreateSchoolDay } from './CreateSchoolDay'\nimport { EditSchoolDay } from './EditSchoolDay'\nimport { useNavigate } from 'react-router'\nimport { gql, useQuery, useMutation } from '@apollo/client'\nimport {\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  me_me_Teacher,\n  createSignInSheets,\n  createSignInSheetsVariables,\n} from '../../../schemaTypes'\nimport { date } from '../../../utils'\nimport { useUserContextProvider } from '../../../contexts/UserContext'\nimport { CreateSignInSheets } from './CreateSignInSheets'\nimport {\n  CreateSchoolDayButton,\n  SchoolDayContainer,\n} from '../teacher/teacherDashboardStyles'\n\nexport type SchoolDayProps = {}\n\nexport const FIND_CURRENT_SCHOOL_DAY_QUERY = gql`\n  query findCurrentSchoolDay($input: FindSchoolDayByDateInput!) {\n    findSchoolDayByDate(input: $input) {\n      schoolDay {\n        _id\n        cohortWeek\n        schoolDayCount\n        schoolDayLength\n        todaysDate\n        currentSchoolDayType\n        signInSheets {\n          course {\n            _id\n          }\n          studentsSignInlog {\n            _id\n            firstName\n            lastName\n          }\n        }\n      }\n    }\n  }\n`\n// export const CREATE_SIGN_IN_SHEETS_MUTATION = gql`\n//   mutation createSignInSheets($input: CreateSignInSheetsInput!) {\n//     createSignInSheets(input: $input) {\n//       schoolDay {\n//         _id\n//       }\n//     }\n//   }\n// `\n\nexport const SchoolDay = ({}: SchoolDayProps) => {\n  const [state, event] = useSchoolDayContextProvider()\n  const me: me_me_Teacher = useUserContextProvider()\n  const navigate = useNavigate()\n\n  const { data, loading } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: date },\n    },\n    onCompleted: (data) => {\n      if (data.findSchoolDayByDate.schoolDay)\n        event({\n          type: 'SET_TODAYS_SCHOOL_DAY',\n          payload: data?.findSchoolDayByDate?.schoolDay!,\n        })\n    },\n    onError: (error) => console.error(error),\n  })\n\n  const todaysCourses = me.teachesCourses.filter(\n    (course) =>\n      course.hasCourseInfo?.schoolDayType ===\n      data?.findSchoolDayByDate.schoolDay?.currentSchoolDayType,\n  )\n\n  const hasSignInSheets =\n    data?.findSchoolDayByDate.schoolDay?.signInSheets?.length! > 0\n\n  return (\n    <>\n      {state.matches('currentSchoolDay') && (\n        <>\n          {data?.findSchoolDayByDate.schoolDay ? (\n            <>\n              <CurrentSchoolDay\n                schoolDay={data.findSchoolDayByDate.schoolDay}\n              />\n              <CreateSchoolDayButton\n                onClick={() => event({ type: 'EDIT_SCHOOL_DAY' })}\n              >\n                Edit School Day\n              </CreateSchoolDayButton>\n            </>\n          ) : (\n            <>\n              <div>Not School Day</div>\n              <CreateSchoolDayButton\n                onClick={() => event({ type: 'CREATE_SCHOOL_DAY' })}\n              >\n                Create School Day\n              </CreateSchoolDayButton>\n            </>\n          )}\n        </>\n      )}\n      {state.matches('editSchoolDay') && (\n        <EditSchoolDay schoolDay={data?.findSchoolDayByDate.schoolDay!} />\n      )}\n      {state.matches('createSchoolDay') && <CreateSchoolDay />}\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const useTime = () => {\n  const [time, setTime] = useState(new Date().toLocaleTimeString())\n  const [dateTime, setDateTime] = useState(new Date().toLocaleString())\n\n  setInterval(() => setTime(new Date().toLocaleTimeString()), 1000)\n  setInterval(() => setDateTime(new Date().toLocaleString()), 1000)\n\n  return { time, dateTime }\n}\n","import { useQuery } from '@apollo/client'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from '../components/dashboard/school-day/SchoolDay'\nimport { useSchoolDayContextProvider } from '../components/dashboard/school-day/state/SchoolDayContext'\n\nimport {\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  me_me_Student,\n  SchoolDayLengthEnum,\n} from '../schemaTypes'\nimport { timeFinder } from '../utils'\nimport { useTime } from './useTime'\n\nexport const useClassTimeIndicator = (student: me_me_Student) => {\n  const [currentSchoolDayState] = useSchoolDayContextProvider()\n\n  const { dateTime } = useTime()\n\n  const { data: schoolDayData } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: new Date().toLocaleDateString() },\n    },\n    onError: (error) => console.error(error),\n  })\n  const schoolDay = schoolDayData?.findSchoolDayByDate.schoolDay !== null\n  const { schoolDayLength } = currentSchoolDayState.context.currentSchoolDay\n\n  const classTime =\n    schoolDay &&\n    Date.parse(dateTime) >\n      Date.parse(\n        timeFinder(\n          schoolDayLength === SchoolDayLengthEnum.HALF\n            ? student.inCourses[0].hasCourseInfo?.halfDayStartsAt!\n            : schoolDayLength === SchoolDayLengthEnum.ONE_HOUR_DELAY\n              ? student.inCourses[0].hasCourseInfo?.hourDelayStartsAt\n              : student.inCourses[0].hasCourseInfo?.startsAt!,\n        ),\n      ) &&\n    Date.parse(dateTime) <\n      Date.parse(\n        timeFinder(\n          schoolDayLength === SchoolDayLengthEnum.HALF\n            ? student.inCourses[0].hasCourseInfo?.halfDayEndsAt!\n            : schoolDayLength === SchoolDayLengthEnum.ONE_HOUR_DELAY\n              ? student.inCourses[0].hasCourseInfo.hourDelayEndsAt\n              : student.inCourses[0].hasCourseInfo?.endsAt!,\n        ),\n      )\n\n  return { classTime }\n}\n","import { gql, useQuery } from '@apollo/client'\nimport {\n  checkAssignmentsAllowedInClass,\n  checkAssignmentsAllowedInClassVariables,\n  me_me_Student,\n} from '../schemaTypes'\nimport { useTime } from './useTime'\n\nexport const CHECK_ASSIGNMENTS_ALLOWED_QUERY = gql`\n  query checkAssignmentsAllowedInClass(\n    $input: CheckAssignmentsAllowedInClassInput!\n  ) {\n    checkAssignmentsAllowedInClass(input: $input) {\n      allowed\n    }\n  }\n`\nexport const useAssignmentsAllowedInClassCheck = (me: me_me_Student) => {\n  const { loading, data } = useQuery<\n    checkAssignmentsAllowedInClass,\n    checkAssignmentsAllowedInClassVariables\n  >(CHECK_ASSIGNMENTS_ALLOWED_QUERY, {\n    variables: {\n      input: { courseId: me.inCourses[0]._id! },\n    },\n    // onCompleted: (data) => console.log(data),\n    // pollInterval: 1000,\n    onError: (error) => console.error(error),\n  })\n\n  return {\n    assignmentsAllowedInClass: data?.checkAssignmentsAllowedInClass.allowed\n      ? true\n      : false,\n  }\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  findAllMarkingPeriodGrades,\n  findAllMarkingPeriodGradesVariables,\n  findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments,\n  GradeTypeEnum,\n  MarkingPeriodEnum,\n} from '../schemaTypes'\n\nexport type useCalculateGradesProps = {\n  studentId: string\n  markingPeriod: MarkingPeriodEnum\n  polling: boolean\n  pollInterval?: number\n}\n\nexport const FIND_STUDENT_GRADES_QUERY = gql`\n  query findAllMarkingPeriodGrades($input: FindAllMarkingPeriodGradesInput!) {\n    findAllMarkingPeriodGrades(input: $input) {\n      assignments {\n        markingPeriod\n        dueDate\n        dueTime\n        exempt\n        missing\n        ... on Quiz {\n          score {\n            earnedPoints\n            maxPoints\n          }\n          gradeType\n          readings {\n            readingSections\n          }\n        }\n        ... on Essay {\n          topic {\n            essayQuestionId\n            question\n          }\n          readings {\n            readingPages\n            readingSections\n          }\n          gradeType\n          score {\n            earnedPoints\n            maxPoints\n          }\n          finalDraft {\n            returned\n          }\n        }\n        ... on ReadingGuide {\n          readings {\n            readingSections\n          }\n          gradeType\n          score {\n            earnedPoints\n            maxPoints\n          }\n          effort\n          readingGuideFinal {\n            submitted\n          }\n        }\n        ... on SpecialAssignment {\n          gradeType\n          score {\n            earnedPoints\n            maxPoints\n          }\n        }\n        ... on TextAnalysis {\n          gradeType\n          score {\n            earnedPoints\n            maxPoints\n          }\n        }\n      }\n      responsibilityPoints {\n        responsibilityPoints\n      }\n    }\n  }\n`\n\nexport const useCalculateGrades = ({\n  studentId,\n  markingPeriod,\n  polling,\n  pollInterval,\n}: useCalculateGradesProps) => {\n  const { loading, data } = useQuery<\n    findAllMarkingPeriodGrades,\n    findAllMarkingPeriodGradesVariables\n  >(FIND_STUDENT_GRADES_QUERY, {\n    variables: {\n      input: { markingPeriod, studentId },\n    },\n    pollInterval: polling ? pollInterval : 0,\n    onCompleted: (data) =>\n      console.log(data.findAllMarkingPeriodGrades.assignments),\n    onError: (error) => console.error(error),\n  })\n\n  const allEssays = data?.findAllMarkingPeriodGrades.assignments.filter(\n    (assignment) =>\n      (assignment.__typename === 'Essay' &&\n        !assignment.exempt &&\n        assignment.finalDraft?.returned &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)) ||\n      (assignment.__typename === 'Essay' &&\n        !assignment.exempt &&\n        !assignment.finalDraft &&\n        assignment.markingPeriod === markingPeriod &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)),\n  )!\n\n  const allSecondaryGrades =\n    data?.findAllMarkingPeriodGrades.assignments.filter(\n      (assignment) =>\n        assignment.gradeType === GradeTypeEnum.SECONDARY &&\n        assignment.markingPeriod === markingPeriod &&\n        !assignment.exempt &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n    )!\n\n  const responsibilityPoints =\n    data?.findAllMarkingPeriodGrades.responsibilityPoints!.responsibilityPoints!\n\n  const handleScoring = (\n    assignments: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments[],\n    gradeWeightPercentage: number,\n  ) => {\n    const earnedPoints = assignments\n      .map((essay) => essay.score.earnedPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n    const maxPoints = assignments\n      .map((essay) => essay.score.maxPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n\n    return (\n      (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) *\n      gradeWeightPercentage\n    )\n  }\n\n  const handeResponsiblityPointScore = (\n    responsibilityPointsGrade: number,\n    gradeWeightPercentage: number,\n  ) => {\n    return (\n      (Math.round(1000 * responsibilityPointsGrade) / 1000) *\n      (1 / gradeWeightPercentage)\n    )\n  }\n\n  if (!loading) {\n    // console.log(data?.findAllMarkingPeriodGrades.assignments)\n    const onlyPrimaryAndSecondary =\n      data &&\n      allEssays.length > 0 &&\n      allSecondaryGrades.length > 0 &&\n      !data?.findAllMarkingPeriodGrades.responsibilityPoints\n    // console.log(onlyPrimaryAndSecondary)\n\n    const onlyResponsibilityPoints =\n      data &&\n      allEssays.length === 0 &&\n      allSecondaryGrades.length === 0 &&\n      !!data?.findAllMarkingPeriodGrades.responsibilityPoints\n    // console.log(allSecondaryGrades.length < 0)\n\n    const onlySecondary =\n      data &&\n      allEssays.length === 0 &&\n      allSecondaryGrades.length > 0 &&\n      !data?.findAllMarkingPeriodGrades.responsibilityPoints\n    // console.log(onlySecondary)\n\n    const onlyPrimary =\n      data &&\n      allEssays.length > 0 &&\n      allSecondaryGrades.length === 0 &&\n      !data?.findAllMarkingPeriodGrades.responsibilityPoints\n    // console.log(onlyPrimary)\n\n    const onlySecondaryAndResponsiblityPoints =\n      data &&\n      allEssays.length === 0 &&\n      allSecondaryGrades.length > 0 &&\n      !!data?.findAllMarkingPeriodGrades.responsibilityPoints\n    // console.log(onlySecondaryAndResponsiblityPoints)\n\n    const onlyPrimaryAndResponsibilityPoints =\n      data &&\n      allEssays.length > 0 &&\n      allSecondaryGrades.length === 0 &&\n      !!data?.findAllMarkingPeriodGrades.responsibilityPoints\n    // console.log(onlyPrimaryAndResponsibilityPoints)\n\n    const allGrades =\n      data &&\n      allEssays.length > 0 &&\n      allSecondaryGrades.length > 0 &&\n      !!data?.findAllMarkingPeriodGrades.responsibilityPoints\n    // console.log(allGrades)\n\n    if (onlyPrimaryAndSecondary) {\n      const primaryGrade = handleScoring(allEssays, 60)\n      const secondaryGrade = handleScoring(allSecondaryGrades, 40)\n\n      const gradeTotal = (primary: number, secondary: number) => {\n        const number = Number(Number(primary) + Number(secondary))\n        return Math.round(Number(number) * 10) / 10\n      }\n\n      return {\n        grade: gradeTotal(primaryGrade, secondaryGrade),\n        loading,\n        noGrade: false,\n        primaryGrade,\n        secondaryGrade,\n        rp: null,\n      }\n    }\n\n    if (onlyResponsibilityPoints) {\n      console.log('only rp')\n      return {\n        grade: handeResponsiblityPointScore(responsibilityPoints, 1),\n        loading,\n        noGrade: false,\n        primaryGrade: null,\n        secondaryGrade: null,\n        rp: handeResponsiblityPointScore(responsibilityPoints, 1),\n      }\n    }\n    if (onlySecondary) {\n      return {\n        grade: +handleScoring(allSecondaryGrades, 100).toFixed(2),\n        loading,\n        noGrade: false,\n        primaryGrade: null,\n        secondaryGrade: +handleScoring(allSecondaryGrades, 100).toFixed(2),\n        rp: null,\n      }\n    }\n    if (onlyPrimary) {\n      return {\n        grade: +handleScoring(allEssays, 100).toFixed(2),\n        loading,\n        noGrade: false,\n        primaryGrade: +handleScoring(allEssays, 100).toFixed(2),\n        secondaryGrade: null,\n        rp: null,\n      }\n    }\n\n    if (onlyPrimaryAndResponsibilityPoints) {\n      const primaryGrade = handleScoring(allEssays, 76.931818)\n      const rp = handeResponsiblityPointScore(responsibilityPoints, 23.068182)\n\n      const gradeTotal = (primaryGrade: number, supportiveGrade: number) => {\n        const number = Number(\n          Number(primaryGrade) + Number(supportiveGrade),\n        ).toFixed(2)\n\n        return Math.round(Number(number) * 10) / 10\n      }\n\n      return {\n        grade: gradeTotal(primaryGrade, rp),\n        loading,\n        noGrade: false,\n        primaryGrade,\n        secondaryGrade: null,\n        rp,\n      }\n    }\n    if (onlySecondaryAndResponsiblityPoints) {\n      const secondaryGrade = handleScoring(allSecondaryGrades, 70)\n      const rp = handeResponsiblityPointScore(responsibilityPoints, 30)\n\n      const gradeTotal = (secondary: number, supportiveGrade: number) => {\n        const number = Number(\n          Number(secondary) + Number(supportiveGrade),\n        ).toFixed(2)\n\n        return Math.round(Number(number) * 10) / 10\n      }\n\n      console.log(allSecondaryGrades)\n      return {\n        grade: gradeTotal(secondaryGrade, rp),\n        loading,\n        noGrade: false,\n        primaryGrade: null,\n        secondaryGrade,\n        rp,\n      }\n    }\n    if (allGrades) {\n      const primaryGrade = handleScoring(allEssays, 50)\n      const secondaryGrade = handleScoring(allSecondaryGrades, 40)\n      const rp = handeResponsiblityPointScore(responsibilityPoints, 10)\n\n      const totalGrade = Number(\n        Number(primaryGrade) + Number(secondaryGrade) + Number(rp),\n      ).toFixed(3)\n      // console.log(handleScoring(allEssays, 100))\n      return {\n        grade: Math.round(Number(totalGrade) * 10) / 10,\n        loading,\n        noGrade: false,\n        primaryGrade,\n        secondaryGrade,\n        rp,\n      }\n    }\n  }\n  return {\n    grade: 0,\n    loading,\n    noGrade: false,\n  }\n}\n","import { useQuery } from '@apollo/client'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { FIND_STUDENT_GRADES_QUERY } from '../../../../../hooks/useCalculateGrades'\nimport {\n  findAllMarkingPeriodGrades,\n  findAllMarkingPeriodGradesVariables,\n  me_me_Student,\n} from '../../../../../schemaTypes'\nimport {\n  AllAssignmentsMainContainer,\n  AssignmentDisplayCategoryDisplay,\n  AssignmentDisplayContainer,\n  AssignmentDisplayTitle,\n  AssignmentTypeSelect,\n  AssignmentsContainer,\n  IndividualAssignment,\n} from '../state-n-styles/assignmentsStyles'\nimport { useStudentAssignmentContextProvider } from '../state-n-styles/StudentAssignmentContext'\nimport { useState } from 'react'\nimport { phraseCapitalizer, underscoreEliminator } from '../../../../../utils'\n\nexport type AllAssignmentsProps = {}\n\nexport const AllAssignments = ({}: AllAssignmentsProps) => {\n  const me: me_me_Student = useUserContextProvider()\n  const [state] = useStudentAssignmentContextProvider()\n  const [categoryState, setCategoryState] = useState<\n    'Essay' | 'ReadingGuide' | 'Quiz'\n  >('Essay')\n\n  const { loading, data } = useQuery<\n    findAllMarkingPeriodGrades,\n    findAllMarkingPeriodGradesVariables\n  >(FIND_STUDENT_GRADES_QUERY, {\n    variables: {\n      input: {\n        markingPeriod: state.context.selectedMarkingPeriod,\n        studentId: me._id!,\n      },\n    },\n    onCompleted: (data) => {},\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading....</div>\n\n  const assignments = [...data?.findAllMarkingPeriodGrades.assignments!]\n  const essays = assignments.filter(\n    (assignment) =>\n      (assignment.__typename === 'Essay' &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`) &&\n        !assignment.exempt) ||\n      (assignment.__typename === 'Essay' && assignment.finalDraft?.returned),\n  )\n  const readingGuides = assignments.filter(\n    (assignment) =>\n      assignment.__typename === 'ReadingGuide' &&\n      Date.parse(new Date().toLocaleString()) >\n        Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`) &&\n      !assignment.exempt,\n  )\n\n  const quizzes = assignments.filter(\n    (assignment) => assignment.__typename === 'Quiz' && !assignment.exempt,\n  )\n  const dateSort = (a: any, b: any) => (a.dueDate > b.dueDate ? 1 : 0)\n  const contractedTitle = (str: string, length: number) =>\n    str.length < length ? str : str.slice(0, length) + '...'\n\n  return (\n    <AllAssignmentsMainContainer>\n      <AssignmentDisplayTitle>\n        <div>Assignments</div>\n      </AssignmentDisplayTitle>\n      <AssignmentTypeSelect>\n        <div\n          onClick={() => setCategoryState('Essay')}\n          style={\n            categoryState === 'Essay' ? { textDecoration: 'underline' } : {}\n          }\n        >\n          Essays\n        </div>\n        <div\n          onClick={() => setCategoryState('ReadingGuide')}\n          style={\n            categoryState === 'ReadingGuide'\n              ? { textDecoration: 'underline' }\n              : {}\n          }\n        >\n          Reading Guides\n        </div>\n        <div\n          onClick={() => setCategoryState('Quiz')}\n          style={\n            categoryState === 'Quiz' ? { textDecoration: 'underline' } : {}\n          }\n        >\n          Quizzes\n        </div>\n      </AssignmentTypeSelect>\n      <AssignmentDisplayContainer>\n        <AssignmentDisplayCategoryDisplay>\n          <div style={{}}>Name</div>\n          <div>DueDate</div>\n          <div>Score</div>\n          {categoryState === 'ReadingGuide' && <div>Effort</div>}\n        </AssignmentDisplayCategoryDisplay>\n        <>\n          {categoryState === 'Essay' && (\n            <AssignmentsContainer>\n              {essays.sort(dateSort).map((essay, i: number) => {\n                return (\n                  <IndividualAssignment\n                    style={\n                      i % 2 === 0\n                        ? { background: 'var(--white)' }\n                        : { background: 'var(--grey)' }\n                    }\n                    key={essay.dueDate}\n                  >\n                    <div>\n                      {essay.__typename === 'Essay' &&\n                        contractedTitle(essay.readings.readingSections, 55)}\n                    </div>\n                    <div>{essay.dueDate}</div>\n                    {essay.__typename === 'Essay' &&\n                    essay.finalDraft &&\n                    !essay.finalDraft.returned ? (\n                      <div>Pending</div>\n                    ) : essay.exempt ? (\n                      <div>Exempt</div>\n                    ) : essay.missing ? (\n                      <div style={{ color: 'var(--red)' }}>Missing</div>\n                    ) : (\n                      <div>\n                        {(essay.score.earnedPoints / essay.score.maxPoints) *\n                          100}\n                        %\n                      </div>\n                    )}\n                  </IndividualAssignment>\n                )\n              })}\n            </AssignmentsContainer>\n          )}\n          {categoryState === 'ReadingGuide' && (\n            <AssignmentsContainer>\n              {readingGuides.sort(dateSort).map((rg, i: number) => {\n                return (\n                  <IndividualAssignment\n                    style={\n                      i % 2 === 0\n                        ? { background: 'var(--white)' }\n                        : { background: 'var(--grey)' }\n                    }\n                    key={rg.dueDate}\n                  >\n                    <div>\n                      {rg.__typename === 'ReadingGuide' &&\n                        contractedTitle(rg.readings.readingSections, 40)}\n                    </div>\n                    <div>{rg.dueDate}</div>\n                    {rg.exempt ? (\n                      <div>Exempt</div>\n                    ) : rg.missing ? (\n                      <div style={{ color: 'var(--red)' }}>Missing</div>\n                    ) : (\n                      <>\n                        <div>\n                          {(rg.score.earnedPoints / rg.score.maxPoints) * 100}%\n                        </div>\n                      </>\n                    )}\n                    {rg.missing ? (\n                      <div></div>\n                    ) : (\n                      <div>\n                        {rg.__typename === 'ReadingGuide' &&\n                          phraseCapitalizer(underscoreEliminator(rg.effort))}\n                      </div>\n                    )}\n                  </IndividualAssignment>\n                )\n              })}\n            </AssignmentsContainer>\n          )}\n          {categoryState === 'Quiz' && (\n            <AssignmentsContainer>\n              {quizzes.sort(dateSort).map((quiz, i: number) => {\n                console.log(quiz)\n                return (\n                  <IndividualAssignment\n                    style={\n                      i % 2 === 0\n                        ? { background: 'var(--white)' }\n                        : { background: 'var(--grey)' }\n                    }\n                    key={quiz.dueDate}\n                  >\n                    <div>\n                      {quiz.__typename === 'Quiz' &&\n                        quiz.readings.readingSections}\n                    </div>\n                    <div>{quiz.dueDate}</div>\n                    {quiz.exempt ? (\n                      <div>Exempt</div>\n                    ) : quiz.missing ? (\n                      <div style={{ color: 'var(--red)' }}>Missing</div>\n                    ) : (\n                      <div>\n                        {(\n                          (quiz.score.earnedPoints / quiz.score.maxPoints) *\n                          100\n                        ).toFixed(2)}\n                        %\n                      </div>\n                    )}\n                  </IndividualAssignment>\n                )\n              })}\n            </AssignmentsContainer>\n          )}\n        </>\n      </AssignmentDisplayContainer>\n    </AllAssignmentsMainContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findCompletedEssaysByStudentIdVariables,\n  findCompletedEssaysByStudentId,\n  me_me_Student,\n} from '../../../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport {\n  AssignmentTypeTitle,\n  AssignmentTypeContentContainer,\n  AssignmentLink,\n  AssignmentLinkLi,\n  CompletionMessage,\n  PendingAssignmentLinkLi,\n  CompletedAssignmentTypeContentContainer,\n  CompletedAssignmentAssignmentAndScoreContainer,\n  AssignmentScore,\n  PendingAssignmentScore,\n} from '../../state-n-styles/assignmentsStyles'\nimport { useStudentAssignmentContextProvider } from '../../state-n-styles/StudentAssignmentContext'\n\nexport type CompletedEssaySelectProps = {}\nexport const FIND_COMPLETED_ESSAYS_QUERY = gql`\n  query findCompletedEssaysByStudentId(\n    $input: FindCompletedEssaysByStudentIdInput!\n  ) {\n    findCompletedEssaysByStudentId(input: $input) {\n      essays {\n        _id\n        readings {\n          readingSections\n        }\n        topic {\n          writingLevel\n        }\n        markingPeriod\n        finalDraft {\n          submitted\n          returned\n        }\n        score {\n          earnedPoints\n          maxPoints\n        }\n      }\n    }\n  }\n`\n\nexport const CompletedEssaySelect: FC<CompletedEssaySelectProps> = () => {\n  const me: me_me_Student = useUserContextProvider()\n  const [state] = useStudentAssignmentContextProvider()\n\n  const { loading, data } = useQuery<\n    findCompletedEssaysByStudentId,\n    findCompletedEssaysByStudentIdVariables\n  >(FIND_COMPLETED_ESSAYS_QUERY, {\n    variables: {\n      input: { studentId: me._id! },\n    },\n    pollInterval: 10000,\n    onCompleted: (data) => console.log(data.findCompletedEssaysByStudentId),\n    onError: (error) => console.error(error),\n  })\n\n  const essaysForMarkingPeriod =\n    data?.findCompletedEssaysByStudentId.essays.filter(\n      (essay) => essay.markingPeriod === state.context.selectedMarkingPeriod,\n    )\n\n  if (loading)\n    return (\n      <AssignmentTypeTitle>\n        <div>Completed Essays</div>\n      </AssignmentTypeTitle>\n    )\n  return (\n    <>\n      <AssignmentTypeTitle>\n        <div>Completed Essays</div>\n      </AssignmentTypeTitle>\n      {loading ? null : (\n        <CompletedAssignmentTypeContentContainer>\n          {essaysForMarkingPeriod?.map((essay) => (\n            <ul key={essay._id!}>\n              {essay.finalDraft?.returned ? (\n                <AssignmentLinkLi>\n                  <AssignmentLink to={`essay/completed/${essay._id!}`}>\n                    <CompletedAssignmentAssignmentAndScoreContainer>\n                      <div>{essay.readings.readingSections}</div>\n                      <AssignmentScore>\n                        {/* {essay.score.earnedPoints} / {essay.score.maxPoints}{' '} */}\n                        {(\n                          (essay.score.earnedPoints / essay.score.maxPoints) *\n                          100\n                        ).toFixed(1)}\n                        %\n                      </AssignmentScore>\n                    </CompletedAssignmentAssignmentAndScoreContainer>\n                  </AssignmentLink>\n                </AssignmentLinkLi>\n              ) : (\n                <PendingAssignmentLinkLi>\n                  <CompletedAssignmentAssignmentAndScoreContainer>\n                    <div> {essay.readings.readingSections}</div>\n                    <PendingAssignmentScore>Pending</PendingAssignmentScore>\n                  </CompletedAssignmentAssignmentAndScoreContainer>\n                </PendingAssignmentLinkLi>\n              )}\n            </ul>\n          ))}\n\n          {essaysForMarkingPeriod && essaysForMarkingPeriod.length === 0 && (\n            <AssignmentTypeContentContainer>\n              <CompletionMessage>\n                <ul>\n                  <li>No Essays Completed</li>\n                </ul>\n              </CompletionMessage>\n            </AssignmentTypeContentContainer>\n          )}\n        </CompletedAssignmentTypeContentContainer>\n      )}\n    </>\n  )\n}\n","import { AssignedEssaySelect } from './essays/assigned-essays/AssignedEssaySelect'\nimport { AssignedReadingGuideSelect } from './readingGuides/assigned-reading-guides/AssignedReadingGuideSelect'\nimport {\n  AssignmentsToCompleteContainer,\n  AssignmentsTypeSelectorPanel,\n  AssignmentsTypeStyle,\n  AssignmentsTypeSelectorHeader,\n  AssignmentTypeContainer,\n  NoWorkContainer,\n} from './state-n-styles/assignmentsStyles'\nimport { useStudentAssignmentContextProvider } from './state-n-styles/StudentAssignmentContext'\nimport { ArticleReviewSelect } from './articleReviews/ArticleReviewSelect'\nimport { MarkingPeriodSelector } from './MarkingPeriodSelector'\nimport { useMarkingPeriodContextProvider } from '../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport {\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  findQuizzesByStudentId,\n  findQuizzesByStudentIdVariables,\n  findStudentInfoByStudentIdForDesk,\n  findStudentInfoByStudentIdForDeskVariables,\n  me_me_Student,\n} from '../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../contexts/UserContext'\nimport { gql, useQuery } from '@apollo/client'\nimport { QuizSelect } from './quizzes/QuizSelect'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from '../../school-day/SchoolDay'\nimport { useClassTimeIndicator } from '../../../../hooks/useClassTimeIndicator'\nimport { useAssignmentsAllowedInClassCheck } from '../../../../hooks/useAssignmentsAllowedInClassCheck'\nimport { FIND_STUDENT_INFO_FOR_DESK_QUERY } from '../../teacher/teachers-aid/main-screen/seating-chart/Desk'\nimport { AllAssignments } from './allAssignments/AllAssignments'\nimport { CompletedEssaySelect } from './essays/completed-essays/CompletedEssaySelect'\n\nexport type StudentAssignmentsProps = {}\n\nexport const FIND_QUIZZES_BY_STUDENT_ID_QUERY = gql`\n  query findQuizzesByStudentId($input: FindQuizzesByStudentIdInput!) {\n    findQuizzesByStudentId(input: $input) {\n      quizzes {\n        _id\n        isActive\n        assigned\n        readings {\n          readingSections\n        }\n        finishedQuiz\n        startedQuiz\n      }\n    }\n  }\n`\n\nexport const MARK_EXEMPT_MUTATION = gql`\n  mutation markExempt($input: MarkExemptInput!) {\n    markExempt(input: $input) {\n      marked\n    }\n  }\n`\n\nexport const StudentAssignments = ({}: StudentAssignmentsProps) => {\n  const me: me_me_Student = useUserContextProvider()\n  const { classTime } = useClassTimeIndicator(me)\n\n  const { assignmentsAllowedInClass } = useAssignmentsAllowedInClassCheck(me)\n  const [state, event] = useStudentAssignmentContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n\n  const { currentMarkingPeriod } = markingPeriodState.context\n\n  const { loading, data } = useQuery<\n    findQuizzesByStudentId,\n    findQuizzesByStudentIdVariables\n  >(FIND_QUIZZES_BY_STUDENT_ID_QUERY, {\n    variables: {\n      input: { markingPeriod: currentMarkingPeriod, studentId: me._id! },\n    },\n    // pollInterval: 1000,\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  const { data: schoolDayData } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: new Date().toLocaleDateString() },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  // const { data: absenceData } = useQuery<\n  //   findStudentInfoByStudentIdForDesk,\n  //   findStudentInfoByStudentIdForDeskVariables\n  // >(FIND_STUDENT_INFO_FOR_DESK_QUERY, {\n  //   variables: {\n  //     input: { studentId: me._id! },\n  //   },\n  //   onError: (error) => console.error(error + 'desk'),\n  // })\n\n  // const isAbsent = absenceData?.findStudentById.student.hasAbsences.some(\n  //   (day) => day.dayAbsent === new Date().toLocaleDateString()\n  // )\n  const isAbsent =\n    me.hasAbsences.length > 0 &&\n    me.hasAbsences.find((a) => a.dayAbsent === new Date().toLocaleDateString())\n\n  return (\n    <AssignmentsToCompleteContainer>\n      <AssignmentsTypeSelectorPanel>\n        <AssignmentsTypeSelectorHeader>\n          Assignments\n        </AssignmentsTypeSelectorHeader>\n        <AssignmentsTypeStyle\n          selected={state.matches('essaysToComplete')}\n          onClick={() => event({ type: 'ESSAYS_TO_COMPLETE' })}\n        >\n          Essays to Complete\n        </AssignmentsTypeStyle>\n        <AssignmentsTypeStyle\n          selected={state.matches('completedEssays')}\n          onClick={() => event({ type: 'COMPLETED_ESSAYS' })}\n        >\n          Completed Essays\n        </AssignmentsTypeStyle>\n        <AssignmentsTypeStyle\n          selected={state.matches('readingGuidesToComplete')}\n          onClick={() => event({ type: 'READING_GUIDES' })}\n        >\n          Reading Guides to Complete\n        </AssignmentsTypeStyle>\n        {data?.findQuizzesByStudentId.quizzes.some((quiz) => quiz.assigned) && (\n          <AssignmentsTypeStyle\n            selected={state.matches('quizzes')}\n            onClick={() => event({ type: 'QUIZZES' })}\n          >\n            Quizzes\n          </AssignmentsTypeStyle>\n        )}\n        {/* <AssignmentsTypeStyle\n          onClick={() => event({ type: 'ARTICLE_REVIEWS' })}\n        >\n          Article Reviews to Complete\n        </AssignmentsTypeStyle> */}\n        <AssignmentsTypeStyle\n          selected={state.matches('allAssignments')}\n          onClick={() => event({ type: 'ALL_ASSIGNMENTS' })}\n        >\n          Assignments Grades\n        </AssignmentsTypeStyle>\n      </AssignmentsTypeSelectorPanel>\n\n      <AssignmentTypeContainer>\n        {state.matches('essaysToComplete') && (\n          <>\n            {classTime && !assignmentsAllowedInClass && !isAbsent ? (\n              <NoWorkContainer>\n                You can only do work after class\n              </NoWorkContainer>\n            ) : (\n              <AssignedEssaySelect />\n            )}\n          </>\n        )}\n        {state.matches('allAssignments') && <AllAssignments />}\n        {state.matches('completedEssays') && <CompletedEssaySelect />}\n        {state.matches('readingGuidesToComplete') && (\n          <>\n            {classTime && !assignmentsAllowedInClass && !isAbsent ? (\n              <NoWorkContainer>\n                You can only do work after class\n              </NoWorkContainer>\n            ) : (\n              <AssignedReadingGuideSelect />\n            )}\n          </>\n        )}\n        {state.matches('articleReviewsToComplete') && (\n          <>\n            {classTime && !isAbsent ? (\n              <NoWorkContainer>\n                You can only do work after class\n              </NoWorkContainer>\n            ) : (\n              <ArticleReviewSelect />\n            )}\n          </>\n        )}\n        {state.matches('quizzes') && <>{classTime && <QuizSelect />}</>}\n        <MarkingPeriodSelector />\n      </AssignmentTypeContainer>\n      {/* <Routes>\n        <Route\n          path='assignments/*'\n          element={\n            <StudentAssignmentContextProvider>\n              <StudentAssignments />\n            </StudentAssignmentContextProvider>\n          }\n        />\n        <Route\n          path='assignments/essay/toComplete/:essayToComplete'\n          element={\n            <StudentEssayContextProvider>\n              <EssayToComplete />\n            </StudentEssayContextProvider>\n          }\n        />\n        <Route\n          path='assignments/essay/completed/:completedEssay'\n          element={\n            <CompletedEssayContextProvider>\n              <CompletedEssay />\n            </CompletedEssayContextProvider>\n          }\n        />\n        <Route\n          path='assignments/reading-guide/toComplete/:readingGuideToComplete'\n          element={\n            <ReadingGuideToCompleteContextProvider>\n              <ReadingGuideToComplete />\n            </ReadingGuideToCompleteContextProvider>\n          }\n        />\n        <Route\n          path='assignments/articleReview/toComplete/:articleReviewToComplete'\n          element={\n            <ArticleReviewToCompleteContextProvider>\n              <ArticleReviewToComplete />\n            </ArticleReviewToCompleteContextProvider>\n          }\n        />\n        <Route\n          path='assignments/quiz/toComplete/:quizToComplete'\n          element={\n            <QuizToCompleteContextProvider>\n              <QuizToComplete />\n            </QuizToCompleteContextProvider>\n          }\n        />\n      </Routes> */}\n    </AssignmentsToCompleteContainer>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  WritingLevelEnum,\n  BasicQuestionEnum,\n  DevelopingSentenceStructureInput,\n  AcademicSentenceStructureInput,\n  QuestionTypeEnum,\n  AdvancedSentenceStructureInput,\n} from '../../../../../../../schemaTypes'\n\nexport type studentEssayMachineSchema = {\n  states: {\n    info: {}\n    organizers: {\n      states: {\n        transition: {}\n        developingOrganizer: {\n          states: {\n            loading: {}\n            identifications: {}\n            restatement: {}\n            answer: {}\n            conclusion: {}\n          }\n        }\n        academicOrganizer: {\n          states: {\n            loading: {}\n            identifications: {}\n            restatement: {}\n            answer: {\n              states: {\n                questionType: {}\n                transition: {}\n                problemSolution: {}\n                whyCauseEffect: {}\n                howCauseEffect: {}\n              }\n            }\n            conclusion: {}\n          }\n        }\n        advancedOrganizer: {\n          states: {\n            loading: {}\n            restatement: {}\n            answer: {\n              states: {\n                questionType: {}\n                transition: {}\n                problemSolution: {}\n                whyCauseEffect: {}\n                howCauseEffect: {}\n              }\n            }\n            conclusion: {}\n          }\n        }\n      }\n    }\n    workingDraft: {}\n  }\n}\nexport type studentEssayMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'ORGANIZER' }\n  | { type: 'ANSWER' }\n  | { type: 'RESTATEMENT' }\n  | { type: 'SET_ESSAY_ID'; payload: string }\n  | { type: 'SET_WRITING_LEVEL'; payload: WritingLevelEnum }\n  | { type: 'SET_RESTATEMENT'; payload: string }\n  | { type: 'SET_CONCLUSION'; payload: string }\n  | { type: 'SET_BASIC_QUESTION_TYPE'; payload: BasicQuestionEnum }\n  | { type: 'SET_FULL_QUESTION_TYPE'; payload: QuestionTypeEnum }\n  | {\n      type: 'SET_DEVELOPING_SENTENCE_STRUCTURE'\n      payload: DevelopingSentenceStructureInput\n    }\n  | { type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT'; payload: string }\n  | { type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_VERB'; payload: string }\n  | {\n      type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_OBJECT'\n      payload: string | null | null\n    }\n  | {\n      type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT'\n      payload: string\n    }\n  | { type: 'SET_ANSWER'; payload: string }\n  | {\n      type: 'SET_ACADEMIC_SENTENCE_STRUCTURE'\n      payload: AcademicSentenceStructureInput\n    }\n  | {\n      type: 'SET_ADVANCED_SENTENCE_STRUCTURE'\n      payload: AdvancedSentenceStructureInput\n    }\n  | { type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT'; payload: string }\n  | { type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_VERB'; payload: string }\n  | { type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT'; payload: string | null }\n  | {\n      type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT'\n      payload: string | null\n    }\n  | { type: 'SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT'; payload: string }\n  | { type: 'SET_ADVANCED_SENTENCE_STRUCTURE_VERB'; payload: string }\n  | { type: 'SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT'; payload: string | null }\n  | {\n      type: 'SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT'\n      payload: string | null\n    }\n  | {\n      type: 'SET_PROBLEM_SOLUTION'\n      payload: {\n        problem: string\n        reasonForProblem: string\n        solvedBy: string\n        whySolutionSolved: string\n      }\n    }\n  | {\n      type: 'SET_HOW_CAUSE_EFFECT'\n      payload: {\n        before: string\n        cause: string\n        after: string\n      }\n    }\n  | {\n      type: 'SET_WHY_CAUSE_EFFECT'\n      payload: {\n        proximateCause: string\n        ultimateCause: string\n      }\n    }\n  | {\n      type: 'SET_WHY_CAUSE_EFFECT'\n      payload: { proximateCause: string; ultimateCause: string }\n    }\n  | {\n      type: 'SET_HOW_CAUSE_EFFECT'\n      payload: { before: string; cause: string; after: string }\n    }\n  | { type: 'SET_QUESTION_TYPE'; payload: string }\n  | { type: 'SET_DRAFT'; payload: string }\n  | { type: 'SET_LATE'; payload: boolean }\n  | { type: 'SET_PRE_LOADED'; payload: boolean }\n  | { type: 'SET_HELP_DISPLAY' }\n  | { type: 'SET_VOCAB_DISPLAY' }\n  | { type: 'SET_RUBRIC_DISPLAY' }\n\nexport type studentEssayMachineContext = {\n  essayId: string\n  writingLevel: WritingLevelEnum\n  developingOrganizer: {\n    questionType: BasicQuestionEnum\n    developingSentenceStructure: {\n      subject: string\n      verb: string\n      object?: string | null\n      subjectCompliment?: string | null\n    }\n    restatement: string\n    answer: string\n    conclusion: string\n  }\n  academicOrganizer: {\n    questionType: QuestionTypeEnum | null\n    academicSentenceStructure: {\n      subject: string\n      verb: string\n      object?: string | null\n      subjectCompliment?: string | null\n    }\n    restatement: string\n    answer: {\n      preLoaded: boolean\n      problemSolution: {\n        problem: string\n        reasonForProblem: string\n        solvedBy: string\n        whySolutionSolved: string\n      }\n      howCauseEffect: {\n        before: string\n        cause: string\n        after: string\n      }\n      whyCauseEffect: {\n        ultimateCause: string\n        proximateCause: string\n      }\n    }\n    conclusion: string\n  }\n  advancedOrganizer: {\n    questionType: QuestionTypeEnum\n    advancedSentenceStructure: {\n      subject: string\n      verb: string\n      object?: string | null\n      subjectCompliment?: string | null\n    }\n    restatement: string\n    answer: {\n      preLoaded: boolean\n      problemSolution: {\n        problem: string\n        reasonForProblem: string\n        solvedBy: string\n        whySolutionSolved: string\n      }\n      howCauseEffect: {\n        before: string\n        cause: string\n        after: string\n      }\n      whyCauseEffect: {\n        ultimateCause: string\n        proximateCause: string\n      }\n    }\n    conclusion: string\n  }\n  draftToUpdate: string\n  isLate: boolean\n  helpDisplay: boolean\n  vocabDisplay: boolean\n  rubricDisplay: boolean\n}\n\nexport const studentEssayMachine = Machine<\n  studentEssayMachineContext,\n  studentEssayMachineSchema,\n  studentEssayMachineEvent\n>({\n  id: 'studentEssay',\n  initial: 'info',\n  context: {\n    essayId: '',\n    writingLevel: WritingLevelEnum.DEVELOPING,\n    developingOrganizer: {\n      questionType: BasicQuestionEnum.HOW,\n      developingSentenceStructure: {\n        subject: '',\n        verb: '',\n        object: null,\n        subjectCompliment: null,\n      },\n      restatement: '',\n      answer: '',\n      conclusion: '',\n    },\n    academicOrganizer: {\n      questionType: null,\n      academicSentenceStructure: {\n        subject: '',\n        verb: '',\n        object: null,\n        subjectCompliment: null,\n      },\n      restatement: '',\n      answer: {\n        preLoaded: false,\n        problemSolution: {\n          problem: '',\n          reasonForProblem: '',\n          solvedBy: '',\n          whySolutionSolved: '',\n        },\n        howCauseEffect: {\n          before: '',\n          cause: '',\n          after: '',\n        },\n        whyCauseEffect: {\n          ultimateCause: '',\n          proximateCause: '',\n        },\n      },\n      conclusion: '',\n    },\n    advancedOrganizer: {\n      questionType: QuestionTypeEnum.HOW_PROBLEM_SOLUTION,\n      advancedSentenceStructure: {\n        subject: '',\n        verb: '',\n        object: null,\n        subjectCompliment: null,\n      },\n      restatement: '',\n      answer: {\n        preLoaded: false,\n        problemSolution: {\n          problem: '',\n          reasonForProblem: '',\n          solvedBy: '',\n          whySolutionSolved: '',\n        },\n        howCauseEffect: {\n          before: '',\n          cause: '',\n          after: '',\n        },\n        whyCauseEffect: {\n          ultimateCause: '',\n          proximateCause: '',\n        },\n      },\n      conclusion: '',\n    },\n    draftToUpdate: '',\n    isLate: false,\n    helpDisplay: true,\n    vocabDisplay: false,\n    rubricDisplay: false,\n  },\n  states: {\n    info: {\n      on: {\n        SET_ESSAY_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              essayId: evt.payload,\n            }\n          }),\n        },\n        SET_WRITING_LEVEL: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              writingLevel: evt.payload,\n            }\n          }),\n        },\n        SET_DRAFT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              draftToUpdate: evt.payload,\n            }\n          }),\n        },\n        ORGANIZER: 'organizers',\n      },\n    },\n    organizers: {\n      initial: 'transition',\n      states: {\n        transition: {\n          always: [\n            {\n              target: 'developingOrganizer',\n              cond: (ctx) => ctx.writingLevel === 'DEVELOPING',\n            },\n            {\n              target: 'academicOrganizer',\n              cond: (ctx) => ctx.writingLevel === 'ACADEMIC',\n            },\n            {\n              target: 'advancedOrganizer',\n              cond: (ctx) => ctx.writingLevel === 'ADVANCED',\n            },\n          ],\n        },\n        developingOrganizer: {\n          initial: 'loading',\n          states: {\n            loading: {\n              on: {\n                NEXT: 'identifications',\n                SET_BASIC_QUESTION_TYPE: {\n                  actions: assign((ctx, evt) => {\n                    console.log(evt.payload)\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        questionType: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: evt.payload!,\n                      },\n                    }\n                  }),\n                },\n                SET_RESTATEMENT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        restatement: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_ANSWER: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        answer: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_CONCLUSION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        conclusion: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            identifications: {\n              on: {\n                RESTATEMENT: 'restatement',\n                ANSWER: 'answer',\n                SET_BASIC_QUESTION_TYPE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        questionType: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          subject: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE_VERB: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          verb: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE_OBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          object: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT: {\n                  actions: assign((ctx, evt) => {\n                    console.log(evt.payload)\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          subjectCompliment: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            restatement: {\n              on: {\n                PREVIOUS: 'identifications',\n                NEXT: 'answer',\n                SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          subject: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE_VERB: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          verb: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE_OBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          object: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT: {\n                  actions: assign((ctx, evt) => {\n                    console.log(evt.payload)\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        developingSentenceStructure: {\n                          ...ctx.developingOrganizer\n                            .developingSentenceStructure,\n                          subjectCompliment: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_BASIC_QUESTION_TYPE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        questionType: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_RESTATEMENT: {\n                  actions: assign((ctx, evt) => {\n                    console.log(evt.payload)\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        restatement: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            answer: {\n              on: {\n                PREVIOUS: 'restatement',\n                NEXT: 'conclusion',\n                SET_ANSWER: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        answer: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            conclusion: {\n              on: {\n                PREVIOUS: 'answer',\n                NEXT: '#studentEssay.workingDraft',\n                SET_CONCLUSION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      developingOrganizer: {\n                        ...ctx.developingOrganizer,\n                        conclusion: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n          },\n        },\n        academicOrganizer: {\n          initial: 'loading',\n          states: {\n            loading: {\n              on: {\n                NEXT: 'identifications',\n                // RESTATEMENT: 'restatement',\n                // ANSWER: 'answer',\n                SET_ACADEMIC_SENTENCE_STRUCTURE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        academicSentenceStructure: {\n                          ...evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_RESTATEMENT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        restatement: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_FULL_QUESTION_TYPE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        questionType: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_PRE_LOADED: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        answer: {\n                          ...ctx.academicOrganizer.answer,\n                          preLoaded: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_PROBLEM_SOLUTION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        answer: {\n                          ...ctx.academicOrganizer.answer,\n                          problemSolution: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_HOW_CAUSE_EFFECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        answer: {\n                          ...ctx.academicOrganizer.answer,\n                          howCauseEffect: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_WHY_CAUSE_EFFECT: {\n                  actions: assign((ctx, evt) => {\n                    console.log('step 1')\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        answer: {\n                          ...ctx.academicOrganizer.answer,\n                          whyCauseEffect: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_CONCLUSION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        conclusion: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            identifications: {\n              on: {\n                RESTATEMENT: 'restatement',\n                ANSWER: 'answer',\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            restatement: {\n              on: {\n                NEXT: 'answer',\n                SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        academicSentenceStructure: {\n                          ...ctx.academicOrganizer.academicSentenceStructure,\n                          subject: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_ACADEMIC_SENTENCE_STRUCTURE_VERB: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        academicSentenceStructure: {\n                          ...ctx.academicOrganizer.academicSentenceStructure,\n                          verb: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        academicSentenceStructure: {\n                          ...ctx.academicOrganizer.academicSentenceStructure,\n                          object: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_FULL_QUESTION_TYPE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        questionType: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_RESTATEMENT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        restatement: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            answer: {\n              initial: 'transition',\n              states: {\n                questionType: {\n                  on: {\n                    NEXT: 'transition',\n                    PREVIOUS:\n                      '#studentEssay.organizers.academicOrganizer.restatement',\n                    SET_FULL_QUESTION_TYPE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            questionType: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_PRE_LOADED: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              preLoaded: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n                transition: {\n                  always: [\n                    {\n                      target: 'problemSolution',\n                      cond: (ctx) =>\n                        ctx.academicOrganizer.questionType ===\n                        'HOW_PROBLEM_SOLUTION',\n                    },\n                    {\n                      target: 'howCauseEffect',\n                      cond: (ctx) =>\n                        ctx.academicOrganizer.questionType ===\n                        'HOW_CAUSE_EFFECT',\n                    },\n                    {\n                      target: 'whyCauseEffect',\n                      cond: (ctx) =>\n                        ctx.academicOrganizer.questionType ===\n                        'WHY_CAUSE_EFFECT',\n                    },\n                  ],\n                },\n                problemSolution: {\n                  on: {\n                    PREVIOUS:\n                      '#studentEssay.organizers.academicOrganizer.answer.questionType',\n                    NEXT: '#studentEssay.organizers.academicOrganizer.conclusion',\n                    SET_PROBLEM_SOLUTION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              problemSolution: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n                whyCauseEffect: {\n                  on: {\n                    PREVIOUS:\n                      '#studentEssay.organizers.academicOrganizer.answer.questionType',\n                    NEXT: '#studentEssay.organizers.academicOrganizer.conclusion',\n                    SET_WHY_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        console.log(ctx.academicOrganizer.answer.whyCauseEffect)\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              whyCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n                howCauseEffect: {\n                  on: {\n                    PREVIOUS:\n                      '#studentEssay.organizers.academicOrganizer.answer.questionType',\n                    NEXT: '#studentEssay.organizers.academicOrganizer.conclusion',\n                    SET_HOW_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              howCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_PRE_LOADED: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              preLoaded: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n              },\n            },\n            conclusion: {\n              on: {\n                PREVIOUS: 'answer',\n                NEXT: '#studentEssay.workingDraft',\n                SET_CONCLUSION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      academicOrganizer: {\n                        ...ctx.academicOrganizer,\n                        conclusion: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n          },\n        },\n        advancedOrganizer: {\n          initial: 'loading',\n          states: {\n            loading: {\n              on: {\n                NEXT: 'restatement',\n                SET_ADVANCED_SENTENCE_STRUCTURE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        advancedSentenceStructure: {\n                          ...evt.payload,\n                          object: evt.payload.object!,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_RESTATEMENT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        restatement: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_FULL_QUESTION_TYPE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        questionType: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_PRE_LOADED: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        answer: {\n                          ...ctx.advancedOrganizer.answer,\n                          preLoaded: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_PROBLEM_SOLUTION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        answer: {\n                          ...ctx.advancedOrganizer.answer,\n                          problemSolution: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_HOW_CAUSE_EFFECT: {\n                  actions: assign((ctx, evt) => {\n                    console.log(evt.payload)\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        answer: {\n                          ...ctx.advancedOrganizer.answer,\n                          howCauseEffect: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_WHY_CAUSE_EFFECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        answer: {\n                          ...ctx.advancedOrganizer.answer,\n                          whyCauseEffect: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_CONCLUSION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        conclusion: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            restatement: {\n              on: {\n                NEXT: 'answer',\n                SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        advancedSentenceStructure: {\n                          ...ctx.advancedOrganizer.advancedSentenceStructure,\n                          subject: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_ADVANCED_SENTENCE_STRUCTURE_VERB: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        advancedSentenceStructure: {\n                          ...ctx.advancedOrganizer.advancedSentenceStructure,\n                          verb: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        advancedSentenceStructure: {\n                          ...ctx.advancedOrganizer.advancedSentenceStructure,\n                          object: evt.payload,\n                        },\n                      },\n                    }\n                  }),\n                },\n                SET_RESTATEMENT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        restatement: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n            answer: {\n              initial: 'questionType',\n              states: {\n                questionType: {\n                  on: {\n                    NEXT: 'transition',\n                    SET_FULL_QUESTION_TYPE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            questionType: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_PRE_LOADED: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              preLoaded: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n                transition: {\n                  always: [\n                    {\n                      target: 'problemSolution',\n                      cond: (ctx) =>\n                        ctx.advancedOrganizer.questionType ===\n                        'HOW_PROBLEM_SOLUTION',\n                    },\n                    {\n                      target: 'howCauseEffect',\n                      cond: (ctx) =>\n                        ctx.advancedOrganizer.questionType ===\n                        'HOW_CAUSE_EFFECT',\n                    },\n                    {\n                      target: 'whyCauseEffect',\n                      cond: (ctx) =>\n                        ctx.advancedOrganizer.questionType ===\n                        'WHY_CAUSE_EFFECT',\n                    },\n                  ],\n                },\n                problemSolution: {\n                  on: {\n                    PREVIOUS:\n                      '#studentEssay.organizers.advancedOrganizer.answer.questionType',\n                    NEXT: '#studentEssay.organizers.advancedOrganizer.conclusion',\n                    SET_PROBLEM_SOLUTION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              problemSolution: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n                whyCauseEffect: {\n                  on: {\n                    PREVIOUS:\n                      '#studentEssay.organizers.advancedOrganizer.answer.questionType',\n                    NEXT: '#studentEssay.organizers.advancedOrganizer.conclusion',\n                    SET_WHY_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              whyCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n                howCauseEffect: {\n                  on: {\n                    PREVIOUS:\n                      '#studentEssay.organizers.advancedOrganizer.answer.questionType',\n                    NEXT: '#studentEssay.organizers.advancedOrganizer.conclusion',\n                    SET_HOW_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              howCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_PRE_LOADED: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              preLoaded: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HELP_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: true,\n                          vocabDisplay: false,\n                        }\n                      }),\n                    },\n                    SET_VOCAB_DISPLAY: {\n                      actions: assign((ctx) => {\n                        return {\n                          ...ctx,\n                          helpDisplay: false,\n                          vocabDisplay: true,\n                        }\n                      }),\n                    },\n                  },\n                },\n              },\n            },\n            conclusion: {\n              on: {\n                PREVIOUS: 'answer',\n                NEXT: '#studentEssay.workingDraft',\n                SET_CONCLUSION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      advancedOrganizer: {\n                        ...ctx.advancedOrganizer,\n                        conclusion: evt.payload,\n                      },\n                    }\n                  }),\n                },\n                SET_HELP_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: true,\n                      vocabDisplay: false,\n                    }\n                  }),\n                },\n                SET_VOCAB_DISPLAY: {\n                  actions: assign((ctx) => {\n                    return {\n                      ...ctx,\n                      helpDisplay: false,\n                      vocabDisplay: true,\n                    }\n                  }),\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    workingDraft: {\n      on: {\n        PREVIOUS: '#studentEssay.organizers',\n        SET_DRAFT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              draftToUpdate: evt.payload,\n            }\n          }),\n        },\n        SET_LATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              isLate: evt.payload,\n            }\n          }),\n        },\n        SET_HELP_DISPLAY: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              helpDisplay: true,\n              vocabDisplay: false,\n              rubricDisplay: false,\n            }\n          }),\n        },\n        SET_VOCAB_DISPLAY: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              helpDisplay: false,\n              vocabDisplay: true,\n              rubricDisplay: false,\n            }\n          }),\n        },\n        SET_RUBRIC_DISPLAY: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              helpDisplay: false,\n              vocabDisplay: false,\n              rubricDisplay: true,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  studentEssayMachine,\n  studentEssayMachineContext,\n  studentEssayMachineEvent,\n} from './studentEssayMachine'\n\nconst StudentEssayContext = createContext<any>(undefined)\n\ntype StudentEssayContextProps = {\n  children: ReactNode\n}\n\nexport const StudentEssayContextProvider: FC<StudentEssayContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(studentEssayMachine)\n  return (\n    <StudentEssayContext.Provider value={[state, event]}>\n      {children}\n    </StudentEssayContext.Provider>\n  )\n}\n\nexport function useStudentEssayContextProvider() {\n  const context = useContext(StudentEssayContext)\n  if (context === undefined) {\n    throw new Error(\n      'useStudentEssayContextProvider must be used within a StudentEssayContextProvider',\n    )\n  }\n  return context as [\n    State<studentEssayMachineContext, studentEssayMachineEvent, any, any>,\n    (event: studentEssayMachineEvent) => void,\n  ]\n}\n","import { useState } from 'react'\n\nexport const useForm = (initialValues: any) => {\n  const [values, setValues] = useState(initialValues)\n\n  return [\n    values,\n    (e: any) => {\n      return setValues({ ...values, [e.target.name]: e.target.value })\n    },\n  ]\n}\n","import { useState } from 'react'\n\nexport const useToggle = (initialValue: boolean) => {\n  const [value, setValue] = useState(initialValue)\n\n  const toggle = () => {\n    setValue((c) => (c = !c))\n  }\n  return [value, toggle] as const\n}\n","import { useEffect } from 'react'\n\nconst useClickOutside = (\n  ref: React.MutableRefObject<HTMLDivElement>,\n  handler: (event: MouseEvent | TouchEvent) => void,\n) => {\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return\n      }\n      handler(event)\n    }\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  }, [handler, ref])\n}\n\nexport { useClickOutside }\n","import React, { useRef } from 'react'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { useClickOutside } from '../hooks'\n\ntype ModalProps = {\n  isToggled: boolean\n  // setIsToggled:  Dispatch<SetStateAction<boolean>>|() => void\n  setIsToggled: any\n  children: any\n}\n\nexport const Modal = ({ isToggled, setIsToggled, children }: ModalProps) => {\n  const ref = useRef(null!)\n  useClickOutside(ref, () => setIsToggled())\n  return (\n    <AnimatePresence>\n      {isToggled && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          style={{\n            position: 'fixed',\n            width: '40%',\n            top: '10%',\n            left: '50%',\n            transform: 'translate3d(-50%, 0, 0)',\n          }}\n        >\n          <motion.div initial={{ x: 0 }} animate={{ x: 30 }} ref={ref}>\n            {children}\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  )\n}\n","import styled from 'styled-components'\nimport { Standard8x12Container } from '../../../../../../../appStyles'\nimport { Modal } from '../../../../../../../animations'\n\nexport const EssayContainer = styled(Standard8x12Container)`\n  height: 95vh;\n  border-top: 3px solid var(--white);\n`\nexport const AssignmentDetailsContainer = styled.div`\n  grid-row: 1/4;\n  grid-column: -4/-1;\n  background-color: var(--blue);\n  color: var(--white);\n  border-left: 3px solid var(--white);\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n`\nexport const AssignmentDetailsPartContainers = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  padding-top: 5%;\n`\n\nexport const AssignmentDetailsReadingInfo = styled.div`\n  padding-left: 5%;\n  padding-right: 5%;\n  font-size: 2.5vh;\n`\n\nexport const AssignmentDetailsDueDate = styled.div`\n  padding-left: 5%;\n  padding-right: 5%;\n  font-size: 2.5vh;\n`\n\nexport const AssignmentDetailsGoBackButtonContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const AssignmentDetailsGoBackButton = styled.button`\n  width: 80%;\n  height: 3vh;\n  font-size: 2vh;\n  border-radius: 5px;\n  color: var(--blue);\n  background-color: var(--white);\n  text-shadow: 1px 1px var(--grey);\n`\n\nexport const EssayInfoContainer = styled(Standard8x12Container)`\n  grid-row: 4/-1;\n  grid-column: -4/-1;\n  background-color: var(--grey);\n  color: var(--blue);\n  border-left: 3px solid var(--white);\n  border-top: 3px solid var(--white);\n  font-size: 1.3rem;\n  overflow: scroll;\n`\nexport const OrganizerContainer = styled(Standard8x12Container)`\n  grid-row: 1/-1;\n  grid-column: 1/-4;\n  border: 1px solid var(--blue);\n`\nexport const OrganizerTitleContainer = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const OrganizerTitleStyle = styled.div`\n  font-size: 3rem;\n`\nexport const QuestionContainer = styled.div`\n  grid-row: 2/3;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const QuestionStyle = styled.div`\n  font-size: 3.5vh;\n`\n\nexport const QuestionTypeContainer = styled.div`\n  grid-row: 3/5;\n  grid-column: studnet3/-3;\n  align-items: center;\n  justify-items: center;\n  font-size: 2rem;\n  display: grid;\n`\nexport const QuestionTypeQuestionStyle = styled.div`\n  align-self: end;\n`\nexport const QuestionTypeAnswerSelectStyle = styled.select`\n  width: 17%;\n  font-size: 72%;\n  height: 37%;\n  color: var(--blue);\n  background-color: var(--white);\n`\n\nexport const PartsOfQuestionContainer = styled.div`\n  grid-row: 5/7;\n  grid-column: 3/-3;\n  display: grid;\n`\n\nexport const AcademicPartsOfQuestionContainer = styled(\n  PartsOfQuestionContainer,\n)`\n  grid-row: 3/7;\n`\n\nexport const PartsOfQuestionTitle = styled.div`\n  font-size: 2rem;\n  justify-self: center;\n  align-self: center;\n`\n\nexport const PartContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.3rem;\n`\n\nexport const AcademicPartContainer = styled(PartContainer)`\n  justify-items: left;\n`\n\nexport const PartInput = styled.input`\n  justify-self: left;\n  border: 1px solid var(--white);\n  font-size: 1.3rem;\n  background-color: var(--white);\n  color: var(--blue);\n  border-bottom: 1px solid var(--blue);\n  width: 100%;\n  :enabled {\n    border: 1px solid var(--white);\n    border-bottom: 1px solid var(--blue);\n  }\n`\nexport const PartTextArea = styled.textarea`\n  justify-self: left;\n  border: 1px solid var(--white);\n  font-size: 2.5vh;\n  font-family: inherit;\n  color: var(--blue);\n  background-color: var(--white);\n  color: var(--blue);\n  border-bottom: 1px solid var(--blue);\n  width: 100%;\n  :enabled {\n    border: 1px solid var(--white);\n    border-bottom: 1px solid var(--blue);\n  }\n`\n\nexport const OrganizerControlButtonContainer = styled.div`\n  grid-row: -2/-1;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-auto-flow: column;\n`\n\nexport const OrganizerControlButtonContainerIdentifications = styled(\n  OrganizerControlButtonContainer,\n)`\n  grid-row: 4/5;\n`\nexport const OrganizerControlButtonMessageContainer = styled.div`\n  grid-row: 3/4;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-auto-flow: column;\n  font-size: 2.5vh;\n`\n\nexport const OrganizerControlButton = styled.button`\n  background-color: var(--blue);\n  color: var(--white);\n  font-size: 3vh;\n  width: 75%;\n  height: 4vh;\n  box-shadow: 1px 1px 2px 1px var(--grey);\n  border-radius: 5px;\n`\n\nexport type EssaySubmitButtonProps = {\n  submitFinal?: boolean\n  color: string\n}\n\nexport const EssaySubmitButton = styled(\n  OrganizerControlButton,\n)<EssaySubmitButtonProps>`\n  font-size: 3vh;\n  width: 75%;\n  height: 4vh;\n  box-shadow: 1px 1px 2px 1px var(--grey);\n  border-radius: 5px;\n  background-color: ${({ color }) => color};\n`\nexport const EssaySubmitCheck = styled.div`\n  font-size: 3vh;\n`\n\nexport type SentenceToManipulateProps = {\n  cursorFormat: 'POINTER' | 'TEXT' | 'NONE'\n}\nexport const SentenceToManipulate = styled.div<SentenceToManipulateProps>`\n  & ::selection {\n    background-color: var(--blue);\n    color: var(--white);\n  }\n  padding-left: 2%;\n  padding-right: 2%;\n  cursor: ${({ cursorFormat }) =>\n    cursorFormat === 'TEXT'\n      ? 'text'\n      : cursorFormat === 'POINTER'\n        ? 'pointer'\n        : 'not-allowed'};\n`\nexport const RestatementContainer = styled.div`\n  display: grid;\n`\nexport const RestatementTitle = styled.div`\n  grid-row: 3/5;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 2rem;\n`\nexport const OrganizerSectionDirectionsContainer = styled.div`\n  grid-row: 3/4;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 2vh;\n`\nexport const RestatementQuestionToRestateContainer = styled.div`\n  grid-row: 5/6;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3vh;\n`\n\nexport const EndingPhraseOptionsContainer = styled(\n  RestatementQuestionToRestateContainer,\n)`\n  grid-auto-flow: column;\n`\nexport const RestatementQuestionToRestateSelection = styled.div`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const RestatementDirectionsContainer = styled.div`\n  grid-row: 2/3;\n  grid-column: 2/-2;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 2.5vh;\n`\n\nexport const RestatementDirectionsContainerObjectDirections = styled(\n  RestatementDirectionsContainer,\n)`\n  grid-row: 2/4;\n`\n\nexport const RestatementDirectionsContainerObjectDirectionsButtonContainer = styled.div`\n  grid-row: 5/6;\n  grid-column: 2/-2;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const RestatementDirectionsContainerObjectDirectionsButton = styled(\n  OrganizerControlButton,\n)`\n  font-size: 2vh;\n`\n\nexport type RestatementFeedbackContainerProps = {\n  correct?: boolean\n}\n\nexport const RestatementFeedbackContainer = styled.div<RestatementFeedbackContainerProps>`\n  grid-row: 5/-2;\n  grid-column: 2/-2;\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  justify-items: center;\n  align-items: top;\n  font-size: 3vh;\n  color: ${({ correct }) => (correct ? 'var(--blue)' : 'var(--red)')};\n`\n\nexport const FinalRestatementMessageContainer = styled.div`\n  display: grid;\n  grid-template-rows: auto;\n`\nexport const FinalRestatementMessage = styled.div`\n  justify-self: center;\n`\nexport const FinalRestatementStyles = styled.div`\n  font-size: 3vh;\n`\nexport const RestatementFeedbackContainerObjectIndentification = styled(\n  RestatementFeedbackContainer,\n)`\n  grid-row: 6/-2;\n`\nexport const RestatementFeedBackContainerMessageContainer = styled.div`\n  /* display: grid; */\n  justify-self: center;\n  /* align-self: center; */\n`\nexport type RestatementSplitterProps = {\n  cursorFormat: 'POINTER' | 'TEXT' | 'NONE'\n}\nexport const RestatementSplitter = styled.div<RestatementSplitterProps>`\n  grid-row: 5/6;\n  grid-column: 1/-1;\n  justify-self: center;\n  align-self: center;\n  font-size: 3vh;\n  cursor: ${({ cursorFormat }) =>\n    cursorFormat === 'TEXT'\n      ? 'text'\n      : cursorFormat === 'POINTER'\n        ? 'pointer'\n        : 'not-allowed'};\n`\n\nexport const AcademicRestatementContainer = styled(Standard8x12Container)`\n  grid-row: 6/9;\n  grid-column: 1/-1;\n`\nexport const AcademicRestatementTitle = styled(RestatementTitle)`\n  grid-row: 1/3;\n`\n\nexport const AcademicQuestionTypeContainer = styled(Standard8x12Container)`\n  grid-row: 3/7;\n  grid-column: 3/-3;\n`\nexport const AcademicQuestionTypeSelect = styled.select`\n  grid-row: 3/5;\n  grid-column: 1/-1;\n  font-size: 1.5vw;\n  color: var(--blue);\n  background-color: var(--white);\n  padding: 1%;\n`\nexport const AcademicQuestionAnswerTypeContainer = styled(\n  Standard8x12Container,\n)`\n  grid-row: 3/-2;\n  grid-column: 1/-1;\n  grid-auto-flow: column;\n`\nexport const QuestionTypeChangeButton = styled.div`\n  grid-row: 3/-2;\n  grid-column: 3/-3;\n`\n\nexport const AnswerTypeContainter = styled(PartContainer)`\n  grid-column: 3/-3;\n  justify-items: left;\n`\n\nexport const RestatementInput = styled.input`\n  grid-row: 5/6;\n  grid-column: 2/-2;\n  border: 1px solid var(--blue);\n  width: 100%;\n  height: 4vh;\n  font-size: 2vh;\n  color: var(--blue);\n  background-color: var(--white);\n  :enabled {\n    border: 1px solid var(--white);\n    border-bottom: 1px solid var(--blue);\n  }\n`\n\nexport const AcademicConclusionInput = styled(RestatementInput)`\n  grid-column: 3/-3;\n  background-color: var(--white);\n`\n\nexport const AcademicRestatementInput = styled.input`\n  grid-row: 4/5;\n  grid-column: 1/-1;\n  height: 4vh;\n  width: 100%;\n  font-size: 2vh;\n  border: 1px solid var(--white);\n  color: var(--blue);\n  background-color: var(--white);\n  border-bottom: 1px solid var(--blue);\n`\n\nexport const RestatementOutput = styled.div`\n  grid-row: 6/8;\n  grid-column: 2/-2;\n  display: grid;\n  justify-items: left;\n  align-items: center;\n  font-size: 1.2rem;\n  color: var(--blue);\n`\nexport const AcademicRestatementOutput = styled(RestatementOutput)`\n  grid-row: 6/7;\n`\n\nexport const AcademicConclusionOutput = styled(RestatementOutput)`\n  grid-column: 3/-3;\n`\n\nexport const AnswerInput = styled.textarea`\n  grid-row: 4/7;\n  grid-column: 3/-3;\n  border: 1px solid var(--blue);\n  /* width: 100%;*/\n  height: 100%;\n  font-size: 2vh;\n  color: var(--blue);\n  background-color: var(--white);\n  font-family: inherit;\n  padding: 2%;\n  /* :enabled {\n    border: 1px solid var(--white);\n    border-bottom: 1px solid var(--blue);\n  } */\n`\nexport const AnswerOutput = styled.div`\n  grid-row: 6/8;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: left;\n  align-items: center;\n  font-size: 1.2rem;\n  color: var(--blue);\n`\n\nexport const EssayEditorBackgroundContainer = styled(Standard8x12Container)`\n  grid-row: 1/-1;\n  grid-column: 1/-4;\n  border: 1px solid var(--blue);\n  display: grid;\n`\n\nexport const EssayEditorContainer = styled.div`\n  grid-row: 1/-2;\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\nexport const EssaySheet = styled.div`\n  margin: 3%;\n  border: 1px solid black;\n  box-shadow: 2px 2px 2px 1px var(--grey);\n  height: 70vh;\n  margin: 1.5vh;\n  user-select: none;\n`\n\nexport const EssayOrganizerSheet = styled(EssaySheet)`\n  display: grid;\n  grid-template-rows: repeat(8, 1fr);\n  grid-template-columns: repeat(12, 1fr);\n  font-size: 2vh;\n`\n\nexport const EssayOrganizerTitle = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3.5vh;\n  text-decoration: underline;\n`\n\nexport const EssayOrganizerRestatement = styled.div`\n  grid-row: 2/3;\n  grid-column: 2/-2;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-top: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n  border-left: 1px solid var(--blue);\n  border-bottom: 1px solid var(--blue);\n`\n\nexport const EssayOrganizerConclusion = styled.div`\n  grid-row: -3/-2;\n  grid-column: 2/-2;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-right: 1px solid var(--blue);\n  border-left: 1px solid var(--blue);\n  border-bottom: 1px solid var(--blue);\n  border-top: 1px solid var(--blue);\n`\n\nexport const EssayOrganizerAnswer = styled.div`\n  grid-row: 3/7;\n  grid-column: 2/-2;\n`\n\nexport const DevelopingOrganizerAnswerBod = styled.div``\n\nexport const AcademicEssayOrganizerAnswer = styled(EssayOrganizerAnswer)`\n  /* display: grid; */\n  /* grid-template-rows: 1fr 5fr; */\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n`\n\nexport const AcademicEssayOrganizerAnswerBlock = styled.div`\n  display: grid;\n  /* grid-template-rows: 1fr 3fr; */\n`\n\nexport const AcademicEssayOrganizerAnswerBlockHeader = styled.div`\n  justify-self: center;\n  align-self: center;\n  text-decoration: underline;\n  text-align: center;\n`\nexport const AcademicEssayOrganizerAnswerBlockBody = styled.div`\n  justify-self: center;\n  align-self: start;\n  height: 11vh;\n  overflow: scroll;\n`\n\nexport const HowProblemSolutionOrganizerAnswer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  grid-template-columns: 1fr 1fr;\n`\n\nexport const HowCauseEffectOrganizerAnswer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`\nexport const WhyCauseEffectOrganizerAnswer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n`\n\nexport const EssayOrganizerPartHeader = styled.div`\n  font-size: 2.5vh;\n  text-decoration: underline;\n  justify-self: center;\n  align-self: center;\n`\n\nexport const EssayOrganizerPartBody = styled.div`\n  /* font-size: 2; */\n  align-self: start;\n`\n\nexport const DevelopingEssayOrganizerPartBody = styled(EssayOrganizerPartBody)`\n  justify-self: center;\n`\nexport const EssayOrganizerRestatementBody = styled(EssayOrganizerPartBody)`\n  /* align-self: start; */\n`\nexport const SubmitEssayContainer = styled.div`\n  grid-row: 1/-2;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-auto-flow: column;\n`\nexport const SubmitEssayModalContainer = styled.div`\n  width: 37vw;\n  height: 15vh;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n\n  background-color: var(--grey);\n  color: var(--blue);\n`\nexport const SubmitEssayModalMessage = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n`\n\nexport const SubmitEssayModal = styled(Modal)`\n  width: 19%;\n  top: 27%;\n  left: 27%;\n`\n\nexport const SubmitEssayModalSubmitButton = styled.button`\n  width: 82%;\n  height: 54%;\n  background-color: var(--blue);\n  color: var(--white);\n`\n\nexport const AdvancedOrganizerTabNameContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n`\nexport const AdvancedOrganizerTabItem = styled.div``\n","import React, { FC, useState } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  submitEssayFinalDraft,\n  submitEssayFinalDraftVariables,\n  SubmittedFinalDraftsInput,\n  findEssayById_findEssayById_essay,\n} from '../../../../../../schemaTypes'\nimport {\n  OrganizerControlButton,\n  EssaySubmitButton,\n  SubmitEssayModalContainer,\n  SubmitEssayModalSubmitButton,\n  SubmitEssayModal,\n  SubmitEssayModalMessage,\n  EssaySubmitCheck,\n} from './state-and-styles/assignedEssayStyles'\nimport { Modal } from '../../../../../../animations'\nimport { useStudentEssayContextProvider } from './state-and-styles/StudentEssayContext'\nimport { responsibilityPointConverter } from '../../../../../../utils'\nimport { useGradeCalculator } from '../../../../../../hooks/useGradeCalculator'\nimport { useCalculateGrades } from '../../../../../../hooks/useCalculateGrades'\n\nexport const SUBMIT_FINAL_DRAFT_MUTATION = gql`\n  mutation submitEssayFinalDraft($input: SubmitEssayFinalDraftInput!) {\n    submitEssayFinalDraft(input: $input) {\n      essay {\n        _id\n        assigned\n        finalDraft {\n          submittedFinalDraft {\n            gradingDraft\n            draft\n          }\n        }\n      }\n    }\n  }\n`\n\nexport type SubmitEssayFinalDraftInput = {\n  _id: string\n  submittedFinalDraft: SubmittedFinalDraftsInput\n  essay: findEssayById_findEssayById_essay\n  response: boolean\n  // grade: number\n  updateWorkingDraft: () => void\n}\n\nexport const SubmitEssay = ({\n  _id,\n  submittedFinalDraft,\n  response,\n  // grade,\n  updateWorkingDraft,\n  essay,\n}: SubmitEssayFinalDraftInput) => {\n  const navigate = useNavigate()\n  const [state, event] = useStudentEssayContextProvider()\n  const [submitToggle, setSubmitToggle] = useState(false)\n  const [submitFinalDraft, { called }] = useMutation<\n    submitEssayFinalDraft,\n    submitEssayFinalDraftVariables\n  >(SUBMIT_FINAL_DRAFT_MUTATION, {\n    onCompleted: () => {\n      console.log(new Date().toLocaleString())\n      navigate('/dashboard/assignments')\n    },\n    refetchQueries: ['findEssaysToComplete', 'findEssayById'],\n  })\n\n  const { grade: currentGrade, loading: gradeLoading } = useCalculateGrades({\n    studentId: essay.hasOwner._id!,\n    markingPeriod: essay.markingPeriod,\n    polling: false,\n  })\n\n  const handleSubmit = () => {\n    if (!called) {\n      submitFinalDraft({\n        variables: {\n          input: {\n            _id,\n            submittedFinalDraft,\n            submitTime: new Date().toLocaleString(),\n            late: true, //server will change based on time submitted\n            paperBased: false,\n            responsibilityPoints: responsibilityPointConverter(\n              currentGrade,\n              10,\n            ),\n          },\n        },\n      })\n    }\n  }\n\n  return (\n    <>\n      {!submitToggle ? (\n        <>\n          <EssaySubmitButton\n            color={'var(--blue)'}\n            submitFinal={submitToggle}\n            onClick={() => {\n              event({ type: 'PREVIOUS' })\n              event({ type: 'NEXT' })\n            }}\n          >\n            Go Back\n          </EssaySubmitButton>\n          <EssaySubmitButton\n            color={'var(--blue)'}\n            onClick={() => updateWorkingDraft()}\n          >\n            Save\n          </EssaySubmitButton>\n        </>\n      ) : (\n        <EssaySubmitButton\n          color={'var(--red)'}\n          onClick={() => setSubmitToggle(false)}\n        >\n          No\n        </EssaySubmitButton>\n      )}\n\n      {submitToggle && <EssaySubmitCheck>Are you Sure?</EssaySubmitCheck>}\n      {response && (\n        <>\n          {!submitToggle ? (\n            <EssaySubmitButton\n              color={'var(--blue)'}\n              submitFinal={submitToggle}\n              onClick={() => setSubmitToggle(true)}\n            >\n              Submit\n            </EssaySubmitButton>\n          ) : (\n            !gradeLoading && (\n              <EssaySubmitButton\n                color={called ? 'var(--grey)' : 'var(--blue)'}\n                submitFinal={submitToggle}\n                onClick={handleSubmit}\n                disabled={called ? true : false}\n              >\n                {called ? 'Submiting' : 'Yes'}\n              </EssaySubmitButton>\n            )\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { SyntheticEvent } from 'react'\nimport { EssayOrganizerType } from './EssayOrganizer'\nimport {\n  EssayOrganizerRestatement,\n  EssayOrganizerPartHeader,\n  EssayOrganizerPartBody,\n  AcademicEssayOrganizerAnswer,\n  DevelopingEssayOrganizerPartBody,\n  EssayOrganizerConclusion,\n} from '../../state-and-styles/assignedEssayStyles'\n\nexport type DevelopingEssayOrganizerProps = {\n  organizer: EssayOrganizerType\n}\n\nexport const DevelopingEssayOrganizer = ({\n  organizer,\n}: DevelopingEssayOrganizerProps) => {\n  const essayOrganizer =\n    organizer.__typename === 'DevelopingOrganizer' ? organizer : null\n\n  return (\n    <>\n      <EssayOrganizerRestatement>\n        <EssayOrganizerPartHeader>Restatement</EssayOrganizerPartHeader>\n        <EssayOrganizerPartBody>\n          {essayOrganizer?.restatement}\n        </EssayOrganizerPartBody>\n      </EssayOrganizerRestatement>\n      <AcademicEssayOrganizerAnswer>\n        <EssayOrganizerPartHeader style={{ textAlign: 'center' }}>\n          Answer\n        </EssayOrganizerPartHeader>\n        <DevelopingEssayOrganizerPartBody\n          onCopy={(e: SyntheticEvent) => {\n            e.preventDefault()\n          }}\n        >\n          {essayOrganizer?.answer}\n        </DevelopingEssayOrganizerPartBody>\n      </AcademicEssayOrganizerAnswer>\n      <EssayOrganizerConclusion>\n        <EssayOrganizerPartHeader>Conclusion</EssayOrganizerPartHeader>\n        <EssayOrganizerPartBody\n          onCopy={(e: SyntheticEvent) => {\n            e.preventDefault()\n          }}\n        >\n          {essayOrganizer?.conclusion}\n        </EssayOrganizerPartBody>\n      </EssayOrganizerConclusion>\n    </>\n  )\n}\n","import { SyntheticEvent, useState } from 'react'\nimport { findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer } from '../../../../../../../../schemaTypes'\nimport {\n  HowProblemSolutionOrganizerAnswer,\n  AcademicEssayOrganizerAnswerBlock,\n  AcademicEssayOrganizerAnswerBlockHeader,\n  AcademicEssayOrganizerAnswerBlockBody,\n} from '../../state-and-styles/assignedEssayStyles'\n\nexport type AcademicProblemSolutionOrganizerDisplayProps = {\n  essayOrganizer: findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer | null\n}\n\nexport const AcademicProblemSolutionOrganizerDisplay = ({\n  essayOrganizer,\n}: AcademicProblemSolutionOrganizerDisplayProps) => {\n  const [organizerTab, setOrganizerTab] = useState<\n    'PROBLEM' | 'REASON_FOR_PROBLEM' | 'SOLUTION' | 'WHY_SOLUTION_SOLVED'\n  >('PROBLEM')\n  return (\n    <div style={{ overflowWrap: 'break-word' }}>\n      <br />\n      <div style={{ display: 'grid', gridAutoFlow: 'column' }}>\n        <div\n          style={\n            organizerTab === 'PROBLEM'\n              ? {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  borderLeft: '1px solid var(--blue)',\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                  borderBottom: 'none',\n                }\n              : {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  border: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                }\n          }\n          onClick={() => setOrganizerTab('PROBLEM')}\n        >\n          Problem\n        </div>\n        <div\n          style={\n            organizerTab === 'REASON_FOR_PROBLEM'\n              ? {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  borderLeft: '1px solid var(--blue)',\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                  borderBottom: 'none',\n                }\n              : {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  border: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                }\n          }\n          onClick={() => setOrganizerTab('REASON_FOR_PROBLEM')}\n        >\n          Why was it a Problem\n        </div>\n        <div\n          style={\n            organizerTab === 'SOLUTION'\n              ? {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  borderLeft: '1px solid var(--blue)',\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                  borderBottom: 'none',\n                }\n              : {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  border: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                }\n          }\n          onClick={() => setOrganizerTab('SOLUTION')}\n        >\n          Solution\n        </div>\n        <div\n          style={\n            organizerTab === 'WHY_SOLUTION_SOLVED'\n              ? {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  borderLeft: '1px solid var(--blue)',\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                  borderBottom: 'none',\n                }\n              : {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  border: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                }\n          }\n          onClick={() => setOrganizerTab('WHY_SOLUTION_SOLVED')}\n        >\n          Why was it a Solution\n        </div>\n      </div>\n      <br />\n      <div>\n        {organizerTab === 'PROBLEM' && (\n          <>\n            <div style={{ textAlign: 'center' }}>What was the Problem?</div>\n            <br />\n            <div\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n            >\n              {essayOrganizer?.answerType?.__typename ===\n                'ProblemSolutionAnswerType' &&\n                essayOrganizer.answerType.problem}\n            </div>\n          </>\n        )}\n      </div>\n      <div>\n        {organizerTab === 'REASON_FOR_PROBLEM' && (\n          <>\n            <div style={{ textAlign: 'center' }}>Why was it a Problem?</div>\n            <br />\n            <div\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n            >\n              {essayOrganizer?.answerType?.__typename ===\n                'ProblemSolutionAnswerType' &&\n                essayOrganizer.answerType.reasonForProblem}\n            </div>\n          </>\n        )}\n      </div>\n      <div\n        style={{\n          borderRight: '1px solid var(--blue)',\n        }}\n      >\n        {organizerTab === 'SOLUTION' && (\n          <>\n            <div style={{ textAlign: 'center' }}>\n              How was the Problem Solved?\n            </div>\n            <br />\n            <div\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n            >\n              {essayOrganizer?.answerType?.__typename ===\n                'ProblemSolutionAnswerType' &&\n                essayOrganizer.answerType.solvedBy}\n            </div>\n          </>\n        )}\n      </div>\n      <div>\n        {organizerTab === 'WHY_SOLUTION_SOLVED' && (\n          <>\n            <div style={{ textAlign: 'center' }}>\n              Why did the Solution Solve the Problem?\n            </div>\n            <br />\n            <div\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n            >\n              {essayOrganizer?.answerType?.__typename ===\n                'ProblemSolutionAnswerType' &&\n                essayOrganizer.answerType.whySolutionSolved}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { SyntheticEvent, useState } from 'react'\nimport { findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer } from '../../../../../../../../schemaTypes'\nimport {\n  WhyCauseEffectOrganizerAnswer,\n  AcademicEssayOrganizerAnswerBlock,\n  AcademicEssayOrganizerAnswerBlockHeader,\n  AcademicEssayOrganizerAnswerBlockBody,\n} from '../../state-and-styles/assignedEssayStyles'\n\nexport type AcademicEssayWhyCauseAndEffectOrganizerDisplayProps = {\n  essayOrganizer: findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer | null\n}\n\nexport const AcademicEssayWhyCauseAndEffectOrganizerDisplay = ({\n  essayOrganizer,\n}: AcademicEssayWhyCauseAndEffectOrganizerDisplayProps) => {\n  const [organizerTab, setOrganizerTab] = useState<'PROXIMATE' | 'ULTIMATE'>(\n    'PROXIMATE',\n  )\n  return (\n    <div style={{ overflowWrap: 'break-word' }}>\n      <br />\n      <div style={{ display: 'grid', gridAutoFlow: 'column' }}>\n        <div\n          style={\n            organizerTab === 'ULTIMATE'\n              ? {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  borderLeft: '1px solid var(--blue)',\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                  borderBottom: 'none',\n                }\n              : {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  border: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                }\n          }\n          onClick={() => setOrganizerTab('ULTIMATE')}\n        >\n          Ultimate Cause\n        </div>\n        <div\n          style={\n            organizerTab === 'PROXIMATE'\n              ? {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  borderLeft: '1px solid var(--blue)',\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                  borderBottom: 'none',\n                }\n              : {\n                  textAlign: 'center',\n                  fontSize: '1.6vh',\n                  border: '1px solid var(--blue)',\n                  borderTopRightRadius: '5px',\n                }\n          }\n          onClick={() => setOrganizerTab('PROXIMATE')}\n        >\n          Proximate Cause\n        </div>\n      </div>\n      <br />\n      <div>\n        {organizerTab === 'ULTIMATE' && (\n          <>\n            <AcademicEssayOrganizerAnswerBlockHeader>\n              What was the Ultimate Cause?\n            </AcademicEssayOrganizerAnswerBlockHeader>\n            <br />\n            <AcademicEssayOrganizerAnswerBlockBody\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n            >\n              {essayOrganizer?.answerType?.__typename ===\n                'WhyCauseEffectAnswerType' &&\n                essayOrganizer.answerType.ultimateCause}\n            </AcademicEssayOrganizerAnswerBlockBody>\n          </>\n        )}\n        {organizerTab === 'PROXIMATE' && (\n          <>\n            <AcademicEssayOrganizerAnswerBlockHeader>\n              What was the Proximate Cause?\n            </AcademicEssayOrganizerAnswerBlockHeader>\n            <br />\n            <AcademicEssayOrganizerAnswerBlockBody\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n            >\n              {essayOrganizer?.answerType?.__typename ===\n                'WhyCauseEffectAnswerType' &&\n                essayOrganizer.answerType.proximateCause}\n            </AcademicEssayOrganizerAnswerBlockBody>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { FC, SyntheticEvent } from 'react'\nimport {\n  EssayOrganizerRestatement,\n  EssayOrganizerPartBody,\n  EssayOrganizerPartHeader,\n  AcademicEssayOrganizerAnswer,\n  EssayOrganizerConclusion,\n  HowProblemSolutionOrganizerAnswer,\n  EssayOrganizerRestatementBody,\n  AcademicEssayOrganizerAnswerBlock,\n  AcademicEssayOrganizerAnswerBlockBody,\n  AcademicEssayOrganizerAnswerBlockHeader,\n  HowCauseEffectOrganizerAnswer,\n  WhyCauseEffectOrganizerAnswer,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { EssayOrganizerType } from './EssayOrganizer'\nimport { AcademicProblemSolutionOrganizerDisplay } from './AcademicProblemSolutionOrganizerDisplay'\nimport { AcademicEssayWhyCauseAndEffectOrganizerDisplay } from './AcademicEssayWhyCauseAndEffectOrganizerDisplay'\n\nexport type AcademicEssayOrganizerProps = {\n  organizer: EssayOrganizerType\n}\n\nexport const AcademicEssayOrganizer = ({\n  organizer,\n}: AcademicEssayOrganizerProps) => {\n  const essayOrganizer =\n    organizer.__typename === 'AcademicOrganizer' ? organizer : null\n\n  const { verb, subject, object } = essayOrganizer?.academicSentenceStructure!\n  const linkingVerbCheck =\n    organizer.restatement.split(' ').includes('were') ||\n    organizer.restatement.split(' ').includes('was')\n  const linkingVerb = organizer.restatement.split(' ').includes('were')\n    ? 'were'\n    : organizer.restatement.split(' ').includes('was') && 'was'\n  return (\n    <>\n      <EssayOrganizerRestatement>\n        <EssayOrganizerPartHeader>Restatement</EssayOrganizerPartHeader>\n        <EssayOrganizerPartBody>\n          {essayOrganizer?.restatement}\n        </EssayOrganizerPartBody>\n      </EssayOrganizerRestatement>\n      <AcademicEssayOrganizerAnswer>\n        <EssayOrganizerPartHeader style={{ textAlign: 'center' }}>\n          Answer\n        </EssayOrganizerPartHeader>\n        <>\n          {essayOrganizer?.answerType?.__typename ===\n            'HowCauseEffectAnswerType' && (\n            <HowCauseEffectOrganizerAnswer>\n              <AcademicEssayOrganizerAnswerBlock\n                style={{\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                }}\n              >\n                <AcademicEssayOrganizerAnswerBlockHeader>\n                  What was the Object like before?\n                </AcademicEssayOrganizerAnswerBlockHeader>\n                <AcademicEssayOrganizerAnswerBlockBody>\n                  {essayOrganizer.answerType.before}\n                </AcademicEssayOrganizerAnswerBlockBody>\n              </AcademicEssayOrganizerAnswerBlock>\n\n              <AcademicEssayOrganizerAnswerBlock\n                style={{\n                  borderTop: '1px solid var(--blue)',\n                  borderRight: '1px solid var(--blue)',\n                }}\n              >\n                <AcademicEssayOrganizerAnswerBlockHeader>\n                  What caused the Change?\n                </AcademicEssayOrganizerAnswerBlockHeader>\n                <AcademicEssayOrganizerAnswerBlockBody>\n                  {essayOrganizer.academicSentenceStructure.subject}\n                </AcademicEssayOrganizerAnswerBlockBody>\n              </AcademicEssayOrganizerAnswerBlock>\n\n              <AcademicEssayOrganizerAnswerBlock\n                style={{\n                  borderTop: '1px solid var(--blue)',\n                }}\n              >\n                <AcademicEssayOrganizerAnswerBlockHeader>\n                  How was the Object different because of the Subject?\n                </AcademicEssayOrganizerAnswerBlockHeader>\n                <AcademicEssayOrganizerAnswerBlockBody>\n                  {essayOrganizer.answerType.after}\n                </AcademicEssayOrganizerAnswerBlockBody>\n              </AcademicEssayOrganizerAnswerBlock>\n              {/* <div>{essayOrganizer.answerType.after}</div> */}\n            </HowCauseEffectOrganizerAnswer>\n          )}\n          {essayOrganizer?.answerType?.__typename ===\n            'ProblemSolutionAnswerType' && (\n            <AcademicProblemSolutionOrganizerDisplay\n              essayOrganizer={essayOrganizer}\n            />\n          )}\n          {essayOrganizer?.answerType?.__typename ===\n            'WhyCauseEffectAnswerType' && (\n            <AcademicEssayWhyCauseAndEffectOrganizerDisplay\n              essayOrganizer={essayOrganizer}\n            />\n          )}\n        </>\n      </AcademicEssayOrganizerAnswer>\n      <EssayOrganizerConclusion>\n        <EssayOrganizerPartHeader>Conclusion</EssayOrganizerPartHeader>\n        <EssayOrganizerPartBody\n          onCopy={(e: SyntheticEvent) => {\n            e.preventDefault()\n          }}\n        >\n          {essayOrganizer?.conclusion}\n        </EssayOrganizerPartBody>\n      </EssayOrganizerConclusion>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { EssayOrganizerType } from './EssayOrganizer'\n\nexport type AdvancedEssayOrganizerProps = { organizer: EssayOrganizerType }\n\nexport const AdvancedEssayOrganizer: FC<AdvancedEssayOrganizerProps> = ({\n  organizer,\n}) => {\n  return (\n    <>\n      <div>Advanced</div>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer,\n  findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer,\n  findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer,\n} from '../../../../../../../../schemaTypes'\nimport { EssayOrganizerTitle } from '../../state-and-styles/assignedEssayStyles'\nimport { DevelopingEssayOrganizer } from './DevelopingEssayOrganizer'\nimport { AcademicEssayOrganizer } from './AcademicEssayOrganizer'\nimport { AdvancedEssayOrganizer } from './AdvancedEssayOrganizer'\n\nexport type EssayOrganizerType =\n  | findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer\n  | findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer\n  | findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer\n\nexport type EssayOrganizerProps = {\n  organizer: EssayOrganizerType\n}\n\nexport const EssayOrganizer = ({ organizer }: EssayOrganizerProps) => {\n  return (\n    <>\n      <EssayOrganizerTitle>\n        <div>Organizer</div>\n      </EssayOrganizerTitle>\n      {organizer.__typename === 'DevelopingOrganizer' && (\n        <DevelopingEssayOrganizer organizer={organizer} />\n      )}\n      {organizer.__typename === 'AcademicOrganizer' && (\n        <AcademicEssayOrganizer organizer={organizer} />\n      )}\n      {organizer.__typename === 'AdvancedOrganizer' && (\n        <AdvancedEssayOrganizer organizer={organizer} />\n      )}\n    </>\n  )\n}\n","import React, {\n  useMemo,\n  useState,\n  useCallback,\n  FC,\n  useEffect,\n  SyntheticEvent,\n} from 'react'\nimport { createEditor, Node } from 'slate'\nimport { Slate, Editable, withReact } from 'slate-react'\nimport { UPDATE_WORKING_DRAFT_MUTATION } from './EssayToComplete'\nimport {\n  findEssayById_findEssayById_essay,\n  UpdateWorkingDraft,\n  UpdateWorkingDraftVariables,\n  SubmittedFinalDraftsInput,\n} from '../../../../../../schemaTypes'\nimport { useStudentEssayContextProvider } from './state-and-styles/StudentEssayContext'\nimport { useMutation } from '@apollo/client'\nimport { SubmitEssay } from './SubmitEssay'\nimport {\n  EssayEditorContainer,\n  EssayEditorBackgroundContainer,\n  EssaySheet,\n  OrganizerControlButtonContainer,\n  EssayOrganizerSheet,\n} from './state-and-styles/assignedEssayStyles'\nimport { EssayOrganizer } from './essay-info/essay-organizers/EssayOrganizer'\n\ntype StudentEssayEditorProps = {\n  essay: findEssayById_findEssayById_essay\n  submittedFinalDraft: SubmittedFinalDraftsInput\n  // grade: number\n}\n\nexport type submittedFinalDraftType = {\n  draft: string\n  gradingDraft: string\n  comments: string[]\n  score: number\n}\n\nexport const StudentEssayEditor = ({\n  essay,\n  submittedFinalDraft,\n}: StudentEssayEditorProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n  const editor = useMemo(() => withReact(createEditor()), [])\n  const parsedEssay = JSON.parse(essay.workingDraft.draft)\n  const [value, setValue] = useState(parsedEssay)\n  const content = JSON.stringify(value)\n\n  useEffect(() => {\n    event({ type: 'SET_DRAFT', payload: content })\n  }, [content])\n\n  useEffect(() => {\n    // updateWorkingDraft()\n  }, [state.context.draftToUpdate])\n\n  const [updateWorkingDraft] = useMutation<\n    UpdateWorkingDraft,\n    UpdateWorkingDraftVariables\n  >(UPDATE_WORKING_DRAFT_MUTATION, {\n    variables: {\n      input: {\n        _id: state.context.essayId,\n        updatedDraft: state.context.draftToUpdate,\n      },\n    },\n    onCompleted: (data) =>\n      console.log(data.updateWorkingDraft.essay.workingDraft),\n    refetchQueries: ['findEssayById'],\n  })\n\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case 'code':\n        return <CodeElement {...props} />\n      default:\n        return <DefaultElement {...props} />\n    }\n  }, [])\n\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} />\n  }, [])\n\n  return (\n    <EssayEditorBackgroundContainer>\n      <EssayEditorContainer>\n        <EssayOrganizerSheet>\n          <EssayOrganizer organizer={essay.workingDraft.organizer!} />\n        </EssayOrganizerSheet>\n        <EssaySheet>\n          <Slate\n            editor={editor}\n            value={value as Node[]}\n            onChange={(value: any) => {\n              setValue(value as Node[])\n            }}\n          >\n            <Editable\n              renderElement={renderElement}\n              spellCheck\n              autoFocus={true}\n              renderLeaf={renderLeaf}\n              style={{\n                height: '98%',\n                marginLeft: '3%',\n                marginRight: '3%',\n              }}\n              onPaste={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n              placeholder={`Your essay goes here; your first sentence is the restatement.`}\n              onKeyDown={(e) => {\n                // e.preventDefault()\n                // if (e.key === 'Enter') return null\n                event({ type: 'SET_DRAFT', payload: content })\n                // updateWorkingDraft()\n                // if (!e.ctrlKey) {\n                // return\n                // }\n                // switch (e.key) {\n                //   case '`': {\n                //     e.preventDefault()\n                //     const [match] = Editor.nodes(editor, {\n                //       match: (n) => n.type === 'code',\n                //     })\n                //     Transforms.setNodes(\n                //       editor,\n                //       { type: match ? 'paragraph' : 'code' },\n                //       { match: (n) => Editor.isBlock(editor, n) }\n                //     )\n                //     break\n                //   }\n                //   case 'b': {\n                //     e.preventDefault()\n                //     CustomEditor.toggleBoldMark(editor)\n                //     break\n                //   }\n                //   case 's': {\n                //     e.preventDefault()\n                //     CustomEditor.toggleStrikeThrough(editor)\n                //     break\n                //   }\n                //   case 'u': {\n                //     e.preventDefault()\n                //     CustomEditor.toggleUnderline(editor)\n                //     break\n                //   }\n                // case '17': {\n                //   e.preventDefault()\n                // }\n                // }\n              }}\n            />\n          </Slate>\n        </EssaySheet>\n      </EssayEditorContainer>\n      <OrganizerControlButtonContainer>\n        <SubmitEssay\n          _id={state.context.essayId}\n          submittedFinalDraft={submittedFinalDraft}\n          response={value[0].children[0].text !== ''}\n          // grade={grade}\n          essay={essay}\n          updateWorkingDraft={updateWorkingDraft}\n        />\n      </OrganizerControlButtonContainer>\n    </EssayEditorBackgroundContainer>\n  )\n}\nconst CodeElement = (props: any) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  )\n}\nconst DefaultElement = (props: any) => {\n  return (\n    <p style={{ textIndent: '2%' }} {...props.attributes}>\n      {props.children}\n    </p>\n  )\n}\n\nexport const Leaf = (props: any) => {\n  return (\n    <span\n      {...props.attributes}\n      style={{\n        fontWeight: props.leaf.bold ? 'bold' : 'normal',\n        textDecoration: props.leaf.strikeThrough\n          ? 'line-through'\n          : props.leaf.underline\n            ? 'underline'\n            : 'none',\n      }}\n    >\n      {props.children}\n    </span>\n  )\n}\n","import React, { FC, SyntheticEvent, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { useMutation, gql } from '@apollo/client'\nimport {\n  findEssayById_findEssayById_essay_topic,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateProblemSolution,\n  updateProblemSolutionVariables,\n} from '../../../../../../../../schemaTypes'\nimport {\n  AcademicQuestionAnswerTypeContainer,\n  QuestionTypeChangeButton,\n  AnswerTypeContainter,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n  AcademicRestatementTitle,\n  PartInput,\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  RestatementDirectionsContainer,\n  PartTextArea,\n} from '../../state-and-styles/assignedEssayStyles'\nimport {\n  irregularPastTenseVerbList,\n  isLetterUpperCase,\n  verbsThatChangeInIngFormList,\n} from '../../../../../../../../utils'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\n\nexport type AcademicProblemSolutionProps = {\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  topic: findEssayById_findEssayById_essay_topic\n}\n\nexport const UPDATE_PROBLEM_SOLUTION_MUTATION = gql`\n  mutation updateProblemSolution($input: UpdateProblemSolutionInput!) {\n    updateProblemSolution(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\n\nexport const AcademicProblemSolution = ({\n  questionParts,\n  topic,\n}: AcademicProblemSolutionProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n  console.log(state)\n  const { subject, verb, object } =\n    state.context.academicOrganizer.academicSentenceStructure\n  const irregularVerbCheck = irregularPastTenseVerbList(verb)\n\n  const { problemSolution } = state.context.academicOrganizer.answer\n\n  const [updateProblemSolution] = useMutation<\n    updateProblemSolution,\n    updateProblemSolutionVariables\n  >(UPDATE_PROBLEM_SOLUTION_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        problem: state.context.academicOrganizer.answer.problemSolution.problem,\n        reasonForProblem:\n          state.context.academicOrganizer.answer.problemSolution\n            .reasonForProblem,\n        solvedBy:\n          state.context.academicOrganizer.answer.problemSolution.solvedBy,\n        whySolutionSolved:\n          state.context.academicOrganizer.answer.problemSolution\n            .whySolutionSolved,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n  useEffect(() => {\n    updateProblemSolution()\n  }, [\n    problemSolution,\n    updateProblemSolution,\n    // state.context.academicOrganizer.answer.problemSolution,\n  ])\n\n  const congugatedVerb =\n    verb === irregularVerbCheck\n      ? irregularVerbCheck\n          .charAt(irregularVerbCheck.length - 1)\n          .toLowerCase() === 'e'\n        ? verb + 'd'\n        : verb + 'ed'\n      : irregularVerbCheck\n\n  const properNounCheck = (word: string) => {\n    const firstLetter = word.charAt(0)\n\n    if (isLetterUpperCase(firstLetter)) return true\n    else return false\n  }\n  const noun =\n    questionParts.simpleSubject.split(' ')[\n      questionParts.simpleSubject.split(' ').length - 1\n    ]\n  const properNoun = properNounCheck(noun)\n  const properNameEndsInS =\n    properNoun &&\n    questionParts.simpleSubject.charAt(\n      questionParts.simpleSubject.length - 1,\n    ) === 's'\n\n  const verbInIngFormat =\n    verbsThatChangeInIngFormList(questionParts.simplePredicate) ===\n    questionParts.simplePredicate\n      ? questionParts.simplePredicate + 'ing'\n      : verbsThatChangeInIngFormList(questionParts.simplePredicate)\n\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Answer the Question</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Directions</UnderlinedText>\n        {/* <div>\n          Problem and Solution Questions need to give a complete explanation of\n          the problem and then a complete explanation of the solution. To do\n          this, answer each of these questions with paraphrased answers that you\n          found in the text in the assigned sections or sections that came\n          before the assigned sections.\n        </div> */}\n        <div>\n          To give a complete explanation to this question: {topic.question}, you\n          need to address all four parts of a problem and solution. Answer the\n          questions below and don't forget what {questionParts.simpleSubject}{' '}\n          did is usually the solution.\n        </div>\n      </RestatementDirectionsContainer>\n\n      <AcademicQuestionAnswerTypeContainer>\n        <AcademicRestatementTitle>\n          {/* <div style={{ fontSize: '70%' }}>{topic.question}</div> */}\n          <div>How Question: Problem and Solution</div>\n        </AcademicRestatementTitle>\n        <AnswerTypeContainter>\n          <div>What is the problem for {questionParts.simpleSubject}?</div>\n          <PartTextArea\n            value={\n              state.context.academicOrganizer.answer.problemSolution.problem\n            }\n            onPaste={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onCopy={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: { ...problemSolution, problem: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>\n            Why is this {questionParts.simpleSubject}\n            {properNameEndsInS ? `'` : `'s`} problem?\n          </div>\n          <PartTextArea\n            value={\n              state.context.academicOrganizer.answer.problemSolution\n                .reasonForProblem\n            }\n            onPaste={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onCopy={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: {\n                  ...problemSolution,\n                  reasonForProblem: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>How did {questionParts.simpleSubject} solve the problem?</div>\n          <PartTextArea\n            value={\n              state.context.academicOrganizer.answer.problemSolution.solvedBy\n            }\n            onPaste={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onCopy={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: { ...problemSolution, solvedBy: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>\n            Why did/would the solution solve {questionParts.simpleSubject}\n            {properNameEndsInS ? `'` : `'s`} problem?\n          </div>\n          <PartTextArea\n            value={\n              state.context.academicOrganizer.answer.problemSolution\n                .whySolutionSolved\n            }\n            onPaste={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onCopy={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: {\n                  ...problemSolution,\n                  whySolutionSolved: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n      </AcademicQuestionAnswerTypeContainer>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'PREVIOUS' })\n            event({ type: 'SET_PRE_LOADED', payload: false })\n          }}\n        >\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'NEXT' })\n          }}\n        >\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateHowCauseEffect,\n  updateHowCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport {\n  AcademicQuestionAnswerTypeContainer,\n  AcademicRestatementTitle,\n  AnswerTypeContainter,\n  PartInput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n  OrganizerTitleStyle,\n  OrganizerTitleContainer,\n  RestatementDirectionsContainer,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { irregularPastTenseVerbList } from '../../../../../../../../utils'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\n\nexport type AcademicHowCauseEffectProps = {\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n}\n\nexport const UPDATE_HOW_CAUSE_EFFECT_MUTATION = gql`\n  mutation updateHowCauseEffect($input: UpdateHowCauseEffectInput!) {\n    updateHowCauseEffect(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\n\nexport const AcademicHowCauseEffect = ({\n  questionParts,\n}: AcademicHowCauseEffectProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  const [updateHowCauseEffect] = useMutation<\n    updateHowCauseEffect,\n    updateHowCauseEffectVariables\n  >(UPDATE_HOW_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        before: state.context.academicOrganizer.answer.howCauseEffect.before,\n        cause: state.context.academicOrganizer.answer.howCauseEffect.cause,\n        after: state.context.academicOrganizer.answer.howCauseEffect.after,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n  const { subject, verb, object } =\n    state.context.academicOrganizer.academicSentenceStructure\n  const { howCauseEffect } = state.context.academicOrganizer.answer\n\n  useEffect(() => {\n    updateHowCauseEffect()\n  }, [\n    howCauseEffect,\n    state.context.academicOrganizer.answer.howCauseEffect.after,\n    updateHowCauseEffect,\n  ])\n\n  const irregularVerbCheck = irregularPastTenseVerbList(verb)\n\n  const congugatedVerb =\n    verb === irregularVerbCheck\n      ? irregularVerbCheck\n          .charAt(irregularVerbCheck.length - 1)\n          .toLowerCase() === 'e'\n        ? verb + 'd'\n        : verb + 'ed'\n      : irregularVerbCheck\n  console.log(questionParts)\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Answer the Question</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Directions</UnderlinedText>\n        <div>\n          Answer the following questions to help you construct your answer.\n        </div>\n      </RestatementDirectionsContainer>\n      <AcademicQuestionAnswerTypeContainer>\n        <AcademicRestatementTitle>\n          <div>How Question: Cause and Effect</div>\n        </AcademicRestatementTitle>\n        <AnswerTypeContainter>\n          <div>What were things like before the expansion of suffrage</div>\n          {/* <div>\n            What was {object} like before {subject} {verb} it?\n          </div> */}\n          <PartInput\n            value={state.context.academicOrganizer.answer.howCauseEffect.before}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_HOW_CAUSE_EFFECT',\n                payload: {\n                  ...howCauseEffect,\n                  before: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>How did the expansion of suffrage change things?</div>\n          {/* <div>\n            How was {object} different because of {subject}?\n          </div> */}\n          <PartInput\n            value={state.context.academicOrganizer.answer.howCauseEffect.after}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_HOW_CAUSE_EFFECT',\n                payload: {\n                  ...howCauseEffect,\n                  after: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n      </AcademicQuestionAnswerTypeContainer>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'PREVIOUS' })\n            event({ type: 'SET_PRE_LOADED', payload: false })\n          }}\n        >\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'NEXT' })\n          }}\n        >\n          Next\n        </OrganizerControlButton>{' '}\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, SyntheticEvent, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { useMutation, gql } from '@apollo/client'\nimport {\n  findEssayById_findEssayById_essay_topic,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateWhyCauseEffect,\n  updateWhyCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport {\n  AcademicQuestionAnswerTypeContainer,\n  AcademicRestatementTitle,\n  AnswerTypeContainter,\n  PartInput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  QuestionContainer,\n  QuestionStyle,\n  PartTextArea,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { irregularPastTenseVerbList } from '../../../../../../../../utils'\n\nexport type AcademicWhyCauseEffectProps = {\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  topic: findEssayById_findEssayById_essay_topic\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer\n}\n\nexport const UPDATE_WHY_CAUSE_EFFECT_MUTATION = gql`\n  mutation updateWhyCauseEffect($input: UpdateWhyCauseEffectInput!) {\n    updateWhyCauseEffect(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\n\nexport const AcademicWhyCauseEffect = ({\n  questionParts,\n  topic,\n  organizer,\n}: AcademicWhyCauseEffectProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  const auxilaryVerbCheck =\n    questionParts.helpingVerb !== 'did' &&\n    questionParts.simplePredicate.split(' ').length > 1 &&\n    questionParts.simplePredicate.split(' ').includes(questionParts.helpingVerb)\n\n  const { whyCauseEffect } = state.context.academicOrganizer.answer\n\n  const { verb, object } =\n    state.context.academicOrganizer.academicSentenceStructure\n\n  const [updateWhyCauseEffect] = useMutation<\n    updateWhyCauseEffect,\n    updateWhyCauseEffectVariables\n  >(UPDATE_WHY_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        ultimateCause:\n          state.context.academicOrganizer.answer.whyCauseEffect.ultimateCause,\n        proximateCause:\n          state.context.academicOrganizer.answer.whyCauseEffect.proximateCause,\n      },\n    },\n    onCompleted: () => console.log('update Complete'),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    // updateWhyCauseEffect()\n  }, [whyCauseEffect, updateWhyCauseEffect])\n\n  const verbPhraseCheck = verb.split(' ').length > 1\n  const verbPhraseSplitter = verb.split(' ')\n  console.log(state.value)\n  // const irregularVerbCheck = irregularPastTenseVerbList(verbPhraseSplitter[0])\n\n  // const congugatedVerb =\n  //   verbPhraseSplitter[0] === irregularVerbCheck\n  //     ? irregularVerbCheck\n  //         .charAt(irregularVerbCheck.length - 1)\n  //         .toLowerCase() === 'e'\n  //       ? verb + 'd'\n  //       : verb + 'ed'\n  //     : irregularVerbCheck\n  // console.log(verb !== 'was')\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Answer the Question</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      <QuestionContainer>\n        <QuestionStyle>{organizer.restatement}</QuestionStyle>\n      </QuestionContainer>\n      <AcademicQuestionAnswerTypeContainer>\n        <AcademicRestatementTitle>\n          <div>Why Question: Cause and Effect</div>\n        </AcademicRestatementTitle>\n        <AnswerTypeContainter>\n          {questionParts.helpingVerb === 'did' ? (\n            <div>\n              Why did {questionParts.simpleSubject}{' '}\n              {questionParts.simplePredicate}\n              {object ? ' ' + object : null}?\n            </div>\n          ) : questionParts.subjectCompliment ? (\n            <div>\n              Why {questionParts.helpingVerb} {questionParts.simpleSubject}{' '}\n              {questionParts.subjectCompliment}?\n            </div>\n          ) : !object ? (\n            <div>\n              Why {questionParts.helpingVerb} {questionParts.simpleSubject}{' '}\n              {verbPhraseSplitter[0]}?\n            </div>\n          ) : (\n            <div>\n              Why {verb} {questionParts.simpleSubject} {object}?\n            </div>\n          )}\n          <PartTextArea\n            placeholder=\"Proximate Cause...\"\n            value={\n              state.context.academicOrganizer.answer.whyCauseEffect\n                .proximateCause\n            }\n            onPaste={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onCopy={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onChange={(e: any) => {\n              updateWhyCauseEffect()\n              event({\n                type: 'SET_WHY_CAUSE_EFFECT',\n                payload: { ...whyCauseEffect, proximateCause: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>Why did your Proximate Cause happen?</div>\n          <PartTextArea\n            placeholder=\"Ultimate Cause...\"\n            value={\n              state.context.academicOrganizer.answer.whyCauseEffect\n                .ultimateCause\n            }\n            onPaste={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onCopy={(e: SyntheticEvent) => {\n              e.preventDefault()\n            }}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_WHY_CAUSE_EFFECT',\n                payload: { ...whyCauseEffect, ultimateCause: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n      </AcademicQuestionAnswerTypeContainer>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'PREVIOUS' })\n            event({ type: 'SET_PRE_LOADED', payload: false })\n            updateWhyCauseEffect()\n          }}\n        >\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'NEXT' })\n            updateWhyCauseEffect()\n          }}\n        >\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\n// import { useStudentEssayContextProvider } from '../../StudentEssayContext'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setAnswerType,\n  setAnswerTypeVariables,\n  QuestionTypeEnum,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  findEssayById_findEssayById_essay_topic,\n} from '../../../../../../../../schemaTypes'\nimport { gql, useMutation } from '@apollo/client'\nimport { AcademicProblemSolution } from './AcademicProblemSolution'\nimport { AcademicHowCauseEffect } from './AcademicHowCauseEffect'\nimport { AcademicWhyCauseEffect } from './AcademicWhyCauseEffect'\nimport { useEnumContextProvider } from '../../../../../../../../contexts/EnumContext'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport {\n  AcademicQuestionTypeContainer,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n  AcademicRestatementTitle,\n  AcademicQuestionTypeSelect,\n  AcademicRestatementContainer,\n  AcademicRestatementInput,\n  RestatementOutput,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { UpdateAcademicOrganizerType } from './AcademicOrganizer'\n\nexport type AcademicAnswerTypesProps = {\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer\n  updateAcademicOrganizer: UpdateAcademicOrganizerType\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  auxilaryVerbCheck: boolean\n  topic: findEssayById_findEssayById_essay_topic\n}\n\nexport const SET_ANSWER_TYPE_MUTATION = gql`\n  mutation setAnswerType($input: SetAnswerTypeInput!) {\n    setAnswerType(input: $input) {\n      essay {\n        _id\n        workingDraft {\n          organizer {\n            ... on AcademicOrganizer {\n              questionType\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const AcademicAnswerTypes = ({\n  organizer,\n  updateAcademicOrganizer,\n  questionParts,\n  topic,\n}: AcademicAnswerTypesProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n  const { questionTypeEnum } = useEnumContextProvider()\n\n  const [setAnswerType] = useMutation<setAnswerType, setAnswerTypeVariables>(\n    SET_ANSWER_TYPE_MUTATION,\n    {\n      variables: {\n        input: {\n          essayId: state.context.essayId,\n          questionType: state.context.academicOrganizer.questionType!,\n        },\n      },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [''],\n    },\n  )\n\n  useEffect(() => {\n    if (!state.context.academicOrganizer.answer.preLoaded) {\n      // setAnswerType()\n      console.log('setting')\n    }\n  }, [\n    setAnswerType,\n    state.context.academicOrganizer.answer.preLoaded,\n    state.context.academicOrganizer.questionType,\n  ])\n\n  useEffect(() => {\n    if (state.context.academicOrganizer.answer.preLoaded) {\n      // event({ type: 'NEXT' })\n    }\n  }, [event, state.context.academicOrganizer.answer.preLoaded])\n\n  useEffect(() => {\n    updateAcademicOrganizer()\n  }, [\n    state.context.academicOrganizer.restatement,\n    // state.context.academicOrganizer.academicSentenceStructure,\n    updateAcademicOrganizer,\n  ])\n  console.log(state.value)\n  return (\n    <>\n      {state.matches('organizers.academicOrganizer.answer.questionType') && (\n        <>\n          <AcademicQuestionTypeContainer>\n            <AcademicRestatementTitle>\n              <div>What is the Question Type: </div>\n            </AcademicRestatementTitle>\n            <AcademicQuestionTypeContainer>\n              <AcademicQuestionTypeSelect\n                value={state.context.academicOrganizer.questionType}\n                onChange={(e: any) => {\n                  if (e.target.value !== 'none' || e.target.value !== null) {\n                    event({\n                      type: 'SET_FULL_QUESTION_TYPE',\n                      payload: e.target.value,\n                    })\n                    setAnswerType({\n                      variables: {\n                        input: {\n                          essayId: state.context.essayId,\n                          questionType: e.target.value,\n                        },\n                      },\n                    })\n                  }\n                }}\n              >\n                <option value={'none'}>Pick a Question Type</option>\n                {questionTypeEnum.map((question: QuestionTypeEnum) => (\n                  <option key={question} value={question}>\n                    {question === 'HOW_PROBLEM_SOLUTION'\n                      ? 'How: Problem and Solution'\n                      : question === 'HOW_CAUSE_EFFECT'\n                        ? 'How: Cause and Effect'\n                        : 'Why: Cause and Effect'}\n                  </option>\n                ))}\n              </AcademicQuestionTypeSelect>\n            </AcademicQuestionTypeContainer>\n            <AcademicRestatementContainer>\n              <AcademicRestatementTitle>\n                <div>Restatement</div>\n              </AcademicRestatementTitle>\n              <AcademicRestatementInput\n                type=\"text\"\n                value={state.context.academicOrganizer.restatement}\n                onChange={(e: any) =>\n                  event({\n                    type: 'SET_RESTATEMENT',\n                    payload: e.target.value,\n                  })\n                }\n              />\n              <RestatementOutput>\n                <div> {state.context.academicOrganizer.restatement}</div>\n              </RestatementOutput>\n            </AcademicRestatementContainer>\n          </AcademicQuestionTypeContainer>\n          <OrganizerControlButtonContainer>\n            <OrganizerControlButton\n              onClick={() => {\n                event({ type: 'PREVIOUS' })\n              }}\n            >\n              Back\n            </OrganizerControlButton>\n            <OrganizerControlButton\n              onClick={() => {\n                if (\n                  organizer.__typename === 'AcademicOrganizer' &&\n                  organizer.answerType !== null\n                )\n                  event({ type: 'NEXT' })\n              }}\n            >\n              Next\n            </OrganizerControlButton>\n          </OrganizerControlButtonContainer>\n        </>\n      )}\n\n      {state.matches('organizers.academicOrganizer.answer.problemSolution') &&\n        state.context.academicOrganizer.questionType ===\n          QuestionTypeEnum.HOW_PROBLEM_SOLUTION && (\n          <AcademicProblemSolution\n            questionParts={questionParts}\n            topic={topic}\n          />\n        )}\n      {state.matches('organizers.academicOrganizer.answer.howCauseEffect') &&\n        state.context.academicOrganizer.questionType ===\n          QuestionTypeEnum.HOW_CAUSE_EFFECT && (\n          <AcademicHowCauseEffect questionParts={questionParts} />\n        )}\n      {state.matches('organizers.academicOrganizer.answer.whyCauseEffect') &&\n        state.context.academicOrganizer.questionType ===\n          QuestionTypeEnum.WHY_CAUSE_EFFECT && (\n          <AcademicWhyCauseEffect\n            questionParts={questionParts}\n            topic={topic}\n            organizer={organizer}\n          />\n        )}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { useUserContextProvider } from '../../../../../../../../contexts/UserContext'\nimport {\n  BasicQuestionEnum,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  me_me_Student,\n  setAnswerTypeVariables,\n  setAnswerType,\n  WritingLevelEnum,\n  QuestionTypeEnum,\n  QuestionWordEnum,\n  setRestatementVariables,\n  setRestatement,\n} from '../../../../../../../../schemaTypes'\nimport {\n  EndingPhraseOptionsContainer,\n  FinalRestatementMessage,\n  FinalRestatementMessageContainer,\n  FinalRestatementStyles,\n  RestatementDirectionsContainer,\n  RestatementFeedbackContainer,\n  RestatementQuestionToRestateContainer,\n  RestatementQuestionToRestateSelection,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { SET_ANSWER_TYPE_MUTATION } from '../academic/AcademicAnswerTypes'\nimport { endingPhraseGrader } from './EndingPhraseGrader'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\n\nexport type EndingPhraseProps = {\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n  questionToModify: string[]\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  writingLevel: WritingLevelEnum\n}\n\nexport type EndingPhraseAnswerTypes =\n  | 'how'\n  | 'why'\n  | 'toSolveAProblem'\n  | 'inACertainWay'\n  | 'forACertainReason'\n  | ''\n\nexport const SET_RESTATEMENT_MUTATION = gql`\n  mutation setRestatement($input: SetRestatementInput!) {\n    setRestatement(input: $input) {\n      set\n    }\n  }\n`\nexport const EndingPhrase = ({\n  setState,\n  question,\n  questionToModify,\n  writingLevel,\n}: EndingPhraseProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n  const [answer, setAnswer] = useState<EndingPhraseAnswerTypes>('')\n  const [questionTypeCorrect, setQuestionTypeCorrect] = useState(false)\n  const [questionTypeEnabled, setQuestionTypeEnabled] = useState(true)\n  const [questionTypeMessage, setQuestionTypeMessage] = useState<null | string>(\n    null,\n  )\n\n  const [enabled, setEnabled] = useState(true)\n\n  const [setAnswerType] = useMutation<setAnswerType, setAnswerTypeVariables>(\n    SET_ANSWER_TYPE_MUTATION,\n    {\n      variables: {\n        input: {\n          essayId: state.context.essayId,\n          questionType: state.context.academicOrganizer.questionType!,\n        },\n      },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [''],\n    },\n  )\n\n  const [setRestatement] = useMutation<setRestatement, setRestatementVariables>(\n    SET_RESTATEMENT_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [],\n    },\n  )\n\n  const sentenceJoiner = (sentence: string[]) => {\n    if (sentence.includes('|')) {\n      const seperator = sentence.findIndex((i) => i === '|')\n      return [\n        ...sentence.slice(0, seperator - 1),\n        ...sentence.slice(seperator + 2),\n      ]\n    } else {\n      return []\n    }\n  }\n  const sentence = sentenceJoiner(questionToModify)\n\n  const { correct, ending, message, waitTime } = endingPhraseGrader({\n    correctQuestionWord: question.questionWord.toLowerCase(),\n    givenQuestionWord: answer,\n    writingLevel,\n    correctQuestionType: question.questionType,\n  })\n\n  useEffect(() => {\n    if (state.context.academicOrganizer.questionType !== null) {\n      const timer = setTimeout(() => {\n        setAnswerType()\n        // console.log('setting answer type')\n      }, 3000)\n      return () => clearTimeout(timer)\n    }\n  }, [state.context.academicOrganizer.questionType])\n\n  useEffect(() => {\n    if (answer) {\n      if (correct) {\n        if (writingLevel === WritingLevelEnum.DEVELOPING) {\n          event({\n            type: 'SET_BASIC_QUESTION_TYPE',\n            payload:\n              answer && answer === 'how'\n                ? BasicQuestionEnum.HOW\n                : BasicQuestionEnum.WHY,\n          })\n        }\n        if (writingLevel === WritingLevelEnum.ACADEMIC) {\n        }\n        const timer = setTimeout(() => {\n          event({\n            type: 'SET_RESTATEMENT',\n            payload: sentence.join(' ').replace('.', ' ') + ending,\n          })\n          setRestatement({\n            variables: {\n              input: {\n                essayId: state.context.essayId,\n                restatement: sentence.join(' ').replace('.', ' ') + ending,\n              },\n            },\n          })\n          event({ type: 'NEXT' })\n          return () => clearTimeout(timer)\n        }, waitTime * 2000)\n      } else {\n        const timer = setTimeout(() => {\n          setAnswer('')\n        }, waitTime * 1000)\n        return () => clearTimeout(timer)\n      }\n    }\n  }, [answer])\n\n  const questionTypeChecker =\n    writingLevel === WritingLevelEnum.ACADEMIC &&\n    state.context.academicOrganizer.questionType !== null\n  console.log(questionTypeChecker)\n  const handleQuestionTypeSelector = (\n    questionType: QuestionTypeEnum,\n    questionWord: QuestionWordEnum,\n  ) => {\n    if (question.questionType === questionType) {\n      setQuestionTypeMessage('Correct!')\n      setQuestionTypeCorrect(true)\n      const timer = setTimeout(() => {\n        event({\n          type: 'SET_FULL_QUESTION_TYPE',\n          payload: questionType,\n        })\n        setQuestionTypeMessage(null)\n      }, 3000)\n      return () => clearTimeout(timer)\n    } else {\n      const shouldBeHowProblemSolution =\n        questionType === QuestionTypeEnum.HOW_CAUSE_EFFECT &&\n        question.questionType === QuestionTypeEnum.HOW_PROBLEM_SOLUTION\n\n      const shouoldBeHowCauseAndEffect =\n        questionType === QuestionTypeEnum.HOW_PROBLEM_SOLUTION &&\n        question.questionType === QuestionTypeEnum.HOW_CAUSE_EFFECT\n\n      const shouldBeWhyQuestion =\n        question.questionWord === QuestionWordEnum.WHY &&\n        questionWord === QuestionWordEnum.HOW\n\n      const shouldBeHowQuestion =\n        question.questionWord === QuestionWordEnum.HOW &&\n        questionWord === QuestionWordEnum.WHY\n\n      if (shouldBeHowProblemSolution || shouoldBeHowCauseAndEffect)\n        setQuestionTypeMessage(\n          'Nope: If the verb is affect, change, evolve, influence, or shape, it is a How: Cause and Effect Question. Otherwise, the sentence is a Problem and Solution question. ',\n        )\n\n      if (shouldBeWhyQuestion || shouldBeHowQuestion) {\n        setQuestionTypeMessage(\n          // 'Nope: If the verb is affect, affect, change, evolve, influence, or shape, it is a How: Cause and Effect Question. If the verb\n          'Try again! Look at the question word again.',\n        )\n      }\n      setQuestionTypeCorrect(false)\n      setQuestionTypeEnabled(false)\n\n      const timer = setTimeout(() => {\n        setQuestionTypeMessage(null)\n        setQuestionTypeEnabled(true)\n      }, 5000)\n      return () => clearTimeout(timer)\n    }\n  }\n\n  return (\n    <>\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Ending Phrase</UnderlinedText>\n        {writingLevel === WritingLevelEnum.DEVELOPING && (\n          <div>\n            Now we'll figure out how to end the sentence. There are different\n            endings for different kinds of questions that give the reader a\n            better understanding of how the question will be answered. Things\n            will change as you progress, but for now all you need to do is end\n            the question with \"...for a certain reason\" if it is a why question\n            or \"...in a certain way\" if it is a how question.\n          </div>\n        )}\n        {writingLevel === WritingLevelEnum.ACADEMIC && (\n          <>\n            {!questionTypeChecker ? (\n              <div>\n                Now that you've advanced, the ending of the restatement is going\n                to change a little: First we need to figure out what kind of\n                question is being asked. There are three types of questions: How\n                questions can be Cause and Effect or Problem and Solution\n                questions. Luckily, Why questions are always Cause and Effect\n                questions. Choose which one you think fits for your statement.\n                If the question is a how question, figure out if it is a Problem\n                and Solution question or a Cause and Effect question, and Why\n                questions take care of themselves.\n              </div>\n            ) : (\n              <div>\n                If the question is a problem and solution question then you\n                would end the sentence \"...to solve a problem.\" If the verb is\n                solve or a synonym for solve you don't want to be repetitive, so\n                you can use \"...in a certain way.\" If it is a why question, you\n                will end the sentence with \"...for a certain reason.\"\n              </div>\n            )}\n          </>\n        )}\n        <br />\n        <div>For the question: {question.originalQuestion}</div>\n        <br />\n        <div>Click on the appropriate ending:</div>\n      </RestatementDirectionsContainer>\n\n      <>\n        {/* {enabled ? ( */}\n        <>\n          {writingLevel === WritingLevelEnum.DEVELOPING && (\n            <EndingPhraseOptionsContainer>\n              <RestatementQuestionToRestateSelection\n                onClick={() => {\n                  setAnswer('how')\n                }}\n              >\n                ...in a certain way.\n              </RestatementQuestionToRestateSelection>\n              <RestatementQuestionToRestateSelection\n                onClick={() => {\n                  setAnswer('why')\n                }}\n              >\n                ...for a certain reason.\n              </RestatementQuestionToRestateSelection>\n            </EndingPhraseOptionsContainer>\n          )}\n          {writingLevel === WritingLevelEnum.ACADEMIC && (\n            <>\n              {state.context.academicOrganizer.questionType === null ? (\n                <EndingPhraseOptionsContainer>\n                  <RestatementQuestionToRestateSelection\n                    onClick={() => {\n                      questionTypeEnabled &&\n                        handleQuestionTypeSelector(\n                          QuestionTypeEnum.HOW_PROBLEM_SOLUTION,\n                          QuestionWordEnum.HOW,\n                        )\n                    }}\n                  >\n                    How: Problem and Solution\n                  </RestatementQuestionToRestateSelection>\n                  <RestatementQuestionToRestateSelection\n                    onClick={() => {\n                      questionTypeEnabled &&\n                        handleQuestionTypeSelector(\n                          QuestionTypeEnum.HOW_CAUSE_EFFECT,\n                          QuestionWordEnum.HOW,\n                        )\n                    }}\n                  >\n                    How: Cause and Effect\n                  </RestatementQuestionToRestateSelection>\n                  <RestatementQuestionToRestateSelection\n                    onClick={() => {\n                      questionTypeEnabled &&\n                        handleQuestionTypeSelector(\n                          QuestionTypeEnum.WHY_CAUSE_EFFECT,\n                          QuestionWordEnum.WHY,\n                        )\n                    }}\n                  >\n                    Why: Cause and Effect\n                  </RestatementQuestionToRestateSelection>\n                </EndingPhraseOptionsContainer>\n              ) : (\n                <EndingPhraseOptionsContainer>\n                  <div onClick={() => setAnswer('toSolveAProblem')}>\n                    ...to solve a problem.\n                  </div>\n                  <div onClick={() => setAnswer('inACertainWay')}>\n                    ...in a certain way.\n                  </div>\n                  <div onClick={() => setAnswer('forACertainReason')}>\n                    ...for a certain reason.\n                  </div>\n                </EndingPhraseOptionsContainer>\n              )}\n            </>\n          )}\n        </>\n        {/* ) : ( */}\n        <>\n          {answer && (\n            <RestatementFeedbackContainer\n              style={{ gridRow: '6/-2' }}\n              correct={correct}\n            >\n              <UnderlinedText>Feedback</UnderlinedText>\n              {correct ? (\n                <FinalRestatementMessageContainer>\n                  <FinalRestatementMessage>\n                    {message} Here's the final sentence:\n                  </FinalRestatementMessage>\n\n                  <FinalRestatementStyles>\n                    {questionToModify\n                      .join(' ')\n                      .replace('|', '')\n                      .replace('.', ' ') + ending}\n                  </FinalRestatementStyles>\n                </FinalRestatementMessageContainer>\n              ) : (\n                <>\n                  <div>{message}</div>\n                </>\n              )}\n            </RestatementFeedbackContainer>\n          )}\n          {questionTypeMessage && (\n            <RestatementFeedbackContainer\n              style={{ gridRow: '6/-2' }}\n              correct={questionTypeCorrect}\n            >\n              <UnderlinedText>Feedback</UnderlinedText>\n              {questionTypeCorrect ? (\n                <FinalRestatementMessageContainer>\n                  <FinalRestatementMessage>\n                    {questionTypeMessage}\n                  </FinalRestatementMessage>\n                </FinalRestatementMessageContainer>\n              ) : (\n                <>\n                  <div>{questionTypeMessage}</div>\n                </>\n              )}\n            </RestatementFeedbackContainer>\n          )}\n        </>\n        {/* )} */}\n      </>\n    </>\n  )\n}\n","import {\n  QuestionTypeEnum,\n  WritingLevelEnum,\n} from '../../../../../../../../schemaTypes'\nimport { EndingPhraseAnswerTypes } from './EndingPhrase'\n\ntype EndingPhraseGraderProps = {\n  correctQuestionWord: string\n  givenQuestionWord: string\n  writingLevel: WritingLevelEnum\n  correctQuestionType?: QuestionTypeEnum\n}\n\nexport function endingPhraseGrader({\n  correctQuestionWord,\n  givenQuestionWord,\n  writingLevel,\n  correctQuestionType,\n}: EndingPhraseGraderProps) {\n  if (writingLevel === 'DEVELOPING') {\n    if (givenQuestionWord !== correctQuestionWord) {\n      if (correctQuestionWord === 'how') {\n        return {\n          correct: false,\n          message: `Incorrect. Try Again.`,\n          waitTime: 5,\n          ending: 'in a certain way.',\n        }\n      } else {\n        return {\n          correct: false,\n          message: `Incorrect. Try Again.`,\n          waitTime: 5,\n          ending: 'for a certain reason.',\n        }\n      }\n    } else {\n      if (correctQuestionWord === 'how')\n        return {\n          correct: true,\n          message: `Correct.`,\n          waitTime: 2,\n          ending: 'in a certain way.',\n        }\n      else {\n        return {\n          correct: true,\n          message: `You got it.`,\n          waitTime: 2,\n          ending: 'for a certain reason.',\n        }\n      }\n    }\n  } else {\n    if (correctQuestionType === 'HOW_PROBLEM_SOLUTION') {\n      if (givenQuestionWord === 'toSolveAProblem')\n        return {\n          correct: true,\n          message: `You got it.`,\n          waitTime: 2,\n          ending: 'to solve a problem',\n        }\n      if (givenQuestionWord === 'inACertainWay')\n        return {\n          correct: true,\n          message: `You got it.`,\n          waitTime: 2,\n          ending: 'in a certain way',\n        }\n      else\n        return {\n          correct: false,\n          message: `Incorrect. Try Again.`,\n          waitTime: 5,\n        }\n    }\n    if (correctQuestionType === 'HOW_CAUSE_EFFECT') {\n      if (givenQuestionWord === 'inACertainWay')\n        return {\n          correct: true,\n          message: `You got it.`,\n          waitTime: 2,\n          ending: 'in a certain way',\n        }\n      else\n        return {\n          correct: false,\n          message: `Incorrect. Since the question is a cause and effect question, you need to select \"...in a certain way\"`,\n          waitTime: 5,\n        }\n    } else {\n      if (givenQuestionWord === 'forACertainReason')\n        return {\n          correct: true,\n          message: `You got it.`,\n          waitTime: 2,\n          ending: 'for a certain reason.',\n        }\n      else\n        return {\n          correct: false,\n          message: `Incorrect. Try Again.`,\n          waitTime: 5,\n        }\n    }\n  }\n}\n","import { useState } from 'react'\n\nexport const useSelectedText = () => {\n  const [text, setText] = useState('')\n  // make text null at init\n\n  const select = () => {\n    const selected = window.getSelection() as Selection\n    console.log(selected)\n    setText(selected.toString())\n  }\n  const reset = () => {\n    window.getSelection()?.empty()\n    window.getSelection()?.removeAllRanges()\n    setText('')\n  }\n\n  const disable = () => null\n  return [select, text, reset, disable] as const\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { useSelectedText } from '../../../../../../../../hooks/useSelectedText'\nimport { findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts } from '../../../../../../../../schemaTypes'\nimport {\n  capitalizer,\n  irregularPastTenseVerbList,\n} from '../../../../../../../../utils'\nimport { LineToManipulate } from '../../../../../../teacher/development/grammar/question-deconstruction/VerbIdentification'\nimport {\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  RestatementDirectionsContainer,\n  RestatementFeedbackContainer,\n  RestatementQuestionToRestateContainer,\n  SentenceToManipulate,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\n\nexport type HelpingVerbIdentificationProps = {\n  questionToModify: string[]\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n  auxilaryVerbCheck: boolean\n}\n\nexport const HelpingVerbIdentification = ({\n  questionToModify,\n  setQuestionToModify,\n  setState,\n  question,\n  auxilaryVerbCheck,\n}: HelpingVerbIdentificationProps) => {\n  const [select, text, reset] = useSelectedText()\n  const [attempts, setattempts] = useState(0)\n  const [enabled, setEnabled] = useState(true)\n  const [point, setPoint] = useState<number | null>(null)\n  let wordToCheck = text\n\n  const removeDidHandler = (word: string) => {\n    const index = questionToModify.findIndex(\n      (wordToFind) => wordToFind === word,\n    )\n    const sentenceToModify = questionToModify\n      .join(' ')\n      .replace('?', '.')\n      // .replace(question.simplePredicate, irregularPastTenseVerbList())\n      .split(' ')\n\n    setQuestionToModify([\n      ...sentenceToModify.slice(0, index),\n      ...sentenceToModify.slice(index + 1),\n    ])\n\n    setTimeout(() => {\n      setState('subject-predicate-split')\n    }, 3000)\n  }\n\n  const moveBeingWord = (word: string) => {\n    if (word === 'was' || word === 'were') {\n      const index = questionToModify.findIndex(\n        (wordToFind) => wordToFind === word,\n      )\n\n      const predicateIndex = questionToModify.findIndex(\n        (i) => i === question.completePredicate.split(' ')[0],\n      )\n\n      const sentenceToModify = questionToModify\n        .join(' ')\n        .replace('?', '.')\n        .split(' ')\n\n      setQuestionToModify([\n        ...sentenceToModify.slice(0, index),\n        ...sentenceToModify.slice(index + 1, predicateIndex),\n        word,\n        ...sentenceToModify.slice(predicateIndex),\n      ])\n      setTimeout(() => {\n        setState('subject-predicate-split')\n      }, 3000)\n    }\n  }\n\n  const newSentence = [\n    questionToModify.join(' ').split('').slice(0, point!).join(''),\n    question.helpingVerb,\n    questionToModify\n      .join(' ')\n      .split('')\n      .slice(point!, questionToModify.join(' ').split('').length)\n      .join(''),\n  ]\n\n  const correctSentence =\n    question.helpingVerb +\n      ' ' +\n      questionToModify\n        .join(' ')\n        .split('')\n        .slice(point!, questionToModify.join(' ').split('').length)\n        .join('') ===\n    question.helpingVerb + ' ' + question.completePredicate\n\n  const helpingVerbCheck = (word: string) => {\n    if (word === question.helpingVerb && question.helpingVerb === 'did') {\n      setEnabled(false)\n      removeDidHandler(word)\n    } else if (word === question.helpingVerb) {\n      setEnabled(false)\n      moveBeingWord(word)\n    } else {\n      setEnabled(false)\n      const timer = setTimeout(\n        () => {\n          reset()\n          setEnabled(true)\n        },\n        // attempts === 0 ? 3000 : 3000 + 1000 * attempts\n        3000,\n      )\n      return () => clearTimeout(timer)\n    }\n  }\n\n  useEffect(() => {\n    if (point && !correctSentence) {\n      const timer = setTimeout(() => {\n        setPoint(null)\n      }, 3000)\n      return () => clearTimeout(timer)\n    }\n    if (point && correctSentence) {\n      setQuestionToModify(newSentence.join(' ').split(' '))\n      setTimeout(() => {\n        setState('subject-identification')\n      }, 3000)\n    }\n  }, [point, correctSentence])\n\n  return (\n    <>\n      <>\n        <RestatementDirectionsContainer>\n          <UnderlinedText>Helping Verb Identification</UnderlinedText>\n          Since the helping verb is \"{question.helpingVerb},\"{' '}\n          {question.helpingVerb !== 'did'\n            ? `it needs to be moved after the subject of the sentence. `\n            : `you don't need it\n          in the sentence anymore. Double click to remove the word.`}{' '}\n          {question.helpingVerb !== 'did' &&\n            `Double click to have \"${question.helpingVerb}\" moved to the correct place in the sentence.`}\n        </RestatementDirectionsContainer>\n\n        <>\n          {enabled ? (\n            <RestatementQuestionToRestateContainer>\n              <SentenceToManipulate\n                cursorFormat={enabled ? 'POINTER' : 'NONE'}\n                onMouseUp={(e) => (enabled ? select() : e.preventDefault())}\n                onSelect={(e) => !enabled && e.preventDefault()}\n              >\n                {questionToModify\n                  .join(' ')\n                  .split(' ')\n                  .includes(question.helpingVerb) ? (\n                  questionToModify.map((word, i: number) => (\n                    <span key={i}>\n                      <span\n                        onDoubleClick={() => {\n                          enabled && helpingVerbCheck(word.toLowerCase())\n                          enabled && setattempts((a) => a + 1)\n                        }}\n                      >\n                        {word === questionToModify[0]\n                          ? capitalizer(word)\n                          : word}\n                      </span>\n                      {word !==\n                        questionToModify[questionToModify.length - 2] && (\n                        <span> </span>\n                      )}\n                    </span>\n                  ))\n                ) : (\n                  <div>\n                    {questionToModify\n                      .slice(0, questionToModify.length - 1)\n                      .join(' ') +\n                      questionToModify\n                        .slice(questionToModify.length - 1)\n                        .join('')\n                        .replace('?', '.')}\n                  </div>\n                )}\n              </SentenceToManipulate>\n            </RestatementQuestionToRestateContainer>\n          ) : (\n            <>\n              {wordToCheck && (\n                <RestatementFeedbackContainer\n                  correct={wordToCheck.toLowerCase() === question.helpingVerb}\n                >\n                  <UnderlinedText>Feedback</UnderlinedText>\n                  {wordToCheck.toLowerCase() !== question.helpingVerb ? (\n                    <div>\n                      \"{capitalizer(wordToCheck)}\" is not the word \"\n                      {question.helpingVerb}\". Double click the word \"\n                      {question.helpingVerb}\" please.\n                    </div>\n                  ) : (\n                    <div>That's it! Good Job!</div>\n                  )}\n                </RestatementFeedbackContainer>\n              )}\n            </>\n          )}\n        </>\n      </>\n    </>\n  )\n}\n","export function findPreposition(word: string) {\n  const prepositions = [\n    'about',\n    'above',\n    'across',\n    'after',\n    'against',\n    'along',\n    'among',\n    'around',\n    'as',\n    'at',\n    'before',\n    'behind',\n    'between',\n    'but',\n    'by',\n    'during',\n    'except',\n    'for',\n    'from',\n    'in',\n    'into',\n    'like',\n    'next to',\n    'of',\n    'off',\n    'on',\n    'over',\n    'past',\n    'than',\n    'through',\n    'to',\n    'until',\n    'up',\n    'with',\n  ]\n  for (word of word.split(' ')) {\n    for (const wordCheck of prepositions) {\n      if (word.toLowerCase().includes(wordCheck)) {\n        if (word.toLowerCase() !== wordCheck) {\n          return false\n        }\n        return true\n      }\n    }\n  }\n  return false\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { useSelectedText } from '../../../../../../../../hooks/useSelectedText'\nimport {\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  WritingLevelEnum,\n} from '../../../../../../../../schemaTypes'\nimport {\n  capitalizer,\n  irregularPastTenseVerbList,\n  phraseCapitalizer,\n  specialVerbsInPastTense,\n  timeAFunction,\n} from '../../../../../../../../utils'\n\nimport { LineToManipulate } from '../../../../../../teacher/development/grammar/question-deconstruction/VerbIdentification'\nimport {\n  RestatementDirectionsContainer,\n  RestatementDirectionsContainerObjectDirections,\n  RestatementDirectionsContainerObjectDirectionsButton,\n  RestatementDirectionsContainerObjectDirectionsButtonContainer,\n  RestatementFeedbackContainer,\n  RestatementFeedBackContainerMessageContainer,\n  RestatementFeedbackContainerObjectIndentification,\n  RestatementQuestionToRestateContainer,\n  SentenceToManipulate,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { objectGrader } from './ObjectGrader'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\n\nexport type ObjectIdentificationProps = {\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n  questionToModify: string[]\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  object: string | null\n  setObject: Dispatch<SetStateAction<string | null>>\n  writingLevel: WritingLevelEnum\n}\n\nexport const ObjectIdentification = ({\n  setState,\n  question,\n  questionToModify,\n  object,\n  setObject,\n  writingLevel,\n}: ObjectIdentificationProps) => {\n  const [, event] = useStudentEssayContextProvider()\n  const [select, text, reset] = useSelectedText()\n  const [step, setStep] = useState<'checkForObject' | 'identifyObject'>(\n    'checkForObject',\n  )\n  const [attempts, setAttempts] = useState(0)\n  const [enabled, setEnabled] = useState(true)\n  const [correct, setCorrect] = useState(false)\n  const [transitiveQuestionMessage, setTransitiveQuestionMessage] = useState<\n    string | null\n  >(null)\n\n  const { correctObject, message, correctMessage, howToFix } = objectGrader({\n    completePredicate: question.completePredicate,\n    completeSubject: question.completeSubject,\n    correctObject: question.object!,\n    givenObject: text,\n    simplePredicate: question.simplePredicate,\n    questionToModify,\n    simpleSubject: question.simpleSubject,\n  })\n\n  const hasObject = question.object\n\n  const auxilaryVerbCheck =\n    (question.helpingVerb !== 'did' &&\n      question.simplePredicate.split(' ').length > 1 &&\n      question.simplePredicate.split(' ').includes(question.helpingVerb)) ||\n    (question.helpingVerb !== 'did' && !question.subjectCompliment)\n\n  const conjugatedVerb =\n    specialVerbsInPastTense(question.simplePredicate) ===\n    question.simplePredicate\n      ? irregularPastTenseVerbList(question.simplePredicate) ===\n        question.simplePredicate\n        ? question.simplePredicate.split('')[\n            question.simplePredicate.split('').length - 1\n          ] === 'e'\n          ? question.simplePredicate + 'd'\n          : question.simplePredicate + 'ed'\n        : irregularPastTenseVerbList(question.simplePredicate)\n      : specialVerbsInPastTense(question.simplePredicate)\n\n  // const testWord = 'try'\n  // console.log(\n  //   specialVerbsInPastTense(testWord) === testWord\n  //     ? irregularPastTenseVerbList(testWord) === testWord\n  //       ? testWord.split('')[testWord.split('').length - 1] === 'e'\n  //         ? testWord + 'd'\n  //         : testWord + 'ed'\n  //       : irregularPastTenseVerbList(testWord)\n  //     : specialVerbsInPastTense(testWord)\n  // )\n\n  const indexOfVerb = questionToModify\n    .join(' ')\n    .split(' ')\n    .findIndex((word) => word === conjugatedVerb)\n\n  const sentenceAfterVerb = questionToModify\n    .join(' ')\n    .split(' ')\n    .slice(indexOfVerb + 1)\n\n  useEffect(() => {\n    if (correctObject && text) {\n      setEnabled(false)\n      const timer = setTimeout(() => {\n        if (writingLevel === WritingLevelEnum.DEVELOPING)\n          event({\n            type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_OBJECT',\n            payload: text.replace('.', ''),\n          })\n        if (writingLevel === WritingLevelEnum.ACADEMIC)\n          event({\n            type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT',\n            payload: text.replace('.', ''),\n          })\n        if (writingLevel === WritingLevelEnum.ADVANCED)\n          event({\n            type: 'SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT',\n            payload: text.replace('.', ''),\n          })\n        setState('ending-phrase')\n        return () => clearTimeout(timer)\n      }, 3000)\n    }\n    if (text && !correctObject) {\n      setEnabled(false)\n      const startTime = new Date().toISOString()\n      const timer = setTimeout(\n        () => {\n          const endTime = new Date().toISOString()\n          const timeToComplete = timeAFunction(startTime, endTime)\n          reset()\n          setEnabled(true)\n          console.log(timeToComplete)\n        },\n        attempts < 1 ? 7000 : 7000 + attempts * 1000,\n      )\n      return () => clearTimeout(timer)\n    }\n  }, [correctObject, setState, text])\n\n  return (\n    <>\n      {step === 'checkForObject' && (\n        <>\n          <RestatementDirectionsContainerObjectDirections>\n            <UnderlinedText>Identify the Object</UnderlinedText>\n            <div>\n              The next step is to figure out the direct object of the verb. Some\n              verbs are transitive and have an object, and some verbs are\n              intransitive and have no object. To find out if the verb \"\n              {auxilaryVerbCheck ? question.simplePredicate : conjugatedVerb}\"\n              has an object, read your sentence\n            </div>\n            <br />\n            <div>{questionToModify.join(' ').replace(' | ', ' ')}</div>\n            <br />\n            <div>\n              and ask yourself:{' '}\n              <u>\n                {phraseCapitalizer(question.helpingVerb)}{' '}\n                {question.completeSubject} {question.simplePredicate} something\n              </u>\n              ? If there is a direct answer to this question, the answer is yes.\n              If there isn't a direct answer (or the question makes no sense),\n              the answer is no.\n            </div>\n          </RestatementDirectionsContainerObjectDirections>\n          <RestatementDirectionsContainerObjectDirectionsButtonContainer>\n            <RestatementDirectionsContainerObjectDirectionsButton\n              onClick={() => {\n                if (hasObject) {\n                  setCorrect(true)\n                  setTransitiveQuestionMessage(\n                    'Correct! This verb is transitive in this case and takes an object, and we are going to find it!',\n                  )\n                  const timer = setTimeout(() => {\n                    setStep('identifyObject')\n                  }, 4000)\n                  return () => clearTimeout(timer)\n                } else {\n                  if (\n                    question.helpingVerb === 'was' ||\n                    (question.helpingVerb === 'were' && !auxilaryVerbCheck)\n                  ) {\n                    setTransitiveQuestionMessage(\n                      `Since the helping verb is ${question.helpingVerb} there is no object. ${question.helpingVerb} is a linking verb, and linking verbs and they don't take objects. `,\n                    )\n                  } else {\n                    setTransitiveQuestionMessage(\n                      `Since the helping verb is ${question.helpingVerb} there is no object. ${question.helpingVerb} is an auxilary verb with an action verb that it is helping, and linking verbs and they never take objects. `,\n                    )\n                  }\n                  setTransitiveQuestionMessage(\n                    question.helpingVerb === 'did'\n                      ? `Not this time. The verb doesn't take an object.`\n                      : auxilaryVerbCheck\n                        ? `Auxillary verbs and the main verb like \"${question.simplePredicate}\" never take objects.`\n                        : null,\n                  )\n                  const timer = setTimeout(() => {\n                    setTransitiveQuestionMessage(null)\n                    setState('ending-phrase')\n                  }, 5000)\n                  return () => clearTimeout(timer)\n                }\n              }}\n            >\n              Yes there IS an object\n            </RestatementDirectionsContainerObjectDirectionsButton>\n            <RestatementDirectionsContainerObjectDirectionsButton\n              onClick={() => {\n                if (hasObject) {\n                  setTransitiveQuestionMessage(\n                    'Incorrect, the verb has an object. Now we are going to find it!',\n                  )\n                  const timer = setTimeout(() => {\n                    setStep('identifyObject')\n                  }, 3000)\n                  return () => clearTimeout(timer)\n                } else {\n                  setCorrect(true)\n                  if (question.helpingVerb !== 'did') {\n                    if (!auxilaryVerbCheck) {\n                      setTransitiveQuestionMessage(\n                        `${capitalizer(\n                          question.helpingVerb,\n                        )} is a linking verb and never takes an object.`,\n                      )\n                    } else {\n                      setTransitiveQuestionMessage(\n                        `${capitalizer(\n                          question.helpingVerb,\n                        )} is an auxilary verb and never takes an object.`,\n                      )\n                    }\n                  }\n                  setTransitiveQuestionMessage(\n                    'You are correct! This verb is intransitive and has no object.',\n                  )\n                  const timer = setTimeout(() => {\n                    // setStep('identifyObject')\n                    setState('ending-phrase')\n                  }, 3000)\n\n                  return () => clearTimeout(timer)\n                }\n              }}\n            >\n              No there is NOT an object\n            </RestatementDirectionsContainerObjectDirectionsButton>\n          </RestatementDirectionsContainerObjectDirectionsButtonContainer>\n          <br />\n          {transitiveQuestionMessage && (\n            <RestatementFeedbackContainerObjectIndentification\n              correct={correct}\n            >\n              <UnderlinedText>Feedback</UnderlinedText>\n              {transitiveQuestionMessage}\n            </RestatementFeedbackContainerObjectIndentification>\n          )}\n        </>\n      )}\n\n      {step === 'identifyObject' && (\n        <>\n          <RestatementDirectionsContainer>\n            <UnderlinedText>Find the Object of the Verb</UnderlinedText>\n            <div>\n              Now we must find the object. Select the word or words that you\n              think are the object. Remember: the object comes directly after\n              the verb and is a noun or an adjective that describes the noun and\n              the noun together.\n            </div>\n          </RestatementDirectionsContainer>\n\n          {enabled ? (\n            <RestatementQuestionToRestateContainer>\n              <SentenceToManipulate\n                cursorFormat={enabled ? 'TEXT' : 'NONE'}\n                onMouseUp={(e) => {\n                  enabled ? select() : e.preventDefault()\n                  enabled && setAttempts((a) => a + 0.5)\n                }}\n                onSelect={(e) => !enabled && e.preventDefault()}\n              >\n                {questionToModify.map((word, i: number) => (\n                  <span key={i}>\n                    <span>{word}</span>\n                    {word !== questionToModify[questionToModify.length - 1] && (\n                      <span> </span>\n                    )}\n                  </span>\n                ))}\n              </SentenceToManipulate>\n            </RestatementQuestionToRestateContainer>\n          ) : (\n            <>\n              {text && (\n                <RestatementFeedbackContainer correct={correctObject}>\n                  <UnderlinedText>Feedback</UnderlinedText>\n                  {!correctObject ? (\n                    <RestatementFeedBackContainerMessageContainer>\n                      <div>What went wrong? {message}</div>\n                      <br />\n                      <div>How do I fix it? {howToFix}</div>\n                    </RestatementFeedBackContainerMessageContainer>\n                  ) : (\n                    <RestatementFeedBackContainerMessageContainer>\n                      {correctMessage}\n                    </RestatementFeedBackContainerMessageContainer>\n                  )}\n                </RestatementFeedbackContainer>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import { irregularPastTenseVerbList } from '../../../../../../../../utils'\nimport { findPreposition } from './findPreposition'\n\ntype ObjectGraderProps = {\n  givenObject: string\n  correctObject: string\n  completePredicate: string\n  completeSubject: string\n  simpleSubject: string\n  simplePredicate: string\n  questionToModify: string[]\n}\n\nexport function objectGrader({\n  givenObject,\n  correctObject,\n  completePredicate,\n  simpleSubject,\n  completeSubject,\n  simplePredicate,\n  questionToModify,\n}: ObjectGraderProps) {\n  // const conjugatedVerb =\n  //   irregularPastTenseVerbList(simplePredicate) === simplePredicate\n  //     ? simplePredicate + 'ed'\n  //     : irregularPastTenseVerbList(simplePredicate)\n\n  const irregularVerbCheck = irregularPastTenseVerbList(simplePredicate)\n\n  const conjugatedVerb =\n    simplePredicate === irregularVerbCheck\n      ? irregularVerbCheck\n          .charAt(irregularVerbCheck.length - 1)\n          .toLowerCase() === 'e'\n        ? simplePredicate + 'd'\n        : simplePredicate + 'ed'\n      : irregularVerbCheck\n\n  const nonContextSentence =\n    completeSubject + ' ' + conjugatedVerb + ' ' + correctObject\n\n  const sentenceContext =\n    correctObject === null\n      ? ''\n      : completePredicate\n          .split(' ')\n          .slice(\n            simplePredicate.split(' ').length + correctObject.split(' ').length,\n          )\n          .join(' ')\n\n  const questionWords = questionToModify.filter(\n    (word) => word !== '' && word !== '|',\n  )\n  const questionWordsExceptLast = questionWords.slice(\n    0,\n    questionWords.length - 1,\n  )\n\n  const lastWordInQuestion = questionToModify\n    .slice(questionToModify.length - 1)\n    .join('')\n    .split('')\n    .filter((letter) => letter !== '.')\n    .join('')\n\n  const question = [...questionWordsExceptLast, '|', lastWordInQuestion, '.']\n\n  if (givenObject.trim() !== '' && givenObject.trim() === ' ') {\n    return {\n      correctObject: false,\n      message: 'You selected a space.',\n      howToFix: `Make sure you select an entire word or a group of words.`,\n    }\n  }\n  const objectContainsPreposition = correctObject\n    ? findPreposition(correctObject.trim())\n    : false\n\n  if (givenObject.trim() === correctObject)\n    return { correctObject: true, correctMessage: 'Good Job!' }\n\n  for (const wordInSelection of givenObject\n    .trim()\n    .split(' ')\n    .filter((wordToFilter) => wordToFilter !== '')) {\n    const lastWordWithOutPeriod = questionToModify[\n      questionToModify.length - 1\n    ].slice(0, questionToModify[questionToModify.length - 1].length - 1)\n\n    const completeQuestion = [...questionToModify, lastWordWithOutPeriod]\n\n    if (\n      (givenObject.trim() !== '' &&\n        !completeQuestion.includes(wordInSelection)) ||\n      !lastWordWithOutPeriod\n    ) {\n      return {\n        correctObject: false,\n        message: 'You selected a partial word.',\n        howToFix: `Make sure you select an entire word or a group of words.`,\n      }\n    }\n  }\n\n  if (\n    givenObject.trim() !== '' &&\n    completeSubject.includes(givenObject.trim())\n  ) {\n    return {\n      correctObject: false,\n      message: 'Your object must be in the predicate.',\n      howToFix: `Look to the right of the separator line to find the object.`,\n    }\n  }\n\n  if (\n    givenObject.trim() !== '' &&\n    givenObject.trim().includes(conjugatedVerb)\n  ) {\n    return {\n      correctObject: false,\n      message: `Your object must come after the verb: ${conjugatedVerb}`,\n      howToFix: `Objects are nouns and nouns can be modified by adjective, so look for the person, place, thing, or idea that the ${simpleSubject} ${conjugatedVerb} and any adjective that would come before it.`,\n    }\n  }\n\n  if (\n    givenObject.trim() !== '' &&\n    findPreposition(givenObject.trim()) &&\n    !objectContainsPreposition\n  ) {\n    return {\n      correctObject: false,\n      message: 'Your object cannot include a preposition.',\n      howToFix: `Ask yourself: What did ${completeSubject}\n      ${simplePredicate}? The answer should come directly after the verb`,\n    }\n  }\n\n  if (givenObject.trim() !== '' && givenObject.trim() === correctObject + '.') {\n    return { correctObject: true, correctMessage: 'Good Job' }\n  }\n\n  if (\n    givenObject.trim() !== '' &&\n    givenObject.trim() !== correctObject &&\n    correctObject.includes(givenObject.trim())\n  ) {\n    // if the given is one word but the correct is more than one word\n\n    if (\n      givenObject.trim().split(' ').length === 1 &&\n      correctObject.split(' ').length > 1 &&\n      !sentenceContext.includes(givenObject.trim())\n    ) {\n      return {\n        correctObject: false,\n        message:\n          'Your partly correct! The word you selected is a part of the object but is only one word and the object is more than one word.',\n        howToFix: `Select more than one word. There may be an adjective before the noun (or the word \"a\" or \"the\"), or you may have selected the adjective but not the noun that it is modifying (or the noun but not the adjectives).`,\n      }\n    }\n    // if the given is more than one word, but the correct is one word\n    if (\n      givenObject.trim().split(' ').length > 1 &&\n      correctObject.split(' ').length === 1 &&\n      !sentenceContext.includes(givenObject.trim())\n    ) {\n      console.log('given is more than one word, but the correct is one word')\n      return {\n        correctObject: false,\n        message:\n          'Your partly correct! The word you selected is more than one word but the object is only one word.',\n        howToFix: `Select only one word`,\n      }\n    }\n\n    if (\n      givenObject.trim().split(' ').length < correctObject.split(' ').length\n    ) {\n      return {\n        correctObject: false,\n        message: `Your partly correct, but the answer is a phrase that includes modifiers like adjectives and adverbs that describe the object (which is a noun), or you selected the noun but not the modifying adjectives.`,\n        howToFix: `Select the whole phrase, not just part of it.`,\n      }\n    }\n  }\n  return {\n    correctObject: false,\n    message: 'Your selection is not the object.',\n    howToFix: `Ask yourself: What did ${completeSubject}\n    ${simplePredicate}? The answer should come directly after the verb`,\n  }\n}\n","import React, { Dispatch, SetStateAction, useState } from 'react'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { useSelectedText } from '../../../../../../../../hooks/useSelectedText'\nimport { findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts } from '../../../../../../../../schemaTypes'\nimport { capitalizer, timeAFunction } from '../../../../../../../../utils'\nimport {\n  RestatementDirectionsContainer,\n  RestatementFeedbackContainer,\n  RestatementQuestionToRestateContainer,\n  SentenceToManipulate,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\n\nexport type QuestionWordRemovalProps = {\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  questionToModify: string[]\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n}\n\nexport const QuestionWordRemoval = ({\n  question,\n  questionToModify,\n  setQuestionToModify,\n  setState,\n}: QuestionWordRemovalProps) => {\n  const [select, text, reset] = useSelectedText()\n  const [enabled, setEnabled] = useState(true)\n  const [attempts, setattempts] = useState(0)\n\n  const handleQuestionWordRemove = (word: string) => {\n    const index = questionToModify.findIndex(\n      (wordToFind) => wordToFind === word,\n    )\n    setQuestionToModify([\n      ...questionToModify.slice(0, index),\n      ...questionToModify.slice(index + 1),\n    ])\n    setState('helping-verb-id')\n  }\n\n  const handleSelection = (word: string) => {\n    const correctAnswer =\n      word.toLowerCase() === question.questionWord.toLowerCase()\n\n    if (correctAnswer) {\n      setEnabled(false)\n      const timer = setTimeout(() => {\n        handleQuestionWordRemove(word)\n      }, 3000)\n      return () => clearTimeout(timer)\n    } else {\n      setEnabled(false)\n      const startTime = new Date().toISOString()\n\n      const timer = setTimeout(\n        () => {\n          const endTime = new Date().toISOString()\n          const timeToComplete = timeAFunction(startTime, endTime)\n          reset()\n          setEnabled(true)\n        },\n        attempts === 0 ? 5000 : 5000 + 1000 * attempts,\n      )\n      return () => clearTimeout(timer)\n    }\n  }\n\n  return (\n    <>\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Remove Question Word</UnderlinedText>\n        <div>\n          Select the question word by double clicking the word you think is the\n          question word in the sentence below.\n        </div>\n      </RestatementDirectionsContainer>\n\n      <>\n        {enabled ? (\n          <RestatementQuestionToRestateContainer>\n            <SentenceToManipulate\n              cursorFormat={enabled ? 'POINTER' : 'NONE'}\n              onMouseUp={(e) => (enabled ? select() : e.preventDefault())}\n              onSelect={(e) => !enabled && e.preventDefault()}\n            >\n              {questionToModify.map((word, i: number) => (\n                <span key={i}>\n                  <span\n                    onDoubleClick={() => {\n                      enabled && setattempts((a) => a + 1)\n                      enabled && handleSelection(word)\n                    }}\n                    onSelect={() => {\n                      enabled && setattempts((a) => a + 1)\n                      enabled && handleSelection(word)\n                    }}\n                  >\n                    {word === questionToModify[0] ? capitalizer(word) : word}\n                  </span>\n                  {word !== questionToModify[questionToModify.length - 2] && (\n                    <span> </span>\n                  )}\n                </span>\n              ))}\n            </SentenceToManipulate>\n          </RestatementQuestionToRestateContainer>\n        ) : (\n          <>\n            {text && (\n              <RestatementFeedbackContainer\n                correct={\n                  text.toLowerCase() === question.questionWord.toLowerCase()\n                }\n              >\n                <UnderlinedText>Feedback</UnderlinedText>\n                {text.toLowerCase() !== question.questionWord.toLowerCase() ? (\n                  <div>\n                    \"{capitalizer(text)}\" is not the question word. It is either\n                    How or Why. Try it again!\n                  </div>\n                ) : (\n                  <div>That's it! Good Job!</div>\n                )}\n              </RestatementFeedbackContainer>\n            )}\n          </>\n        )}\n      </>\n    </>\n  )\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { useSelectedText } from '../../../../../../../../hooks/useSelectedText'\nimport {\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  NounTypeEnum,\n  WritingLevelEnum,\n} from '../../../../../../../../schemaTypes'\nimport { phraseCapitalizer, timeAFunction } from '../../../../../../../../utils'\nimport {\n  RestatementDirectionsContainer,\n  RestatementDirectionsContainerObjectDirections,\n  RestatementFeedbackContainer,\n  RestatementFeedBackContainerMessageContainer,\n  RestatementQuestionToRestateContainer,\n  SentenceToManipulate,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { objectGrader } from './ObjectGrader'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\nimport { subjectComplimentGrader } from './subjectComplimentGrader'\n\nexport type SubjectComplimentIdentifierProps = {\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n  questionToModify: string[]\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  object: string | null\n  setObject: Dispatch<SetStateAction<string | null>>\n  writingLevel: WritingLevelEnum\n}\n\nexport const SubjectComplimentIdentifier = ({\n  setState,\n  question,\n  questionToModify,\n  object,\n  setObject,\n  writingLevel,\n}: SubjectComplimentIdentifierProps) => {\n  const [, event] = useStudentEssayContextProvider()\n  const [select, text, reset] = useSelectedText()\n  const [attempts, setAttempts] = useState(0)\n  const [enabled, setEnabled] = useState(true)\n\n  const { correctSubjectCompliment, message, correctMessage, howToFix } =\n    subjectComplimentGrader({\n      completePredicate: question.completePredicate,\n      completeSubject: question.completeSubject,\n      givenSubjectCompliment: text,\n      correctSubjectCompliment: question.subjectCompliment!,\n      simplePredicate: question.simplePredicate,\n      questionToModify,\n      simpleSubject: question.simpleSubject,\n    })\n  useEffect(() => {\n    if (correctSubjectCompliment && text) {\n      const timer = setTimeout(() => {\n        event({\n          type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT',\n          payload: text,\n        })\n        event({\n          type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT',\n          payload: text,\n        })\n        event({\n          type: 'SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT_COMPLIMENT',\n          payload: text,\n        })\n        setState('ending-phrase')\n      }, 3000)\n      return () => {\n        clearTimeout(timer)\n      }\n    }\n    if (!correctSubjectCompliment && text) {\n      setEnabled(false)\n      const startTime = new Date().toISOString()\n      const timer = setTimeout(\n        () => {\n          const endTime = new Date().toISOString()\n          const timeToComplete = timeAFunction(startTime, endTime)\n          reset()\n          setEnabled(true)\n          console.log(timeToComplete)\n        },\n        attempts < 1 ? 4000 : 4000 + attempts * 1000,\n        // 4000\n      )\n      return () => clearTimeout(timer)\n    }\n  }, [text, correctSubjectCompliment])\n\n  return (\n    <>\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Identify the Subject Compliment</UnderlinedText>\n        <div>\n          Since the verb \"{question.helpingVerb}\" is a linking verb, there is no\n          object. However, there is an adjective that comes after \"\n          {question.helpingVerb}\" called the subject compliment. Select the{' '}\n          {/* {question.nounType.toLowerCase()}  */}\n          adjective that comes after the word \"{question.helpingVerb}.\"\n          {/* This will include any adjective that modifies\n          the {question.nounType.toLowerCase()}. */}\n        </div>\n      </RestatementDirectionsContainer>\n      <RestatementQuestionToRestateContainer>\n        <SentenceToManipulate\n          cursorFormat={enabled ? 'TEXT' : 'NONE'}\n          onMouseUp={(e) => {\n            enabled ? select() : e.preventDefault()\n            enabled && setAttempts((a) => a + 0.5)\n          }}\n          onSelect={(e) => !enabled && e.preventDefault()}\n        >\n          {questionToModify.map((word, i: number) => (\n            <span key={i}>\n              <span>{word}</span>\n              {word !== questionToModify[questionToModify.length - 1] && (\n                <span> </span>\n              )}\n            </span>\n          ))}\n        </SentenceToManipulate>\n      </RestatementQuestionToRestateContainer>\n      {text && (\n        <RestatementFeedbackContainer correct={correctSubjectCompliment}>\n          <UnderlinedText>Feedback</UnderlinedText>\n          {correctSubjectCompliment ? (\n            <RestatementFeedBackContainerMessageContainer>\n              {correctMessage}\n            </RestatementFeedBackContainerMessageContainer>\n          ) : (\n            <RestatementFeedBackContainerMessageContainer>\n              <div>\n                What went wrong? <span>{message}</span>\n              </div>\n              <br />\n              <div>\n                How do you fix it? <span>{howToFix}</span>\n              </div>\n            </RestatementFeedBackContainerMessageContainer>\n          )}\n        </RestatementFeedbackContainer>\n      )}\n    </>\n  )\n}\n","import { phraseCapitalizer } from '../../../../../../../../utils'\nimport { findPreposition } from './findPreposition'\n\ntype SubjectComplimentGraderProps = {\n  givenSubjectCompliment: string\n  correctSubjectCompliment: string\n  completePredicate: string\n  completeSubject: string\n  simpleSubject: string\n  simplePredicate: string\n  questionToModify: string[]\n}\n\nexport function subjectComplimentGrader({\n  givenSubjectCompliment,\n  correctSubjectCompliment,\n  completePredicate,\n  simpleSubject,\n  completeSubject,\n  simplePredicate,\n  questionToModify,\n}: SubjectComplimentGraderProps) {\n  const lastWordInQuestion = questionToModify\n    .slice(questionToModify.length - 1)\n    .join('')\n    .split('')\n    .filter((letter) => letter !== '.')\n    .join('')\n\n  const questionWithSeparatedPunctuation = [\n    ...questionToModify.slice(0, questionToModify.length - 1),\n    lastWordInQuestion,\n    '.',\n  ]\n\n  const splitGivenSubjectCompliment = [\n    [\n      ...givenSubjectCompliment.slice(0, givenSubjectCompliment.length - 1),\n    ].join(''),\n    givenSubjectCompliment.charAt(givenSubjectCompliment.length - 1),\n  ]\n\n  if (givenSubjectCompliment !== '' && givenSubjectCompliment === ' ') {\n    return {\n      correctSubjectCompliment: false,\n      message: 'You selected a space.',\n      howToFix: `Make sure you select an entire word or a group of words.`,\n    }\n  }\n\n  for (const wordInSelection of givenSubjectCompliment\n    .trim()\n    .split(' ')\n    .filter((wordToFilter) => wordToFilter !== '')) {\n    const lastWordWithOutPeriod = questionToModify[\n      questionToModify.length - 1\n    ].slice(0, questionToModify[questionToModify.length - 1].length - 1)\n\n    const completeQuestion = [...questionToModify, lastWordWithOutPeriod]\n\n    if (\n      (givenSubjectCompliment && !completeQuestion.includes(wordInSelection)) ||\n      !lastWordWithOutPeriod\n    ) {\n      return {\n        correctSubjectCompliment: false,\n        message: 'You selected a partial word.',\n        howToFix: `Make sure you select an entire word or a group of words.`,\n      }\n    }\n  }\n\n  if (\n    givenSubjectCompliment.trim() !== '' &&\n    givenSubjectCompliment.trim().includes(simplePredicate)\n  ) {\n    return {\n      correctSubjectCompliment: false,\n      message: `Your subject compliment must come after the verb: ${simplePredicate}`,\n      howToFix: `Subject compliments are nouns and nouns can be modified by adjectives, so look for the person, place, thing, or idea that the ${simpleSubject} ${simplePredicate} and any adjective that would come before it.`,\n    }\n  }\n  const answerIsInThePredicate =\n    completePredicate.includes(givenSubjectCompliment) ||\n    (completePredicate + '.').includes(givenSubjectCompliment)\n\n  if (\n    (givenSubjectCompliment && givenSubjectCompliment.includes('|')) ||\n    completeSubject\n      .toLowerCase()\n      .split(' ')\n      .includes(givenSubjectCompliment.toLowerCase())\n  ) {\n    return {\n      correctSubjectCompliment: false,\n      message: 'Your subject compliment must be in the predicate.',\n      howToFix: `Look to the right of the separator line to find the subject compliment.`,\n    }\n  }\n  if (\n    givenSubjectCompliment.trim() !== '' &&\n    findPreposition(givenSubjectCompliment.trim())\n  ) {\n    return {\n      correctSubjectCompliment: false,\n      message: 'Your subject compliment cannot include a preposition.',\n      howToFix: `Ask yourself: What ${simplePredicate} ${simpleSubject}`,\n    }\n  }\n\n  if (\n    givenSubjectCompliment.trim() !== '' &&\n    givenSubjectCompliment.trim() === correctSubjectCompliment + '.'\n  ) {\n    return { correctSubjectCompliment: true, correctMessage: 'Good Job' }\n  }\n  if (\n    givenSubjectCompliment &&\n    answerIsInThePredicate &&\n    !correctSubjectCompliment.includes(givenSubjectCompliment)\n  ) {\n    return {\n      correctSubjectCompliment: false,\n      message: `Your selection is not what ${simpleSubject} ${simplePredicate}.`,\n      howToFix: `The subject compliment comes right after the ${simplePredicate} and may include an adjective.`,\n    }\n  }\n  if (\n    givenSubjectCompliment.trim() !== '' &&\n    givenSubjectCompliment.trim() === correctSubjectCompliment + '.'\n  ) {\n    return { correctSubjectCompliment: true, correctMessage: 'Good Job' }\n  }\n  if (\n    givenSubjectCompliment.trim() &&\n    givenSubjectCompliment.trim() !== correctSubjectCompliment\n  ) {\n    // if the given is one word but the correct is more than one word\n    if (\n      givenSubjectCompliment.trim().split(' ').length === 1 &&\n      correctSubjectCompliment.split(' ').length > 1 &&\n      correctSubjectCompliment\n        .split(' ')\n        .includes(givenSubjectCompliment.trim())\n    ) {\n      console.log('given is one word but the correct is more than one word')\n      return {\n        correctSubjectCompliment: false,\n        message:\n          'The word you selected is a part of the subject compliment but is only one word and the object is more than one word.',\n        howToFix: `Select more than one word. There may be an adjective before the noun or the word \"a\" or \"the\", or you may have selected the adjective but not the noun that it is modifying.`,\n      }\n    }\n    if (\n      givenSubjectCompliment.trim().split(' ').length > 1 &&\n      correctSubjectCompliment.split(' ').length === 1\n    ) {\n      console.log('given is more than one word, but the correct is one word')\n      return {\n        correctSubjectCompliment: false,\n        message:\n          'The word you selected is more than one word but the subject compliment is only one word.',\n        howToFix: `Select only one word`,\n      }\n    }\n    return {\n      correctSubjectCompliment: false,\n      message: 'Your selection is not the subject compliment.',\n      howToFix: `Try again.`,\n    }\n  }\n  return { correctSubjectCompliment: true, correctMessage: 'Good Job' }\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { useSelectedText } from '../../../../../../../../hooks/useSelectedText'\nimport {\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  WritingLevelEnum,\n} from '../../../../../../../../schemaTypes'\nimport { timeAFunction } from '../../../../../../../../utils'\nimport {\n  RestatementDirectionsContainer,\n  RestatementFeedbackContainer,\n  RestatementFeedBackContainerMessageContainer,\n  RestatementQuestionToRestateContainer,\n  SentenceToManipulate,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\nimport { simpleSubjectGrader } from './simpleSubjectGrader'\n\nexport type SubjectIdentificationProps = {\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n  questionToModify: string[]\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  subject: string | null\n  setSubject: Dispatch<SetStateAction<string | null>>\n  writingLevel: WritingLevelEnum\n}\n\nexport const SubjectIdentification = ({\n  setState,\n  question,\n  questionToModify,\n  subject,\n  setSubject,\n  writingLevel,\n}: SubjectIdentificationProps) => {\n  const [, event] = useStudentEssayContextProvider()\n  const [select, text, reset] = useSelectedText()\n  const [enabled, setEnabled] = useState(true)\n\n  const [attempts, setattempts] = useState(0)\n\n  const { correctSimpleSubject, howToFix, message, whatWentWrong } =\n    simpleSubjectGrader({\n      correctSimpleSubject: question.simpleSubject,\n      givenSimpleSubject: text.trim(),\n      completeSubject: question.completeSubject,\n      compoundNoun: question.compoundNoun,\n      questionToModify,\n      nounType: question.nounType,\n    })\n\n  // const subjectLowerCaseCheck = (word: string)=>{\n  //   if (word )\n  // }\n\n  useEffect(() => {\n    if (correctSimpleSubject && text) {\n      setEnabled(false)\n      setSubject(text)\n      if (writingLevel === WritingLevelEnum.DEVELOPING) {\n        event({\n          type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT',\n          payload: text,\n        })\n      }\n      if (writingLevel === WritingLevelEnum.ACADEMIC)\n        event({\n          type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT',\n          payload: text,\n        })\n      if (writingLevel === WritingLevelEnum.ADVANCED)\n        event({\n          type: 'SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT',\n          payload: text,\n        })\n      const timer = setTimeout(() => {\n        setEnabled(false)\n        setState('verb-identification')\n      }, 3000)\n      return () => {\n        clearTimeout(timer)\n      }\n    }\n    if (text && !correctSimpleSubject) {\n      setEnabled(false)\n      const startTime = new Date().toISOString()\n      const timer = setTimeout(\n        () => {\n          const endTime = new Date().toISOString()\n          const timeToComplete = timeAFunction(startTime, endTime)\n          reset()\n          setEnabled(true)\n          console.log(timeToComplete)\n        },\n        attempts === 0 ? 6000 : 6000 + 1000 * attempts,\n      )\n      return () => {\n        clearTimeout(timer)\n      }\n    }\n  }, [correctSimpleSubject, text])\n\n  return (\n    <>\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Identify the Simple Subject</UnderlinedText>\n        <div>\n          Select and highlight the Simple Subject of the question. Simple\n          subjects are the noun in the complete subject (the left side of the\n          divider). There may be adjectives that modify the noun or\n          prepositional phrases that add specificity to the noun, but only\n          select the person, place, thing, or idea.\n        </div>\n        <div>\n          Remember: The word \"the\" or \"a/an\" is next to the subject, select that\n          along with the simple subject.\n        </div>\n      </RestatementDirectionsContainer>\n      <>\n        {enabled ? (\n          <RestatementQuestionToRestateContainer>\n            <SentenceToManipulate\n              cursorFormat={enabled ? 'TEXT' : 'NONE'}\n              onMouseUp={(e) => {\n                enabled ? select() : e.preventDefault()\n                enabled && setattempts((a) => a + 0.5)\n              }}\n              onSelect={(e) => !enabled && e.preventDefault()}\n            >\n              {questionToModify\n                .join(' ')\n                .split(' ')\n                .map((part, i: number) => (\n                  <span key={i}>\n                    <span>{part}</span>\n                    {part !== questionToModify[questionToModify.length - 1] && (\n                      <span> </span>\n                    )}\n                  </span>\n                ))}\n            </SentenceToManipulate>\n          </RestatementQuestionToRestateContainer>\n        ) : (\n          <>\n            {text && (\n              <RestatementFeedbackContainer correct={correctSimpleSubject}>\n                <UnderlinedText>Feedback</UnderlinedText>\n                {correctSimpleSubject ? (\n                  <RestatementFeedBackContainerMessageContainer>\n                    {message}\n                  </RestatementFeedBackContainerMessageContainer>\n                ) : (\n                  <RestatementFeedBackContainerMessageContainer>\n                    <div>\n                      What went wrong? <span>{whatWentWrong}</span>\n                    </div>\n                    <br />\n                    <div>\n                      How do you fix it? <span>{howToFix}</span>\n                    </div>\n                  </RestatementFeedBackContainerMessageContainer>\n                )}\n              </RestatementFeedbackContainer>\n            )}\n          </>\n        )}\n      </>\n    </>\n  )\n}\n","import { NounTypeEnum } from '../../../../../../../../schemaTypes'\n\ntype SimpleSubjectGraderProps = {\n  correctSimpleSubject: string\n  givenSimpleSubject: string\n  completeSubject: string\n  compoundNoun: boolean\n  questionToModify: string[]\n  nounType: NounTypeEnum\n}\n\nexport const simpleSubjectGrader = ({\n  correctSimpleSubject,\n  givenSimpleSubject,\n  completeSubject,\n  compoundNoun,\n  nounType,\n  questionToModify,\n}: SimpleSubjectGraderProps) => {\n  console.log(correctSimpleSubject)\n  const lastWordInQuestion = questionToModify\n    .slice(questionToModify.length - 1)\n    .join('')\n    .split('')\n    .filter((letter) => letter !== '.')\n    .join('')\n  const questionWithSeparatedPunctuation = [\n    ...questionToModify.slice(0, questionToModify.length - 1),\n    lastWordInQuestion,\n    '.',\n  ]\n  for (const wordInSelection of givenSimpleSubject\n    .trim()\n    .split(' ')\n    .filter((wordToFilter) => wordToFilter !== '')) {\n    if (\n      givenSimpleSubject &&\n      !questionWithSeparatedPunctuation.includes(wordInSelection)\n    ) {\n      return {\n        correctSimpleSubject: false,\n        whatWentWrong: 'You selected a partial word.',\n        howToFix: `Make sure you select an entire word or a group of words.`,\n      }\n    }\n  }\n  if (givenSimpleSubject === ' ') {\n    return {\n      whatWentWrong: `You didn't select a word.`,\n      howToFix: `Select a word or a group of words if the simple subject is a person with a first and last name or a thing has a name that is more than one word.`,\n      correctSimpleSubject: false,\n    }\n  }\n\n  if (\n    !completeSubject.toLowerCase().includes(givenSimpleSubject.toLowerCase())\n  ) {\n    return {\n      whatWentWrong:\n        'Your simple subject is in the predicate when it should be in the subject.',\n      howToFix: `Look at the subject to the left of the dividing line only and find the ${nounType.toLowerCase()} that is in the complete subject.`,\n      correctSimpleSubject: false,\n    }\n  }\n  // console.log(\n  //   completeSubject.toLowerCase().includes(givenSimpleSubject.toLowerCase()) &&\n  //     !correctSimpleSubject\n  //       .toLowerCase()\n  //       .includes(givenSimpleSubject.toLowerCase())\n  // )\n  if (\n    completeSubject.toLowerCase().includes(givenSimpleSubject.toLowerCase()) &&\n    !correctSimpleSubject\n      .toLowerCase()\n      .includes(givenSimpleSubject.toLowerCase())\n  ) {\n    return {\n      whatWentWrong: `Your simple subject is not the noun or the complete noun (more than one word noun) in the complete subject. You have probably selected an adjective or a prepositional phrase describing the ${nounType.toLowerCase()}.`,\n      howToFix:\n        'Find the person, place, idea, or thing that is in the complete subject.',\n      correctSimpleSubject: false,\n    }\n  }\n  if (compoundNoun && givenSimpleSubject.split(' ').length === 1) {\n    return {\n      whatWentWrong: `The simple subject is more than one word`,\n      howToFix: `Select a group of words because the simple subject may be a person with a first and last name or a thing has a name that is more than one word.`,\n      correctSimpleSubject: false,\n    }\n  }\n  if (givenSimpleSubject.toLowerCase() !== correctSimpleSubject.toLowerCase()) {\n    return {\n      whatWentWrong: `Your simple subject is not the noun or the complete noun (more than one word noun) in the complete subject. You have probably selected an adjective or a prepositional phrase describing the ${nounType.toLowerCase()}.`,\n      howToFix:\n        'Find the person, place, idea, or thing that is in the complete subject.',\n      correctSimpleSubject: false,\n    }\n  }\n\n  return {\n    correctSimpleSubject: true,\n    message: 'Great job!',\n  }\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts } from '../../../../../../../../schemaTypes'\nimport {\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  RestatementDirectionsContainer,\n  RestatementFeedbackContainer,\n  RestatementSplitter,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { subjectPredicateGrading } from './subjectPredicateGrading'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\nimport {\n  sentenceCapitalizer,\n  timeAFunction,\n} from '../../../../../../../../utils'\n\nexport type SubjectPredicateSplitProps = {\n  questionToModify: string[]\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n  auxilaryVerbCheck: boolean\n}\n\nexport const SubjectPredicateSplit = ({\n  questionToModify,\n  setQuestionToModify,\n  setState,\n  question,\n  auxilaryVerbCheck,\n}: SubjectPredicateSplitProps) => {\n  const [point, setPoint] = useState<number | null>(null)\n  const [attempt, setAttempt] = useState(0)\n\n  const separator = ' | '\n\n  let sentence = [\n    ...questionToModify.slice(0, questionToModify.length - 2),\n    questionToModify[questionToModify.length - 2] + '.',\n  ].join(' ')\n\n  const newSentence = [\n    sentence.slice(0, point!).trim(),\n    separator,\n    sentence.slice(point!, sentence.length).trim(),\n  ]\n\n  const selectedPredicate =\n    newSentence[2].split(' ').length > 1\n      ? newSentence[2]\n      : newSentence[2].split('').includes('.')\n        ? newSentence[2]\n            .split('')\n            .filter((letters) => letters !== '.')\n            .join('')\n        : newSentence[2]\n\n  const { message, correct, whatWentWrong, howToFix } = subjectPredicateGrading(\n    {\n      correctSubject: question.completeSubject,\n      givenSubject:\n        question.helpingVerb === 'did' || auxilaryVerbCheck\n          ? newSentence[0]\n          : newSentence[0].split(' ').join(' '),\n      givenPredicate: selectedPredicate,\n      sentence,\n      noun: question.simpleSubject.split(' '),\n      compoundNoun: question.compoundNoun,\n      nounType: question.nounType,\n      verb: question.simplePredicate,\n      verbType: question.verbType,\n      helpingVerb: question.helpingVerb,\n    },\n  )\n\n  useEffect(() => {\n    if (point && correct) {\n      const timer = setTimeout(() => {\n        const sentenceToPass = (\n          newSentence.join(' ').split(' ')[0].charAt(0).toUpperCase() +\n          newSentence.join(' ').slice(1)\n        ).split(' ')\n\n        setQuestionToModify(sentenceToPass)\n        setState('subject-identification')\n      }, 6000)\n      return () => {\n        clearTimeout(timer)\n      }\n    }\n    const startTime = new Date().toISOString()\n\n    const timer = setTimeout(\n      () => {\n        setPoint(null)\n        const endTime = new Date().toISOString()\n        const timeToComplete = timeAFunction(startTime, endTime)\n      },\n      attempt < 1 ? 6000 : 6000 + attempt * 1000,\n    )\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [point])\n\n  const correctSubject = newSentence[0]\n\n  return (\n    <>\n      <>\n        <RestatementDirectionsContainer>\n          <UnderlinedText>Split the Subject from the Predicate</UnderlinedText>\n          Every sentence can be split into two parts: the subject and the\n          predicate. Click on the sentence below to separate it into the subject\n          and predicate. The subject will be on the left side with a single\n          underline, and the predicate will be on the right side with double\n          underline.\n        </RestatementDirectionsContainer>\n        {point ? (\n          <RestatementSplitter\n            cursorFormat={point && !correct ? 'NONE' : 'POINTER'}\n          >\n            {newSentence.map((part, i) => {\n              return (\n                <span\n                  key={i}\n                  style={\n                    i === 0\n                      ? {\n                          cursor: 'pointer',\n                          textDecoration: 'underline',\n                          textUnderlinePosition: 'under',\n                        }\n                      : i === 2\n                        ? {\n                            cursor: 'pointer',\n                            textDecoration: 'underline',\n                            textDecorationStyle: 'double',\n                            textUnderlinePosition: 'under',\n                          }\n                        : { cursor: 'pointer' }\n                  }\n                >\n                  {newSentence[0] === part\n                    ? part.charAt(0).toUpperCase() + part.slice(1)\n                    : part}\n                </span>\n              )\n            })}\n          </RestatementSplitter>\n        ) : (\n          <RestatementSplitter\n            cursorFormat={point && !correct ? 'NONE' : 'POINTER'}\n          >\n            {sentence.split('').map((letter, i) => {\n              const letterIndex = sentence\n                .split('')\n                .findIndex((letter) => letter[0])\n\n              return (\n                <span\n                  key={i}\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setPoint(i)\n                    setAttempt((a) => a + 1)\n                  }}\n                >\n                  {letterIndex === i ? letter.toUpperCase() : letter}\n                </span>\n              )\n            })}\n          </RestatementSplitter>\n        )}\n        {point ? (\n          <RestatementFeedbackContainer\n            style={{ gridRow: '6/-2' }}\n            correct={correct}\n          >\n            <UnderlinedText>Feedback</UnderlinedText>\n            {!correct ? (\n              <div>\n                <div style={{ textAlign: 'center' }}>Not Quite</div>\n                <br />\n                <div>What went wrong? {whatWentWrong}</div>\n                <br />\n                <div>How to fix it: {howToFix}</div>\n              </div>\n            ) : (\n              <div>\n                <div style={{ textAlign: 'center' }}>{message}</div>\n                <br />\n                <div>\n                  \"{correctSubject}\" is the complete subject of the sentence\n                  because it is{' '}\n                  {question.nounType === 'PERSON' ? 'who' : 'what'} the sentence\n                  is about.\n                </div>\n                {question.helpingVerb === 'did' ? (\n                  <div>\n                    \"\n                    {newSentence[2].split('')[0].toString().toUpperCase() +\n                      newSentence[2].slice(1, newSentence[2].length - 1)}\n                    \" is the complete predicate of the sentence because it is\n                    what the {question.nounType.toLowerCase()} is doing.\n                  </div>\n                ) : auxilaryVerbCheck ? (\n                  <div>\n                    \"\n                    {newSentence[2].split('')[0].toString().toUpperCase() +\n                      newSentence[2].slice(1, newSentence[2].length - 1)}\n                    \" is the complete predicate of the sentence because it is\n                    what is being done to the {question.nounType.toLowerCase()}.\n                  </div>\n                ) : (\n                  <div>\n                    \"\n                    {newSentence[2].split('')[0].toString().toUpperCase() +\n                      newSentence[2].slice(1, newSentence[2].length - 1)}\n                    \" is the complete predicate of the sentence because it is\n                    what the {question.nounType.toLowerCase()} is.\n                  </div>\n                )}\n              </div>\n            )}\n          </RestatementFeedbackContainer>\n        ) : (\n          <div></div>\n        )}\n      </>\n    </>\n  )\n}\n","import { NounTypeEnum, VerbTypeEnum } from '../../../../../../../../schemaTypes'\n\nexport type SubjectPredicateGraderProps = {\n  givenSubject: string\n  correctSubject: string\n  sentence: string\n  noun: string[]\n  nounType: NounTypeEnum\n  compoundNoun: boolean\n  verb: string\n  verbType: VerbTypeEnum\n  givenPredicate: string\n  helpingVerb: string\n}\n\nexport const subjectPredicateGrading = ({\n  givenSubject,\n  givenPredicate,\n  sentence,\n  noun,\n  verb,\n  verbType,\n  helpingVerb,\n}: SubjectPredicateGraderProps) => {\n  const subjectCheck = givenSubject.split(' ')\n  const predicateCheck = givenPredicate.split(' ')\n  const verbPhraseCheck = verb.split(' ').length > 1\n  const verbPhraseSplitter = verb.split(' ')\n  const verbPunctuationSplitter = verb.split('')\n  console.log(subjectCheck.join(' '))\n  const wholeVerb = helpingVerb === 'did' ? verb : helpingVerb\n  // console.log(subjectCheck)\n  if (givenPredicate === '.' || givenPredicate === '?') {\n    return {\n      whatWentWrong: `Your subject can't be the whole sentence.`,\n      howToFix: `Your subject needs to include the person, place, thing, or idea that the sentence is about, but not include an action, being, or feeling word.`,\n      correct: false,\n    }\n  }\n\n  for (const word of subjectCheck) {\n    if (!sentence.split(' ').includes(word)) {\n      return {\n        whatWentWrong: `You've split a word!`,\n        howToFix: `Only separate the sentence between words`,\n        correct: false,\n      }\n    }\n  }\n\n  if (!subjectCheck.includes(noun[noun.length - 1])) {\n    return {\n      whatWentWrong:\n        `\"` + givenSubject + `\" doesn't contain a noun or the complete noun.`,\n      howToFix:\n        'Your subject needs to include the person, place, thing, or idea that the sentence is about. If it is a name, it may be two words.',\n      correct: false,\n    }\n  }\n  for (const word of verbPhraseSplitter) {\n    if (\n      verbPhraseCheck &&\n      subjectCheck.includes(word) &&\n      !givenSubject.includes(verb)\n    ) {\n      return {\n        whatWentWrong: `You've split the verb phrase!`,\n        howToFix: `Separate the sentence before the verb phrase. In many cases you are splitting the sentence between the helping verb and the action verb that goes with it.`,\n        correct: false,\n      }\n    }\n  }\n  if (\n    subjectCheck.join(' ').includes(verb) ||\n    subjectCheck.includes(helpingVerb)\n  ) {\n    console.log(subjectCheck)\n\n    return {\n      whatWentWrong: `Your subject (left side of the divider) contains a verb.`,\n      howToFix:\n        `Look at the statement and make sure the ` +\n        (verbType === VerbTypeEnum.ACTION\n          ? `action word isn't in the subject.`\n          : verbType === VerbTypeEnum.BEING\n            ? `being word (${helpingVerb}) isn't in the subject.`\n            : verbType === VerbTypeEnum.HAVING\n              ? `word have or had isn't in the subject.`\n              : `feeling word isn't in the subject.`),\n      correct: false,\n    }\n  }\n\n  if (\n    verbPhraseCheck\n      ? predicateCheck[0] !== verbPhraseSplitter[0]\n      : predicateCheck[0] !== wholeVerb\n  ) {\n    return {\n      whatWentWrong: `Your subject is missing prepositional phrases that describe the person, place, idea or thing the sentence is about.`,\n      howToFix: `Sometimes the noun and the verb aren't next to each other. Break the sentence right before the action, being, or feeling word.`,\n      correct: false,\n    }\n  }\n  return { message: 'Correct - Good job!', correct: true }\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { useSelectedText } from '../../../../../../../../hooks/useSelectedText'\nimport {\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  WritingLevelEnum,\n} from '../../../../../../../../schemaTypes'\nimport {\n  irregularPastTenseVerbList,\n  specialVerbsInPastTense,\n  timeAFunction,\n} from '../../../../../../../../utils'\nimport {\n  RestatementDirectionsContainer,\n  RestatementFeedbackContainer,\n  RestatementFeedBackContainerMessageContainer,\n  RestatementQuestionToRestateContainer,\n  SentenceToManipulate,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { QuestionDecontstructionStateProps } from './QuestionDeconstruction'\nimport { simplePredicateGrader } from './simplePredicateGrader'\n\nexport type VerbIdentificationProps = {\n  setState: Dispatch<SetStateAction<QuestionDecontstructionStateProps>>\n  questionToModify: string[]\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  question: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  verb: string | null\n  setVerb: Dispatch<SetStateAction<string | null>>\n  writingLevel: WritingLevelEnum\n}\n\nexport const VerbIdentification = ({\n  questionToModify,\n  setQuestionToModify,\n  setState,\n  question,\n  verb,\n  setVerb,\n  writingLevel,\n}: VerbIdentificationProps) => {\n  const [, event] = useStudentEssayContextProvider()\n  const [select, text, reset] = useSelectedText()\n  const [attempts, setAttempts] = useState(0)\n  const [enabled, setEnabled] = useState(true)\n\n  const auxilaryVerbCheck =\n    (question.helpingVerb !== 'did' &&\n      question.simplePredicate.split(' ').length > 1 &&\n      question.simplePredicate.split(' ').includes(question.helpingVerb)) ||\n    (question.helpingVerb !== 'did' && !question.subjectCompliment)\n\n  const { correctSimplePredicate, howToFix, message, whatWentWrong } =\n    simplePredicateGrader({\n      completePredicate:\n        question.helpingVerb !== 'did' &&\n        !auxilaryVerbCheck &&\n        question.completePredicate\n          ? question.helpingVerb + ' ' + question.completePredicate\n          : question.completePredicate,\n      correctSimplePredicate: auxilaryVerbCheck\n        ? question.helpingVerb + ' ' + question.simplePredicate\n        : question.simplePredicate,\n      givenSimplePredicate: text.trim(),\n      verbType: question.verbType,\n      helpingVerb: question.helpingVerb,\n      questionToModify,\n      auxilaryVerbCheck,\n    })\n\n  const irregularVerbCheck = irregularPastTenseVerbList(text)\n\n  const conjugatedVerb = (verb: string) => {\n    return verb !== specialVerbsInPastTense(verb)\n      ? specialVerbsInPastTense(verb)\n      : verb === irregularVerbCheck\n        ? irregularVerbCheck\n            .charAt(irregularVerbCheck.length - 1)\n            .toLowerCase() === 'e'\n          ? verb + 'd'\n          : verb + 'ed'\n        : irregularVerbCheck\n  }\n\n  useEffect(() => {\n    if (correctSimplePredicate && text) {\n      setEnabled(false)\n      setVerb(text)\n      // const pastTenseVerb =\n      //   irregularPastTenseVerbList(text) === text\n      //     ? text + 'ed'\n      //     : irregularPastTenseVerbList(text)\n      const pastTenseVerb = conjugatedVerb(text)\n\n      setTimeout(() => {\n        question.helpingVerb === 'did' &&\n          setQuestionToModify(\n            questionToModify\n              .join(' ')\n              .replace(\n                question.simplePredicate,\n                conjugatedVerb(question.simplePredicate),\n                // irregularPastTenseVerbList(question.simplePredicate) ===\n                //   question.simplePredicate\n                //   ? question.simplePredicate + 'ed'\n                //   : irregularPastTenseVerbList(question.simplePredicate)\n              )\n              .split(' '),\n          )\n\n        if (writingLevel === WritingLevelEnum.DEVELOPING) {\n          event({\n            type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_VERB',\n            payload:\n              question.helpingVerb === 'did'\n                ? pastTenseVerb\n                : auxilaryVerbCheck\n                  ? question.helpingVerb + ' ' + question.simplePredicate\n                  : question.simplePredicate,\n          })\n          if (question.helpingVerb === 'did' || auxilaryVerbCheck)\n            setState('object-identification')\n          if (question.helpingVerb !== 'did' && !auxilaryVerbCheck) {\n            setState('subject-complement-identification')\n          }\n          // setState('ending-phrase')\n        }\n\n        if (writingLevel === WritingLevelEnum.ACADEMIC) {\n          event({\n            type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_VERB',\n            payload:\n              question.helpingVerb === 'did'\n                ? conjugatedVerb(question.simplePredicate)\n                : question.simplePredicate,\n          })\n          console.log(question.helpingVerb === 'did' || auxilaryVerbCheck)\n          if (question.helpingVerb === 'did' || auxilaryVerbCheck)\n            setState('object-identification')\n          if (question.helpingVerb !== 'did' && !auxilaryVerbCheck) {\n            setState('subject-complement-identification')\n          }\n\n          if (\n            question.helpingVerb !== 'did' &&\n            auxilaryVerbCheck &&\n            question.object !== null\n          ) {\n            setState('object-identification')\n          }\n          if (\n            question.helpingVerb !== 'did' &&\n            auxilaryVerbCheck &&\n            question.object === null\n          ) {\n            setState('ending-phrase')\n          }\n        }\n\n        if (writingLevel === WritingLevelEnum.ADVANCED) {\n          event({\n            type: 'SET_ADVANCED_SENTENCE_STRUCTURE_VERB',\n            payload: pastTenseVerb,\n          })\n          if (question.helpingVerb === 'did' || auxilaryVerbCheck)\n            setState('object-identification')\n          if (question.helpingVerb !== 'did' && !auxilaryVerbCheck) {\n            setState('subject-complement-identification')\n          }\n        }\n      }, 3000)\n    }\n\n    if (text && !correctSimplePredicate) {\n      setEnabled(false)\n      const startTime = new Date().toISOString()\n      const timer = setTimeout(\n        () => {\n          const endTime = new Date().toISOString()\n          const timeToComplete = timeAFunction(startTime, endTime)\n          reset()\n          setEnabled(true)\n          console.log(timeToComplete)\n        },\n        attempts < 1 ? 7000 : 7000 + attempts * 1000,\n        // 3000\n      )\n      return () => clearTimeout(timer)\n    }\n  }, [correctSimplePredicate, text])\n\n  return (\n    <>\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Identify the Verb</UnderlinedText>\n        {question.helpingVerb === 'did' ? (\n          <div>\n            Find the Verb or Verb Phrase. Select the word or group of words that\n            are the action, being, having, or feeling word that is in the\n            complete predicate (the right side of the divider). Most of the time\n            it is one word, but often times can be two words. Verbs like take\n            off, get away, let go are verb phrases so you would need to select\n            both words. This can be tricky at first but it will get easier with\n            practice.\n          </div>\n        ) : (\n          <div>\n            Find the Verb or Verb Phrase. Since the helping verb is \"\n            {question.helpingVerb}\" then \"{question.helpingVerb}\" is either a\n            auxilary verb that comes before a main verb, or{' '}\n            {question.helpingVerb} is the verb which makes it a linking verb. If\n            there is an action word after \"{question.helpingVerb}\", highlight\n            both \"{question.helpingVerb}\" and the action word. If there isn't an\n            action word after \"{question.helpingVerb},\" just double click \"\n            {question.helpingVerb}.\"\n            {/* The way to figure it out is to look at the\n            word that comes after {question.helpingVerb}. Is there an action\n            word that comes after it or a person, place, thing, or idea that\n            comes after. */}\n          </div>\n        )}\n      </RestatementDirectionsContainer>\n\n      {enabled ? (\n        <RestatementQuestionToRestateContainer>\n          <SentenceToManipulate\n            cursorFormat={enabled ? 'TEXT' : 'NONE'}\n            onMouseUp={(e) => {\n              enabled ? select() : e.preventDefault()\n              enabled && setAttempts((a) => a + 0.5)\n            }}\n            onSelect={(e) => !enabled && e.preventDefault()}\n          >\n            {questionToModify\n              .join(' ')\n              .split(' ')\n              .map((part, i: number) => (\n                <span key={i}>\n                  <span>{part}</span>\n                  {part !== questionToModify[questionToModify.length - 1] && (\n                    <span> </span>\n                  )}\n                </span>\n              ))}\n          </SentenceToManipulate>\n        </RestatementQuestionToRestateContainer>\n      ) : (\n        <>\n          {text && (\n            <RestatementFeedbackContainer correct={correctSimplePredicate}>\n              <UnderlinedText>Feedback</UnderlinedText>\n              {correctSimplePredicate ? (\n                <RestatementFeedBackContainerMessageContainer>\n                  <div>{message} </div>\n                  <br />\n                  <div>\n                    Because the verb is {question.simplePredicate}{' '}\n                    {question.helpingVerb !== 'did'\n                      ? `it is already past tense and doesn't change.`\n                      : irregularPastTenseVerbList(text) === text\n                        ? `it gets changed to its past tense form: ${conjugatedVerb(\n                            text,\n                          )}`\n                        : `it is an irregular verb and gets changed to ${irregularPastTenseVerbList(\n                            text,\n                          )}`}\n                  </div>\n                </RestatementFeedBackContainerMessageContainer>\n              ) : (\n                <RestatementFeedBackContainerMessageContainer>\n                  <div>\n                    What went wrong? <span>{whatWentWrong}</span>\n                  </div>\n                  <br />\n                  <div>\n                    How do you fix it? <span>{howToFix}</span>\n                  </div>\n                </RestatementFeedBackContainerMessageContainer>\n              )}\n            </RestatementFeedbackContainer>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import { VerbTypeEnum } from '../../../../../../../../schemaTypes'\nimport { findPreposition } from './findPreposition'\n\nexport type SimplePredicateGraderProps = {\n  correctSimplePredicate: string\n  givenSimplePredicate: string | null\n  completePredicate: string\n  verbType: string\n  helpingVerb: string\n  questionToModify: string[]\n  auxilaryVerbCheck: boolean\n}\n\nexport const simplePredicateGrader = ({\n  correctSimplePredicate,\n  givenSimplePredicate,\n  completePredicate,\n  verbType,\n  helpingVerb,\n  questionToModify,\n  auxilaryVerbCheck,\n}: SimplePredicateGraderProps) => {\n  const verbPhrase = correctSimplePredicate.split(' ').length > 1\n\n  const verbTypeTranslator =\n    verbType === VerbTypeEnum.ACTION\n      ? 'action word'\n      : verbType === VerbTypeEnum.BEING\n        ? 'being word'\n        : verbType === VerbTypeEnum.HAVING\n          ? 'having word'\n          : 'feeling word'\n\n  const lastWordInQuestion = questionToModify\n    .slice(questionToModify.length - 1)\n    .join('')\n    .split('')\n    .filter((letter) => letter !== '.')\n    .join('')\n  const questionWithSeparatedPunctuation = [\n    ...questionToModify.slice(0, questionToModify.length - 1),\n    lastWordInQuestion,\n    '.',\n  ]\n\n  for (const wordInSelection of givenSimplePredicate!\n    .trim()\n    .split(' ')\n    .filter((wordToFilter) => wordToFilter !== '')) {\n    const lastWordWithOutPeriod = questionToModify[\n      questionToModify.length - 1\n    ].slice(0, questionToModify[questionToModify.length - 1].length - 1)\n\n    const completeQuestion = [...questionToModify, lastWordWithOutPeriod]\n    if (\n      (givenSimplePredicate && !completeQuestion.includes(wordInSelection)) ||\n      !lastWordWithOutPeriod\n    ) {\n      return {\n        correctSimplePredicate: false,\n        whatWentWrong: 'You selected a partial word.',\n        howToFix: `Make sure you select an entire word or a group of words.`,\n      }\n    }\n  }\n\n  if (givenSimplePredicate === correctSimplePredicate) {\n    return {\n      correctSimplePredicate: true,\n      message: 'Right again!',\n    }\n  }\n  if (givenSimplePredicate && findPreposition(givenSimplePredicate.trim())) {\n    return {\n      whatWentWrong: 'Your object cannot include a preposition.',\n      howToFix:\n        'Find the action, being, having, or feeling word that is in the complete predicate.',\n      correctSimplePredicate: false,\n    }\n  }\n  if (\n    verbPhrase &&\n    givenSimplePredicate?.split(' ').length === 1 &&\n    correctSimplePredicate.includes(givenSimplePredicate)\n  ) {\n    return {\n      whatWentWrong:\n        'In this sentence the verb is a group of words (verb phrase) and all the words in the phrase need to be selected.',\n      howToFix: `Find the ${verbTypeTranslator} in the predicate and select the word next that modifies the verb as well. Examples of verb phrases: take away, take out, and get off. `,\n      correctSimplePredicate: false,\n    }\n  }\n  if (\n    !verbPhrase &&\n    givenSimplePredicate!.split(' ').length > 1 &&\n    givenSimplePredicate?.split(' ').includes(correctSimplePredicate)\n  ) {\n    return {\n      whatWentWrong:\n        'You have the correct word in your selection, but in this sentence the verb is just one word.',\n      howToFix: `Find the one word ${verbTypeTranslator} in your selection. `,\n      correctSimplePredicate: false,\n    }\n  }\n  const lastWordInCompletePredicateWithPunctuation =\n    completePredicate.split(' ')[completePredicate.split(' ').length - 1] + '.'\n\n  const completePredicateWithPunctutation = [\n    ...completePredicate.split(' '),\n    lastWordInCompletePredicateWithPunctuation,\n  ].join(' ')\n  console.log()\n  if (\n    // !completePredicate.includes(givenSimplePredicate!) ||\n    !auxilaryVerbCheck &&\n    !`${completePredicate}.`.includes(givenSimplePredicate!)\n  ) {\n    return {\n      whatWentWrong: 'Your simple predicate is in the subject.',\n      howToFix:\n        'Look at the predicate only and find the action, being, having, or feeling word that is in the complete predicate.',\n      correctSimplePredicate: false,\n    }\n  }\n  if (\n    givenSimplePredicate &&\n    !correctSimplePredicate!.includes(givenSimplePredicate!) &&\n    completePredicateWithPunctutation.includes(givenSimplePredicate!)\n  ) {\n    return {\n      whatWentWrong:\n        'The correct simple predicate comes before your selection.',\n      howToFix: `The simple predicate often comes right after the dividing line. `,\n      correctSimplePredicate: false,\n    }\n  }\n  if (!verbPhrase && givenSimplePredicate!.split(' ').length > 1) {\n    return {\n      whatWentWrong: 'In this sentence the verb is just one word.',\n      howToFix: `Find the one word ${verbTypeTranslator} in the predicate. `,\n      correctSimplePredicate: false,\n    }\n  }\n\n  if (!auxilaryVerbCheck && givenSimplePredicate !== correctSimplePredicate) {\n    return {\n      whatWentWrong:\n        'Your simple predicate is in the complete predicate, but it is not the verb in the complete predicate',\n      howToFix:\n        'Find the action, being, having, or feeling word that is in the complete predicate.',\n      correctSimplePredicate: false,\n    }\n  }\n\n  return {\n    correctSimplePredicate: true,\n    message: 'Right again!',\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  findEssayById_findEssayById_essay_topic,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n} from '../../../../../../../../schemaTypes'\nimport { splitSentenceByWord } from '../../../../../../../../utils'\nimport { QuestionDeconstructProps } from '../../../../../../teacher/development/grammar/question-deconstruction/QuestionDeconstruction'\nimport {\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { EndingPhrase } from './EndingPhrase'\nimport { HelpingVerbIdentification } from './HelpingVerbIdentification'\nimport { ObjectIdentification } from './ObjectIdentification'\nimport { QuestionWordRemoval } from './QuestionWordRemoval'\nimport { SubjectComplimentIdentifier } from './SubjectComplimentIdentifier'\nimport { SubjectIdentification } from './SubjectIdentification'\nimport { SubjectPredicateSplit } from './SubjectPredicateSplit'\nimport { VerbIdentification } from './VerbIdentification'\n\nexport type DevelopingQuestionReconstructionProps = {\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  topic: findEssayById_findEssayById_essay_topic\n}\n\nexport type QuestionDecontstructionStateProps =\n  | 'question-word-removal'\n  | 'subject-predicate-split'\n  | 'helping-verb-id'\n  | 'subject-identification'\n  | 'verb-identification'\n  | 'subject-complement-identification'\n  | 'object-identification'\n  | 'ending-phrase'\n  | 'complete'\n\nexport const QuestionDeconstruction = ({\n  questionParts,\n  topic,\n}: DevelopingQuestionReconstructionProps) => {\n  const [state, setState] = useState<QuestionDecontstructionStateProps>(\n    'question-word-removal',\n  )\n  const [questionToModify, setQuestionToModify] = useState(\n    splitSentenceByWord(questionParts.originalQuestion),\n  )\n\n  const [subject, setSubject] = useState<string | null>(null)\n  const [verb, setVerb] = useState<string | null>(null)\n  const [object, setObject] = useState<string | null>(null)\n  const writingLevel = topic.writingLevel\n\n  const auxilaryVerbCheck =\n    questionParts.helpingVerb !== 'did' &&\n    questionParts.simplePredicate.split(' ').length > 1 &&\n    questionParts.simplePredicate.split(' ').includes(questionParts.helpingVerb)\n\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Restate the Question</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      {state === 'question-word-removal' && (\n        <QuestionWordRemoval\n          question={questionParts}\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          setState={setState}\n        />\n      )}\n      {state === 'helping-verb-id' && (\n        <HelpingVerbIdentification\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          setState={setState}\n          question={questionParts}\n          auxilaryVerbCheck={auxilaryVerbCheck}\n        />\n      )}\n      {state === 'subject-predicate-split' && (\n        <SubjectPredicateSplit\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          setState={setState}\n          question={questionParts}\n          auxilaryVerbCheck={auxilaryVerbCheck}\n        />\n      )}\n      {state === 'subject-identification' && (\n        <SubjectIdentification\n          setState={setState}\n          questionToModify={questionToModify}\n          question={questionParts}\n          subject={subject}\n          setSubject={setSubject}\n          writingLevel={writingLevel}\n        />\n      )}\n      {state === 'verb-identification' && (\n        <VerbIdentification\n          setState={setState}\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          question={questionParts}\n          verb={verb}\n          setVerb={setVerb}\n          writingLevel={writingLevel}\n        />\n      )}\n      {state === 'subject-complement-identification' && (\n        <SubjectComplimentIdentifier\n          setState={setState}\n          questionToModify={questionToModify}\n          question={questionParts}\n          object={object}\n          setObject={setVerb}\n          writingLevel={writingLevel}\n        />\n      )}\n      {state === 'object-identification' && (\n        <ObjectIdentification\n          setState={setState}\n          questionToModify={questionToModify}\n          question={questionParts}\n          object={object}\n          setObject={setVerb}\n          writingLevel={writingLevel}\n        />\n      )}\n      {state === 'ending-phrase' && (\n        <EndingPhrase\n          setState={setState}\n          questionToModify={questionToModify}\n          question={questionParts}\n          writingLevel={writingLevel}\n        />\n      )}\n    </>\n  )\n}\n","import React, { FC, SyntheticEvent, useEffect } from 'react'\nimport { gql, MutationFunctionOptions, useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateDevelopingOrganizer,\n  updateDevelopingOrganizerVariables,\n  BasicQuestionEnum,\n  findEssayById_findEssayById_essay_topic,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n} from '../../../../../../../../schemaTypes'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport {\n  OrganizerTitleContainer,\n  QuestionTypeContainer,\n  OrganizerControlButtonContainer,\n  QuestionTypeQuestionStyle,\n  QuestionTypeAnswerSelectStyle,\n  PartsOfQuestionContainer,\n  PartsOfQuestionTitle,\n  OrganizerTitleStyle,\n  QuestionStyle,\n  PartContainer,\n  PartInput,\n  OrganizerControlButton,\n  QuestionContainer,\n  RestatementContainer,\n  RestatementTitle,\n  RestatementInput,\n  RestatementOutput,\n  AnswerInput,\n  AnswerOutput,\n  OrganizerControlButtonContainerIdentifications,\n  OrganizerControlButtonMessageContainer,\n  OrganizerSectionDirectionsContainer,\n  RestatementDirectionsContainer,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { QuestionDeconstruction } from '../question-deconstruction/QuestionDeconstruction'\nimport { verbsThatChangeInIngFormat } from '../../../../../../../../utils'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\n\nexport type DevelopingOrganizerProps = {\n  topic: findEssayById_findEssayById_essay_topic\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer\n}\n\nexport const UPDATE_DEVELOPING_ORGANIZER_MUTATION = gql`\n  mutation updateDevelopingOrganizer($input: UpdateDevelopingOrganizerInput!) {\n    updateDevelopingOrganizer(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\n\nexport const DevelopingOrganizer = ({\n  topic,\n  questionParts,\n  organizer,\n}: DevelopingOrganizerProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  const auxilaryVerbCheck =\n    (questionParts.helpingVerb !== 'did' &&\n      questionParts.simplePredicate.split(' ').length > 1 &&\n      questionParts.simplePredicate\n        .split(' ')\n        .includes(questionParts.helpingVerb)) ||\n    (questionParts.helpingVerb !== 'did' && !questionParts.subjectCompliment)\n\n  const sentenceStructure = {\n    subject:\n      state.context.developingOrganizer.developingSentenceStructure.subject,\n    verb: state.context.developingOrganizer.developingSentenceStructure.verb,\n    object:\n      state.context.developingOrganizer.developingSentenceStructure.object,\n    subjectCompliment:\n      state.context.developingOrganizer.developingSentenceStructure\n        .subjectCompliment,\n  }\n\n  const [updateDevelopingOrganizer] = useMutation<\n    updateDevelopingOrganizer,\n    updateDevelopingOrganizerVariables\n  >(UPDATE_DEVELOPING_ORGANIZER_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        answer: state.context.developingOrganizer.answer,\n        basicQuestionType: state.context.developingOrganizer.questionType,\n        conclusion: state.context.developingOrganizer.conclusion,\n        developingSentenceStructure:\n          state.context.developingOrganizer.developingSentenceStructure,\n        restatement: state.context.developingOrganizer.restatement,\n      },\n    },\n    onCompleted: (data) => {\n      console.log(data.updateDevelopingOrganizer.essay._id)\n    },\n    onError: (error) => console.error(error),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    updateDevelopingOrganizer()\n  }, [state.context.developingOrganizer.questionType])\n\n  const handleNext = () => {\n    // updateDevelopingOrganizer({ onCompleted: () => event({ type: 'NEXT' }) })\n    updateDevelopingOrganizer()\n    event({ type: 'NEXT' })\n  }\n\n  const { subject, object, subjectCompliment } =\n    state.context.developingOrganizer.developingSentenceStructure\n  const { simplePredicate, helpingVerb } = questionParts\n\n  const verbConverter = auxilaryVerbCheck\n    ? 'being ' + simplePredicate\n    : verbsThatChangeInIngFormat(simplePredicate).replace('ed', '')\n\n  const conclusionSetup = `${subject.charAt(0).toLowerCase() + subject.slice(1)}\n${verbConverter} \n${object ? object : subjectCompliment ? subjectCompliment : ''}`\n\n  return (\n    <>\n      <>\n        {state.matches('organizers.developingOrganizer.identifications') && (\n          <>\n            <OrganizerTitleContainer>\n              <OrganizerTitleStyle>\n                Organize your essay for this Question\n              </OrganizerTitleStyle>\n            </OrganizerTitleContainer>\n            <QuestionContainer>\n              <QuestionStyle>{topic.question}</QuestionStyle>\n            </QuestionContainer>\n\n            {!organizer.restatement ? (\n              <>\n                <OrganizerControlButtonMessageContainer>\n                  The first step is to restate the question so click Start when\n                  ready!\n                </OrganizerControlButtonMessageContainer>\n                <OrganizerControlButtonContainerIdentifications>\n                  <OrganizerControlButton\n                    onClick={() => event({ type: 'RESTATEMENT' })}\n                  >\n                    Start\n                  </OrganizerControlButton>\n                </OrganizerControlButtonContainerIdentifications>\n              </>\n            ) : (\n              <>\n                <OrganizerControlButtonMessageContainer>\n                  Since you've already completed the restatement, we're going to\n                  go right to the answer section of the organizer\n                </OrganizerControlButtonMessageContainer>\n                <OrganizerControlButtonContainerIdentifications>\n                  <OrganizerControlButton\n                    onClick={() => event({ type: 'ANSWER' })}\n                  >\n                    Start\n                  </OrganizerControlButton>\n                </OrganizerControlButtonContainerIdentifications>\n              </>\n            )}\n          </>\n        )}\n        {state.matches('organizers.developingOrganizer.restatement') && (\n          <>\n            <QuestionDeconstruction\n              questionParts={questionParts}\n              topic={topic}\n            />\n          </>\n        )}\n        {state.matches('organizers.developingOrganizer.answer') && (\n          <>\n            <OrganizerTitleContainer>\n              <OrganizerTitleStyle>Answer the Question</OrganizerTitleStyle>\n            </OrganizerTitleContainer>\n            <QuestionContainer>\n              <QuestionStyle>{topic.question}</QuestionStyle>\n            </QuestionContainer>\n            <OrganizerSectionDirectionsContainer>\n              Answer the Question to the best of your ability.\n            </OrganizerSectionDirectionsContainer>\n            <AnswerInput\n              autoFocus={true}\n              onPaste={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n              value={state.context.developingOrganizer.answer}\n              onChange={(e: any) =>\n                event({ type: 'SET_ANSWER', payload: e.target.value })\n              }\n            />\n\n            <OrganizerControlButtonContainer>\n              <OrganizerControlButton\n                onClick={() => updateDevelopingOrganizer()}\n              >\n                Save\n              </OrganizerControlButton>\n              <OrganizerControlButton onClick={handleNext}>\n                Next\n              </OrganizerControlButton>\n            </OrganizerControlButtonContainer>\n          </>\n        )}\n        {state.matches('organizers.developingOrganizer.conclusion') && (\n          <>\n            <OrganizerTitleContainer>\n              <OrganizerTitleStyle>Think of a Conclusion</OrganizerTitleStyle>\n            </OrganizerTitleContainer>\n            <RestatementDirectionsContainer>\n              <UnderlinedText>Directions</UnderlinedText>\n              <div>\n                Conclusions should show the consequence of the topic, so think\n                of a result of {conclusionSetup} that makes sense with what you\n                wrote in your answer. Be careful not to give a result of your\n                answer.\n              </div>\n            </RestatementDirectionsContainer>\n            <AnswerInput\n              autoFocus={true}\n              onPaste={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n              onCopy={(e: SyntheticEvent) => {\n                e.preventDefault()\n              }}\n              value={state.context.developingOrganizer.conclusion}\n              onChange={(e: any) =>\n                event({ type: 'SET_CONCLUSION', payload: e.target.value })\n              }\n            />\n            {/* <RestatementOutput>\n              <div> {state.context.developingOrganizer.conclusion}</div>\n            </RestatementOutput> */}\n            <OrganizerControlButtonContainer>\n              <OrganizerControlButton\n                onClick={() => event({ type: 'PREVIOUS' })}\n              >\n                Back\n              </OrganizerControlButton>\n              <OrganizerControlButton\n                onClick={() => updateDevelopingOrganizer()}\n              >\n                Save\n              </OrganizerControlButton>\n              <OrganizerControlButton onClick={handleNext}>\n                Next\n              </OrganizerControlButton>\n            </OrganizerControlButtonContainer>\n          </>\n        )}\n      </>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { UpdateAcademicOrganizerType } from './AcademicOrganizer'\n\nimport {\n  findEssayById_findEssayById_essay_topic,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n} from '../../../../../../../../schemaTypes'\nimport { QuestionDeconstruction } from '../question-deconstruction/QuestionDeconstruction'\n\nexport type AcademicRestatementProps = {\n  updateAcademicOrganizer: UpdateAcademicOrganizerType\n  topic: findEssayById_findEssayById_essay_topic\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n}\n\nexport const AcademicRestatement = ({\n  updateAcademicOrganizer,\n  topic,\n  questionParts,\n}: AcademicRestatementProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  useEffect(() => {\n    updateAcademicOrganizer()\n  }, [\n    state.context.academicOrganizer.restatement,\n    state.context.academicOrganizer.academicSentenceStructure,\n    updateAcademicOrganizer,\n  ])\n  const { verb, subject } =\n    state.context.academicOrganizer.academicSentenceStructure\n  const linkingVerbCheck =\n    verb.toLowerCase() === 'was' || verb.toLowerCase() === 'were'\n\n  return <QuestionDeconstruction questionParts={questionParts} topic={topic} />\n  /*<>\n       <OrganizerTitleContainer>\n        <OrganizerTitleStyle>\n          Organize your essay for this Question\n        </OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      <QuestionContainer>\n        <QuestionStyle>{topic.question}</QuestionStyle>\n      </QuestionContainer>\n\n      {!organizer.restatement ? (\n        <>\n          <OrganizerControlButtonMessageContainer>\n            The first step is to restate the question so click Start when ready!\n          </OrganizerControlButtonMessageContainer>\n          <OrganizerControlButtonContainerIdentifications>\n            <OrganizerControlButton\n              onClick={() => event({ type: 'RESTATEMENT' })}\n            >\n              Start\n            </OrganizerControlButton>\n          </OrganizerControlButtonContainerIdentifications>\n        </>\n      ) : (\n        <>\n          <OrganizerControlButtonMessageContainer>\n            Since you've already completed the restatement, we're going to go\n            right to the answer section of the organizer\n          </OrganizerControlButtonMessageContainer>\n          <OrganizerControlButtonContainerIdentifications>\n            <OrganizerControlButton onClick={() => event({ type: 'ANSWER' })}>\n              Start\n            </OrganizerControlButton>\n          </OrganizerControlButtonContainerIdentifications>\n        </>\n      )}\n    </> */\n}\n// return (\n//   <>\n//     <AcademicPartsOfQuestionContainer>\n//       <PartsOfQuestionTitle>\n//         Set the Parts of the Question\n//       </PartsOfQuestionTitle>\n//       <AcademicPartContainer>\n//         <div>What is the Subject of the question? </div>\n//         <PartInput\n//           value={\n//             state.context.academicOrganizer.academicSentenceStructure.subject\n//           }\n//           onChange={(e: any) =>\n//             event({\n//               type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT',\n//               payload: e.target.value,\n//             })\n//           }\n//         />\n//       </AcademicPartContainer>\n\n//       <AcademicPartContainer>\n//         <div>\n//           What is the Verb of the question (If the word 'was' or 'were' are in\n//           the question, that is the verb)?\n//         </div>\n//         <PartInput\n//           value={\n//             state.context.academicOrganizer.academicSentenceStructure.verb\n//           }\n//           onChange={(e: any) =>\n//             event({\n//               type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_VERB',\n//               payload: e.target.value,\n//             })\n//           }\n//         />\n//       </AcademicPartContainer>\n\n//       <AcademicPartContainer>\n//         {!linkingVerbCheck ? (\n//           <div>What is the Object of the question? </div>\n//         ) : (\n//           <div>\n//             What is the word or phrase describing {subject} or showing an\n//             action (include a direct object if there is one)?\n//           </div>\n//         )}\n\n//         <PartInput\n//           value={\n//             state.context.academicOrganizer.academicSentenceStructure.object!\n//           }\n//           onChange={(e: any) =>\n//             event({\n//               type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT',\n//               payload: e.target.value,\n//             })\n//           }\n//         />\n//       </AcademicPartContainer>\n//     </AcademicPartsOfQuestionContainer>\n//     {/* <AcademicRestatementContainer>\n//       <AcademicRestatementTitle>\n//         <div>Restatement</div>\n//       </AcademicRestatementTitle>\n//       <AcademicRestatementInput\n//         type='text'\n//         value={state.context.academicOrganizer.restatement}\n//         onChange={(e: any) =>\n//           event({\n//             type: 'SET_RESTATEMENT',\n//             payload: e.target.value,\n//           })\n//         }\n//       />\n//       <RestatementOutput>\n//         <div> {state.context.academicOrganizer.restatement}</div>\n//       </RestatementOutput>\n//     </AcademicRestatementContainer> */}\n//     <OrganizerControlButtonContainer>\n//       <OrganizerControlButton onClick={() => event({ type: 'NEXT' })}>\n//         Next\n//       </OrganizerControlButton>\n//     </OrganizerControlButtonContainer>\n//   </>\n// )\n","import React, { SyntheticEvent, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { UpdateAcademicOrganizerType } from './AcademicOrganizer'\nimport {\n  AnswerInput,\n  OrganizerControlButton,\n  OrganizerControlButtonContainer,\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  RestatementDirectionsContainer,\n} from '../../state-and-styles/assignedEssayStyles'\nimport { UnderlinedText } from '../../../../../../../../appStyles'\nimport { verbsThatChangeInIngFormat } from '../../../../../../../../utils'\nimport {\n  findEssayById_findEssayById_essay_topic,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n} from '../../../../../../../../schemaTypes'\n\nexport type AcademicConclusionProps = {\n  updateAcademicOrganizer: UpdateAcademicOrganizerType\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  auxilaryVerbCheck: boolean\n  topic: findEssayById_findEssayById_essay_topic\n}\n\nexport const AcademicConclusion = ({\n  updateAcademicOrganizer,\n  questionParts,\n  auxilaryVerbCheck,\n  topic,\n}: AcademicConclusionProps) => {\n  const [state, event] = useStudentEssayContextProvider()\n  const { subject, object, subjectCompliment } =\n    state.context.academicOrganizer.academicSentenceStructure\n  const { simplePredicate, helpingVerb } = questionParts\n\n  const verbConverter = auxilaryVerbCheck\n    ? 'being ' + simplePredicate\n    : verbsThatChangeInIngFormat(simplePredicate).replace('ed', '')\n\n  useEffect(() => {\n    // updateAcademicOrganizer()\n  }, [state.context.academicOrganizer.conclusion, updateAcademicOrganizer])\n\n  const conclusionSetup = `As a result of ${\n    subject.charAt(0).toLowerCase() + subject.slice(1)\n  }\n  ${verbConverter} \n  ${object ? object : subjectCompliment ? subjectCompliment : ''}`\n  console.log(subjectCompliment)\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Think of a Conclusion</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      <RestatementDirectionsContainer>\n        <UnderlinedText>Directions</UnderlinedText>\n        <div>\n          First start the conclusion this way: {conclusionSetup}, ....\" Then put\n          the consequence of this statement in place of the \"....\"\n        </div>\n      </RestatementDirectionsContainer>\n      {/* <RestatementTitle>Write your conclusion</RestatementTitle> */}\n      <AnswerInput\n        // type='text'\n        onPaste={(e: SyntheticEvent) => {\n          e.preventDefault()\n        }}\n        onCopy={(e: SyntheticEvent) => {\n          e.preventDefault()\n        }}\n        value={state.context.academicOrganizer.conclusion}\n        onChange={(e: any) => {\n          event({ type: 'SET_CONCLUSION', payload: e.target.value })\n        }}\n      />\n      {/* <AcademicConclusionOutput>\n        <div> {state.context.academicOrganizer.conclusion}</div>\n      </AcademicConclusionOutput> */}\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton\n          onClick={() => {\n            updateAcademicOrganizer()\n            event({ type: 'PREVIOUS' })\n          }}\n        >\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton\n          onClick={() => {\n            updateAcademicOrganizer()\n            event({ type: 'NEXT' })\n          }}\n        >\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useMutation, MutationFunctionOptions } from '@apollo/client'\nimport {\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n  findEssayById_findEssayById_essay_topic,\n  updateAcademicOrganizer,\n  updateAcademicOrganizerVariables,\n  findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts,\n} from '../../../../../../../../schemaTypes'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { AcademicAnswerTypes } from './AcademicAnswerTypes'\nimport { AcademicRestatement } from './AcademicRestatement'\nimport { AcademicConclusion } from './AcademicConclusion'\nimport {\n  OrganizerControlButton,\n  OrganizerControlButtonContainerIdentifications,\n  OrganizerControlButtonMessageContainer,\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  QuestionContainer,\n  QuestionStyle,\n} from '../../state-and-styles/assignedEssayStyles'\n\nexport type AcademicOrganizerProps = {\n  topic: findEssayById_findEssayById_essay_topic\n  questionParts: findEssayQuestionById_findEssayQuestionById_essayQuestion_questionParts\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer\n}\n\nexport const UPDATE_ACADEMIC_ORGANIZER_MUTATION = gql`\n  mutation updateAcademicOrganizer($input: UpdateAcademicOrganizerInput!) {\n    updateAcademicOrganizer(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\n\nexport type UpdateAcademicOrganizerType = (\n  options?:\n    | MutationFunctionOptions<\n        updateAcademicOrganizer,\n        updateAcademicOrganizerVariables\n      >\n    | undefined,\n) => void\n\nexport const AcademicOrganizer: FC<AcademicOrganizerProps> = ({\n  topic,\n  questionParts,\n  organizer,\n}) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  const auxilaryVerbCheck =\n    (questionParts.helpingVerb !== 'did' &&\n      questionParts.simplePredicate.split(' ').length > 1 &&\n      questionParts.simplePredicate\n        .split(' ')\n        .includes(questionParts.helpingVerb)) ||\n    (questionParts.helpingVerb !== 'did' && !questionParts.subjectCompliment)\n\n  const [updateAcademicOrganizer] = useMutation<\n    updateAcademicOrganizer,\n    updateAcademicOrganizerVariables\n  >(UPDATE_ACADEMIC_ORGANIZER_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        academicSentenceStructure:\n          state.context.academicOrganizer.academicSentenceStructure,\n        restatement: state.context.academicOrganizer.restatement,\n        conclusion: state.context.academicOrganizer.conclusion,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (err) => console.error(err),\n    refetchQueries: ['findEssayById'],\n  })\n\n  return (\n    <>\n      {state.matches('organizers.academicOrganizer.identifications') && (\n        <>\n          <OrganizerTitleContainer>\n            <OrganizerTitleStyle>\n              Organize your essay for this Question\n            </OrganizerTitleStyle>\n          </OrganizerTitleContainer>\n          <QuestionContainer>\n            <QuestionStyle>{topic.question}</QuestionStyle>\n          </QuestionContainer>\n          {!organizer.restatement ? (\n            <>\n              <OrganizerControlButtonMessageContainer>\n                The first step is to restate the question so click Start when\n                ready!\n              </OrganizerControlButtonMessageContainer>\n              <OrganizerControlButtonContainerIdentifications>\n                <OrganizerControlButton\n                  onClick={() => event({ type: 'RESTATEMENT' })}\n                >\n                  Start\n                </OrganizerControlButton>\n              </OrganizerControlButtonContainerIdentifications>\n            </>\n          ) : (\n            <>\n              <OrganizerControlButtonMessageContainer>\n                Since you've already completed the restatement, we're going to\n                go right to the answer section of the organizer\n              </OrganizerControlButtonMessageContainer>\n              <OrganizerControlButtonContainerIdentifications>\n                <OrganizerControlButton\n                  onClick={() => event({ type: 'ANSWER' })}\n                >\n                  Start\n                </OrganizerControlButton>\n              </OrganizerControlButtonContainerIdentifications>\n            </>\n          )}\n        </>\n      )}\n      {state.matches('organizers.academicOrganizer.restatement') && (\n        <AcademicRestatement\n          updateAcademicOrganizer={updateAcademicOrganizer}\n          topic={topic}\n          questionParts={questionParts}\n          // organizer={organizer!}\n        />\n      )}\n      {state.matches('organizers.academicOrganizer.answer') && (\n        <AcademicAnswerTypes\n          organizer={organizer}\n          updateAcademicOrganizer={updateAcademicOrganizer}\n          questionParts={questionParts}\n          auxilaryVerbCheck={auxilaryVerbCheck}\n          topic={topic}\n        />\n      )}\n      {state.matches('organizers.academicOrganizer.conclusion') && (\n        <AcademicConclusion\n          updateAcademicOrganizer={updateAcademicOrganizer}\n          questionParts={questionParts}\n          auxilaryVerbCheck={auxilaryVerbCheck}\n          topic={topic}\n        />\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateProblemSolution,\n  updateProblemSolutionVariables,\n} from '../../../../../../../../schemaTypes'\nimport { UPDATE_PROBLEM_SOLUTION_MUTATION } from '../academic/AcademicProblemSolution'\n\nexport type AdvancedHowProblemSolutionProps = {}\n\nexport const AdvancedHowProblemSolution: FC<\n  AdvancedHowProblemSolutionProps\n> = () => {\n  const [state, event] = useStudentEssayContextProvider()\n  const { subject } = state.context.advancedOrganizer.advancedSentenceStructure\n  const { problemSolution } = state.context.advancedOrganizer.answer\n\n  const [updateProblemSolution] = useMutation<\n    updateProblemSolution,\n    updateProblemSolutionVariables\n  >(UPDATE_PROBLEM_SOLUTION_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        problem: state.context.advancedOrganizer.answer.problemSolution.problem,\n        reasonForProblem:\n          state.context.advancedOrganizer.answer.problemSolution\n            .reasonForProblem,\n        solvedBy:\n          state.context.advancedOrganizer.answer.problemSolution.solvedBy,\n        whySolutionSolved:\n          state.context.advancedOrganizer.answer.problemSolution\n            .whySolutionSolved,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    updateProblemSolution()\n  }, [problemSolution, updateProblemSolution])\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          event({ type: 'PREVIOUS' })\n          event({ type: 'SET_PRE_LOADED', payload: false })\n        }}\n      >\n        Change Question Type\n      </button>\n      <div>How: Problem and Solution</div>\n      <div>What is the problem for {subject}?</div>\n      <input\n        value={state.context.advancedOrganizer.answer.problemSolution.problem}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: { ...problemSolution, problem: e.target.value },\n          })\n        }}\n      />\n      <div>Why is this {subject}'s problem?</div>\n      <input\n        value={\n          state.context.advancedOrganizer.answer.problemSolution\n            .reasonForProblem\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: {\n              ...problemSolution,\n              reasonForProblem: e.target.value,\n            },\n          })\n        }}\n      />\n      <div>How did {subject} solve the problem?</div>\n      <input\n        value={state.context.advancedOrganizer.answer.problemSolution.solvedBy}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: { ...problemSolution, solvedBy: e.target.value },\n          })\n        }}\n      />\n      <div>Why did the solution solve {subject}'s problem?</div>\n      <input\n        value={\n          state.context.advancedOrganizer.answer.problemSolution\n            .whySolutionSolved\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: {\n              ...problemSolution,\n              whySolutionSolved: e.target.value,\n            },\n          })\n        }}\n      />\n      <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateHowCauseEffect,\n  updateHowCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport { UPDATE_HOW_CAUSE_EFFECT_MUTATION } from '../academic/AcademicHowCauseEffect'\n\nexport type AdvancedHowCauseEffectProps = {}\n\nexport const AdvancedHowCauseEffect: FC<AdvancedHowCauseEffectProps> = () => {\n  const [state, event] = useStudentEssayContextProvider()\n  const { subject, verb, object } =\n    state.context.advancedOrganizer.advancedSentenceStructure\n  const { howCauseEffect } = state.context.advancedOrganizer.answer\n\n  const [updateHowCauseEffect] = useMutation<\n    updateHowCauseEffect,\n    updateHowCauseEffectVariables\n  >(UPDATE_HOW_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        before: state.context.advancedOrganizer.answer.howCauseEffect.before,\n        cause: state.context.advancedOrganizer.answer.howCauseEffect.cause,\n        after: state.context.advancedOrganizer.answer.howCauseEffect.after,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    updateHowCauseEffect()\n  }, [howCauseEffect, updateHowCauseEffect])\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          event({ type: 'PREVIOUS' })\n          event({ type: 'SET_PRE_LOADED', payload: false })\n        }}\n      >\n        Change Question Type\n      </button>\n      <div>How: Cause and Effect</div>\n      <div>\n        What was {object} like before {subject} {verb}ed\n      </div>\n      <input\n        value={state.context.advancedOrganizer.answer.howCauseEffect.before}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_HOW_CAUSE_EFFECT',\n            payload: {\n              ...howCauseEffect,\n              before: e.target.value,\n            },\n          })\n        }}\n      />\n      <div>\n        How was {object} different because of {subject}\n      </div>\n      <input\n        value={state.context.advancedOrganizer.answer.howCauseEffect.after}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_HOW_CAUSE_EFFECT',\n            payload: {\n              ...howCauseEffect,\n              after: e.target.value,\n            },\n          })\n        }}\n      />\n      <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateWhyCauseEffect,\n  updateWhyCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport { UPDATE_WHY_CAUSE_EFFECT_MUTATION } from '../academic/AcademicWhyCauseEffect'\n\nexport type AdvancedWhyCauseEffectProps = {}\n\nexport const AdvancedWhyCauseEffect: FC<AdvancedWhyCauseEffectProps> = () => {\n  const [state, event] = useStudentEssayContextProvider()\n  const { subject, verb } =\n    state.context.advancedOrganizer.advancedSentenceStructure\n  const { whyCauseEffect } = state.context.advancedOrganizer.answer\n\n  const [updateWhyCauseEffect] = useMutation<\n    updateWhyCauseEffect,\n    updateWhyCauseEffectVariables\n  >(UPDATE_WHY_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        ultimateCause:\n          state.context.advancedOrganizer.answer.whyCauseEffect.ultimateCause,\n        proximateCause:\n          state.context.advancedOrganizer.answer.whyCauseEffect.proximateCause,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    updateWhyCauseEffect()\n  }, [updateWhyCauseEffect, whyCauseEffect])\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          event({ type: 'PREVIOUS' })\n          event({ type: 'SET_PRE_LOADED', payload: false })\n        }}\n      >\n        Change Question Type\n      </button>\n      <div>Why: Cause and Effect</div>\n      <div>\n        Why did {subject} {verb}?\n      </div>\n      <input\n        type=\"text\"\n        value={\n          state.context.advancedOrganizer.answer.whyCauseEffect.proximateCause\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_WHY_CAUSE_EFFECT',\n            payload: { ...whyCauseEffect, proximateCause: e.target.value },\n          })\n        }}\n      />\n      <div>Why did that happen?</div>\n      <input\n        type=\"text\"\n        value={\n          state.context.advancedOrganizer.answer.whyCauseEffect.ultimateCause\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_WHY_CAUSE_EFFECT',\n            payload: { ...whyCauseEffect, ultimateCause: e.target.value },\n          })\n        }}\n      />\n      <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setAnswerType,\n  setAnswerTypeVariables,\n  QuestionTypeEnum,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n} from '../../../../../../../../schemaTypes'\nimport { useMutation } from '@apollo/client'\n\nimport { AdvancedHowProblemSolution } from './AdvancedHowProblemSolution'\nimport { AdvancedHowCauseEffect } from './AdvancedHowCauseEffect'\nimport { AdvancedWhyCauseEffect } from './AdvancedWhyCauseEffect'\nimport { SET_ANSWER_TYPE_MUTATION } from '../academic/AcademicAnswerTypes'\nimport { useEnumContextProvider } from '../../../../../../../../contexts/EnumContext'\n\nexport type AdvancedAnswerTypesProps = {\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer\n}\n\nexport const AdvancedAnswerTypes: FC<AdvancedAnswerTypesProps> = ({\n  organizer,\n}) => {\n  const [state, event] = useStudentEssayContextProvider()\n  const { questionTypeEnum } = useEnumContextProvider()\n  console.log(state.context.advancedOrganizer.answer.preLoaded)\n  const [setAnswerType] = useMutation<setAnswerType, setAnswerTypeVariables>(\n    SET_ANSWER_TYPE_MUTATION,\n    {\n      variables: {\n        input: {\n          essayId: state.context.essayId,\n          questionType: state.context.advancedOrganizer.questionType,\n        },\n      },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findEssayById'],\n    },\n  )\n  useEffect(() => {\n    if (!state.context.advancedOrganizer.answer.preLoaded) {\n      setAnswerType()\n    }\n  }, [\n    setAnswerType,\n    state.context.advancedOrganizer.answer.preLoaded,\n    state.context.advancedOrganizer.questionType,\n  ])\n\n  useEffect(() => {\n    if (state.context.advancedOrganizer.answer.preLoaded) {\n      event({ type: 'NEXT' })\n    }\n  }, [event, state.context.advancedOrganizer.answer.preLoaded])\n\n  return (\n    <>\n      {state.matches('organizers.advancedOrganizer.answer.questionType') && (\n        <>\n          <span>What is the Question Type: </span>\n          <span>\n            <select\n              value={state.context.advancedOrganizer.questionType}\n              onChange={(e: any) => {\n                if (e.target.value !== 'none') {\n                  event({\n                    type: 'SET_FULL_QUESTION_TYPE',\n                    payload: e.target.value,\n                  })\n                }\n              }}\n            >\n              <option value={'none'}>Pick a Question Type</option>\n              {questionTypeEnum.map((question: QuestionTypeEnum) => (\n                <option key={question} value={question}>\n                  {question === 'HOW_PROBLEM_SOLUTION'\n                    ? 'How: Problem and Solution'\n                    : question === 'HOW_CAUSE_EFFECT'\n                      ? 'How: Cause and Effect'\n                      : 'Why: Cause and Effect'}\n                </option>\n              ))}\n            </select>\n            <div>Restatement</div>\n            <input\n              type=\"text\"\n              value={state.context.advancedOrganizer.restatement}\n              onChange={(e: any) =>\n                event({\n                  type: 'SET_RESTATEMENT',\n                  payload: e.target.value,\n                })\n              }\n            />\n            <button\n              onClick={() => {\n                if (\n                  organizer.__typename === 'AdvancedOrganizer' &&\n                  organizer.answerType !== null\n                )\n                  event({ type: 'NEXT' })\n              }}\n            >\n              Use this Question Type\n            </button>\n          </span>\n        </>\n      )}\n\n      {state.matches('organizers.advancedOrganizer.answer.problemSolution') &&\n        state.context.advancedOrganizer.questionType ===\n          QuestionTypeEnum.HOW_PROBLEM_SOLUTION && (\n          <AdvancedHowProblemSolution />\n        )}\n      {state.matches('organizers.advancedOrganizer.answer.howCauseEffect') &&\n        state.context.advancedOrganizer.questionType ===\n          QuestionTypeEnum.HOW_CAUSE_EFFECT && <AdvancedHowCauseEffect />}\n      {state.matches('organizers.advancedOrganizer.answer.whyCauseEffect') &&\n        state.context.advancedOrganizer.questionType ===\n          QuestionTypeEnum.WHY_CAUSE_EFFECT && <AdvancedWhyCauseEffect />}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\nimport { UpdateAdvancedOrganizerType } from './AdvancedOrganizer'\n\nexport type AdvancedRestatementProps = {\n  updateAdvancedOrganizer: UpdateAdvancedOrganizerType\n}\n\nexport const AdvancedRestatement: FC<AdvancedRestatementProps> = ({\n  updateAdvancedOrganizer,\n}) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  useEffect(() => {\n    updateAdvancedOrganizer()\n  }, [\n    state.context.advancedOrganizer,\n    updateAdvancedOrganizer,\n    state.context.advancedOrganizer.restatement,\n  ])\n\n  return (\n    <>\n      <div>Set the Parts of the Question</div>\n      <span>What is the Subject of the question: </span>\n      <span>\n        <input\n          value={\n            state.context.advancedOrganizer.advancedSentenceStructure.subject\n          }\n          onChange={(e: any) =>\n            event({\n              type: 'SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT',\n              payload: e.target.value,\n            })\n          }\n        />\n      </span>\n      <span>What is the Verb of the question: </span>\n      <span>\n        <input\n          value={state.context.advancedOrganizer.advancedSentenceStructure.verb}\n          onChange={(e: any) =>\n            event({\n              type: 'SET_ADVANCED_SENTENCE_STRUCTURE_VERB',\n              payload: e.target.value,\n            })\n          }\n        />\n      </span>\n      <span>What is the Object of the question: </span>\n      <span>\n        <input\n          value={\n            state.context.advancedOrganizer.advancedSentenceStructure.object!\n          }\n          onChange={(e: any) =>\n            event({\n              type: 'SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT',\n              payload: e.target.value,\n            })\n          }\n        />\n      </span>\n      {/* <div>Restatement</div>\n      <input\n        type='text'\n        value={state.context.advancedOrganizer.restatement}\n        onChange={(e: any) =>\n          event({\n            type: 'SET_RESTATEMENT',\n            payload: e.target.value,\n          })\n        }\n      /> */}\n      <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { UpdateAdvancedOrganizerType } from './AdvancedOrganizer'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\n\nexport type AdvancedConclusionProps = {\n  updateAdvancedOrganizer: UpdateAdvancedOrganizerType\n}\n\nexport const AdvancedConclusion: FC<AdvancedConclusionProps> = ({\n  updateAdvancedOrganizer,\n}) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  useEffect(() => {\n    updateAdvancedOrganizer()\n  }, [state.context.advancedOrganizer.conclusion, updateAdvancedOrganizer])\n\n  return (\n    <>\n      <div>Conclusion</div>\n      <input\n        type=\"text\"\n        value={state.context.advancedOrganizer.conclusion}\n        onChange={(e: any) =>\n          event({ type: 'SET_CONCLUSION', payload: e.target.value })\n        }\n      />\n      <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useMutation, MutationFunctionOptions } from '@apollo/client'\nimport {\n  findEssayById_findEssayById_essay_topic,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n  updateAdvancedOrganizer,\n  updateAdvancedOrganizerVariables,\n} from '../../../../../../../../schemaTypes'\nimport { useStudentEssayContextProvider } from '../../state-and-styles/StudentEssayContext'\n\nimport { AdvancedAnswerTypes } from './AdvancedAnswerTypes'\n\nimport { AdvancedRestatement } from './AdvancedRestatement'\nimport { AdvancedConclusion } from './AdvancedConclusion'\nimport {\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  QuestionContainer,\n  QuestionStyle,\n} from '../../state-and-styles/assignedEssayStyles'\n\nexport type AdvancedOrganizerProps = {\n  topic: findEssayById_findEssayById_essay_topic\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer\n}\n\nexport const UPDATE_ADVANCED_ORGANIZER_MUTATION = gql`\n  mutation updateAdvancedOrganizer($input: UpdateAdvancedOrganizerInput!) {\n    updateAdvancedOrganizer(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\nexport type UpdateAdvancedOrganizerType = (\n  options?:\n    | MutationFunctionOptions<\n        updateAdvancedOrganizer,\n        updateAdvancedOrganizerVariables\n      >\n    | undefined,\n) => void\n\nexport const AdvancedOrganizer: FC<AdvancedOrganizerProps> = ({\n  topic,\n  organizer,\n}) => {\n  const [state] = useStudentEssayContextProvider()\n\n  const [updateAdvancedOrganizer] = useMutation<\n    updateAdvancedOrganizer,\n    updateAdvancedOrganizerVariables\n  >(UPDATE_ADVANCED_ORGANIZER_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        advancedSentenceStructure:\n          state.context.advancedOrganizer.advancedSentenceStructure,\n        restatement: state.context.advancedOrganizer.restatement,\n        conclusion: state.context.advancedOrganizer.conclusion,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Organize for this Question</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      <QuestionContainer>\n        <QuestionStyle>{topic.question}</QuestionStyle>\n      </QuestionContainer>\n      {state.matches('organizers.advancedOrganizer.restatement') && (\n        <AdvancedRestatement\n          updateAdvancedOrganizer={updateAdvancedOrganizer}\n        />\n      )}\n      {state.matches('organizers.advancedOrganizer.answer') && (\n        <AdvancedAnswerTypes organizer={organizer} />\n      )}\n      {state.matches('organizers.advancedOrganizer.conclusion') && (\n        <AdvancedConclusion updateAdvancedOrganizer={updateAdvancedOrganizer} />\n      )}\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useStudentEssayContextProvider } from '../state-and-styles/StudentEssayContext'\nimport { DevelopingOrganizer } from './developing/DevelopingOrganizer'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setOrganizer,\n  setOrganizerVariables,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n  findEssayQuestionById,\n  findEssayQuestionByIdVariables,\n  findEssayById_findEssayById_essay_topic,\n  WritingLevelEnum,\n} from '../../../../../../../schemaTypes'\nimport { AcademicOrganizer } from './academic/AcademicOrganizer'\nimport { AdvancedOrganizer } from './advanced/AdvancedOrganizer'\n\nexport type OrganizerInfoProps = {\n  organizer: findEssayById_findEssayById_essay_workingDraft_organizer\n  topic: findEssayById_findEssayById_essay_topic\n}\n\nexport const SET_ORGANIZER_LEVEL_MUTATION = gql`\n  mutation setOrganizer($input: SetOrganizerInput!) {\n    setOrganizer(input: $input) {\n      essay {\n        workingDraft {\n          organizer {\n            ... on DevelopingOrganizer {\n              developingSentenceStructure {\n                subject\n                verb\n                subjectCompliment\n                object\n              }\n              restatement\n              conclusion\n            }\n            ... on AcademicOrganizer {\n              academicSentenceStructure {\n                subject\n                verb\n                object\n              }\n              restatement\n              conclusion\n            }\n            ... on AdvancedOrganizer {\n              advancedSentenceStructure {\n                subject\n                verb\n                object\n              }\n              restatement\n              conclusion\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const FIND_ESSAY_QUESTION_BY_ID_QUERY = gql`\n  query findEssayQuestionById($input: FindEssayQuestionByIdInput!) {\n    findEssayQuestionById(input: $input) {\n      essayQuestion {\n        questionParts {\n          originalQuestion\n          modifiedQuestion\n          questionWord\n          helpingVerb\n          completeSubject\n          completePredicate\n          simpleSubject\n          simplePredicate\n          nounType\n          verbType\n          compoundNoun\n          object\n          subjectCompliment\n          questionType\n        }\n      }\n    }\n  }\n`\n\nexport const OrganizerInfo = ({ organizer, topic }: OrganizerInfoProps) => {\n  const [state] = useStudentEssayContextProvider()\n\n  const { loading, data } = useQuery<\n    findEssayQuestionById,\n    findEssayQuestionByIdVariables\n  >(FIND_ESSAY_QUESTION_BY_ID_QUERY, {\n    variables: {\n      input: { essayQuestionId: topic.essayQuestionId },\n    },\n    // onCompleted: (data) =>\n    //   console.log(data.findEssayQuestionById.essayQuestion.questionParts),\n    onError: (error) => console.error(error),\n  })\n\n  const [setOrganizer] = useMutation<setOrganizer, setOrganizerVariables>(\n    SET_ORGANIZER_LEVEL_MUTATION,\n    {\n      variables: {\n        input: {\n          essayId: state.context.essayId,\n          writingLevel: state.context.writingLevel,\n        },\n      },\n      onCompleted: (data) => {\n        console.log(data.setOrganizer.essay.workingDraft.organizer)\n      },\n      onError: (error) => console.error(error),\n      refetchQueries: ['findEssayById'],\n    },\n  )\n\n  useEffect(() => {\n    if (!organizer) {\n      setOrganizer()\n    }\n  }, [organizer, setOrganizer])\n\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      {organizer && (\n        <>\n          {state.matches('organizers.developingOrganizer') && (\n            <DevelopingOrganizer\n              topic={topic}\n              organizer={organizer}\n              questionParts={\n                data?.findEssayQuestionById.essayQuestion.questionParts!\n              }\n            />\n          )}\n          {state.matches('organizers.academicOrganizer') && (\n            <AcademicOrganizer\n              topic={topic}\n              organizer={organizer}\n              questionParts={\n                data?.findEssayQuestionById.essayQuestion.questionParts!\n              }\n            />\n          )}\n          {state.matches('organizers.advancedOrganizer') && (\n            <AdvancedOrganizer topic={topic} organizer={organizer} />\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import styled from 'styled-components'\nimport {\n  Standard8x12Container,\n  Standard4x6Container,\n} from '../../../../../../appStyles'\nimport {\n  SubmitEssayContainer,\n  OrganizerControlButton,\n} from '../../essays/assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport const ReadingGuideContainer = styled(Standard8x12Container)`\n  height: 95vh;\n  border-top: 3px solid var(--white);\n`\n\nexport const ReadingGuideDetailsContainer = styled.div`\n  grid-row: 1/4;\n  grid-column: -4/-1;\n  background-color: var(--blue);\n  color: var(--white);\n  border-left: 3px solid var(--white);\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n`\n\nexport const ReadingGuideInfoContainer = styled(Standard8x12Container)`\n  grid-row: 4/-1;\n  grid-column: -4/-1;\n  background-color: var(--grey);\n  color: var(--blue);\n  border-left: 3px solid var(--white);\n  border-top: 3px solid var(--white);\n  font-size: 1.3rem;\n`\n\nexport const ReadingGuideInfoSwitchButtonContainer = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-auto-flow: column;\n`\n\nexport const ReadingGuideInfoSwitchButton = styled.button`\n  width: 75%;\n  height: 50%;\n  font-size: larger;\n  background-color: var(--blue);\n  color: var(--white);\n`\nexport const ReadingGuideInfoTitle = styled.div`\n  grid-row: 2/3;\n  grid-column: 1/-1;\n  justify-self: center;\n  align-self: center;\n  text-decoration: underline;\n`\nexport const ReadingGuideInfoBody = styled.div`\n  grid-row: 3/-1;\n  grid-column: 1/-2;\n  overflow: scroll;\n`\n\nexport const ReadingGuideToCompleteContainer = styled(Standard8x12Container)`\n  grid-row: 1/-1;\n  grid-column: 1/-4;\n  font-size: 1.1rem;\n  border: 1px solid var(--blue);\n`\n\nexport const ReadingGuideHeader = styled.div`\n  grid-row: 1/2;\n  grid-column: 2/-2;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n  text-decoration: underline;\n`\nexport const QuestionBlock = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 2fr;\n`\nexport const Required = styled.span`\n  color: var(--red);\n`\nexport const SectionOrganizationContainer = styled.div`\n  grid-row: 2/3;\n  grid-column: 2/-2;\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`\n\nexport const SectionOrganizationBodyContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: left;\n  align-items: start;\n`\nexport const SectionOrganizationBodyEntry = styled.li``\n\nexport const ReadingGuideInput = styled.input`\n  border: 1px solid var(--white);\n  border-bottom: 1px solid var(--blue);\n  width: 100%;\n  color: var(--blue);\n  background-color: transparent;\n  font-size: 2.5vh;\n  align-self: start;\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const InputAndButtonContainer = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 1fr;\n  grid-column-gap: 1%;\n`\n\nexport const ReadingGuideSelect = styled.select`\n  width: 25%;\n  height: 50%;\n  font-size: inherit;\n  color: var(--blue);\n`\n\nexport const ReadingGuideQuestion = styled.div`\n  display: grid;\n  grid-row: 2/-2;\n  grid-column: 2/-2;\n  font-size: 3vh;\n`\n\nexport const ReadingGuideProblemsQuestionContainer = styled.form`\n  grid-row: 2/-2;\n  grid-column: 2/-2;\n  font-size: 3vh;\n  display: grid;\n\n  /* justify-items: center; */\n  align-items: center;\n`\n\nexport const ProblemsListContainer = styled.div`\n  align-self: start;\n  font-size: 2.5vh;\n  height: 100%;\n  overflow: scroll;\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`\n\nexport const ProblemsLisContainerTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n`\n\nexport const ProblemsListItem = styled.div`\n  cursor: pointer;\n  width: fit-content;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nexport const ProblemsToSelectContainer = styled.div``\n\nexport const ButtonContainer = styled.div`\n  justify-items: center;\n  display: grid;\n  grid-auto-flow: column;\n`\n\nexport const BlueButton = styled.button`\n  background-color: var(--blue);\n  color: var(--white);\n  font-size: 2vh;\n  border-radius: 5px;\n`\nexport const NextButton = styled(BlueButton)`\n  width: 35vh;\n`\n\nexport const GreyButton = styled(BlueButton)`\n  background-color: var(--grey);\n  color: var(--blue);\n`\n\nexport const ReadingGuideBiggestProblemContainer = styled(ReadingGuideQuestion)`\n  grid-template-rows: 1fr 4fr;\n  /* align-items: center; */\n`\n\nexport const Title = styled.div`\n  align-self: center;\n  justify-self: center;\n`\n\nexport type BiggestProblemListItemProps = {\n  selected: boolean\n}\nexport const BiggestProblemListItem = styled.div<BiggestProblemListItemProps>`\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n  cursor: pointer;\n  width: fit-content;\n`\n\nexport const ReadingGuideReasonForBiggestProblemContainer = styled(\n  ReadingGuideQuestion,\n)`\n  grid-template-rows: 1fr 2fr 1fr;\n`\n\nexport const SmallBlueButton = styled(BlueButton)`\n  height: 3vh;\n`\n\nexport const SmallNextButton = styled(SmallBlueButton)`\n  width: 35vh;\n`\n\nexport const ImportantPeopleContainer = styled(\n  ReadingGuideProblemsQuestionContainer,\n)``\n\nexport const HowAreImportantPeopleContectedContainer = styled(\n  ReadingGuideQuestion,\n)`\n  grid-template-rows: 1fr 2fr 3fr 1fr;\n`\n\nexport const SectionConsequencesContainer = styled(ReadingGuideQuestion)``\n\nexport const ReadingGuideTextArea = styled.textarea`\n  height: 90%;\n  font-family: inherit;\n  color: var(--blue);\n  background-color: transparent;\n  font-size: 2.5vh;\n  align-self: start;\n  &:focus {\n    outline: none;\n  }\n`\nexport const ReasonForOrganizationContainer = styled(QuestionBlock)`\n  grid-row: 3/4;\n  grid-column: 2/-2;\n`\n\nexport const MajorIssueContainer = styled(QuestionBlock)`\n  grid-row: 4/5;\n  grid-column: 2/-2;\n`\n\nexport const MajorIssueSolvedContainer = styled(QuestionBlock)`\n  grid-row: 5/6;\n  grid-column: 2/-2;\n`\nexport const MajorSolutionContainer = styled(QuestionBlock)`\n  grid-row: 6/7;\n  grid-column: 2/-2;\n`\nexport const ClarifyingQuestionsContainer = styled.div`\n  grid-row: 2/8;\n  grid-column: 2/-2;\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n`\nexport const ClarifyingQuestionsTitle = styled.div`\n  grid-row: 1/2;\n  align-self: center;\n`\nexport const ClarifyingQuestionsForm = styled.form`\n  grid-row: 2/4;\n\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-column-gap: 1%;\n`\n\nexport const ClarifyingQuestionsTextArea = styled(ReadingGuideTextArea)`\n  height: 80%;\n  align-self: center;\n`\nexport const ClarifyingQuestionsAddButton = styled.button`\n  background-color: var(--blue);\n  color: var(--white);\n  font-size: larger;\n  height: 50%;\n  align-self: center;\n`\n\nexport const ClarifyingQuestionsSubmittedQuestionsDisplay = styled.div`\n  grid-row: 4/8;\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`\nexport const ClarifyingQuestionsBlock = styled.div``\n\nexport const ClarifyingQuestionsSubmittedQuestion = styled.div`\n  :hover {\n    color: var(--red);\n  }\n`\n\nexport const ClarifyingQuestionsSubmittedQuestionTitle = styled.div`\n  justify-self: center;\n  text-decoration: underline;\n`\n\nexport const SubmitReadingGuideContainer = styled(SubmitEssayContainer)`\n  grid-row: 2/-2;\n  grid-column: 2/-2;\n  display: grid;\n  grid-template-rows: 4fr 1fr;\n`\nexport const SubmitReadingGuideButton = styled(OrganizerControlButton)``\n\nexport const ReadingGuideButtonArea = styled.div`\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const ReadingGuideQuestionNavButtons = styled.button`\n  width: 75%;\n  height: 100%;\n  font-size: 2vh;\n  color: var(--white);\n  background-color: var(--blue);\n  border-radius: 5px;\n`\nexport const ReadingGuideQuestionReviewTitle = styled.div`\n  font-size: 2.5vh;\n  text-align: center;\n`\nexport const ReadingGuideQuestionReview = styled.div`\n  display: grid;\n  height: 50vh;\n  overflow: scroll;\n`\nexport const ReadingGuideAnswerBlock = styled.div`\n  cursor: pointer;\n`\nexport const ReadingGuideQuestionReviewAnswer = styled.div`\n  padding-left: 5%;\n`\n","import styled from 'styled-components'\nimport {\n  ReadingGuideInfoSwitchButtonContainer,\n  ReadingGuideInfoSwitchButton,\n  ReadingGuideInfoTitle,\n  ReadingGuideInfoBody,\n  SectionOrganizationBodyEntry,\n} from '../../../readingGuides/state-and-styles/readingGuideStyles'\n\nexport const EssayInfoSwitchButtonContainer = styled(\n  ReadingGuideInfoSwitchButtonContainer,\n)``\n\nexport const EssayInfoSwitchButton = styled(ReadingGuideInfoSwitchButton)`\n  font-size: 2vh;\n  width: 80%;\n`\n\nexport const EssayInfoTitle = styled(ReadingGuideInfoTitle)``\n\nexport const EssayInfoBody = styled(ReadingGuideInfoBody)``\n\nexport const EssaySectionOrganizationBodyEntry = styled(\n  SectionOrganizationBodyEntry,\n)`\n  padding-bottom: 10%;\n`\n","import React, { FC } from 'react'\nimport {\n  EssayInfoTitle,\n  EssayInfoBody,\n} from '../state-and-styles/essayInfoStyles'\nimport { findEssayById_findEssayById_essay_lessonInfo_vocabList } from '../../../../../../../schemaTypes'\n\nexport type VocabProps = {\n  vocabList: findEssayById_findEssayById_essay_lessonInfo_vocabList[]\n}\n\nexport const Vocab: FC<VocabProps> = ({ vocabList }) => {\n  return (\n    <>\n      <EssayInfoTitle>Vocabulary</EssayInfoTitle>\n      <EssayInfoBody>\n        {vocabList.map((word, i) => (\n          <ul key={i}>\n            <li>\n              <span>{word.word}: </span>\n              <span>{word.definition}</span>\n            </li>\n          </ul>\n        ))}\n      </EssayInfoBody>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  EssayInfoTitle,\n  EssayInfoBody,\n  EssaySectionOrganizationBodyEntry,\n} from '../state-and-styles/essayInfoStyles'\nimport { useStudentEssayContextProvider } from '../state-and-styles/StudentEssayContext'\n\nexport type EssayHelpProps = {}\n\nexport const EssayHelp = ({}: EssayHelpProps) => {\n  const [state] = useStudentEssayContextProvider()\n\n  return (\n    <>\n      <EssayInfoTitle>Help with Your Essay</EssayInfoTitle>\n      <EssayInfoBody>\n        {state.matches('organizers.developingOrganizer.identifications') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Writing the answer to this question is a process, and I want to\n              help you by walking you through each step. Take your time and read\n              the directions and the feedback to get better. The more you try\n              the faster this gets.\n            </EssaySectionOrganizationBodyEntry>\n            {/* <EssaySectionOrganizationBodyEntry>\n              How Questions: How is the way something changed something or the\n              way a problem was solved.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The subject of a sentence is the person, place or thing (Noun)\n              that is doing something or being something. Example: Robert threw\n              the ball. Robert is the subject.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The verb is the thing the subject is doing or being. In the\n              example, threw is the verb (the ball is the object of the verb).\n            </EssaySectionOrganizationBodyEntry> */}\n          </ul>\n        )}\n        {state.matches('organizers.developingOrganizer.restatement') && (\n          <ul>\n            {/* <EssaySectionOrganizationBodyEntry>\n              To restate a question take off the question word (How or Why) and\n              the word ‘did’ if it is in the question.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Change the verb to past tense. Usually the -ed ending but double\n              check on google if -ed ending doesn’t sound correct.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Now add a phrase to the end of your restatement that matches the\n              question word.\n              <ul>\n                <li>Why questions will end 'for a certain reason.'</li>\n                <li>How questions will end 'in a certain way.'</li>\n              </ul>\n            </EssaySectionOrganizationBodyEntry> */}\n            <EssaySectionOrganizationBodyEntry>\n              Follow the directions for each step to complete the restatement\n              for your essay.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              If you get the answer wrong, please read the feedback section that\n              pops up to help guide you to the correct answer.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.developingOrganizer.answer') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Do your best to answer the question in a way that fits the\n              question type.\n              <ul>\n                <li>\n                  How questions want to know the way problems are solved or the\n                  way things affect or change other things.\n                </li>\n                <li>\n                  Why questions want to know what caused this to happen (What\n                  were the reasons this happened).\n                </li>\n              </ul>\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.developingOrganizer.conclusion') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Keep your conclusion to one sentence.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Sometimes the conclusion to the question you were asked is\n              explained in the assigned section. However, sometimes you have to\n              guess. If you guess, please explain that your guess could have\n              happened.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Do not use “That is how the subject did what they did…” as a\n              conclusion because that just restates the restatement.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.academicOrganizer.identifications') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Writing the answer to this question is a process, and I want to\n              help you by walking you through each step. Take your time and read\n              the directions and the feedback to get better. The more you try\n              the faster this gets.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.academicOrganizer.restatement') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Follow the directions for each step to complete the restatement\n              for your essay.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              If you get the answer wrong, please read the feedback section that\n              pops up to help guide you to the correct answer.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.academicOrganizer.answer.questionType') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              To find the Question Type:\n              <ul>\n                <EssaySectionOrganizationBodyEntry>\n                  Look at the question word and use these directions to figure\n                  it out\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Why questions are always cause and effect so select Why: Cause\n                  and Effect\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  How questions can be both, so look at the verb next.\n                </EssaySectionOrganizationBodyEntry>\n                <ul>\n                  <EssaySectionOrganizationBodyEntry>\n                    If the verb is a synonym for cause or effect (Affect,\n                    Change, Evolve, Influence, Shape) it is How: Cause and\n                    Effect\n                  </EssaySectionOrganizationBodyEntry>\n                  <EssaySectionOrganizationBodyEntry>\n                    If the verb isn’t a synonym for cause or effect its problem\n                    and solution so select How: Problem and Solution\n                  </EssaySectionOrganizationBodyEntry>\n                </ul>\n              </ul>\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The rules to writing a topic sentence are the same, except the\n              ending might change depending on the question type.\n            </EssaySectionOrganizationBodyEntry>\n            <ul>\n              <EssaySectionOrganizationBodyEntry>\n                If the question type is Why: Cause and Effect the ending will be\n                \"...for many reasons.\"\n              </EssaySectionOrganizationBodyEntry>\n              <EssaySectionOrganizationBodyEntry>\n                If the question type is How: Cause and Effect the ending will be\n                \"...in certain way.\"\n              </EssaySectionOrganizationBodyEntry>\n              <EssaySectionOrganizationBodyEntry>\n                If the question type is How: Problem and Solution the ending\n                will be \"...to solve a problem.\" unless the words problem and\n                solution are already in the question then end \"...in certain\n                way.\"\n              </EssaySectionOrganizationBodyEntry>\n            </ul>\n          </ul>\n        )}\n        {state.matches(\n          'organizers.academicOrganizer.answer.problemSolution',\n        ) && (\n          <ul>\n            {/* <EssaySectionOrganizationBodyEntry>\n              Since the verb of the question\n            </EssaySectionOrganizationBodyEntry> */}\n            <EssaySectionOrganizationBodyEntry>\n              Some of the answers may actually come from earlier parts of the\n              text that aren't covered in the assigned sections, but have been\n              covered in our lessons already. Its ok to use this information as\n              long as you are paraphrasing.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              When answering the questions on this page, be careful not to\n              confuse how questions and why questions. How is asking for the\n              way, and why is asking for the reason.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'organizers.academicOrganizer.answer.whyCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              The proximate cause is the direct reason something happened. The\n              answer to this will always be explained in the assigned sections\n              of the text.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The ultimate cause is a little different than the proximate cause.\n              To find the ultimate cause, figure out the reason your proximate\n              cause happened. Think of it as links on a chain; events in the\n              past are linked the same way.\n            </EssaySectionOrganizationBodyEntry>{' '}\n            <EssaySectionOrganizationBodyEntry>\n              The ultimate cause may come from the assigned text, but it is also\n              possible that it came before the assigned text, so its ok to read\n              past sections we've already covered.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'organizers.academicOrganizer.answer.howCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              All How: Cause and Effect questions are basically asking you about\n              how things/people affect or change other things or people.\n            </EssaySectionOrganizationBodyEntry>\n\n            <EssaySectionOrganizationBodyEntry>\n              You don't need to write in complete sentences. Keep it as simple\n              as possible because these are just ideas to help you write the\n              final answer.\n            </EssaySectionOrganizationBodyEntry>\n\n            <EssaySectionOrganizationBodyEntry>\n              To answer completely you need to explain what the object of the\n              verb was like before the subject of the question. This should only\n              be one sentence to set up the answer.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The second part of the answer needs to explain the way the object\n              of the question was different because of subject of the question.\n              This can be two to three sentences at the most.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.academicOrganizer.conclusion') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              The conclusion is still going to need to be a consequence of the\n              topic, but now I want you to set the consequence up in a certain\n              way.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              For example: \"As a result of Robert throwing the ball, a glass\n              window was broken.\"\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The Conclusion should only be one sentence.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.advancedOrganizer.restatement') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced Restatement\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.advancedOrganizer.answer.questionType') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced QuestionType\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'organizers.advancedOrganizer.answer.problemSolution',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced Problem Solution\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'organizers.advancedOrganizer.answer.whyCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced whyCauseEffect\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'organizers.advancedOrganizer.answer.howCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced howCauseEffect\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('organizers.advancedOrganizer.conclusion') && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced Conclusion\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('workingDraft') && (\n          <ul>\n            {state.context.writingLevel === 'DEVELOPING' && (\n              <>\n                <EssaySectionOrganizationBodyEntry>\n                  Use the organizer on the left to put your ideas into a\n                  paragraph that has the three parts of your essay: a\n                  restatement, answer, and conclusion.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Do your best to proofread to catch and mistakes and do your\n                  best.\n                </EssaySectionOrganizationBodyEntry>\n              </>\n            )}\n            {state.context.writingLevel === 'ACADEMIC' && (\n              <>\n                <EssaySectionOrganizationBodyEntry>\n                  As always, start the essay with the restatement as your topic\n                  sentence, and end it with the conclusion, but the answer is\n                  going need more structure.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Use the organizer as a guide to putting the answer together.\n                  Use transitions to connect your ideas and keep it as simple as\n                  you can while fully explaining the topic sentence.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Keep your essay to five to six sentences max.\n                </EssaySectionOrganizationBodyEntry>\n              </>\n            )}\n            {state.context.writingLevel === 'ADVANCED' && (\n              <EssaySectionOrganizationBodyEntry>\n                Advanced Rubric Help\n              </EssaySectionOrganizationBodyEntry>\n            )}\n          </ul>\n        )}\n      </EssayInfoBody>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  EssayInfoTitle,\n  EssayInfoBody,\n  EssaySectionOrganizationBodyEntry,\n} from '../state-and-styles/essayInfoStyles'\nimport { useStudentEssayContextProvider } from '../state-and-styles/StudentEssayContext'\n\nexport type RubricsProps = {}\n\nexport const Rubrics: FC<RubricsProps> = () => {\n  const [state] = useStudentEssayContextProvider()\n  return (\n    <>\n      <EssayInfoTitle>Rubric</EssayInfoTitle>\n      <EssayInfoBody>\n        {state.matches('workingDraft') && (\n          <ul>\n            {state.context.writingLevel === 'DEVELOPING' && (\n              <EssaySectionOrganizationBodyEntry>\n                <>\n                  <EssaySectionOrganizationBodyEntry>\n                    Must have all three parts of the essay: A restatement,\n                    answer, conclusion.\n                  </EssaySectionOrganizationBodyEntry>\n                  <EssaySectionOrganizationBodyEntry>\n                    Response should only be one paragraph. No more.\n                  </EssaySectionOrganizationBodyEntry>\n                  <EssaySectionOrganizationBodyEntry>\n                    Answer must be on topic with the question asked.\n                  </EssaySectionOrganizationBodyEntry>\n                  <EssaySectionOrganizationBodyEntry>\n                    Ideas in the answer must be logical (make sense) as a whole,\n                    not just ideas listed side by side. Use transitions to\n                    accomplish this.\n                  </EssaySectionOrganizationBodyEntry>\n                  <EssaySectionOrganizationBodyEntry>\n                    Conclusion must be a consequence of the subject's actions\n                    and be set up according to the directions in the organizer.\n                  </EssaySectionOrganizationBodyEntry>\n                  <EssaySectionOrganizationBodyEntry>\n                    Only use material from the assigned text.\n                  </EssaySectionOrganizationBodyEntry>\n                </>\n              </EssaySectionOrganizationBodyEntry>\n            )}\n            {state.context.writingLevel === 'ACADEMIC' && (\n              <EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Must have all three parts of the essay: A restatement, answer,\n                  conclusion.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Response should only be one paragraph. No more.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Answer must be on topic with the question asked.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Conclusion must be a consequence of the subject's actions.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Only use material from the assigned text.\n                </EssaySectionOrganizationBodyEntry>\n              </EssaySectionOrganizationBodyEntry>\n            )}\n            {state.context.writingLevel === 'ADVANCED' && (\n              <EssaySectionOrganizationBodyEntry>\n                Advanced Rubric\n              </EssaySectionOrganizationBodyEntry>\n            )}\n          </ul>\n        )}\n      </EssayInfoBody>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  EssayInfoSwitchButtonContainer,\n  EssayInfoSwitchButton,\n} from '../state-and-styles/essayInfoStyles'\nimport { useStudentEssayContextProvider } from '../state-and-styles/StudentEssayContext'\nimport { findEssayById_findEssayById_essay_lessonInfo_vocabList } from '../../../../../../../schemaTypes'\nimport { Vocab } from './Vocab'\nimport { EssayHelp } from './EssayHelp'\nimport { Rubrics } from './Rubrics'\n\nexport type EssayInfoProps = {\n  vocabList: findEssayById_findEssayById_essay_lessonInfo_vocabList[]\n}\n\nexport const EssayInfo: FC<EssayInfoProps> = ({ vocabList }) => {\n  const [state, event] = useStudentEssayContextProvider()\n\n  return (\n    <>\n      <EssayInfoSwitchButtonContainer>\n        <EssayInfoSwitchButton\n          onClick={() => event({ type: 'SET_HELP_DISPLAY' })}\n        >\n          Help\n        </EssayInfoSwitchButton>\n        <EssayInfoSwitchButton\n          onClick={() => event({ type: 'SET_VOCAB_DISPLAY' })}\n        >\n          Vocab\n        </EssayInfoSwitchButton>\n        {state.matches('workingDraft') && (\n          <EssayInfoSwitchButton\n            onClick={() => event({ type: 'SET_RUBRIC_DISPLAY' })}\n          >\n            Rubric\n          </EssayInfoSwitchButton>\n        )}\n      </EssayInfoSwitchButtonContainer>\n      {state.context.helpDisplay && <EssayHelp />}\n      {state.context.vocabDisplay && <Vocab vocabList={vocabList} />}\n      {state.context.rubricDisplay && state.matches('workingDraft') && (\n        <Rubrics />\n      )}\n    </>\n  )\n}\n","import { useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { gql, useQuery, MutationFunctionOptions } from '@apollo/client'\nimport { StudentEssayEditor } from './StudentEssayEditor'\n\nimport {\n  findEssayById,\n  findEssayByIdVariables,\n  UpdateWorkingDraft,\n  UpdateWorkingDraftVariables,\n  findEssayById_findEssayById_essay_workingDraft_organizer,\n  findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer,\n  findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer,\n  findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer,\n  findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType,\n  findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType,\n  SubmittedFinalDraftsInput,\n  me_me_Student,\n} from '../../../../../../schemaTypes'\nimport { useStudentEssayContextProvider } from './state-and-styles/StudentEssayContext'\nimport { OrganizerInfo } from './organizers/OrganizerInfo'\nimport {\n  EssayContainer,\n  AssignmentDetailsContainer,\n  EssayInfoContainer,\n  OrganizerContainer,\n  AssignmentDetailsReadingInfo,\n  AssignmentDetailsDueDate,\n  AssignmentDetailsGoBackButtonContainer,\n  AssignmentDetailsGoBackButton,\n  AssignmentDetailsPartContainers,\n} from './state-and-styles/assignedEssayStyles'\nimport { EssayInfo } from './essay-info/EssayInfo'\nimport { UnderlinedCenteredText } from '../../../../../../appStyles'\nimport { useGradeCalculator } from '../../../../../../hooks/useGradeCalculator'\nimport { useClassTimeIndicator } from '../../../../../../hooks/useClassTimeIndicator'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport { useAssignmentsAllowedInClassCheck } from '../../../../../../hooks/useAssignmentsAllowedInClassCheck'\n\nexport type EssayToCompleteProps = {}\n\nexport const FIND_ESSAY_BY_ID_QUERY = gql`\n  query findEssayById($input: FindEssayByIdInput!) {\n    findEssayById(input: $input) {\n      essay {\n        _id\n        workingDraft {\n          organizer {\n            ... on DevelopingOrganizer {\n              basicQuestionType\n              developingSentenceStructure {\n                subject\n                verb\n              }\n              restatement\n              answer\n              conclusion\n            }\n            ... on AcademicOrganizer {\n              academicSentenceStructure {\n                subject\n                verb\n                object\n              }\n              restatement\n              conclusion\n              questionType\n              answerType {\n                ... on ProblemSolutionAnswerType {\n                  problem\n                  reasonForProblem\n                  solvedBy\n                  whySolutionSolved\n                }\n                ... on HowCauseEffectAnswerType {\n                  before\n                  cause\n                  after\n                }\n                ... on WhyCauseEffectAnswerType {\n                  ultimateCause\n                  proximateCause\n                }\n              }\n            }\n            ... on AdvancedOrganizer {\n              advancedSentenceStructure {\n                subject\n                verb\n                object\n              }\n              answerType {\n                ... on ProblemSolutionAnswerType {\n                  problem\n                  reasonForProblem\n                  solvedBy\n                  whySolutionSolved\n                }\n                ... on HowCauseEffectAnswerType {\n                  before\n                  cause\n                  after\n                }\n                ... on WhyCauseEffectAnswerType {\n                  ultimateCause\n                  proximateCause\n                }\n              }\n              restatement\n              conclusion\n              questionType\n            }\n          }\n          draft\n        }\n        readings {\n          readingPages\n          readingSections\n        }\n        hasOwner {\n          _id\n        }\n        markingPeriod\n        dueDate\n        dueTime\n        topic {\n          question\n          questionType\n          writingLevel\n          essayQuestionId\n          questionType\n        }\n        lessonInfo {\n          vocabList {\n            word\n            definition\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const UPDATE_WORKING_DRAFT_MUTATION = gql`\n  mutation UpdateWorkingDraft($input: UpdateWorkingDraftInput!) {\n    updateWorkingDraft(input: $input) {\n      essay {\n        workingDraft {\n          draft\n        }\n      }\n    }\n  }\n`\n\nexport type updateWorkingDraftType = (\n  options?:\n    | MutationFunctionOptions<UpdateWorkingDraft, UpdateWorkingDraftVariables>\n    | undefined,\n) => void\n\nexport const EssayToComplete = ({}: EssayToCompleteProps) => {\n  const me: me_me_Student = useUserContextProvider()\n  const { essayToComplete } = useParams()\n  const { classTime } = useClassTimeIndicator(me)\n  // const { assignmentsInClassAllowed } = me.inCourses[0].hasCourseInfo!\n  const { assignmentsAllowedInClass } = useAssignmentsAllowedInClassCheck(me)\n\n  const navigate = useNavigate()\n  const [state, event] = useStudentEssayContextProvider()\n\n  useEffect(() => {\n    event({ type: 'SET_ESSAY_ID', payload: essayToComplete! })\n  }, [essayToComplete, event])\n\n  const { loading, data } = useQuery<findEssayById, findEssayByIdVariables>(\n    FIND_ESSAY_BY_ID_QUERY,\n    {\n      variables: {\n        input: { _id: essayToComplete! },\n      },\n      fetchPolicy: 'network-only',\n      onCompleted: (data) => {\n        const draftToParse = JSON.parse(\n          data.findEssayById.essay.workingDraft.draft,\n        )\n        const stringDraft = JSON.stringify(draftToParse)\n        event({\n          type: 'SET_DRAFT',\n          payload: stringDraft,\n        })\n\n        event({\n          type: 'SET_WRITING_LEVEL',\n          payload: data.findEssayById.essay.topic.writingLevel,\n        })\n        event({ type: 'ORGANIZER' })\n\n        if (\n          data.findEssayById.essay.workingDraft.organizer?.__typename ===\n          'DevelopingOrganizer'\n        ) {\n          const organizer: findEssayById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer =\n            data.findEssayById.essay.workingDraft.organizer\n          event({\n            type: 'SET_DEVELOPING_SENTENCE_STRUCTURE',\n            payload: {\n              subject: organizer!.developingSentenceStructure.subject,\n              verb: organizer.developingSentenceStructure.verb,\n            },\n          })\n\n          event({\n            type: 'SET_BASIC_QUESTION_TYPE',\n            payload: organizer.basicQuestionType!,\n          })\n          event({ type: 'SET_RESTATEMENT', payload: organizer.restatement })\n          event({ type: 'SET_ANSWER', payload: organizer.answer })\n          event({ type: 'SET_CONCLUSION', payload: organizer.conclusion })\n        }\n        // preloading all the parts of the Academic Organizer with preanswered information\n        if (\n          data.findEssayById.essay.workingDraft.organizer?.__typename ===\n          'AcademicOrganizer'\n        ) {\n          const organizer: findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer =\n            data.findEssayById.essay.workingDraft.organizer\n\n          const answerTypes: findEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType =\n            organizer.answerType!\n\n          event({\n            type: 'SET_ACADEMIC_SENTENCE_STRUCTURE',\n            payload: {\n              subject: organizer.academicSentenceStructure.subject,\n              verb: organizer.academicSentenceStructure.verb,\n              object: organizer.academicSentenceStructure.object,\n            },\n          })\n          event({ type: 'SET_RESTATEMENT', payload: organizer.restatement })\n          if (organizer.questionType) {\n            event({\n              type: 'SET_FULL_QUESTION_TYPE',\n              payload: organizer.questionType,\n            })\n            event({ type: 'SET_PRE_LOADED', payload: true })\n            if (answerTypes.__typename === 'ProblemSolutionAnswerType') {\n              const type = answerTypes\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: {\n                  problem: type.problem,\n                  reasonForProblem: type.reasonForProblem,\n                  solvedBy: type.solvedBy,\n                  whySolutionSolved: type.whySolutionSolved,\n                },\n              })\n            }\n            if (answerTypes.__typename === 'HowCauseEffectAnswerType') {\n              const type = answerTypes\n              event({\n                type: 'SET_HOW_CAUSE_EFFECT',\n                payload: {\n                  before: type.before,\n                  cause: type.cause,\n                  after: type.after,\n                },\n              })\n            }\n            if (answerTypes.__typename === 'WhyCauseEffectAnswerType') {\n              const type = answerTypes\n              event({\n                type: 'SET_WHY_CAUSE_EFFECT',\n                payload: {\n                  ultimateCause: type.ultimateCause,\n                  proximateCause: type.proximateCause,\n                },\n              })\n            }\n          }\n          event({ type: 'SET_CONCLUSION', payload: organizer.conclusion })\n        }\n        if (\n          data.findEssayById.essay.workingDraft.organizer?.__typename ===\n          'AdvancedOrganizer'\n        ) {\n          const organizer: findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer =\n            data.findEssayById.essay.workingDraft.organizer\n\n          const answerTypes: findEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType =\n            organizer.answerType!\n\n          event({\n            type: 'SET_ADVANCED_SENTENCE_STRUCTURE',\n            payload: {\n              subject: organizer.advancedSentenceStructure.subject,\n              verb: organizer.advancedSentenceStructure.verb,\n              object: organizer.advancedSentenceStructure.object,\n            },\n          })\n          event({ type: 'SET_RESTATEMENT', payload: organizer.restatement })\n          if (organizer.questionType) {\n            event({\n              type: 'SET_FULL_QUESTION_TYPE',\n              payload: organizer.questionType,\n            })\n            event({ type: 'SET_PRE_LOADED', payload: true })\n            if (answerTypes.__typename === 'ProblemSolutionAnswerType') {\n              const type = answerTypes\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: {\n                  problem: type.problem,\n                  reasonForProblem: type.reasonForProblem,\n                  solvedBy: type.solvedBy,\n                  whySolutionSolved: type.whySolutionSolved,\n                },\n              })\n            }\n            if (answerTypes.__typename === 'HowCauseEffectAnswerType') {\n              const type = answerTypes\n              event({\n                type: 'SET_HOW_CAUSE_EFFECT',\n                payload: {\n                  before: type.before,\n                  cause: type.cause,\n                  after: type.after,\n                },\n              })\n            }\n            if (answerTypes.__typename === 'WhyCauseEffectAnswerType') {\n              const type = answerTypes\n              event({\n                type: 'SET_WHY_CAUSE_EFFECT',\n                payload: {\n                  ultimateCause: type.ultimateCause,\n                  proximateCause: type.proximateCause,\n                },\n              })\n            }\n          }\n          event({ type: 'SET_CONCLUSION', payload: organizer.conclusion })\n        }\n        event({ type: 'NEXT' })\n      },\n      onError: (error) => console.error(error),\n    },\n  )\n\n  const organizer = data?.findEssayById.essay.workingDraft\n    .organizer as findEssayById_findEssayById_essay_workingDraft_organizer\n\n  const submittedFinalDraft: SubmittedFinalDraftsInput = {\n    draftNumber: 0, //Because this component will always be the first draft\n    draft: state.context.draftToUpdate,\n    gradingDraft: state.context.draftToUpdate,\n    rubricEntries: [],\n    additionalComments: [],\n    score: 0,\n    graded: false,\n  }\n  const dueTime = [\n    data?.findEssayById.essay.dueTime!.slice(\n      0,\n      data?.findEssayById.essay.dueTime!.length - 6,\n    ),\n    data?.findEssayById.essay.dueTime!.slice(\n      data?.findEssayById.essay.dueTime!.length - 2,\n      data?.findEssayById.essay.dueTime!.length,\n    ),\n  ].join(' ')\n\n  // const { grade, loading: gradeLoading } = useGradeCalculator({\n  //   studentId: data?.findEssayById.essay.hasOwner._id!,\n  //   markingPeriod: data?.findEssayById.essay.markingPeriod!,\n  //   polling: false,\n  // })\n\n  useEffect(() => {\n    if (classTime && !assignmentsAllowedInClass)\n      navigate('/dashboard/assignments')\n  }, [classTime, navigate, assignmentsAllowedInClass])\n\n  if (loading) return <div>Loading </div>\n  return (\n    <EssayContainer>\n      <AssignmentDetailsContainer>\n        <AssignmentDetailsPartContainers>\n          <AssignmentDetailsReadingInfo>\n            <UnderlinedCenteredText>Assigned Sections</UnderlinedCenteredText>\n            Read pages {data?.findEssayById.essay.readings.readingPages}:{' '}\n            {data?.findEssayById.essay.readings.readingSections}\n          </AssignmentDetailsReadingInfo>\n        </AssignmentDetailsPartContainers>\n        <AssignmentDetailsPartContainers>\n          <AssignmentDetailsDueDate>\n            <UnderlinedCenteredText>Essay Due Date</UnderlinedCenteredText>{' '}\n            {data?.findEssayById.essay.dueDate} at {dueTime}\n          </AssignmentDetailsDueDate>\n        </AssignmentDetailsPartContainers>\n        <AssignmentDetailsGoBackButtonContainer>\n          <AssignmentDetailsGoBackButton\n            onClick={() => navigate('/dashboard/assignments')}\n          >\n            Go Back to Assignments\n          </AssignmentDetailsGoBackButton>\n        </AssignmentDetailsGoBackButtonContainer>\n      </AssignmentDetailsContainer>\n\n      <EssayInfoContainer>\n        <EssayInfo\n          vocabList={data?.findEssayById.essay.lessonInfo!.vocabList!}\n        />\n      </EssayInfoContainer>\n\n      {data?.findEssayById.essay ? (\n        <>\n          {state.matches('organizers') && (\n            <OrganizerContainer>\n              <OrganizerInfo\n                organizer={organizer}\n                topic={data.findEssayById.essay.topic}\n              />\n            </OrganizerContainer>\n          )}\n          {state.matches('workingDraft') && (\n            <>\n              <StudentEssayEditor\n                essay={data?.findEssayById.essay!}\n                submittedFinalDraft={submittedFinalDraft}\n              />\n            </>\n          )}\n        </>\n      ) : (\n        <div>Something messed up</div>\n      )}\n    </EssayContainer>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  QuestionTypeEnum,\n  WritingLevelEnum,\n  BasicQuestionEnum,\n  DevelopingSentenceStructureInput,\n  AcademicSentenceStructureInput,\n  AdvancedSentenceStructureInput,\n} from '../../../../../../../schemaTypes'\n\nexport type completedEssayMachineSchema = {\n  states: {\n    reviewEssay: {}\n    reviewOrganizer: {\n      states: {\n        organizers: {\n          states: {\n            transition: {}\n            developingOrganizer: {\n              states: {\n                loading: {}\n                identifications: {}\n                restatement: {}\n                answer: {}\n                conclusion: {}\n              }\n            }\n            academicOrganizer: {\n              states: {\n                loading: {}\n                restatement: {}\n                answer: {\n                  states: {\n                    questionType: {}\n                    transition: {}\n                    problemSolution: {}\n                    whyCauseEffect: {}\n                    howCauseEffect: {}\n                  }\n                }\n                conclusion: {}\n              }\n            }\n            advancedOrganizer: {\n              states: {\n                loading: {}\n                restatement: {}\n                answer: {\n                  states: {\n                    questionType: {}\n                    transition: {}\n                    problemSolution: {}\n                    whyCauseEffect: {}\n                    howCauseEffect: {}\n                  }\n                }\n                conclusion: {}\n              }\n            }\n          }\n        }\n      }\n    }\n    redoEssay: {}\n  }\n}\nexport type completedEssayMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'TRANSITION' }\n  | { type: 'RESTATEMENT' }\n  | { type: 'CONCLUSION' }\n  | { type: 'ANSWER' }\n  | { type: 'ESSAY' }\n  | { type: 'IDENTIFICATIONS' }\n  | { type: 'QUESTION_TYPE' }\n  | { type: 'SET_DRAFT_NUMBER'; payload: number }\n  | { type: 'ORGANIZER' }\n  | { type: 'SET_ESSAY_ID'; payload: string }\n  | { type: 'SET_WRITING_LEVEL'; payload: WritingLevelEnum }\n  | { type: 'SET_RESTATEMENT'; payload: string }\n  | { type: 'SET_CONCLUSION'; payload: string }\n  | { type: 'SET_BASIC_QUESTION_TYPE'; payload: BasicQuestionEnum }\n  | { type: 'SET_FULL_QUESTION_TYPE'; payload: QuestionTypeEnum }\n  | {\n      type: 'SET_DEVELOPING_SENTENCE_STRUCTURE'\n      payload: DevelopingSentenceStructureInput\n    }\n  | { type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT'; payload: string }\n  | { type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_VERB'; payload: string }\n  | { type: 'SET_ANSWER'; payload: string }\n  | {\n      type: 'SET_ACADEMIC_SENTENCE_STRUCTURE'\n      payload: AcademicSentenceStructureInput\n    }\n  | {\n      type: 'SET_ADVANCED_SENTENCE_STRUCTURE'\n      payload: AdvancedSentenceStructureInput\n    }\n  | { type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT'; payload: string }\n  | { type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_VERB'; payload: string }\n  | { type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT'; payload: string }\n  | { type: 'SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT'; payload: string }\n  | { type: 'SET_ADVANCED_SENTENCE_STRUCTURE_VERB'; payload: string }\n  | { type: 'SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT'; payload: string }\n  | {\n      type: 'SET_PROBLEM_SOLUTION'\n      payload: {\n        problem: string\n        reasonForProblem: string\n        solvedBy: string\n        whySolutionSolved: string\n      }\n    }\n  | {\n      type: 'SET_HOW_CAUSE_EFFECT'\n      payload: {\n        before: string\n        cause: string\n        after: string\n      }\n    }\n  | {\n      type: 'SET_WHY_CAUSE_EFFECT'\n      payload: {\n        proximateCause: string\n        ultimateCause: string\n      }\n    }\n  | {\n      type: 'SET_WHY_CAUSE_EFFECT'\n      payload: { proximateCause: string; ultimateCause: string }\n    }\n  | {\n      type: 'SET_HOW_CAUSE_EFFECT'\n      payload: { before: string; cause: string; after: string }\n    }\n  | { type: 'SET_QUESTION_TYPE'; payload: string }\n  | { type: 'SET_DRAFT'; payload: string }\n  | { type: 'SET_TEXT_TO_SUBMIT'; payload: string }\n  | { type: 'SET_ORGANIZER_VIEW'; payload: boolean }\n\nexport type completedEssayMachineContext = {\n  draftNumber: number\n  organizerView: boolean\n  essayId: string\n  writingLevel: WritingLevelEnum\n  developingOrganizer: {\n    questionType: BasicQuestionEnum\n    developingSentenceStructure: { subject: string; verb: string }\n    restatement: string\n    answer: string\n    conclusion: string\n  }\n  academicOrganizer: {\n    questionType: QuestionTypeEnum\n    academicSentenceStructure: {\n      subject: string\n      verb: string\n      object: string | null\n    }\n    restatement: string\n    answer: {\n      problemSolution: {\n        problem: string\n        reasonForProblem: string\n        solvedBy: string\n        whySolutionSolved: string\n      }\n      howCauseEffect: {\n        before: string\n        cause: string\n        after: string\n      }\n      whyCauseEffect: {\n        ultimateCause: string\n        proximateCause: string\n      }\n    }\n    conclusion: string\n  }\n  advancedOrganizer: {\n    questionType: QuestionTypeEnum\n    advancedSentenceStructure: {\n      subject: string\n      verb: string\n      object: string | null\n    }\n    restatement: string\n    answer: {\n      preLoaded: boolean\n      problemSolution: {\n        problem: string\n        reasonForProblem: string\n        solvedBy: string\n        whySolutionSolved: string\n      }\n      howCauseEffect: {\n        before: string\n        cause: string\n        after: string\n      }\n      whyCauseEffect: {\n        ultimateCause: string\n        proximateCause: string\n      }\n    }\n    conclusion: string\n  }\n  draftToUpdate: string\n  textToSubmit: string\n}\n\nexport const completedEssayMachine = Machine<\n  completedEssayMachineContext,\n  completedEssayMachineSchema,\n  completedEssayMachineEvent\n>({\n  id: 'completedEssay',\n  initial: 'reviewEssay',\n  context: {\n    draftNumber: 0,\n    organizerView: false,\n    essayId: '',\n    writingLevel: WritingLevelEnum.DEVELOPING,\n    developingOrganizer: {\n      questionType: BasicQuestionEnum.HOW,\n      developingSentenceStructure: {\n        subject: '',\n        verb: '',\n      },\n      restatement: '',\n      answer: '',\n      conclusion: '',\n    },\n    academicOrganizer: {\n      questionType: QuestionTypeEnum.HOW_PROBLEM_SOLUTION,\n      academicSentenceStructure: {\n        subject: '',\n        verb: '',\n        object: '',\n      },\n      restatement: '',\n      answer: {\n        problemSolution: {\n          problem: '',\n          reasonForProblem: '',\n          solvedBy: '',\n          whySolutionSolved: '',\n        },\n        howCauseEffect: {\n          before: '',\n          cause: '',\n          after: '',\n        },\n        whyCauseEffect: {\n          ultimateCause: '',\n          proximateCause: '',\n        },\n      },\n      conclusion: '',\n    },\n    advancedOrganizer: {\n      questionType: QuestionTypeEnum.HOW_PROBLEM_SOLUTION,\n      advancedSentenceStructure: {\n        subject: '',\n        verb: '',\n        object: '',\n      },\n      restatement: '',\n      answer: {\n        preLoaded: false,\n        problemSolution: {\n          problem: '',\n          reasonForProblem: '',\n          solvedBy: '',\n          whySolutionSolved: '',\n        },\n        howCauseEffect: {\n          before: '',\n          cause: '',\n          after: '',\n        },\n        whyCauseEffect: {\n          ultimateCause: '',\n          proximateCause: '',\n        },\n      },\n      conclusion: '',\n    },\n    draftToUpdate: '',\n    textToSubmit: '',\n  },\n  states: {\n    reviewEssay: {\n      on: {\n        NEXT: 'redoEssay',\n        ORGANIZER: 'reviewOrganizer',\n        SET_DRAFT_NUMBER: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              draftNumber: evt.payload,\n            }\n          }),\n        },\n        SET_ESSAY_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              essayId: evt.payload,\n            }\n          }),\n        },\n        SET_WRITING_LEVEL: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              writingLevel: evt.payload,\n            }\n          }),\n        },\n        SET_DRAFT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              draftToUpdate: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    reviewOrganizer: {\n      initial: 'organizers',\n      states: {\n        organizers: {\n          initial: 'transition',\n          states: {\n            transition: {\n              on: {\n                '': [\n                  {\n                    target: 'developingOrganizer',\n                    cond: (ctx) => ctx.writingLevel === 'DEVELOPING',\n                  },\n                  {\n                    target: 'academicOrganizer',\n                    cond: (ctx) => ctx.writingLevel === 'ACADEMIC',\n                  },\n                  {\n                    target: 'advancedOrganizer',\n                    cond: (ctx) => ctx.writingLevel === 'ADVANCED',\n                  },\n                ],\n              },\n            },\n            developingOrganizer: {\n              initial: 'loading',\n              states: {\n                loading: {\n                  on: {\n                    NEXT: 'identifications',\n                    SET_BASIC_QUESTION_TYPE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            questionType: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_DEVELOPING_SENTENCE_STRUCTURE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            developingSentenceStructure: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            developingSentenceStructure: {\n                              ...ctx.developingOrganizer\n                                .developingSentenceStructure,\n                              subject: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_DEVELOPING_SENTENCE_STRUCTURE_VERB: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            developingSentenceStructure: {\n                              ...ctx.developingOrganizer\n                                .developingSentenceStructure,\n                              verb: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_ANSWER: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            answer: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_CONCLUSION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            conclusion: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                identifications: {\n                  on: {\n                    RESTATEMENT: 'restatement',\n                    SET_BASIC_QUESTION_TYPE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            questionType: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_DEVELOPING_SENTENCE_STRUCTURE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            developingSentenceStructure: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            developingSentenceStructure: {\n                              ...ctx.developingOrganizer\n                                .developingSentenceStructure,\n                              subject: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_DEVELOPING_SENTENCE_STRUCTURE_VERB: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            developingSentenceStructure: {\n                              ...ctx.developingOrganizer\n                                .developingSentenceStructure,\n                              verb: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                restatement: {\n                  on: {\n                    ANSWER: 'answer',\n                    IDENTIFICATIONS: 'identifications',\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                answer: {\n                  on: {\n                    RESTATEMENT: 'restatement',\n                    CONCLUSION: 'conclusion',\n                    SET_ANSWER: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            answer: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                conclusion: {\n                  on: {\n                    ANSWER: 'answer',\n                    ESSAY: '#completedEssay.redoEssay',\n                    SET_CONCLUSION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          developingOrganizer: {\n                            ...ctx.developingOrganizer,\n                            conclusion: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n              },\n            },\n            academicOrganizer: {\n              initial: 'loading',\n              // type: 'parallel',\n              states: {\n                loading: {\n                  on: {\n                    NEXT: 'restatement',\n                    SET_ACADEMIC_SENTENCE_STRUCTURE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            academicSentenceStructure: {\n                              ...evt.payload,\n                              object: evt.payload.object!,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            academicSentenceStructure: {\n                              ...ctx.academicOrganizer\n                                .academicSentenceStructure,\n                              subject: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ACADEMIC_SENTENCE_STRUCTURE_VERB: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            academicSentenceStructure: {\n                              ...ctx.academicOrganizer\n                                .academicSentenceStructure,\n                              verb: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            academicSentenceStructure: {\n                              ...ctx.academicOrganizer\n                                .academicSentenceStructure,\n                              object: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_FULL_QUESTION_TYPE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            questionType: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_PROBLEM_SOLUTION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              problemSolution: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HOW_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              howCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_WHY_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            answer: {\n                              ...ctx.academicOrganizer.answer,\n                              whyCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_CONCLUSION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            conclusion: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                restatement: {\n                  on: {\n                    ANSWER: 'answer',\n                    SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            academicSentenceStructure: {\n                              ...ctx.academicOrganizer\n                                .academicSentenceStructure,\n                              subject: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ACADEMIC_SENTENCE_STRUCTURE_VERB: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            academicSentenceStructure: {\n                              ...ctx.academicOrganizer\n                                .academicSentenceStructure,\n                              verb: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            academicSentenceStructure: {\n                              ...ctx.academicOrganizer\n                                .academicSentenceStructure,\n                              object: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                answer: {\n                  initial: 'questionType',\n                  states: {\n                    questionType: {\n                      on: {\n                        TRANSITION: {\n                          target: 'transition',\n                          actions: assign((ctx, evt) => {\n                            console.log(evt)\n                            return {\n                              ...ctx,\n                            }\n                          }),\n                        },\n                        RESTATEMENT:\n                          '#completedEssay.reviewOrganizer.organizers.academicOrganizer.restatement',\n                        SET_RESTATEMENT: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              academicOrganizer: {\n                                ...ctx.academicOrganizer,\n                                restatement: evt.payload,\n                              },\n                            }\n                          }),\n                        },\n                        SET_FULL_QUESTION_TYPE: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              academicOrganizer: {\n                                ...ctx.academicOrganizer,\n                                questionType: evt.payload,\n                              },\n                            }\n                          }),\n                        },\n                        // SET_PRE_LOADED: {\n                        //   actions: assign((ctx, evt) => {\n                        //     return {\n                        //       ...ctx,\n                        //       academicOrganizer: {\n                        //         ...ctx.academicOrganizer,\n                        //         answer: {\n                        //           ...ctx.academicOrganizer.answer,\n                        //           preLoaded: evt.payload,\n                        //         },\n                        //       },\n                        //     }\n                        //   }),\n                        // },\n                      },\n                    },\n                    transition: {\n                      on: {\n                        '': [\n                          {\n                            target: 'problemSolution',\n                            cond: (ctx) =>\n                              ctx.academicOrganizer.questionType ===\n                              'HOW_PROBLEM_SOLUTION',\n                          },\n                          {\n                            target: 'howCauseEffect',\n                            cond: (ctx) =>\n                              ctx.academicOrganizer.questionType ===\n                              'HOW_CAUSE_EFFECT',\n                          },\n                          {\n                            target: 'whyCauseEffect',\n                            cond: (ctx) =>\n                              ctx.academicOrganizer.questionType ===\n                              'WHY_CAUSE_EFFECT',\n                          },\n                        ],\n                      },\n                    },\n                    problemSolution: {\n                      on: {\n                        QUESTION_TYPE:\n                          '#completedEssay.reviewOrganizer.organizers.academicOrganizer.answer.questionType',\n                        CONCLUSION:\n                          '#completedEssay.reviewOrganizer.organizers.academicOrganizer.conclusion',\n                        SET_PROBLEM_SOLUTION: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              academicOrganizer: {\n                                ...ctx.academicOrganizer,\n                                answer: {\n                                  ...ctx.academicOrganizer.answer,\n                                  problemSolution: evt.payload,\n                                },\n                              },\n                            }\n                          }),\n                        },\n                      },\n                    },\n                    whyCauseEffect: {\n                      on: {\n                        QUESTION_TYPE:\n                          '#completedEssay.reviewOrganizer.organizers.academicOrganizer.answer.questionType',\n                        CONCLUSION:\n                          '#completedEssay.reviewOrganizer.organizers.academicOrganizer.conclusion',\n                        SET_WHY_CAUSE_EFFECT: {\n                          actions: assign((ctx, evt) => {\n                            console.log(\n                              ctx.academicOrganizer.answer.whyCauseEffect,\n                            )\n                            return {\n                              ...ctx,\n                              academicOrganizer: {\n                                ...ctx.academicOrganizer,\n                                answer: {\n                                  ...ctx.academicOrganizer.answer,\n                                  whyCauseEffect: evt.payload,\n                                },\n                              },\n                            }\n                          }),\n                        },\n                      },\n                    },\n                    howCauseEffect: {\n                      on: {\n                        QUESTION_TYPE:\n                          '#completedEssay.reviewOrganizer.organizers.academicOrganizer.answer.questionType',\n                        CONCLUSION:\n                          '#completedEssay.reviewOrganizer.organizers.academicOrganizer.conclusion',\n                        SET_HOW_CAUSE_EFFECT: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              academicOrganizer: {\n                                ...ctx.academicOrganizer,\n                                answer: {\n                                  ...ctx.academicOrganizer.answer,\n                                  howCauseEffect: evt.payload,\n                                },\n                              },\n                            }\n                          }),\n                        },\n                        // SET_PRE_LOADED: {\n                        //   actions: assign((ctx, evt) => {\n                        //     return {\n                        //       ...ctx,\n                        //       academicOrganizer: {\n                        //         ...ctx.academicOrganizer,\n                        //         answer: {\n                        //           ...ctx.academicOrganizer.answer,\n                        //           preLoaded: evt.payload,\n                        //         },\n                        //       },\n                        //     }\n                        //   }),\n                        // },\n                      },\n                    },\n                  },\n                },\n                conclusion: {\n                  on: {\n                    ANSWER: 'answer',\n                    ESSAY: '#completedEssay.redoEssay',\n                    SET_CONCLUSION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          academicOrganizer: {\n                            ...ctx.academicOrganizer,\n                            conclusion: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n              },\n            },\n            advancedOrganizer: {\n              initial: 'loading',\n              states: {\n                loading: {\n                  on: {\n                    NEXT: 'restatement',\n                    SET_ADVANCED_SENTENCE_STRUCTURE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            advancedSentenceStructure: {\n                              ...evt.payload,\n                              object: evt.payload.object!,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            advancedSentenceStructure: {\n                              ...ctx.advancedOrganizer\n                                .advancedSentenceStructure,\n                              subject: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ADVANCED_SENTENCE_STRUCTURE_VERB: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            advancedSentenceStructure: {\n                              ...ctx.advancedOrganizer\n                                .advancedSentenceStructure,\n                              verb: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            advancedSentenceStructure: {\n                              ...ctx.advancedOrganizer\n                                .advancedSentenceStructure,\n                              object: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_FULL_QUESTION_TYPE: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            questionType: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                    SET_PROBLEM_SOLUTION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              problemSolution: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_HOW_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              howCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_WHY_CAUSE_EFFECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            answer: {\n                              ...ctx.advancedOrganizer.answer,\n                              whyCauseEffect: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_CONCLUSION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            conclusion: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                restatement: {\n                  on: {\n                    NEXT: 'answer',\n                    SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            advancedSentenceStructure: {\n                              ...ctx.advancedOrganizer\n                                .advancedSentenceStructure,\n                              subject: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ADVANCED_SENTENCE_STRUCTURE_VERB: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            advancedSentenceStructure: {\n                              ...ctx.advancedOrganizer\n                                .advancedSentenceStructure,\n                              verb: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            advancedSentenceStructure: {\n                              ...ctx.advancedOrganizer\n                                .advancedSentenceStructure,\n                              object: evt.payload,\n                            },\n                          },\n                        }\n                      }),\n                    },\n                    SET_RESTATEMENT: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            restatement: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n                answer: {\n                  initial: 'questionType',\n                  states: {\n                    questionType: {\n                      on: {\n                        NEXT: 'transition',\n                        SET_FULL_QUESTION_TYPE: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              advancedOrganizer: {\n                                ...ctx.advancedOrganizer,\n                                questionType: evt.payload,\n                              },\n                            }\n                          }),\n                        },\n                        // SET_PRE_LOADED: {\n                        //   actions: assign((ctx, evt) => {\n                        //     return {\n                        //       ...ctx,\n                        //       advancedOrganizer: {\n                        //         ...ctx.advancedOrganizer,\n                        //         answer: {\n                        //           ...ctx.advancedOrganizer.answer,\n                        //           preLoaded: evt.payload,\n                        //         },\n                        //       },\n                        //     }\n                        //   }),\n                        // },\n                      },\n                    },\n                    transition: {\n                      on: {\n                        '': [\n                          {\n                            target: 'problemSolution',\n                            cond: (ctx) =>\n                              ctx.advancedOrganizer.questionType ===\n                              'HOW_PROBLEM_SOLUTION',\n                          },\n                          {\n                            target: 'howCauseEffect',\n                            cond: (ctx) =>\n                              ctx.advancedOrganizer.questionType ===\n                              'HOW_CAUSE_EFFECT',\n                          },\n                          {\n                            target: 'whyCauseEffect',\n                            cond: (ctx) =>\n                              ctx.advancedOrganizer.questionType ===\n                              'WHY_CAUSE_EFFECT',\n                          },\n                        ],\n                      },\n                    },\n                    problemSolution: {\n                      on: {\n                        PREVIOUS:\n                          '#completedEssay.reviewOrganizer.organizers.advancedOrganizer.answer.questionType',\n                        NEXT: '#completedEssay.reviewOrganizer.organizers.advancedOrganizer.conclusion',\n                        SET_PROBLEM_SOLUTION: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              advancedOrganizer: {\n                                ...ctx.advancedOrganizer,\n                                answer: {\n                                  ...ctx.advancedOrganizer.answer,\n                                  problemSolution: evt.payload,\n                                },\n                              },\n                            }\n                          }),\n                        },\n                      },\n                    },\n                    whyCauseEffect: {\n                      on: {\n                        PREVIOUS:\n                          '#completedEssay.reviewOrganizer.organizers.advancedOrganizer.answer.questionType',\n                        NEXT: '#completedEssay.reviewOrganizer.organizers.advancedOrganizer.conclusion',\n                        SET_WHY_CAUSE_EFFECT: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              advancedOrganizer: {\n                                ...ctx.advancedOrganizer,\n                                answer: {\n                                  ...ctx.advancedOrganizer.answer,\n                                  whyCauseEffect: evt.payload,\n                                },\n                              },\n                            }\n                          }),\n                        },\n                      },\n                    },\n                    howCauseEffect: {\n                      on: {\n                        PREVIOUS:\n                          '#completedEssay.reviewOrganizer.organizers.advancedOrganizer.answer.questionType',\n                        NEXT: '#completedEssay.reviewOrganizer.organizers.advancedOrganizer.conclusion',\n                        SET_HOW_CAUSE_EFFECT: {\n                          actions: assign((ctx, evt) => {\n                            return {\n                              ...ctx,\n                              advancedOrganizer: {\n                                ...ctx.advancedOrganizer,\n                                answer: {\n                                  ...ctx.advancedOrganizer.answer,\n                                  howCauseEffect: evt.payload,\n                                },\n                              },\n                            }\n                          }),\n                        },\n                        // SET_PRE_LOADED: {\n                        //   actions: assign((ctx, evt) => {\n                        //     return {\n                        //       ...ctx,\n                        //       advancedOrganizer: {\n                        //         ...ctx.advancedOrganizer,\n                        //         answer: {\n                        //           ...ctx.advancedOrganizer.answer,\n                        //           preLoaded: evt.payload,\n                        //         },\n                        //       },\n                        //     }\n                        //   }),\n                        // },\n                      },\n                    },\n                  },\n                },\n                conclusion: {\n                  on: {\n                    PREVIOUS: 'answer',\n                    // NEXT: '#completedEssay.reviewOrganizer.workingDraft',\n                    SET_CONCLUSION: {\n                      actions: assign((ctx, evt) => {\n                        return {\n                          ...ctx,\n                          advancedOrganizer: {\n                            ...ctx.advancedOrganizer,\n                            conclusion: evt.payload,\n                          },\n                        }\n                      }),\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    redoEssay: {\n      on: {\n        PREVIOUS: 'reviewEssay',\n        ORGANIZER: 'reviewOrganizer',\n        SET_DRAFT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              draftToUpdate: evt.payload,\n            }\n          }),\n        },\n        SET_TEXT_TO_SUBMIT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              textToSubmit: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  completedEssayMachine,\n  completedEssayMachineContext,\n  completedEssayMachineEvent,\n} from './completedEssayMachine'\n\nconst CompletedEssayContext = createContext<any>(undefined)\n\ntype CompletedEssayContextProps = {\n  children: ReactNode\n}\n\nexport const CompletedEssayContextProvider: FC<CompletedEssayContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(completedEssayMachine)\n  return (\n    <CompletedEssayContext.Provider value={[state, event]}>\n      {children}\n    </CompletedEssayContext.Provider>\n  )\n}\n\nexport function useCompletedEssayContextProvider() {\n  const context = useContext(CompletedEssayContext)\n  if (context === undefined) {\n    throw new Error(\n      'useCompletedEssayContextProvider must be used within a CompletedEssayContextProvider',\n    )\n  }\n  return context as [\n    State<completedEssayMachineContext, completedEssayMachineEvent, any, any>,\n    (event: completedEssayMachineEvent) => void,\n  ]\n}\n","import { Transforms, Editor, Text } from 'slate'\n\nexport const CustomEditor = {\n  isBoldMarkActive(editor: Editor) {\n    const [match] = Editor.nodes(editor, {\n      match: (n) => n.bold === true,\n      universal: true,\n    })\n    return !!match\n  },\n  isStrkeThroughMarkActive(editor: Editor) {\n    const [match] = Editor.nodes(editor, {\n      match: (n) => n.strikeThrough === true,\n      universal: true,\n    })\n    return !!match\n  },\n  isUnderlineActive(editor: Editor) {\n    const [match] = Editor.nodes(editor, {\n      match: (n) => n.underline === true,\n      universal: true,\n    })\n    return !!match\n  },\n  isRedPenActive(editor: Editor) {\n    const [match] = Editor.nodes(editor, {\n      match: (n) => n.redPen === true,\n      universal: true,\n    })\n    return !!match\n  },\n  toggleBoldMark(editor: Editor) {\n    const isActive = CustomEditor.isBoldMarkActive(editor)\n    Transforms.setNodes(\n      editor,\n      { bold: isActive ? null : true },\n      { match: (n) => Text.isText(n), split: true },\n    )\n  },\n  toggleStrikeThrough(editor: Editor) {\n    const isActive = CustomEditor.isStrkeThroughMarkActive(editor)\n    Transforms.setNodes(\n      editor,\n      { strikeThrough: isActive ? null : true },\n      { match: (n) => Text.isText(n), split: true },\n    )\n  },\n  toggleUnderline(editor: Editor) {\n    const isActive = CustomEditor.isUnderlineActive(editor)\n    Transforms.setNodes(\n      editor,\n      { underline: isActive ? null : true },\n      { match: (n) => Text.isText(n), split: true },\n    )\n  },\n  // toggleRedPen(editor: Editor, nodes: Node) {\n  //   const isActive = CustomEditor.isRedPenActive(editor)\n  //   Transforms.insertNodes(editor)\n  // },\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  WritingLevelEnum,\n  RubricEntryInput,\n  RubricSectionEnum,\n  ReturnedRubricEntryInput,\n  ReturnGradedEssayInput,\n  findEssayToGradeById_findEssayById_essay_finalDraft_submittedFinalDraft_rubricEntries,\n} from '../../../../../../../../schemaTypes'\n\nexport type gradeEssayMachineSchema = {\n  states: {\n    loading: {}\n    grading: {\n      states: {\n        transition: {}\n        developing: {}\n        academic: {}\n        advanced: {}\n      }\n    }\n    returning: {}\n  }\n}\nexport type gradeEssayMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_DRAFT_TO_GRADE'; payload: ReturnGradedEssayInput }\n  | { type: 'SET_ESSAY_ID'; payload: string }\n  | { type: 'SET_WRITING_LEVEL'; payload: WritingLevelEnum }\n  | {\n      type: 'SET_INTITIAL_DRAFT'\n      payload: {\n        writingLevel: WritingLevelEnum\n        draftToGrade: ReturnGradedEssayInput\n      }\n    }\n  | { type: 'SET_PREVIOUS_DRAFT'; payload: ReturnGradedEssayInput }\n  | { type: 'SET_DRAFT'; payload: ReturnGradedEssayInput }\n  | { type: 'SET_DRAFT_SELECTOR'; payload: number }\n  | { type: 'SET_DRAFT_NUMBER_TO_GRADE'; payload: number }\n  | { type: 'SET_DRAFT_TO_RETURN'; payload: string }\n  | { type: 'SET_CURRENT_RUBRIC_SECTION'; payload: RubricSectionEnum }\n  | { type: 'SET_RUBRIC_ENTRY'; payload: RubricEntryInput }\n  | { type: 'SET_RUBRIC_ENTRIES'; payload: ReturnedRubricEntryInput[] }\n  | { type: 'SET_SCORE'; payload: number }\n  | { type: 'SET_COMMENT'; payload: string }\n  | { type: 'RESET_COMMENT' }\n  | { type: 'CHANGE_EDIT_COLOR'; payload: string }\n  | { type: 'TOGGLE_ORGANIZER'; payload: boolean }\n  | { type: 'ADD_ADDITIONAL_COMMENT'; payload: string }\n  | { type: 'REMOVE_COMMENT'; payload: number }\n  | {\n      type: 'SET_PREVIOUS_RUBRIC_ENTRIES'\n      payload: findEssayToGradeById_findEssayById_essay_finalDraft_submittedFinalDraft_rubricEntries[]\n    }\n\nexport type gradeEssayMachineContext = {\n  editColor: string\n  essayId: string\n  currentRubricSection: RubricSectionEnum\n  rubricEntry: RubricEntryInput\n  writingLevel: WritingLevelEnum\n  draftSelector: number\n  organizerToggle: boolean\n  comment: string\n  draftToGrade: ReturnGradedEssayInput\n  previousDraft: ReturnGradedEssayInput\n  previousRubricEntries: findEssayToGradeById_findEssayById_essay_finalDraft_submittedFinalDraft_rubricEntries[]\n}\n\nexport const gradeEssayMachine = Machine<\n  gradeEssayMachineContext,\n  gradeEssayMachineSchema,\n  gradeEssayMachineEvent\n>({\n  id: 'gradeEssay',\n  type: 'parallel',\n  initial: 'loading',\n  context: {\n    editColor: 'red',\n    essayId: '',\n    draftToGrade: {\n      _id: '',\n      draftNumber: 0,\n      gradingDraft: '',\n      rubricEntries: [],\n      additionalComments: [],\n      score: 0,\n    },\n    previousDraft: {\n      _id: '',\n      draftNumber: 0,\n      gradingDraft: '',\n      rubricEntries: [],\n      additionalComments: [],\n      score: 0,\n    },\n    draftSelector: 0,\n    organizerToggle: false,\n    rubricEntry: {\n      entry: '',\n      rubricSection: RubricSectionEnum.OVERALL,\n      rubricWritingLevels: [WritingLevelEnum.DEVELOPING],\n      score: 0,\n    },\n\n    currentRubricSection: RubricSectionEnum.OVERALL,\n    writingLevel: WritingLevelEnum.DEVELOPING,\n    comment: '',\n    previousRubricEntries: [],\n  },\n  states: {\n    loading: {\n      on: {\n        NEXT: 'grading',\n        SET_INTITIAL_DRAFT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              writingLevel: evt.payload.writingLevel,\n              draftToGrade: evt.payload.draftToGrade,\n            }\n          }),\n        },\n        SET_PREVIOUS_DRAFT: {\n          actions: assign((ctx, evt) => {\n            console.log(evt.payload)\n            return {\n              ...ctx,\n              previousDraft: evt.payload,\n            }\n          }),\n        },\n        SET_DRAFT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              previousDraft: evt.payload,\n            }\n          }),\n        },\n        TOGGLE_ORGANIZER: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              organizerToggle: evt.payload,\n            }\n          }),\n        },\n        SET_ESSAY_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              essayId: evt.payload,\n            }\n          }),\n        },\n        SET_WRITING_LEVEL: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              writingLevel: evt.payload,\n            }\n          }),\n        },\n        SET_DRAFT_SELECTOR: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              draftSelector: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    grading: {\n      initial: 'transition',\n      states: {\n        transition: {\n          always: [\n            {\n              target: 'developing',\n              cond: (ctx) => {\n                return ctx.writingLevel === 'DEVELOPING'\n              },\n            },\n            {\n              target: 'academic',\n              cond: (ctx) => {\n                console.log(ctx.writingLevel)\n                return ctx.writingLevel === 'ACADEMIC'\n              },\n            },\n            {\n              target: 'advanced',\n              cond: (ctx) => ctx.writingLevel === 'ADVANCED',\n            },\n          ],\n        },\n        developing: {\n          on: {\n            PREVIOUS: '#gradeEssay.loading',\n            NEXT: '#gradeEssay.returning',\n            CHANGE_EDIT_COLOR: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  editColor: evt.payload,\n                }\n              }),\n            },\n            SET_PREVIOUS_RUBRIC_ENTRIES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  previousRubricEntries: evt.payload,\n                }\n              }),\n            },\n            SET_CURRENT_RUBRIC_SECTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  currentRubricSection: evt.payload,\n                }\n              }),\n            },\n            SET_RUBRIC_ENTRY: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  rubricEntry: { ...evt.payload },\n                }\n              }),\n            },\n            SET_RUBRIC_ENTRIES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    rubricEntries: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_SCORE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    score: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  comment: evt.payload,\n                }\n              }),\n            },\n            ADD_ADDITIONAL_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    additionalComments: [\n                      ...ctx.draftToGrade.additionalComments!,\n                      evt.payload,\n                    ],\n                  },\n                }\n              }),\n            },\n            REMOVE_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    additionalComments: [\n                      // ...ctx.draftToGrade.additionalComments,\n                      ...ctx.draftToGrade.additionalComments!.slice(\n                        0,\n                        evt.payload,\n                      ),\n                      ...ctx.draftToGrade.additionalComments!.slice(\n                        evt.payload + 1,\n                      ),\n                    ],\n                  },\n                }\n              }),\n            },\n          },\n        },\n        academic: {\n          on: {\n            PREVIOUS: '#gradeEssay.loading',\n            NEXT: '#gradeEssay.returning',\n            CHANGE_EDIT_COLOR: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  editColor: evt.payload,\n                }\n              }),\n            },\n            SET_PREVIOUS_RUBRIC_ENTRIES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  previousRubricEntries: evt.payload,\n                }\n              }),\n            },\n            SET_CURRENT_RUBRIC_SECTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  currentRubricSection: evt.payload,\n                }\n              }),\n            },\n            SET_RUBRIC_ENTRY: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  rubricEntry: { ...evt.payload },\n                }\n              }),\n            },\n            SET_RUBRIC_ENTRIES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    rubricEntries: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_SCORE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    score: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  comment: evt.payload,\n                }\n              }),\n            },\n            ADD_ADDITIONAL_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    additionalComments: [\n                      ...ctx.draftToGrade.additionalComments!,\n                      evt.payload,\n                    ],\n                  },\n                }\n              }),\n            },\n            REMOVE_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    additionalComments: [\n                      // ...ctx.draftToGrade.additionalComments,\n                      ...ctx.draftToGrade.additionalComments!.slice(\n                        0,\n                        evt.payload,\n                      ),\n                      ...ctx.draftToGrade.additionalComments!.slice(\n                        evt.payload + 1,\n                      ),\n                    ],\n                  },\n                }\n              }),\n            },\n          },\n        },\n        advanced: {\n          on: {\n            PREVIOUS: '#gradeEssay.loading',\n            NEXT: '#gradeEssay.returning',\n            CHANGE_EDIT_COLOR: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  editColor: evt.payload,\n                }\n              }),\n            },\n            SET_PREVIOUS_RUBRIC_ENTRIES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  previousRubricEntries: evt.payload,\n                }\n              }),\n            },\n            SET_CURRENT_RUBRIC_SECTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  currentRubricSection: evt.payload,\n                }\n              }),\n            },\n            SET_RUBRIC_ENTRY: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  rubricEntry: { ...evt.payload },\n                }\n              }),\n            },\n            SET_RUBRIC_ENTRIES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    rubricEntries: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_SCORE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    score: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  comment: evt.payload,\n                }\n              }),\n            },\n            ADD_ADDITIONAL_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    additionalComments: [\n                      ...ctx.draftToGrade.additionalComments!,\n                      evt.payload,\n                    ],\n                  },\n                }\n              }),\n            },\n            REMOVE_COMMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  draftToGrade: {\n                    ...ctx.draftToGrade,\n                    additionalComments: [\n                      // ...ctx.draftToGrade.additionalComments,\n                      ...ctx.draftToGrade.additionalComments!.slice(\n                        0,\n                        evt.payload,\n                      ),\n                      ...ctx.draftToGrade.additionalComments!.slice(\n                        evt.payload + 1,\n                      ),\n                    ],\n                  },\n                }\n              }),\n            },\n          },\n        },\n      },\n    },\n    returning: {\n      on: {\n        PREVIOUS: '#gradeEssay.grading',\n      },\n    },\n  },\n})\n","import React, { FC, createContext, ReactNode, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  gradeEssayMachine,\n  gradeEssayMachineContext,\n  gradeEssayMachineEvent,\n} from './gradeEssayMachine'\n\nexport type GradeEssayContextProps = {\n  children: ReactNode\n}\n\nconst GradeEssayContext = createContext<any>(undefined)\n\nexport const GradeEssayContextProvider: FC<GradeEssayContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(gradeEssayMachine)\n  return (\n    <GradeEssayContext.Provider value={[state, event]}>\n      {children}\n    </GradeEssayContext.Provider>\n  )\n}\n\nexport function useGradeEssayContextProvider() {\n  const context = useContext(GradeEssayContext)\n  if (context === undefined) {\n    throw new Error(\n      'useGradeEssayContextProvider must be used within a GradeEssayContextProvider',\n    )\n  }\n  return context as [\n    State<gradeEssayMachineContext, gradeEssayMachineEvent, any, any>,\n    (event: gradeEssayMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\nimport { Standard8x12Container } from '../../../../../../../../appStyles'\nimport {\n  EssayOrganizerSheet,\n  OrganizerContainer,\n} from '../../../../../../student/assignments/essays/assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport const EssaysToGradeContainer = styled(Standard8x12Container)``\n\nexport const EssayGraderContainer = styled(Standard8x12Container)`\n  height: 95vh;\n`\n\nexport const EssayScreen = styled(Standard8x12Container)`\n  grid-row: 1/-2;\n  grid-column: 1/-4;\n  border-right: 1px solid var(--blue);\n  border-bottom: 1px solid var(--blue);\n`\n\nexport const EssayToGradeContainer = styled.div`\n  grid-row: 2/-2;\n  grid-column: -2/-6;\n  border: 1px solid var(--blue);\n  font-size: 1.1vw;\n  padding: 4%;\n`\nexport const PreviousEssayContainer = styled.div`\n  grid-row: 2/-2;\n  grid-column: 2/6;\n  border: 1px solid var(--blue);\n  font-size: 1.1vw;\n  padding: 4%;\n`\nexport const DraftName = styled.div`\n  text-align: center;\n`\n\nexport const OrganizerForEssayToGradeContainer = styled(Standard8x12Container)`\n  grid-row: 2/-2;\n  grid-column: 2/6;\n  border: 1px solid var(--blue);\n  font-size: 1.5vh;\n`\n\nexport const NameContainer = styled.div`\n  grid-row: -1/-2;\n  grid-column: 1/-4;\n  background-color: var(--blue);\n  color: var(--white);\n  border-top: 3px solid var(--white);\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`\n\nexport const ReturnEssayContainer = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 1.2vw;\n`\nexport const NameAndAssignmentContainer = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 1.2vw;\n`\n\nexport const GoBackButton = styled.div`\n  margin-right: 5%;\n  grid-row: 1/2;\n  grid-column: 1/3;\n  color: var(--blue);\n  font-size: 1.5vw;\n`\n\nexport const ReturnEssayButton = styled.button`\n  margin-left: 5%;\n  background-color: var(--grey);\n  color: var(--blue);\n  width: 150%;\n  font-size: 2vw;\n  border-radius: 5px;\n`\n\nexport const GradeDetailsContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n`\nexport const GradeDetailsSelectorContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`\n\nexport type GradeDetailsSelectorProps = {\n  selected: boolean\n}\nexport const GradeDetailsSelector = styled.div<GradeDetailsSelectorProps>`\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n`\n\nexport const DraftSelectorLeft = styled.span`\n  grid-row: 4/6;\n  grid-column: 1/2;\n  font-size: 1.5vw;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const DraftSelectorRight = styled.span`\n  grid-row: 4/6;\n  grid-column: 6/7;\n  font-size: 1.5vw;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const GradingToolContainer = styled(Standard8x12Container)`\n  grid-row: 1/-1;\n  grid-column: -1/-4;\n  background-color: var(--grey);\n  border-left: 3px solid var(--white);\n`\nexport const RubricContainer = styled(Standard8x12Container)`\n  grid-row: 1/6;\n  grid-column: 1/-1;\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n`\nexport const RubricTypeTitle = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  font-size: 2vw;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  text-decoration: underline;\n`\nexport const RubricSectionEnumContainer = styled.div`\n  grid-row: 2/3;\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.8vw;\n  cursor: default;\n`\n\nexport const RubricCheckBoxContainer = styled.div`\n  grid-row: 3/-1;\n  grid-column: 1/-1;\n  font-size: 2vh;\n  display: grid;\n  height: 50vh;\n  overflow: scroll;\n  align-items: center;\n  justify-items: start;\n`\n\nexport const RubricCheckBoxInput = styled.input`\n  align-self: center;\n  height: 1.5vw;\n  width: 1.5vw;\n  :checked {\n    color: var(--red);\n  }\n`\n\nexport const AdditionalCommentsContainer = styled.div`\n  grid-row: 6/-1;\n  grid-column: 1/-1;\n  display: grid;\n  height: 100%;\n  overflow: scroll;\n  grid-template-rows: 1fr 1fr 5fr;\n  border-top: 1px solid var(--blue);\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n`\nexport const AdditionalCommentTitle = styled.div`\n  text-align: center;\n  font-size: 2vw;\n`\nexport const AddCommentContainer = styled.form`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-gap: 10%;\n  margin-bottom: 2%;\n`\n\nexport const AddCommentInput = styled.input`\n  width: 80%;\n  height: 3vh;\n  font-size: 1vw;\n  color: var(--blue);\n`\n\nexport const AddCommentButton = styled.button`\n  background-color: var(--blue);\n  color: var(--white);\n  height: 3.4vh;\n  font-size: 1.4vw;\n`\nexport const Comments = styled.div`\n  font-size: 1.4vw;\n  margin-bottom: 1%;\n  margin-left: 1%;\n`\n\nexport const EditorToolBar = styled.div`\n  display: grid;\n  grid-row: 8/-1;\n  grid-column: 1/-1;\n  margin: 1.4%;\n`\n\nexport const EditorToolBarTitle = styled.div`\n  justify-self: center;\n  text-decoration: underline;\n`\n","import React, { useMemo, useState, useCallback, FC, useEffect } from 'react'\nimport { createEditor, Transforms, Editor, Node } from 'slate'\nimport {\n  Slate,\n  Editable,\n  withReact,\n  useFocused,\n  useSelected,\n  useSlate,\n} from 'slate-react'\nimport { CustomEditor } from '../../../../../../editor/CustomEditor'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateGradingDraft,\n  updateGradingDraftVariables,\n} from '../../../../../../../schemaTypes'\nimport { gql, useMutation } from '@apollo/client'\nimport { useGradeEssayContextProvider } from './state-n-styles/GradeEssayContext'\nimport {\n  DraftName,\n  EssayToGradeContainer,\n} from './state-n-styles/EssaysToGradeStyles'\n\nexport type TeacherEssayEditorProps = {}\n\nexport const UPDATE_GRADING_DRAFT_MUTATION = gql`\n  mutation updateGradingDraft($input: UpdateGradingDraftInput!) {\n    updateGradingDraft(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\n\nexport const TeacherEssayEditor: FC<TeacherEssayEditorProps> = () => {\n  const [state] = useGradeEssayContextProvider()\n  const [commentNumber, setCommentNumber] = useState([])\n\n  const editor = useMemo(() => withReact(createEditor()), [])\n  // const parsedGradingDraft = JSON.parse(\n  //   essay.finalDraft?.submittedFinalDraft[\n  //     state.context.draftToGrade.draftNumber\n  //   ].gradingDraft\n  // )\n  const parsedGradingDraft = JSON.parse(state.context.draftToGrade.gradingDraft)\n  const [value, setValue] = useState(parsedGradingDraft)\n  useEffect(() => {\n    setValue(parsedGradingDraft)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.draftToGrade.gradingDraft])\n  const content = JSON.stringify(value)\n\n  // useEffect(() => {\n  //   event({ type: 'SET_DRAFT_TO_RETURN', payload: content })\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [content])\n\n  const [updateGradingDraft] = useMutation<\n    updateGradingDraft,\n    updateGradingDraftVariables\n  >(UPDATE_GRADING_DRAFT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId!,\n        gradingDraft: content,\n        draftNumber:\n          // essay.finalDraft?.submittedFinalDraft[\n          //   state.context.draftToGrade.draftNumber\n          // ].draftNumber,\n          state.context.draftToGrade.draftNumber,\n      },\n    },\n    // onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayToGradeById'],\n  })\n\n  useEffect(() => {\n    updateGradingDraft()\n  }, [updateGradingDraft, content])\n\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case 'code':\n        return <CodeElement {...props} />\n      default:\n        return <DefaultElement {...props} />\n    }\n  }, [])\n\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} setCommentNumber={setCommentNumber} />\n  }, [])\n\n  return (\n    <EssayToGradeContainer>\n      <DraftName>Draft To Grade</DraftName>\n      <Slate\n        editor={editor}\n        value={value as Node[]}\n        onChange={(value) => {\n          setValue(value as Node[])\n        }}\n      >\n        <Editable\n          renderElement={renderElement}\n          spellCheck\n          onCopy={() => false}\n          renderLeaf={renderLeaf}\n          autoFocus\n          style={{ color: `var(--${state.context.editColor})` }}\n          onKeyDown={(e) => {\n            // updateWorkingDraft()\n\n            if (!e.ctrlKey) {\n              return\n            }\n            switch (e.key) {\n              case '`': {\n                e.preventDefault()\n                const [match] = Editor.nodes(editor, {\n                  match: (n) => n.type === 'code',\n                })\n                Transforms.setNodes(\n                  editor,\n                  { type: match ? 'paragraph' : 'code' },\n                  { match: (n) => Editor.isBlock(editor, n) },\n                )\n                break\n              }\n              case 'b': {\n                e.preventDefault()\n                CustomEditor.toggleBoldMark(editor)\n                break\n              }\n              case 's': {\n                e.preventDefault()\n                CustomEditor.toggleStrikeThrough(editor)\n                break\n              }\n              case 'c': {\n                e.preventDefault()\n                CustomEditor.toggleUnderline(editor)\n                break\n              }\n              // case 'r': {\n              //   e.preventDefault()\n              //   CustomEditor.toggleRedPen(editor)\n              //   break\n              // }\n            }\n          }}\n        />\n      </Slate>\n    </EssayToGradeContainer>\n  )\n}\nconst CodeElement = (props: any) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  )\n}\nconst DefaultElement = (props: any) => {\n  return <p {...props.attributes}>{props.children}</p>\n}\n\nexport const Leaf = ({ setCommentNumber, ...props }: any) => {\n  return (\n    <span\n      {...props.attributes}\n      style={{\n        fontWeight: props.leaf.bold ? 'bold' : 'normal',\n        color: props.leaf.strikeThrough\n          ? 'var(--red)'\n          : props.leaf.underline\n            ? 'gray'\n            : 'var(--blue)',\n        textDecoration: props.leaf.strikeThrough\n          ? 'line-through'\n          : props.leaf.underline\n            ? 'underline'\n            : 'none',\n      }}\n    >\n      {props.children}\n    </span>\n  )\n}\n\nexport function withMyPlugin(editor: Editor) {\n  const { insertNode } = editor\n\n  return editor\n}\n","import React, { useMemo, useState, useCallback, FC, useEffect } from 'react'\n\n// import { CompletedEssayContainer } from './state/completedEssayStyles'\n\nimport { createEditor, Node } from 'slate'\nimport { Slate, Editable, withReact } from 'slate-react'\n\nimport {\n  findEssayById_findEssayById_essay,\n  UpdateWorkingDraft,\n  UpdateWorkingDraftVariables,\n  SubmittedFinalDraftsInput,\n} from '../../../../../../schemaTypes'\n\nimport { useMutation } from '@apollo/client'\nimport { EssaySheet } from '../assigned-essays/state-and-styles/assignedEssayStyles'\nimport { Leaf } from '../../../../teacher/assignments/grade-assignments/essays/essay-grader/TeacherEssayEditor'\n\n// type StudentEssayEditorProps = {\n//   essay: findEssayById_findEssayById_essay\n//   submittedFinalDraft: SubmittedFinalDraftsInput\n// }\n\nexport type CompletedEssayViewerProps = {\n  draft: string\n}\n\nexport type submittedFinalDraftType = {\n  draft: string\n  gradingDraft: string\n  comments: string[]\n  score: number\n}\n\nexport const CompletedEssayViewer = ({ draft }: CompletedEssayViewerProps) => {\n  const editor = useMemo(() => withReact(createEditor()), [])\n\n  const parsedEssay = JSON.parse(draft)\n\n  const [value, setValue] = useState(parsedEssay)\n\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case 'code':\n        return <CodeElement {...props} />\n      default:\n        return <DefaultElement {...props} />\n    }\n  }, [])\n\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} />\n  }, [])\n\n  return (\n    <EssaySheet style={{ userSelect: 'all' }}>\n      <Slate\n        editor={editor}\n        value={parsedEssay as Node[]}\n        onChange={(value: any) => {\n          // setValue(value as Node[])\n        }}\n      >\n        <Editable\n          renderElement={renderElement}\n          spellCheck\n          onSelect={(e: any) => e.preventDefault()}\n          onCopy={(e: any) => {\n            e.preventDefault()\n          }}\n          autoFocus={true}\n          renderLeaf={renderLeaf}\n          style={{\n            height: '98%',\n            userSelect: 'none',\n          }}\n          onKeyDown={(e) => {\n            // e.preventDefault()\n            // if (e.key === 'Enter') return null\n            // updateWorkingDraft()\n            // if (!e.ctrlKey) {\n            // return\n            // }\n            // switch (e.key) {\n            //   case '`': {\n            //     e.preventDefault()\n            //     const [match] = Editor.nodes(editor, {\n            //       match: (n) => n.type === 'code',\n            //     })\n            //     Transforms.setNodes(\n            //       editor,\n            //       { type: match ? 'paragraph' : 'code' },\n            //       { match: (n) => Editor.isBlock(editor, n) }\n            //     )\n            //     break\n            //   }\n            //   case 'b': {\n            //     e.preventDefault()\n            //     CustomEditor.toggleBoldMark(editor)\n            //     break\n            //   }\n            //   case 's': {\n            //     e.preventDefault()\n            //     CustomEditor.toggleStrikeThrough(editor)\n            //     break\n            //   }\n            //   case 'u': {\n            //     e.preventDefault()\n            //     CustomEditor.toggleUnderline(editor)\n            //     break\n            //   }\n            // case '17': {\n            //   e.preventDefault()\n            // }\n            // }\n          }}\n        />\n      </Slate>\n    </EssaySheet>\n  )\n}\nconst CodeElement = (props: any) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  )\n}\nconst DefaultElement = (props: any) => {\n  return (\n    <p style={{ textIndent: '2%', userSelect: 'none' }} {...props.attributes}>\n      {props.children}\n    </p>\n  )\n}\n\n// export const Leaf = (props: any) => {\n//   return (\n//     <span\n//       {...props.attributes}\n//       style={{\n//         fontWeight: props.leaf.bold ? 'bold' : 'normal',\n//         textDecoration: props.leaf.strikeThrough\n//           ? 'line-through'\n//           : props.leaf.underline\n//           ? 'underline'\n//           : 'none',\n//       }}\n//     >\n//       {props.children}\n//     </span>\n//   )\n// }\n\n// export const CompletedEssayViewer: FC<CompletedEssayViewerProps> = ({\n//   draft,\n// }) => {\n//   const [parsedEssay] = JSON.parse(draft)\n//   const text = parsedEssay.children[0].text\n//   return (\n//     <>\n//       <EssaySheet>{text}</EssaySheet>\n//     </>\n//   )\n// }\n","import styled from 'styled-components'\nimport {\n  AssignmentDetailsContainer,\n  AssignmentDetailsPartContainers,\n  OrganizerContainer,\n  EssayEditorContainer,\n  SubmitEssayContainer,\n  OrganizerControlButton,\n  EssaySheet,\n} from '../../assigned-essays/state-and-styles/assignedEssayStyles'\nimport {\n  EssayInfoTitle,\n  EssayInfoBody,\n} from '../../assigned-essays/state-and-styles/essayInfoStyles'\n\nexport const EssayViewContainer = styled(OrganizerContainer)``\nexport const CompletedEssayDetailsContainer = styled(\n  AssignmentDetailsContainer,\n)``\nexport const CompletedEssayDetailsPartContainers = styled(\n  AssignmentDetailsPartContainers,\n)``\n\nexport const DraftSelectorContainer = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  font-size: 2rem;\n`\nexport const DraftSelectorBack = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  cursor: default;\n`\nexport const DraftSelectorDraftNumber = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const DraftSelectorNext = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  cursor: default;\n`\nexport const ScoreSheet = styled(EssaySheet)`\n  display: grid;\n  grid-template-rows: 1fr 3fr 3fr;\n  padding-right: 1vh;\n`\nexport const ScoreSheetScore = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3.5vh;\n  padding-right: 1vh;\n  /* text-decoration: underline; */\n`\nexport const ScoreSheetRubricComments = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 6fr;\n  font-size: 2vh;\n`\nexport const ScoreSheetAdditionalComments = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 6fr;\n  font-size: 2vh;\n`\n\nexport const ScoreSheetRubricCommentsTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  text-decoration: underline;\n  font-size: 2.3vh;\n`\n\nexport const RubricSectionTitle = styled.div`\n  text-align: center;\n  text-decoration: underline;\n`\n\nexport const CompletedEssayContainer = styled(EssayEditorContainer)`\n  grid-row: 2/-2;\n`\n\nexport const EssayRedoButtonContainer = styled(SubmitEssayContainer)`\n  grid-row: -2/-1;\n`\nexport const CompletedEssayControlButton = styled(OrganizerControlButton)``\n\nexport const HowToImproveTitle = styled(EssayInfoTitle)`\n  grid-row: 1/2;\n`\nexport const HowToImproveBody = styled(EssayInfoBody)`\n  grid-row: 2/-1;\n`\n","import React, {\n  FC,\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n  SyntheticEvent,\n} from 'react'\nimport { useCompletedEssayContextProvider } from './state/CompletedEssayContext'\nimport { useMutation } from '@apollo/client'\nimport { UPDATE_WORKING_DRAFT_MUTATION } from '../assigned-essays/EssayToComplete'\nimport {\n  UpdateWorkingDraft,\n  UpdateWorkingDraftVariables,\n  findCompletedEssayById_findEssayById_essay,\n} from '../../../../../../schemaTypes'\nimport { createEditor, Node } from 'slate'\nimport { Slate, Editable, withReact } from 'slate-react'\n\nexport type RedoEssayEditorProps = {\n  essay: findCompletedEssayById_findEssayById_essay\n}\n\nexport const RedoEssayEditor = ({ essay }: RedoEssayEditorProps) => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const editor = useMemo(() => withReact(createEditor()), [])\n  const parsedEssay = JSON.parse(state.context.draftToUpdate)\n  const [value, setValue] = useState(parsedEssay)\n  const content = JSON.stringify(value)\n\n  useEffect(() => {\n    event({ type: 'SET_DRAFT', payload: content })\n    event({ type: 'SET_TEXT_TO_SUBMIT', payload: value[0].children[0].text })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content])\n\n  useEffect(() => {\n    updateWorkingDraft()\n  }, [state.context.draftToUpdate])\n\n  const [updateWorkingDraft] = useMutation<\n    UpdateWorkingDraft,\n    UpdateWorkingDraftVariables\n  >(UPDATE_WORKING_DRAFT_MUTATION, {\n    variables: {\n      input: { _id: essay._id!, updatedDraft: state.context.draftToUpdate },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case 'code':\n        return <CodeElement {...props} />\n      default:\n        return <DefaultElement {...props} />\n    }\n  }, [])\n\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} />\n  }, [])\n\n  return (\n    <>\n      <Slate\n        editor={editor}\n        value={value as Node[]}\n        onChange={(value) => {\n          setValue(value as Node[])\n        }}\n      >\n        <Editable\n          renderElement={renderElement}\n          spellCheck\n          renderLeaf={renderLeaf}\n          autoFocus\n          style={{\n            height: '98%',\n            // userSelect: 'none',\n          }}\n          placeholder=\"Start with your topic statement....\"\n          onPaste={(e: SyntheticEvent) => {\n            e.preventDefault()\n          }}\n          onKeyDown={(e) => {\n            event({ type: 'SET_DRAFT', payload: content })\n            // updateWorkingDraft()\n            // if (!e.ctrlKey) {\n            // return\n            // }\n            // switch (e.key) {\n            //   case '`': {\n            //     e.preventDefault()\n            //     const [match] = Editor.nodes(editor, {\n            //       match: (n) => n.type === 'code',\n            //     })\n            //     Transforms.setNodes(\n            //       editor,\n            //       { type: match ? 'paragraph' : 'code' },\n            //       { match: (n) => Editor.isBlock(editor, n) }\n            //     )\n            //     break\n            //   }\n            //   case 'b': {\n            //     e.preventDefault()\n            //     CustomEditor.toggleBoldMark(editor)\n            //     break\n            //   }\n            //   case 's': {\n            //     e.preventDefault()\n            //     CustomEditor.toggleStrikeThrough(editor)\n            //     break\n            //   }\n            //   case 'u': {\n            //     e.preventDefault()\n            //     CustomEditor.toggleUnderline(editor)\n            //     break\n            //   }\n            // case '17': {\n            //   e.preventDefault()\n            // }\n            // }\n          }}\n        />\n        {/* {value[0].children[0].text !== '' && (\n          <SubmitEssay\n            _id={state.context.essayId}\n            submittedFinalDraft={submittedFinalDraft}\n            isLate={state.context.isLate}\n          />\n        )} */}\n      </Slate>\n    </>\n  )\n}\n\nconst CodeElement = (props: any) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  )\n}\nconst DefaultElement = (props: any) => {\n  return (\n    <p style={{ textIndent: '2%' }} {...props.attributes}>\n      {props.children}\n    </p>\n  )\n}\n\nexport const Leaf = (props: any) => {\n  return (\n    <span\n      {...props.attributes}\n      style={{\n        fontWeight: props.leaf.bold ? 'bold' : 'normal',\n        textDecoration: props.leaf.strikeThrough\n          ? 'line-through'\n          : props.leaf.underline\n            ? 'underline'\n            : 'none',\n      }}\n    >\n      {props.children}\n    </span>\n  )\n}\n","import React, { FC } from 'react'\nimport { AcademicEssayOrganizer } from '../../../../../student/assignments/essays/assigned-essays/essay-info/essay-organizers/AcademicEssayOrganizer'\nimport { AdvancedEssayOrganizer } from '../../../../../student/assignments/essays/assigned-essays/essay-info/essay-organizers/AdvancedEssayOrganizer'\nimport { DevelopingEssayOrganizer } from '../../../../../student/assignments/essays/assigned-essays/essay-info/essay-organizers/DevelopingEssayOrganizer'\nimport { EssayOrganizerType } from '../../../../../student/assignments/essays/assigned-essays/essay-info/essay-organizers/EssayOrganizer'\nimport { EssayOrganizerTitle } from '../../../../../student/assignments/essays/assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type EssayToGradeOrganizerProps = {\n  organizer: EssayOrganizerType\n}\n\nexport const EssayToGradeOrganizer: FC<EssayToGradeOrganizerProps> = ({\n  organizer,\n}) => {\n  return (\n    <>\n      {organizer && (\n        <>\n          <EssayOrganizerTitle>\n            <div>Organizer</div>\n          </EssayOrganizerTitle>\n          {organizer.__typename === 'DevelopingOrganizer' && (\n            <DevelopingEssayOrganizer organizer={organizer} />\n          )}\n          {organizer.__typename === 'AcademicOrganizer' && (\n            <AcademicEssayOrganizer organizer={organizer} />\n          )}\n          {organizer.__typename === 'AdvancedOrganizer' && (\n            <AdvancedEssayOrganizer organizer={organizer} />\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport {\n  findCompletedEssayById_findEssayById_essay,\n  SubmittedFinalDraftsInput,\n} from '../../../../../../schemaTypes'\nimport { CompletedEssayViewer } from './CompletedEssayViewer'\nimport {\n  DraftSelectorContainer,\n  DraftSelectorBack,\n  DraftSelectorDraftNumber,\n  DraftSelectorNext,\n  CompletedEssayContainer,\n  ScoreSheet,\n  ScoreSheetScore,\n  ScoreSheetRubricComments,\n  ScoreSheetRubricCommentsTitle,\n  ScoreSheetAdditionalComments,\n  RubricSectionTitle,\n} from './state/completedEssayStyles'\nimport { useCompletedEssayContextProvider } from './state/CompletedEssayContext'\nimport { RedoEssayEditor } from './RedoEssayEditor'\nimport { EssaySheet } from '../assigned-essays/state-and-styles/assignedEssayStyles'\nimport { EssayToGradeOrganizer } from '../../../../teacher/assignments/grade-assignments/essays/essay-grader/EssayToGradeOrganizer'\n\nexport type MultipleDraftViewProps = {\n  essay: findCompletedEssayById_findEssayById_essay\n}\n\nexport const MultipleDraftView = ({ essay }: MultipleDraftViewProps) => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const [organizerView, setOrganizerView] = useState(false)\n  const [draftSelector, setDraftSelector] = useState(\n    essay.finalDraft?.submittedFinalDraft.length! - 1,\n  )\n  const currentDraft = essay.finalDraft?.submittedFinalDraft[draftSelector]\n\n  const submittedFinalDraft: SubmittedFinalDraftsInput = {\n    draftNumber: state.context.draftNumber + 1,\n    draft: state.context.draftToUpdate,\n    gradingDraft: state.context.draftToUpdate,\n    rubricEntries: [],\n    additionalComments: [],\n    score: 0,\n    graded: false,\n  }\n\n  return (\n    <>\n      <DraftSelectorContainer>\n        <DraftSelectorBack>\n          {draftSelector === 0 ? (\n            <>\n              {organizerView ? (\n                <div\n                  onClick={() => {\n                    if (draftSelector === 0) {\n                      setOrganizerView(false)\n                    }\n                  }}\n                >\n                  Click for Drafts\n                </div>\n              ) : (\n                <div\n                  onClick={() => {\n                    if (draftSelector === 0) {\n                      setOrganizerView(true)\n                    }\n                  }}\n                >\n                  Click for Organizer\n                </div>\n              )}\n            </>\n          ) : (\n            <div\n              onClick={() => {\n                if (draftSelector > 0) {\n                  setDraftSelector((c) => c - 1)\n                }\n              }}\n            >\n              &lt;\n            </div>\n          )}\n        </DraftSelectorBack>\n        <DraftSelectorDraftNumber>\n          <div> Draft {draftSelector + 1}</div>\n        </DraftSelectorDraftNumber>\n        <DraftSelectorNext>\n          <div\n            onClick={() => {\n              if (\n                draftSelector <\n                essay.finalDraft?.submittedFinalDraft.length! - 1\n              ) {\n                setDraftSelector((c) => c + 1)\n              }\n            }}\n          >\n            &gt;\n          </div>\n        </DraftSelectorNext>\n      </DraftSelectorContainer>\n\n      <CompletedEssayContainer>\n        {organizerView ? (\n          <div\n            style={{\n              border: '1px solid var(--blue)',\n              fontSize: '1.1vw',\n              display: 'grid',\n              gridTemplateColumns: 'repeat(12, 1fr)',\n              gridTemplateRows: 'repeat(8, 1fr)',\n              height: '70vh',\n              margin: '1.5vh',\n              boxShadow: '2px 2px 2px 1px var(--grey)',\n            }}\n          >\n            <EssayToGradeOrganizer organizer={essay.workingDraft.organizer!} />\n          </div>\n        ) : (\n          <CompletedEssayViewer draft={currentDraft!.gradingDraft} />\n        )}\n        {state.matches('redoEssay') ? (\n          <EssaySheet>\n            <RedoEssayEditor essay={essay} />\n          </EssaySheet>\n        ) : (\n          <ScoreSheet>\n            <ScoreSheetScore>\n              <div>\n                <span>Score: </span>\n                <span>{currentDraft!.score}</span>\n              </div>\n            </ScoreSheetScore>\n            <ScoreSheetRubricComments>\n              <ScoreSheetRubricCommentsTitle>\n                Rubric Comments\n              </ScoreSheetRubricCommentsTitle>\n              <div>\n                <div>\n                  <RubricSectionTitle>General</RubricSectionTitle>\n                  <ul>\n                    {currentDraft!.rubricEntries\n                      .filter((r) => r.rubricSection === 'PROOFREADING')\n                      .map((entry, i: number) => (\n                        <li key={i}>{entry.entry}</li>\n                      ))}\n                  </ul>\n                </div>\n                <div>\n                  <RubricSectionTitle>Topic</RubricSectionTitle>\n                  <ul>\n                    {currentDraft!.rubricEntries\n                      .filter((r) => r.rubricSection === 'TOPIC')\n                      .map((entry, i: number) => (\n                        <li key={i}>{entry.entry}</li>\n                      ))}\n                  </ul>\n                </div>\n                <div>\n                  <RubricSectionTitle>Answer</RubricSectionTitle>\n                  <ul>\n                    {currentDraft!.rubricEntries\n                      .filter((r) => r.rubricSection === 'ANSWER')\n                      .map((entry, i: number) => (\n                        <li key={i}>{entry.entry}</li>\n                      ))}\n                  </ul>\n                </div>\n\n                <div>\n                  <RubricSectionTitle>Conclusion</RubricSectionTitle>\n                  <ul>\n                    {currentDraft!.rubricEntries\n                      .filter((r) => r.rubricSection === 'CONCLUSION')\n                      .map((entry, i: number) => (\n                        <li key={i}>{entry.entry}</li>\n                      ))}\n                  </ul>\n                </div>\n              </div>\n            </ScoreSheetRubricComments>\n            <ScoreSheetAdditionalComments>\n              <ScoreSheetRubricCommentsTitle>\n                Additional Comments\n              </ScoreSheetRubricCommentsTitle>\n              <div style={{ height: '30vh', overflow: 'scroll' }}>\n                <ul>\n                  {currentDraft!.additionalComments!.map(\n                    (comment, i: number) => (\n                      <li key={i}>{comment}</li>\n                    ),\n                  )}\n                </ul>\n              </div>\n            </ScoreSheetAdditionalComments>\n          </ScoreSheet>\n        )}\n      </CompletedEssayContainer>\n    </>\n  )\n}\n","import React, { FC, Fragment } from 'react'\nimport {\n  EssayInfoTitle,\n  EssaySectionOrganizationBodyEntry,\n  EssayInfoBody,\n} from '../assigned-essays/state-and-styles/essayInfoStyles'\nimport {\n  HowToImproveTitle,\n  HowToImproveBody,\n} from './state/completedEssayStyles'\n\nexport type HowToImproveProps = {\n  waysToImprove: (string | null)[]\n}\n\nexport const HowToImprove: FC<HowToImproveProps> = ({ waysToImprove }) => {\n  return (\n    <>\n      <HowToImproveTitle>How to Improve this Essay</HowToImproveTitle>\n      <HowToImproveBody>\n        {waysToImprove.length > 0 && (\n          <ul>\n            {waysToImprove.map((way, i: number) => (\n              <Fragment key={i}>\n                {way && (\n                  <EssaySectionOrganizationBodyEntry>\n                    {way && way}\n                  </EssaySectionOrganizationBodyEntry>\n                )}\n              </Fragment>\n            ))}\n          </ul>\n        )}\n      </HowToImproveBody>\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  SubmittedFinalDraftsInput,\n  resubmitEssayFinalDraft,\n  resubmitEssayFinalDraftVariables,\n} from '../../../../../../schemaTypes'\nimport {\n  EssaySubmitButton,\n  EssaySubmitCheck,\n} from '../assigned-essays/state-and-styles/assignedEssayStyles'\nimport { useCompletedEssayContextProvider } from './state/CompletedEssayContext'\n\nexport type SubmitEssayFinalDraftInput = {\n  _id: string\n  submittedFinalDraft: SubmittedFinalDraftsInput\n}\n\nexport const RESUBMIT_ESSAY_FINAL_DRAFT_MUTATION = gql`\n  mutation resubmitEssayFinalDraft($input: ResubmitEssayFinalDraftInput!) {\n    resubmitEssayFinalDraft(input: $input) {\n      essay {\n        _id\n      }\n    }\n  }\n`\n\nexport const SubmitRedoneEssay: FC<SubmitEssayFinalDraftInput> = ({\n  _id,\n  submittedFinalDraft,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const [submitToggle, setSubmitToggle] = useState(false)\n  const navigate = useNavigate()\n\n  const [resubmitFinalDraft, { called }] = useMutation<\n    resubmitEssayFinalDraft,\n    resubmitEssayFinalDraftVariables\n  >(RESUBMIT_ESSAY_FINAL_DRAFT_MUTATION, {\n    variables: {\n      input: { essayId: _id, submittedFinalDraft: submittedFinalDraft },\n    },\n    onCompleted: () => {\n      navigate('/dashboard/assignments')\n    },\n    refetchQueries: ['findCompletedEssaysByStudentId', 'findEssayById'],\n  })\n\n  return (\n    // <button\n    //   onClick={() => {\n    //     resubmitFinalDraft()\n    //   }}\n    // >\n    //   Resubmit\n    // </button>\n    <>\n      {!submitToggle ? (\n        <EssaySubmitButton\n          color={'var(--blue)'}\n          onClick={() => {\n            event({ type: 'PREVIOUS' })\n          }}\n        >\n          Go Back\n        </EssaySubmitButton>\n      ) : (\n        <EssaySubmitButton\n          color={'var(--red)'}\n          onClick={() => setSubmitToggle(false)}\n        >\n          No\n        </EssaySubmitButton>\n      )}\n      {submitToggle && <EssaySubmitCheck>Are you Sure?</EssaySubmitCheck>}\n      {state.context.textToSubmit && (\n        <>\n          {!submitToggle ? (\n            <EssaySubmitButton\n              color={'var(--blue)'}\n              submitFinal={submitToggle}\n              onClick={() => setSubmitToggle(true)}\n            >\n              Resubmit\n            </EssaySubmitButton>\n          ) : (\n            <EssaySubmitButton\n              color={called ? 'var(--grey)' : 'var(--blue)'}\n              submitFinal={submitToggle}\n              onClick={() => {\n                resubmitFinalDraft()\n              }}\n              disabled={called ? true : false}\n            >\n              {called ? 'Submiting' : 'Yes'}\n            </EssaySubmitButton>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  EssayInfoTitle,\n  EssayInfoBody,\n  EssaySectionOrganizationBodyEntry,\n} from '../assigned-essays/state-and-styles/essayInfoStyles'\nimport { useCompletedEssayContextProvider } from './state/CompletedEssayContext'\n\nexport type RedoEssayOrganizerHelpProps = {}\n\nexport const RedoEssayOrganizerHelp: FC<RedoEssayOrganizerHelpProps> = () => {\n  const [state] = useCompletedEssayContextProvider()\n  return (\n    <>\n      <EssayInfoTitle>Help with Your Essay</EssayInfoTitle>\n      <EssayInfoBody>\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.identifications',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Why Questions: Why is the reason something happened.\n              {/* ; Ending: For a\n                  certain reason. */}\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              How Questions: How is the way something changed something or the\n              way a problem was solved.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The subject of a sentence is the person, place or thing (Noun)\n              that is doing something or being something. Example: Robert threw\n              the ball. Robert is the subject.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The verb is the thing the subject is doing or being. In the\n              example, threw is the verb (the ball is the object of the verb).\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.restatement',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              To restate a question take off the question word (How or Why) and\n              the word ‘did’ if it is in the question.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Change the verb to past tense. Usually the -ed ending but double\n              check on google if -ed ending doesn’t sound correct.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Now add a phrase to the end of your restatement that matches the\n              question word.\n              <ul>\n                <li>Why questions will end 'for a certain reason.'</li>\n                <li>How questions will end 'in a certain way.'</li>\n              </ul>\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.answer',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Do your best to answer the question in a way that fits the\n              question type.\n              <ul>\n                <li>\n                  How questions want to know the way problems are solved or the\n                  way things affect or change other things.\n                </li>\n                <li>\n                  Why questions want to know what caused this to happen (What\n                  were the reasons this happened).\n                </li>\n              </ul>\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.conclusion',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Think of a consequence of the restatement. What was a consequence\n              of the subject’s actions, or the way that subject was being.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Do not use “That is how the subject did what they did…” as a\n              conclusion because that just restates the restatement.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.academicOrganizer.restatement',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              The subject of a sentence is the person, place or thing (Noun)\n              that is doing something or being something. Example: Robert threw\n              the ball. Robert is the subject.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The verb is the thing the subject is doing or being. In the\n              example, threw is the verb.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The Direct Object of the Verb is what receives the verb's action.\n              In the example: the ball is the object of the verb. A simple test\n              to find a direct object, ask \"What did the (subject) (verb)?\" If\n              there is a person, place, thing, or idea, then that is the direct\n              object. If the words \"on, to, with, in,\" or another preposition\n              comes before the object, then there is no direct object.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.academicOrganizer.answer.questionType',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              To find the Question Type:\n              <ul>\n                <EssaySectionOrganizationBodyEntry>\n                  Look at the question word and use these directions to figure\n                  it out\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Why questions are always cause and effect so select Why: Cause\n                  and Effect\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  How questions can be both, so look at the verb next.\n                </EssaySectionOrganizationBodyEntry>\n                <ul>\n                  <EssaySectionOrganizationBodyEntry>\n                    If the verb is a synonym for cause or effect (Affect,\n                    Change, Evolve, Influence, Shape) it is How: Cause and\n                    Effect\n                  </EssaySectionOrganizationBodyEntry>\n                  <EssaySectionOrganizationBodyEntry>\n                    If the verb isn’t a synonym for cause or effect its problem\n                    and solution so select How: Problem and Solution\n                  </EssaySectionOrganizationBodyEntry>\n                </ul>\n              </ul>\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The rules to writing a topic sentence are the same, except the\n              ending might change depending on the question type.\n            </EssaySectionOrganizationBodyEntry>\n            <ul>\n              <EssaySectionOrganizationBodyEntry>\n                If the question type is Why: Cause and Effect the ending will be\n                \"...for many reasons.\"\n              </EssaySectionOrganizationBodyEntry>\n              <EssaySectionOrganizationBodyEntry>\n                If the question type is How: Cause and Effect the ending will be\n                \"...in certain way.\"\n              </EssaySectionOrganizationBodyEntry>\n              <EssaySectionOrganizationBodyEntry>\n                If the question type is How: Problem and Solution the ending\n                will be \"...to solve a problem.\" unless the words problem and\n                solution are already in the question then end \"...in certain\n                way.\"\n              </EssaySectionOrganizationBodyEntry>\n            </ul>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.academicOrganizer.answer.problemSolution',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              If you didn't fill in the subject, verb, and object, go back or\n              else this section won't make sense.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              All How: Problem and Solution Questions need to give a complete\n              explanation of the problem and then a complete explanation of the\n              solution. To do this, answer each of these questions with\n              paraphrased answers found in the text.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              Some of the answers may actually come from earlier parts of the\n              text that aren't covered in the assigned sections, but have been\n              covered in our lessons already. Its ok to use this information as\n              long as you are paraphrasing.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              When answering the questions on this page, be careful not to\n              confuse how questions and why questions. How is asking for the\n              way, and why is asking for the reason.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.academicOrganizer.answer.whyCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              If you didn't fill in the subject, verb, and object, go back or\n              else this section won't make sense.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The proximate cause is the direct reason something happened. So\n              think of the thing that happened to make the (subject) (verb)\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The ultimate cause is the reason the proximate cause happened. Its\n              the big picture reason. For example: \"Why did you make a\n              sandwich?\" The proximate cause is: I was hungry. To find the\n              ultimate cause ask \"Why was I hungry?\". The answer is I haven't\n              eaten in 6 hours. That's how I want you to think about why\n              questions.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.academicOrganizer.answer.howCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              If you didn't fill in the subject, verb, and object, go back or\n              else this section won't make sense.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              All How: Cause and Effect questions are basically asking you about\n              how things/people affect or change other things or people.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              To answer completely you need to explain what the object of the\n              verb was like before the subject of the question. This should only\n              be one sentence to set up the answer.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              The second part of the answer needs to explain the way the object\n              of the question was different because of subject of the question.\n              This can be two sentences at the most.\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.academicOrganizer.conclusion',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              The conclusion is still going to need to be a consequence of the\n              topic, but now I want you to set the consequence up in a certain\n              way.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              First, start the conclusion this way \"As a result of (subject)\n              (verb+ing) (object if one exists), \" then you write the\n              consequence. Be careful to add an ing ending to the verb and if no\n              object of verb exists, then just put a comma after the verb.\n            </EssaySectionOrganizationBodyEntry>\n            <EssaySectionOrganizationBodyEntry>\n              For example: \"As a result of Robert throwing the ball, a glass\n              window was broken.\"\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.advancedOrganizer.restatement',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced Restatement\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.advancedOrganizer.answer.questionType',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced QuestionType\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.advancedOrganizer.answer.problemSolution',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced Problem Solution\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.advancedOrganizer.answer.whyCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced whyCauseEffect\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.advancedOrganizer.answer.howCauseEffect',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced howCauseEffect\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.advancedOrganizer.conclusion',\n        ) && (\n          <ul>\n            <EssaySectionOrganizationBodyEntry>\n              Advanced Conclusion\n            </EssaySectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.matches('workingDraft') && (\n          <ul>\n            {state.context.writingLevel === 'DEVELOPING' && (\n              <>\n                <EssaySectionOrganizationBodyEntry>\n                  Use the organizer on the left to put your ideas into a\n                  paragraph that has the three parts of your essay: a\n                  restatement, answer, and conclusion.\n                </EssaySectionOrganizationBodyEntry>\n                <EssaySectionOrganizationBodyEntry>\n                  Do your best to proofread to catch and mistakes and do your\n                  best.\n                </EssaySectionOrganizationBodyEntry>\n              </>\n            )}\n            {state.context.writingLevel === 'ACADEMIC' && (\n              <EssaySectionOrganizationBodyEntry>\n                As always, start the essay with the restatement as your topic\n                sentence, and end it with the conclusion, but the answer is\n                going need more structure. Use the organizer as a guide to\n                putting the answer together. Use transitions to connect your\n                ideas and keep it as simple as you can while fully explaining\n                the topic sentence.\n              </EssaySectionOrganizationBodyEntry>\n            )}\n            {state.context.writingLevel === 'ADVANCED' && (\n              <EssaySectionOrganizationBodyEntry>\n                Advanced Rubric Help\n              </EssaySectionOrganizationBodyEntry>\n            )}\n          </ul>\n        )}\n      </EssayInfoBody>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport {\n  AnswerInput,\n  AnswerOutput,\n  OrganizerControlButton,\n  OrganizerControlButtonContainer,\n  RestatementTitle,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { UpdateDevelopingOrganizerType } from './DevelopingOrganizer'\n\nexport type DevelopingAnswerProps = {\n  updateDevelopingOrganizer: UpdateDevelopingOrganizerType\n}\n\nexport const DevelopingAnswer: FC<DevelopingAnswerProps> = ({\n  updateDevelopingOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    updateDevelopingOrganizer()\n    // console.log('update')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.developingOrganizer.answer])\n\n  return (\n    <>\n      <>\n        <RestatementTitle>\n          Answer the Question to the best of your ability.\n        </RestatementTitle>\n        <AnswerInput\n          autoFocus={true}\n          value={state.context.developingOrganizer.answer}\n          onChange={(e: any) =>\n            event({ type: 'SET_ANSWER', payload: e.target.value })\n          }\n        />\n        <AnswerOutput>\n          <div> {state.context.developingOrganizer.answer}</div>\n        </AnswerOutput>\n        <OrganizerControlButtonContainer>\n          <OrganizerControlButton\n            onClick={() => event({ type: 'RESTATEMENT' })}\n          >\n            Back\n          </OrganizerControlButton>\n          <OrganizerControlButton onClick={() => event({ type: 'CONCLUSION' })}>\n            Next\n          </OrganizerControlButton>\n        </OrganizerControlButtonContainer>\n      </>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { BasicQuestionEnum } from '../../../../../../../../schemaTypes'\nimport { UpdateDevelopingOrganizerType } from './DevelopingOrganizer'\nimport {\n  QuestionTypeContainer,\n  QuestionTypeQuestionStyle,\n  QuestionTypeAnswerSelectStyle,\n  PartsOfQuestionContainer,\n  PartsOfQuestionTitle,\n  PartContainer,\n  PartInput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type DevelopingRestatementProps = {\n  updateDevelopingOrganizer: UpdateDevelopingOrganizerType\n}\n\nexport const DevelopingRestatement: FC<DevelopingRestatementProps> = ({\n  updateDevelopingOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    updateDevelopingOrganizer()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    state.context.developingOrganizer,\n    updateDevelopingOrganizer,\n    // state.context.developingOrganizer.developingSentenceStructure,\n    // state.context.developingOrganizer.restatement,\n    // state.context.developingOrganizer.questionType,\n  ])\n\n  return (\n    <>\n      <QuestionTypeContainer>\n        <QuestionTypeQuestionStyle>\n          What is the Question Type:\n        </QuestionTypeQuestionStyle>\n        <QuestionTypeAnswerSelectStyle\n          autoFocus={true}\n          value={state.context.developingOrganizer.questionType}\n          onChange={(e: any) => {\n            if (e.target.value !== 'none')\n              event({\n                type: 'SET_BASIC_QUESTION_TYPE',\n                payload: e.target.value,\n              })\n          }}\n        >\n          <option value={'none'}>Pick a Question Type</option>\n          <option value={BasicQuestionEnum.HOW}>How</option>\n          <option value={BasicQuestionEnum.WHY}>Why</option>\n        </QuestionTypeAnswerSelectStyle>\n      </QuestionTypeContainer>\n      <PartsOfQuestionContainer>\n        <PartsOfQuestionTitle>\n          Identify the Parts of the Question:\n        </PartsOfQuestionTitle>\n        <PartContainer>\n          <div>What is the Subject of the question: </div>\n          <PartInput\n            value={\n              state.context.developingOrganizer.developingSentenceStructure\n                .subject\n            }\n            onChange={(e: any) =>\n              event({\n                type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_SUBJECT',\n                payload: e.target.value,\n              })\n            }\n          />\n        </PartContainer>\n        <PartContainer>\n          <div>What is the Verb of the question: </div>\n          <PartInput\n            value={\n              state.context.developingOrganizer.developingSentenceStructure.verb\n            }\n            onChange={(e: any) =>\n              event({\n                type: 'SET_DEVELOPING_SENTENCE_STRUCTURE_VERB',\n                payload: e.target.value,\n              })\n            }\n          />\n        </PartContainer>\n      </PartsOfQuestionContainer>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton onClick={() => event({ type: 'RESTATEMENT' })}>\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { UpdateDevelopingOrganizerType } from './DevelopingOrganizer'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport {\n  RestatementTitle,\n  RestatementInput,\n  RestatementOutput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type DevelopingConclusionProps = {\n  updateDevelopingOrganizer: UpdateDevelopingOrganizerType\n}\n\nexport const DevelopingConclusion: FC<DevelopingConclusionProps> = ({\n  updateDevelopingOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const sentenceStructure = {\n    subject:\n      state.context.developingOrganizer.developingSentenceStructure.subject,\n    verb: state.context.developingOrganizer.developingSentenceStructure.verb,\n  }\n\n  useEffect(() => {\n    updateDevelopingOrganizer()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.developingOrganizer.conclusion])\n  return (\n    <>\n      <RestatementTitle>\n        Write your conclusion (pay attention to the hints!)\n      </RestatementTitle>\n      <RestatementInput\n        autoFocus={true}\n        value={state.context.developingOrganizer.conclusion}\n        onChange={(e: any) =>\n          event({ type: 'SET_CONCLUSION', payload: e.target.value })\n        }\n      />\n      <RestatementOutput>\n        <div> {state.context.developingOrganizer.conclusion}</div>\n      </RestatementOutput>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton onClick={() => event({ type: 'ANSWER' })}>\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton onClick={() => event({ type: 'ESSAY' })}>\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useMutation, MutationFunctionOptions } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateDevelopingOrganizer,\n  updateDevelopingOrganizerVariables,\n  findCompletedEssayById_findEssayById_essay,\n} from '../../../../../../../../schemaTypes'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { UPDATE_DEVELOPING_ORGANIZER_MUTATION } from '../../../assigned-essays/organizers/developing/DevelopingOrganizer'\nimport { DevelopingAnswer } from './DevelopingAnswer'\nimport { DevelopingRestatement } from './DevelopingRestatement'\nimport { DevelopingConclusion } from './DevelopingConclusion'\nimport {\n  RestatementTitle,\n  RestatementInput,\n  RestatementOutput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  QuestionContainer,\n  QuestionStyle,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\ntype DevelopingOrganizerProps = {\n  essay: findCompletedEssayById_findEssayById_essay\n}\n\nexport type UpdateDevelopingOrganizerType = (\n  options?:\n    | MutationFunctionOptions<\n        updateDevelopingOrganizer,\n        updateDevelopingOrganizerVariables\n      >\n    | undefined,\n) => void\n\nexport const DevelopingOrganizer: FC<DevelopingOrganizerProps> = ({\n  essay,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  const [updateDevelopingOrganizer] = useMutation<\n    updateDevelopingOrganizer,\n    updateDevelopingOrganizerVariables\n  >(UPDATE_DEVELOPING_ORGANIZER_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        answer: state.context.developingOrganizer.answer,\n        basicQuestionType: state.context.developingOrganizer.questionType,\n        conclusion: state.context.developingOrganizer.conclusion,\n        developingSentenceStructure:\n          state.context.developingOrganizer.developingSentenceStructure,\n        restatement: state.context.developingOrganizer.restatement,\n      },\n    },\n    // onCompleted: (data) => console.log('updateOrganizer'),\n    onError: (error) => console.error(error),\n    // refetchQueries: ['findCompletedEssayById'],\n  })\n\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Organize for this Question</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      <QuestionContainer>\n        <QuestionStyle>{essay.topic.question}</QuestionStyle>\n      </QuestionContainer>\n      <>\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.identifications',\n        ) && (\n          <DevelopingRestatement\n            updateDevelopingOrganizer={updateDevelopingOrganizer}\n          />\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.restatement',\n        ) && (\n          <>\n            <RestatementTitle>\n              <div>\n                Restate the question in the form of a statement with the correct\n                ending:\n              </div>\n            </RestatementTitle>\n            <RestatementInput\n              autoFocus={true}\n              value={state.context.developingOrganizer.restatement}\n              onChange={(e: any) =>\n                event({ type: 'SET_RESTATEMENT', payload: e.target.value })\n              }\n            />\n            <RestatementOutput>\n              <div> {state.context.developingOrganizer.restatement}</div>\n            </RestatementOutput>\n            <OrganizerControlButtonContainer>\n              <OrganizerControlButton\n                onClick={() => event({ type: 'IDENTIFICATIONS' })}\n              >\n                Back\n              </OrganizerControlButton>\n              <OrganizerControlButton onClick={() => event({ type: 'ANSWER' })}>\n                Next\n              </OrganizerControlButton>\n            </OrganizerControlButtonContainer>\n          </>\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.answer',\n        ) && (\n          <DevelopingAnswer\n            updateDevelopingOrganizer={updateDevelopingOrganizer}\n          />\n        )}\n        {state.matches(\n          'reviewOrganizer.organizers.developingOrganizer.conclusion',\n        ) && (\n          <DevelopingConclusion\n            updateDevelopingOrganizer={updateDevelopingOrganizer}\n          />\n        )}\n      </>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateProblemSolution,\n  updateProblemSolutionVariables,\n} from '../../../../../../../../schemaTypes'\nimport { UPDATE_PROBLEM_SOLUTION_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicProblemSolution'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport {\n  AcademicQuestionAnswerTypeContainer,\n  AcademicRestatementTitle,\n  AnswerTypeContainter,\n  PartInput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type AcademicProblemSolutionProps = {}\n\nexport const AcademicProblemSolution: FC<AcademicProblemSolutionProps> = () => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const { subject } = state.context.academicOrganizer.academicSentenceStructure\n\n  const { problemSolution } = state.context.academicOrganizer.answer\n  const [updateProblemSolution] = useMutation<\n    updateProblemSolution,\n    updateProblemSolutionVariables\n  >(UPDATE_PROBLEM_SOLUTION_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        problem: state.context.academicOrganizer.answer.problemSolution.problem,\n        reasonForProblem:\n          state.context.academicOrganizer.answer.problemSolution\n            .reasonForProblem,\n        solvedBy:\n          state.context.academicOrganizer.answer.problemSolution.solvedBy,\n        whySolutionSolved:\n          state.context.academicOrganizer.answer.problemSolution\n            .whySolutionSolved,\n      },\n    },\n    // onCompleted: (data) => console.log(data),\n    // refetchQueries: ['findCompletedEssayById'],\n  })\n\n  useEffect(() => {\n    if (\n      state.context.academicOrganizer.questionType === 'HOW_PROBLEM_SOLUTION'\n    ) {\n      updateProblemSolution()\n    }\n  }, [\n    problemSolution,\n    state.context.academicOrganizer.questionType,\n    updateProblemSolution,\n  ])\n\n  return (\n    <>\n      <AcademicQuestionAnswerTypeContainer>\n        <AcademicRestatementTitle>\n          <div>How Question: Problem and Solution</div>\n        </AcademicRestatementTitle>\n        <AnswerTypeContainter>\n          <div>What is the problem for {subject}?</div>\n          <PartInput\n            value={\n              state.context.academicOrganizer.answer.problemSolution.problem\n            }\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: { ...problemSolution, problem: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>Why is this {subject}'s problem?</div>\n          <PartInput\n            value={\n              state.context.academicOrganizer.answer.problemSolution\n                .reasonForProblem\n            }\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: {\n                  ...problemSolution,\n                  reasonForProblem: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>How did {subject} solve the problem?</div>\n          <PartInput\n            value={\n              state.context.academicOrganizer.answer.problemSolution.solvedBy\n            }\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: { ...problemSolution, solvedBy: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>Why did the solution solve {subject}'s problem?</div>\n          <PartInput\n            value={\n              state.context.academicOrganizer.answer.problemSolution\n                .whySolutionSolved\n            }\n            onChange={(e: any) => {\n              event({\n                type: 'SET_PROBLEM_SOLUTION',\n                payload: {\n                  ...problemSolution,\n                  whySolutionSolved: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n      </AcademicQuestionAnswerTypeContainer>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'QUESTION_TYPE' })\n            // event({ type: 'SET_PRE_LOADED', payload: false })\n          }}\n        >\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'CONCLUSION' })\n          }}\n        >\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateHowCauseEffect,\n  updateHowCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { UPDATE_HOW_CAUSE_EFFECT_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicHowCauseEffect'\nimport {\n  AcademicQuestionAnswerTypeContainer,\n  AcademicRestatementTitle,\n  AnswerTypeContainter,\n  PartInput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type AcademicHowCauseEffectProps = {}\n\nexport const AcademicHowCauseEffect: FC<AcademicHowCauseEffectProps> = () => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  const [updateHowCauseEffect] = useMutation<\n    updateHowCauseEffect,\n    updateHowCauseEffectVariables\n  >(UPDATE_HOW_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        before: state.context.academicOrganizer.answer.howCauseEffect.before,\n        cause: state.context.academicOrganizer.answer.howCauseEffect.cause,\n        after: state.context.academicOrganizer.answer.howCauseEffect.after,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n  const { subject, verb, object } =\n    state.context.academicOrganizer.academicSentenceStructure\n  const { howCauseEffect } = state.context.academicOrganizer.answer\n\n  useEffect(() => {\n    if (state.context.academicOrganizer.questionType === 'HOW_CAUSE_EFFECT') {\n      updateHowCauseEffect()\n    }\n  }, [\n    howCauseEffect,\n    state.context.academicOrganizer.questionType,\n    updateHowCauseEffect,\n  ])\n  return (\n    <>\n      <AcademicQuestionAnswerTypeContainer>\n        <AcademicRestatementTitle>\n          <div>How Question: Cause and Effect</div>\n        </AcademicRestatementTitle>\n        <AnswerTypeContainter>\n          <div>\n            What was {object} like before {subject} {verb}ed\n          </div>\n          <PartInput\n            value={state.context.academicOrganizer.answer.howCauseEffect.before}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_HOW_CAUSE_EFFECT',\n                payload: {\n                  ...howCauseEffect,\n                  before: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>\n            How was {object} different because of {subject}?\n          </div>\n          <PartInput\n            value={state.context.academicOrganizer.answer.howCauseEffect.after}\n            onChange={(e: any) => {\n              event({\n                type: 'SET_HOW_CAUSE_EFFECT',\n                payload: {\n                  ...howCauseEffect,\n                  after: e.target.value,\n                },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n      </AcademicQuestionAnswerTypeContainer>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'QUESTION_TYPE' })\n            // event({ type: 'SET_PRE_LOADED', payload: false })\n          }}\n        >\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'CONCLUSION' })\n          }}\n        >\n          Next\n        </OrganizerControlButton>{' '}\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateWhyCauseEffect,\n  updateWhyCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport { UPDATE_WHY_CAUSE_EFFECT_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicWhyCauseEffect'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport {\n  AcademicQuestionAnswerTypeContainer,\n  AcademicRestatementTitle,\n  AnswerTypeContainter,\n  PartInput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type AcademicWhyCauseEffectProps = {}\n\nexport const AcademicWhyCauseEffect: FC<AcademicWhyCauseEffectProps> = () => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  const { whyCauseEffect } = state.context.academicOrganizer.answer\n\n  const { subject, verb } =\n    state.context.academicOrganizer.academicSentenceStructure\n\n  const [updateWhyCauseEffect] = useMutation<\n    updateWhyCauseEffect,\n    updateWhyCauseEffectVariables\n  >(UPDATE_WHY_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        ultimateCause:\n          state.context.academicOrganizer.answer.whyCauseEffect.ultimateCause,\n        proximateCause:\n          state.context.academicOrganizer.answer.whyCauseEffect.proximateCause,\n      },\n    },\n    onCompleted: (data) => console.log(data.updateWhyCauseEffect.essay),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    if (state.context.academicOrganizer.questionType === 'WHY_CAUSE_EFFECT') {\n      updateWhyCauseEffect()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [whyCauseEffect, updateWhyCauseEffect])\n\n  return (\n    <>\n      <AcademicQuestionAnswerTypeContainer>\n        <AcademicRestatementTitle>\n          <div>Why Question: Cause and Effect</div>\n        </AcademicRestatementTitle>\n        <AnswerTypeContainter>\n          <div>\n            Why did {subject} {verb}?\n          </div>\n          <PartInput\n            type=\"text\"\n            placeholder=\"Proximate Cause...\"\n            value={\n              state.context.academicOrganizer.answer.whyCauseEffect\n                .proximateCause\n            }\n            onChange={(e: any) => {\n              event({\n                type: 'SET_WHY_CAUSE_EFFECT',\n                payload: { ...whyCauseEffect, proximateCause: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n        <AnswerTypeContainter>\n          <div>Why did your Proximate Cause happen?</div>\n          <PartInput\n            type=\"text\"\n            placeholder=\"Ultimate Cause...\"\n            value={\n              state.context.academicOrganizer.answer.whyCauseEffect\n                .ultimateCause\n            }\n            onChange={(e: any) => {\n              event({\n                type: 'SET_WHY_CAUSE_EFFECT',\n                payload: { ...whyCauseEffect, ultimateCause: e.target.value },\n              })\n            }}\n          />\n        </AnswerTypeContainter>\n      </AcademicQuestionAnswerTypeContainer>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'QUESTION_TYPE' })\n            // event({ type: 'SET_PRE_LOADED', payload: false })\n          }}\n        >\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton\n          onClick={() => {\n            event({ type: 'CONCLUSION' })\n          }}\n        >\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\n\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setAnswerType,\n  setAnswerTypeVariables,\n  QuestionTypeEnum,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer,\n} from '../../../../../../../../schemaTypes'\nimport { useMutation } from '@apollo/client'\nimport { AcademicProblemSolution } from './AcademicProblemSolution'\nimport { AcademicHowCauseEffect } from './AcademicHowCauseEffect'\nimport { AcademicWhyCauseEffect } from './AcademicWhyCauseEffect'\nimport { useEnumContextProvider } from '../../../../../../../../contexts/EnumContext'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { SET_ANSWER_TYPE_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicAnswerTypes'\nimport { Modal } from '../../../../../../../../animations'\nimport {\n  AcademicQuestionTypeContainer,\n  AcademicRestatementTitle,\n  AcademicQuestionTypeSelect,\n  AcademicRestatementContainer,\n  AcademicRestatementInput,\n  RestatementOutput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type AcademicAnswerTypesProps = {\n  academicOrganizer: findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer\n}\n\nexport const AcademicAnswerTypes: FC<AcademicAnswerTypesProps> = ({\n  academicOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const { questionTypeEnum } = useEnumContextProvider()\n\n  const [setAnswerType] = useMutation<setAnswerType, setAnswerTypeVariables>(\n    SET_ANSWER_TYPE_MUTATION,\n    {\n      variables: {\n        input: {\n          essayId: state.context.essayId,\n          questionType: state.context.academicOrganizer.questionType,\n        },\n      },\n      // onCompleted: (data) => console.log(data),\n\n      refetchQueries: [''],\n    },\n  )\n\n  return (\n    <>\n      {state.matches(\n        'reviewOrganizer.organizers.academicOrganizer.answer.questionType',\n      ) && (\n        <>\n          <AcademicQuestionTypeContainer>\n            <AcademicRestatementTitle>\n              <div>What is the Question Type: </div>\n            </AcademicRestatementTitle>\n            <AcademicQuestionTypeContainer>\n              <AcademicQuestionTypeSelect\n                value={state.context.academicOrganizer.questionType}\n                onChange={(e: any) => {\n                  if (e.target.value !== 'none') {\n                    event({\n                      type: 'SET_FULL_QUESTION_TYPE',\n                      payload: e.target.value,\n                    })\n                    setAnswerType({\n                      variables: {\n                        input: {\n                          essayId: state.context.essayId,\n                          questionType: e.target.value,\n                        },\n                      },\n                    })\n                  }\n                }}\n              >\n                <option value={'none'}>Pick a Question Type</option>\n                {questionTypeEnum.map((question: QuestionTypeEnum) => (\n                  <option key={question} value={question}>\n                    {question === 'HOW_PROBLEM_SOLUTION'\n                      ? 'How: Problem and Solution'\n                      : question === 'HOW_CAUSE_EFFECT'\n                        ? 'How: Cause and Effect'\n                        : 'Why: Cause and Effect'}\n                  </option>\n                ))}\n              </AcademicQuestionTypeSelect>\n            </AcademicQuestionTypeContainer>\n            <AcademicRestatementContainer>\n              <AcademicRestatementTitle>\n                <div>Restatement</div>\n              </AcademicRestatementTitle>\n              <AcademicRestatementInput\n                type=\"text\"\n                value={state.context.academicOrganizer.restatement}\n                onChange={(e: any) =>\n                  event({\n                    type: 'SET_RESTATEMENT',\n                    payload: e.target.value,\n                  })\n                }\n              />\n              <RestatementOutput>\n                <div> {state.context.academicOrganizer.restatement}</div>\n              </RestatementOutput>\n            </AcademicRestatementContainer>\n          </AcademicQuestionTypeContainer>\n          <OrganizerControlButtonContainer>\n            <OrganizerControlButton\n              onClick={() => {\n                event({ type: 'RESTATEMENT' })\n              }}\n            >\n              Back\n            </OrganizerControlButton>\n            <OrganizerControlButton\n              onClick={() => {\n                console.log(academicOrganizer.answerType !== null)\n                if (\n                  academicOrganizer.__typename === 'AcademicOrganizer' &&\n                  academicOrganizer.answerType !== null\n                )\n                  event({ type: 'TRANSITION' })\n              }}\n            >\n              Next\n            </OrganizerControlButton>\n          </OrganizerControlButtonContainer>\n        </>\n      )}\n\n      {state.matches(\n        'reviewOrganizer.organizers.academicOrganizer.answer.problemSolution',\n      ) &&\n        state.context.academicOrganizer.questionType ===\n          QuestionTypeEnum.HOW_PROBLEM_SOLUTION && <AcademicProblemSolution />}\n      {state.matches(\n        'reviewOrganizer.organizers.academicOrganizer.answer.howCauseEffect',\n      ) &&\n        state.context.academicOrganizer.questionType ===\n          QuestionTypeEnum.HOW_CAUSE_EFFECT && <AcademicHowCauseEffect />}\n      {state.matches(\n        'reviewOrganizer.organizers.academicOrganizer.answer.whyCauseEffect',\n      ) &&\n        state.context.academicOrganizer.questionType ===\n          QuestionTypeEnum.WHY_CAUSE_EFFECT && <AcademicWhyCauseEffect />}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { UpdateAcademicOrganizerType } from './AcademicOrganizer'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport {\n  AcademicPartsOfQuestionContainer,\n  PartsOfQuestionTitle,\n  AcademicPartContainer,\n  PartInput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type AcademicRestatementProps = {\n  updateAcademicOrganizer: UpdateAcademicOrganizerType\n}\n\nexport const AcademicRestatement: FC<AcademicRestatementProps> = ({\n  updateAcademicOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    updateAcademicOrganizer()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    state.context.academicOrganizer.restatement,\n    state.context.academicOrganizer.academicSentenceStructure,\n  ])\n\n  return (\n    <>\n      <AcademicPartsOfQuestionContainer>\n        <PartsOfQuestionTitle>\n          Set the Parts of the Question\n        </PartsOfQuestionTitle>\n        <AcademicPartContainer>\n          <div>What is the Subject of the question: </div>\n          <PartInput\n            value={\n              state.context.academicOrganizer.academicSentenceStructure.subject\n            }\n            onChange={(e: any) =>\n              event({\n                type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_SUBJECT',\n                payload: e.target.value,\n              })\n            }\n          />\n        </AcademicPartContainer>\n\n        <AcademicPartContainer>\n          <div>What is the Verb of the question: </div>\n          <PartInput\n            value={\n              state.context.academicOrganizer.academicSentenceStructure.verb\n            }\n            onChange={(e: any) =>\n              event({\n                type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_VERB',\n                payload: e.target.value,\n              })\n            }\n          />\n        </AcademicPartContainer>\n\n        <AcademicPartContainer>\n          <div>What is the Object of the question: </div>\n\n          <PartInput\n            value={\n              state.context.academicOrganizer.academicSentenceStructure.object!\n            }\n            onChange={(e: any) =>\n              event({\n                type: 'SET_ACADEMIC_SENTENCE_STRUCTURE_OBJECT',\n                payload: e.target.value,\n              })\n            }\n          />\n        </AcademicPartContainer>\n      </AcademicPartsOfQuestionContainer>\n      {/* <AcademicRestatementContainer>\n        <AcademicRestatementTitle>\n          <div>Restatement</div>\n        </AcademicRestatementTitle>\n        <AcademicRestatementInput\n          type='text'\n          value={state.context.academicOrganizer.restatement}\n          onChange={(e: any) =>\n            event({\n              type: 'SET_RESTATEMENT',\n              payload: e.target.value,\n            })\n          }\n        />\n        <RestatementOutput>\n          <div> {state.context.academicOrganizer.restatement}</div>\n        </RestatementOutput>\n      </AcademicRestatementContainer> */}\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton onClick={() => event({ type: 'ANSWER' })}>\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { UpdateAcademicOrganizerType } from './AcademicOrganizer'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport {\n  RestatementTitle,\n  AcademicConclusionInput,\n  AcademicConclusionOutput,\n  OrganizerControlButtonContainer,\n  OrganizerControlButton,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\nexport type AcademicConclusionProps = {\n  updateAcademicOrganizer: UpdateAcademicOrganizerType\n}\n\nexport const AcademicConclusion: FC<AcademicConclusionProps> = ({\n  updateAcademicOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    updateAcademicOrganizer()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.academicOrganizer.conclusion])\n\n  return (\n    <>\n      <RestatementTitle>Write your conclusion</RestatementTitle>\n      <AcademicConclusionInput\n        type=\"text\"\n        value={state.context.academicOrganizer.conclusion}\n        onChange={(e: any) => {\n          event({ type: 'SET_CONCLUSION', payload: e.target.value })\n        }}\n      />\n      <AcademicConclusionOutput>\n        <div> {state.context.academicOrganizer.conclusion}</div>\n      </AcademicConclusionOutput>\n      <OrganizerControlButtonContainer>\n        <OrganizerControlButton onClick={() => event({ type: 'ANSWER' })}>\n          Back\n        </OrganizerControlButton>\n        <OrganizerControlButton onClick={() => event({ type: 'ESSAY' })}>\n          Next\n        </OrganizerControlButton>\n      </OrganizerControlButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { useMutation, MutationFunctionOptions } from '@apollo/client'\nimport {\n  updateAcademicOrganizer,\n  updateAcademicOrganizerVariables,\n  findCompletedEssayById_findEssayById_essay,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType,\n} from '../../../../../../../../schemaTypes'\n\nimport { AcademicAnswerTypes } from './AcademicAnswerTypes'\nimport { AcademicRestatement } from './AcademicRestatement'\nimport { AcademicConclusion } from './AcademicConclusion'\n\nimport { UPDATE_ACADEMIC_ORGANIZER_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicOrganizer'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport {\n  OrganizerTitleContainer,\n  OrganizerTitleStyle,\n  QuestionContainer,\n  QuestionStyle,\n} from '../../../assigned-essays/state-and-styles/assignedEssayStyles'\n\ntype AcademicOrganizerProps = {\n  question: string\n  essay: findCompletedEssayById_findEssayById_essay\n}\n\nexport type UpdateAcademicOrganizerType = (\n  options?:\n    | MutationFunctionOptions<\n        updateAcademicOrganizer,\n        updateAcademicOrganizerVariables\n      >\n    | undefined,\n) => void\n\nexport const AcademicOrganizer: FC<AcademicOrganizerProps> = ({\n  question,\n  essay,\n}) => {\n  const academicOrganizer = essay.workingDraft\n    .organizer as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer\n  const [loading, setLoading] = useState(false)\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    event({\n      type: 'SET_FULL_QUESTION_TYPE',\n      payload: academicOrganizer.questionType!,\n    })\n\n    if (academicOrganizer.questionType === 'HOW_PROBLEM_SOLUTION') {\n      const { problem, reasonForProblem, solvedBy, whySolutionSolved } =\n        academicOrganizer.answerType as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_ProblemSolutionAnswerType\n      event({\n        type: 'SET_PROBLEM_SOLUTION',\n        payload: {\n          problem: problem,\n          reasonForProblem: reasonForProblem,\n          solvedBy: solvedBy,\n          whySolutionSolved: whySolutionSolved,\n        },\n      })\n    }\n    if (academicOrganizer.questionType === 'HOW_CAUSE_EFFECT') {\n      const { before, cause, after } =\n        academicOrganizer.answerType as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_HowCauseEffectAnswerType\n      event({\n        type: 'SET_HOW_CAUSE_EFFECT',\n        payload: { before: before, cause: cause, after: after },\n      })\n    }\n    if (academicOrganizer.questionType === 'WHY_CAUSE_EFFECT') {\n      const { ultimateCause, proximateCause } =\n        academicOrganizer.answerType as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer_answerType_WhyCauseEffectAnswerType\n      event({\n        type: 'SET_WHY_CAUSE_EFFECT',\n        payload: {\n          ultimateCause: ultimateCause,\n          proximateCause: proximateCause,\n        },\n      })\n    }\n    setLoading(true)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [academicOrganizer])\n\n  const [updateAcademicOrganizer] = useMutation<\n    updateAcademicOrganizer,\n    updateAcademicOrganizerVariables\n  >(UPDATE_ACADEMIC_ORGANIZER_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        academicSentenceStructure:\n          state.context.academicOrganizer.academicSentenceStructure,\n        restatement: state.context.academicOrganizer.restatement,\n        conclusion: state.context.academicOrganizer.conclusion,\n      },\n    },\n    onCompleted: (data) => {\n      // console.log(data.updateAcademicOrganizer.essay)\n      // event({type: 'SET_FULL_QUESTION_TYPE', payload: })\n      console.log(data)\n    },\n    onError: (err) => console.error(err),\n    refetchQueries: [''],\n  })\n\n  return (\n    <>\n      <OrganizerTitleContainer>\n        <OrganizerTitleStyle>Organize for this Question</OrganizerTitleStyle>\n      </OrganizerTitleContainer>\n      <QuestionContainer>\n        <QuestionStyle>{question}</QuestionStyle>\n      </QuestionContainer>\n\n      {state.matches(\n        'reviewOrganizer.organizers.academicOrganizer.restatement',\n      ) && (\n        <AcademicRestatement\n          updateAcademicOrganizer={updateAcademicOrganizer}\n        />\n      )}\n\n      {state.matches('reviewOrganizer.organizers.academicOrganizer.answer') && (\n        <AcademicAnswerTypes academicOrganizer={academicOrganizer} />\n      )}\n\n      {state.matches(\n        'reviewOrganizer.organizers.academicOrganizer.conclusion',\n      ) && (\n        <AcademicConclusion updateAcademicOrganizer={updateAcademicOrganizer} />\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateProblemSolution,\n  updateProblemSolutionVariables,\n} from '../../../../../../../../schemaTypes'\n\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { UPDATE_PROBLEM_SOLUTION_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicProblemSolution'\n\nexport type AdvancedHowProblemSolutionProps = {}\n\nexport const AdvancedHowProblemSolution: FC<\n  AdvancedHowProblemSolutionProps\n> = () => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const { subject } = state.context.advancedOrganizer.advancedSentenceStructure\n  const { problemSolution } = state.context.advancedOrganizer.answer\n\n  const [updateProblemSolution] = useMutation<\n    updateProblemSolution,\n    updateProblemSolutionVariables\n  >(UPDATE_PROBLEM_SOLUTION_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        problem: state.context.advancedOrganizer.answer.problemSolution.problem,\n        reasonForProblem:\n          state.context.advancedOrganizer.answer.problemSolution\n            .reasonForProblem,\n        solvedBy:\n          state.context.advancedOrganizer.answer.problemSolution.solvedBy,\n        whySolutionSolved:\n          state.context.advancedOrganizer.answer.problemSolution\n            .whySolutionSolved,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    updateProblemSolution()\n  }, [problemSolution, updateProblemSolution])\n\n  return (\n    <>\n      <div>How: Problem and Solution</div>\n      <div>What is the problem for {subject}?</div>\n      <input\n        value={state.context.advancedOrganizer.answer.problemSolution.problem}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: { ...problemSolution, problem: e.target.value },\n          })\n        }}\n      />\n      <div>Why is this {subject}'s problem?</div>\n      <input\n        value={\n          state.context.advancedOrganizer.answer.problemSolution\n            .reasonForProblem\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: {\n              ...problemSolution,\n              reasonForProblem: e.target.value,\n            },\n          })\n        }}\n      />\n      <div>How did {subject} solve the problem?</div>\n      <input\n        value={state.context.advancedOrganizer.answer.problemSolution.solvedBy}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: { ...problemSolution, solvedBy: e.target.value },\n          })\n        }}\n      />\n      <div>Why did the solution solve {subject}'s problem?</div>\n      <input\n        value={\n          state.context.advancedOrganizer.answer.problemSolution\n            .whySolutionSolved\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: {\n              ...problemSolution,\n              whySolutionSolved: e.target.value,\n            },\n          })\n        }}\n      />\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateHowCauseEffect,\n  updateHowCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { UPDATE_HOW_CAUSE_EFFECT_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicHowCauseEffect'\n\nexport type AdvancedHowCauseEffectProps = {}\n\nexport const AdvancedHowCauseEffect: FC<AdvancedHowCauseEffectProps> = () => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const { subject, verb, object } =\n    state.context.advancedOrganizer.advancedSentenceStructure\n  const { howCauseEffect } = state.context.advancedOrganizer.answer\n\n  const [updateHowCauseEffect] = useMutation<\n    updateHowCauseEffect,\n    updateHowCauseEffectVariables\n  >(UPDATE_HOW_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        before: state.context.advancedOrganizer.answer.howCauseEffect.before,\n        cause: state.context.advancedOrganizer.answer.howCauseEffect.cause,\n        after: state.context.advancedOrganizer.answer.howCauseEffect.after,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    updateHowCauseEffect()\n  }, [howCauseEffect, updateHowCauseEffect])\n\n  return (\n    <>\n      <div>How: Cause and Effect</div>\n      <div>\n        What was {object} like before {subject} {verb}ed\n      </div>\n      <input\n        value={state.context.advancedOrganizer.answer.howCauseEffect.before}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_HOW_CAUSE_EFFECT',\n            payload: {\n              ...howCauseEffect,\n              before: e.target.value,\n            },\n          })\n        }}\n      />\n      <div>\n        How was {object} different because of {subject}\n      </div>\n      <input\n        value={state.context.advancedOrganizer.answer.howCauseEffect.after}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_HOW_CAUSE_EFFECT',\n            payload: {\n              ...howCauseEffect,\n              after: e.target.value,\n            },\n          })\n        }}\n      />\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateWhyCauseEffect,\n  updateWhyCauseEffectVariables,\n} from '../../../../../../../../schemaTypes'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { UPDATE_WHY_CAUSE_EFFECT_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicWhyCauseEffect'\n\nexport type AdvancedWhyCauseEffectProps = {}\n\nexport const AdvancedWhyCauseEffect: FC<AdvancedWhyCauseEffectProps> = () => {\n  const [state, event] = useCompletedEssayContextProvider()\n  const { subject, verb } =\n    state.context.advancedOrganizer.advancedSentenceStructure\n  const { whyCauseEffect } = state.context.advancedOrganizer.answer\n\n  const [updateWhyCauseEffect] = useMutation<\n    updateWhyCauseEffect,\n    updateWhyCauseEffectVariables\n  >(UPDATE_WHY_CAUSE_EFFECT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        ultimateCause:\n          state.context.advancedOrganizer.answer.whyCauseEffect.ultimateCause,\n        proximateCause:\n          state.context.advancedOrganizer.answer.whyCauseEffect.proximateCause,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  useEffect(() => {\n    updateWhyCauseEffect()\n  }, [updateWhyCauseEffect, whyCauseEffect])\n\n  return (\n    <>\n      <div>Why: Cause and Effect</div>\n      <div>\n        Why did {subject} {verb}?\n      </div>\n      <input\n        type=\"text\"\n        value={\n          state.context.advancedOrganizer.answer.whyCauseEffect.proximateCause\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_WHY_CAUSE_EFFECT',\n            payload: { ...whyCauseEffect, proximateCause: e.target.value },\n          })\n        }}\n      />\n      <div>Why did that happen?</div>\n      <input\n        type=\"text\"\n        value={\n          state.context.advancedOrganizer.answer.whyCauseEffect.ultimateCause\n        }\n        onChange={(e: any) => {\n          event({\n            type: 'SET_WHY_CAUSE_EFFECT',\n            payload: { ...whyCauseEffect, ultimateCause: e.target.value },\n          })\n        }}\n      />\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setAnswerType,\n  setAnswerTypeVariables,\n  QuestionTypeEnum,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer,\n} from '../../../../../../../../schemaTypes'\nimport { useMutation } from '@apollo/client'\n\nimport { AdvancedHowProblemSolution } from './AdvancedHowProblemSolution'\nimport { AdvancedHowCauseEffect } from './AdvancedHowCauseEffect'\nimport { AdvancedWhyCauseEffect } from './AdvancedWhyCauseEffect'\nimport { useEnumContextProvider } from '../../../../../../../../contexts/EnumContext'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { SET_ANSWER_TYPE_MUTATION } from '../../../assigned-essays/organizers/academic/AcademicAnswerTypes'\nimport { Modal } from '../../../../../../../../animations'\n\nexport type AdvancedAnswerTypesProps = {\n  advancedOrganizer: findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer\n}\n\nexport const AdvancedAnswerTypes: FC<AdvancedAnswerTypesProps> = ({\n  advancedOrganizer,\n}) => {\n  const [modal, setModal] = useState(false)\n  const [state, event] = useCompletedEssayContextProvider()\n  const { questionTypeEnum } = useEnumContextProvider()\n\n  const [setAnswerType] = useMutation<setAnswerType, setAnswerTypeVariables>(\n    SET_ANSWER_TYPE_MUTATION,\n    {\n      variables: {\n        input: {\n          essayId: state.context.essayId,\n          questionType: state.context.advancedOrganizer.questionType,\n        },\n      },\n      onCompleted: (data) => {\n        const { questionType } = data.setAnswerType.essay.workingDraft\n          .organizer as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer\n        event({\n          type: 'SET_FULL_QUESTION_TYPE',\n          payload: questionType!,\n        })\n      },\n      refetchQueries: ['findEssayById'],\n    },\n  )\n  // useEffect(() => {\n  //   setAnswerType()\n  // }, [setAnswerType, state.context.advancedOrganizer.questionType])\n\n  return (\n    <>\n      <span>What is the Question Type: </span>\n      <span>\n        <select\n          value={state.context.advancedOrganizer.questionType}\n          onChange={(e: any) => {\n            if (e.target.value !== 'none') {\n              event({\n                type: 'SET_FULL_QUESTION_TYPE',\n                payload: e.target.value,\n              })\n            }\n          }}\n        >\n          <option value={'none'}>Pick a Question Type</option>\n          {questionTypeEnum.map((question: QuestionTypeEnum) => (\n            <option key={question} value={question}>\n              {question === 'HOW_PROBLEM_SOLUTION'\n                ? 'How: Problem and Solution'\n                : question === 'HOW_CAUSE_EFFECT'\n                  ? 'How: Cause and Effect'\n                  : 'Why: Cause and Effect'}\n            </option>\n          ))}\n        </select>\n        <button\n          onClick={() => {\n            setModal(true)\n          }}\n        >\n          Change Question Type\n        </button>\n        <Modal isToggled={modal} setIsToggled={setModal}>\n          <div>\n            Choosing new Question type will permanently delete information. Are\n            you sure you want to do this?\n          </div>\n          <button\n            onClick={() => {\n              setAnswerType()\n              setModal(false)\n            }}\n          >\n            Yes\n          </button>\n          <button onClick={() => setModal(false)}>NO</button>\n        </Modal>\n      </span>\n\n      {advancedOrganizer.questionType ===\n        QuestionTypeEnum.HOW_PROBLEM_SOLUTION && <AdvancedHowProblemSolution />}\n      {advancedOrganizer.questionType === QuestionTypeEnum.HOW_CAUSE_EFFECT && (\n        <AdvancedHowCauseEffect />\n      )}\n      {advancedOrganizer.questionType === QuestionTypeEnum.WHY_CAUSE_EFFECT && (\n        <AdvancedWhyCauseEffect />\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { UpdateAdvancedOrganizerType } from './AdvancedOrganizer'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\n\nexport type AdvancedRestatementProps = {\n  updateAdvancedOrganizer: UpdateAdvancedOrganizerType\n}\n\nexport const AdvancedRestatement: FC<AdvancedRestatementProps> = ({\n  updateAdvancedOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    updateAdvancedOrganizer()\n    // console.log('update')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    state.context.advancedOrganizer.restatement,\n    state.context.advancedOrganizer.advancedSentenceStructure,\n  ])\n\n  return (\n    <>\n      <div>Set the Parts of the Question</div>\n      <span>What is the Subject of the question: </span>\n      <span>\n        <input\n          value={\n            state.context.advancedOrganizer.advancedSentenceStructure.subject\n          }\n          onChange={(e: any) =>\n            event({\n              type: 'SET_ADVANCED_SENTENCE_STRUCTURE_SUBJECT',\n              payload: e.target.value,\n            })\n          }\n        />\n      </span>\n      <span>What is the Verb of the question: </span>\n      <span>\n        <input\n          value={state.context.advancedOrganizer.advancedSentenceStructure.verb}\n          onChange={(e: any) =>\n            event({\n              type: 'SET_ADVANCED_SENTENCE_STRUCTURE_VERB',\n              payload: e.target.value,\n            })\n          }\n        />\n      </span>\n      <span>What is the Object of the question: </span>\n      <span>\n        <input\n          value={\n            state.context.advancedOrganizer.advancedSentenceStructure.object!\n          }\n          onChange={(e: any) =>\n            event({\n              type: 'SET_ADVANCED_SENTENCE_STRUCTURE_OBJECT',\n              payload: e.target.value,\n            })\n          }\n        />\n      </span>\n      <div>Restatement</div>\n      <input\n        type=\"text\"\n        value={state.context.advancedOrganizer.restatement}\n        onChange={(e: any) =>\n          event({\n            type: 'SET_RESTATEMENT',\n            payload: e.target.value,\n          })\n        }\n      />\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { UpdateAdvancedOrganizerType } from './AdvancedOrganizer'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\n\nexport type AdvancedConclusionProps = {\n  updateAdvancedOrganizer: UpdateAdvancedOrganizerType\n}\n\nexport const AdvancedConclusion: FC<AdvancedConclusionProps> = ({\n  updateAdvancedOrganizer,\n}) => {\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    updateAdvancedOrganizer()\n  }, [state.context.advancedOrganizer.conclusion, updateAdvancedOrganizer])\n\n  return (\n    <>\n      <div>Conclusion</div>\n      <input\n        type=\"text\"\n        value={state.context.advancedOrganizer.conclusion}\n        onChange={(e: any) =>\n          event({ type: 'SET_CONCLUSION', payload: e.target.value })\n        }\n      />\n    </>\n  )\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { useMutation, MutationFunctionOptions } from '@apollo/client'\nimport {\n  updateAdvancedOrganizer,\n  updateAdvancedOrganizerVariables,\n  findCompletedEssayById_findEssayById_essay,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType,\n  findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType,\n} from '../../../../../../../../schemaTypes'\n\nimport { AdvancedAnswerTypes } from './AdvancedAnswerTypes'\n\nimport { AdvancedRestatement } from './AdvancedRestatement'\nimport { AdvancedConclusion } from './AdvancedConclusion'\nimport { useCompletedEssayContextProvider } from '../../state/CompletedEssayContext'\nimport { UPDATE_ADVANCED_ORGANIZER_MUTATION } from '../../../assigned-essays/organizers/advanced/AdvancedOrganizer'\n\nexport type AdvancedOrganizerProps = {\n  question: string\n  essay: findCompletedEssayById_findEssayById_essay\n}\n\nexport type UpdateAdvancedOrganizerType = (\n  options?:\n    | MutationFunctionOptions<\n        updateAdvancedOrganizer,\n        updateAdvancedOrganizerVariables\n      >\n    | undefined,\n) => void\n\nexport const AdvancedOrganizer: FC<AdvancedOrganizerProps> = ({\n  question,\n  essay,\n}) => {\n  const advancedOrganizer = essay.workingDraft\n    .organizer as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer\n  const [loading, setLoading] = useState(false)\n  const [state, event] = useCompletedEssayContextProvider()\n\n  useEffect(() => {\n    event({\n      type: 'SET_FULL_QUESTION_TYPE',\n      payload: advancedOrganizer.questionType!,\n    })\n\n    if (advancedOrganizer.questionType === 'HOW_PROBLEM_SOLUTION') {\n      const { problem, reasonForProblem, solvedBy, whySolutionSolved } =\n        advancedOrganizer.answerType as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_ProblemSolutionAnswerType\n      event({\n        type: 'SET_PROBLEM_SOLUTION',\n        payload: {\n          problem: problem,\n          reasonForProblem: reasonForProblem,\n          solvedBy: solvedBy,\n          whySolutionSolved: whySolutionSolved,\n        },\n      })\n    }\n    if (advancedOrganizer.questionType === 'HOW_CAUSE_EFFECT') {\n      const { before, cause, after } =\n        advancedOrganizer.answerType as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_HowCauseEffectAnswerType\n      event({\n        type: 'SET_HOW_CAUSE_EFFECT',\n        payload: { before: before, cause: cause, after: after },\n      })\n    }\n    if (advancedOrganizer.questionType === 'WHY_CAUSE_EFFECT') {\n      const { ultimateCause, proximateCause } =\n        advancedOrganizer.answerType as findCompletedEssayById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer_answerType_WhyCauseEffectAnswerType\n      event({\n        type: 'SET_WHY_CAUSE_EFFECT',\n        payload: {\n          ultimateCause: ultimateCause,\n          proximateCause: proximateCause,\n        },\n      })\n    }\n    setLoading(true)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [advancedOrganizer])\n\n  const [updateAdvancedOrganizer] = useMutation<\n    updateAdvancedOrganizer,\n    updateAdvancedOrganizerVariables\n  >(UPDATE_ADVANCED_ORGANIZER_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.essayId,\n        advancedSentenceStructure:\n          state.context.advancedOrganizer.advancedSentenceStructure,\n        restatement: state.context.advancedOrganizer.restatement,\n        conclusion: state.context.advancedOrganizer.conclusion,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayById'],\n  })\n\n  return (\n    <>\n      <div>advancedOrganizer</div>\n      <div>{question}</div>\n\n      <AdvancedRestatement updateAdvancedOrganizer={updateAdvancedOrganizer} />\n\n      {loading && <AdvancedAnswerTypes advancedOrganizer={advancedOrganizer} />}\n\n      <AdvancedConclusion updateAdvancedOrganizer={updateAdvancedOrganizer} />\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { findCompletedEssayById_findEssayById_essay } from '../../../../../../../schemaTypes'\n\nimport { DevelopingOrganizer } from './developing/DevelopingOrganizer'\nimport { AcademicOrganizer } from './academic/AcademicOrganizer'\nimport { AdvancedOrganizer } from './advanced/AdvancedOrganizer'\nimport { useCompletedEssayContextProvider } from '../state/CompletedEssayContext'\n\nexport type RedoEssayOrganizerProps = {\n  essay: findCompletedEssayById_findEssayById_essay\n}\n\nexport const RedoEssayOrganizer: FC<RedoEssayOrganizerProps> = ({ essay }) => {\n  const [, event] = useCompletedEssayContextProvider()\n  useEffect(() => {\n    if (essay.workingDraft.organizer?.__typename === 'DevelopingOrganizer') {\n      const organizer = essay.workingDraft.organizer\n      event({\n        type: 'SET_DEVELOPING_SENTENCE_STRUCTURE',\n        payload: {\n          subject: organizer!.developingSentenceStructure.subject,\n          verb: organizer.developingSentenceStructure.verb,\n        },\n      })\n      event({\n        type: 'SET_BASIC_QUESTION_TYPE',\n        payload: organizer.basicQuestionType!,\n      })\n      event({ type: 'SET_RESTATEMENT', payload: organizer.restatement })\n      event({ type: 'SET_ANSWER', payload: organizer.answer })\n      event({ type: 'SET_CONCLUSION', payload: organizer.conclusion })\n    }\n    // preloading all the parts of the Academic Organizer with preanswered information\n    if (essay.workingDraft.organizer?.__typename === 'AcademicOrganizer') {\n      const organizer = essay.workingDraft.organizer\n\n      const answerTypes = organizer.answerType!\n\n      event({\n        type: 'SET_ACADEMIC_SENTENCE_STRUCTURE',\n        payload: {\n          subject: organizer.academicSentenceStructure.subject,\n          verb: organizer.academicSentenceStructure.verb,\n          object: organizer.academicSentenceStructure.object,\n        },\n      })\n      event({ type: 'SET_RESTATEMENT', payload: organizer.restatement })\n      if (organizer.questionType) {\n        event({\n          type: 'SET_FULL_QUESTION_TYPE',\n          payload: organizer.questionType,\n        })\n\n        if (answerTypes.__typename === 'ProblemSolutionAnswerType') {\n          const type = answerTypes\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: {\n              problem: type.problem,\n              reasonForProblem: type.reasonForProblem,\n              solvedBy: type.solvedBy,\n              whySolutionSolved: type.whySolutionSolved,\n            },\n          })\n        }\n        if (answerTypes.__typename === 'HowCauseEffectAnswerType') {\n          const type = answerTypes\n          event({\n            type: 'SET_HOW_CAUSE_EFFECT',\n            payload: {\n              before: type.before,\n              cause: type.cause,\n              after: type.after,\n            },\n          })\n        }\n        if (answerTypes.__typename === 'WhyCauseEffectAnswerType') {\n          const type = answerTypes\n          event({\n            type: 'SET_WHY_CAUSE_EFFECT',\n            payload: {\n              ultimateCause: type.ultimateCause,\n              proximateCause: type.proximateCause,\n            },\n          })\n        }\n      }\n      event({ type: 'SET_CONCLUSION', payload: organizer.conclusion })\n    }\n    if (essay.workingDraft.organizer?.__typename === 'AdvancedOrganizer') {\n      const organizer = essay.workingDraft.organizer\n\n      const answerTypes = organizer.answerType!\n\n      event({\n        type: 'SET_ADVANCED_SENTENCE_STRUCTURE',\n        payload: {\n          subject: organizer.advancedSentenceStructure.subject,\n          verb: organizer.advancedSentenceStructure.verb,\n          object: organizer.advancedSentenceStructure.object,\n        },\n      })\n      event({ type: 'SET_RESTATEMENT', payload: organizer.restatement })\n      if (organizer.questionType) {\n        event({\n          type: 'SET_FULL_QUESTION_TYPE',\n          payload: organizer.questionType,\n        })\n\n        if (answerTypes.__typename === 'ProblemSolutionAnswerType') {\n          const type = answerTypes\n          event({\n            type: 'SET_PROBLEM_SOLUTION',\n            payload: {\n              problem: type.problem,\n              reasonForProblem: type.reasonForProblem,\n              solvedBy: type.solvedBy,\n              whySolutionSolved: type.whySolutionSolved,\n            },\n          })\n        }\n        if (answerTypes.__typename === 'HowCauseEffectAnswerType') {\n          const type = answerTypes\n          event({\n            type: 'SET_HOW_CAUSE_EFFECT',\n            payload: {\n              before: type.before,\n              cause: type.cause,\n              after: type.after,\n            },\n          })\n        }\n        if (answerTypes.__typename === 'WhyCauseEffectAnswerType') {\n          const type = answerTypes\n          event({\n            type: 'SET_WHY_CAUSE_EFFECT',\n            payload: {\n              ultimateCause: type.ultimateCause,\n              proximateCause: type.proximateCause,\n            },\n          })\n        }\n      }\n      event({ type: 'SET_CONCLUSION', payload: organizer.conclusion })\n    }\n    event({ type: 'NEXT' })\n  }, [essay])\n\n  return (\n    <>\n      {essay.workingDraft.organizer?.__typename === 'DevelopingOrganizer' && (\n        <DevelopingOrganizer essay={essay} />\n      )}\n      {essay.workingDraft.organizer?.__typename === 'AcademicOrganizer' && (\n        <AcademicOrganizer question={essay.topic.question} essay={essay} />\n      )}\n      {essay.workingDraft.organizer?.__typename === 'AdvancedOrganizer' && (\n        <AdvancedOrganizer question={essay.topic.question} essay={essay} />\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router'\n\nimport { useQuery, gql } from '@apollo/client'\nimport {\n  findCompletedEssayByIdVariables,\n  findCompletedEssayById,\n  SubmittedFinalDraftsInput,\n  me_me_Student,\n  SchoolDayLengthEnum,\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n} from '../../../../../../schemaTypes'\nimport { useCompletedEssayContextProvider } from './state/CompletedEssayContext'\n\nimport { MultipleDraftView } from './MultipleDraftView'\nimport {\n  EssayContainer,\n  AssignmentDetailsContainer,\n  AssignmentDetailsGoBackButton,\n  EssayInfoContainer,\n  SubmitEssayContainer,\n  AssignmentDetailsReadingInfo,\n  EssaySubmitButton,\n  OrganizerContainer,\n} from '../assigned-essays/state-and-styles/assignedEssayStyles'\nimport {\n  EssayViewContainer,\n  CompletedEssayDetailsContainer,\n  CompletedEssayDetailsPartContainers,\n  EssayRedoButtonContainer,\n  CompletedEssayControlButton,\n} from './state/completedEssayStyles'\nimport { HowToImprove } from './HowToImprove'\nimport { SubmitRedoneEssay } from './SubmitRedoneEssay'\nimport { RedoEssayOrganizerHelp } from './RedoEssayOrganizerHelp'\nimport { RedoEssayOrganizer } from './organizers/RedoEssayOrganizer'\nimport { useTime } from '../../../../../../hooks/useTime'\nimport { timeFinder } from '../../../../../../utils'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport { useSchoolDayContextProvider } from '../../../../school-day/state/SchoolDayContext'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from '../../../../school-day/SchoolDay'\nimport { useAssignmentsAllowedInClassCheck } from '../../../../../../hooks/useAssignmentsAllowedInClassCheck'\nimport { useClassTimeIndicator } from '../../../../../../hooks/useClassTimeIndicator'\n\nexport const FIND_COMPLETED_ESSSAY_BY_ID_QUERY = gql`\n  query findCompletedEssayById($input: FindEssayByIdInput!) {\n    findEssayById(input: $input) {\n      essay {\n        _id\n        topic {\n          question\n          writingLevel\n        }\n        readings {\n          readingPages\n          readingSections\n        }\n        score {\n          maxPoints\n          earnedPoints\n        }\n        finalDraft {\n          submittedFinalDraft {\n            draft\n            gradingDraft\n            score\n            draftNumber\n            rubricEntries {\n              entry\n              rubricSection\n              score\n              howToImprove\n            }\n            additionalComments\n          }\n        }\n        workingDraft {\n          draft\n          organizer {\n            ... on DevelopingOrganizer {\n              basicQuestionType\n              developingSentenceStructure {\n                subject\n                verb\n              }\n              restatement\n              answer\n              conclusion\n            }\n            ... on AcademicOrganizer {\n              academicSentenceStructure {\n                subject\n                verb\n                object\n              }\n              restatement\n              conclusion\n              questionType\n              answerType {\n                ... on ProblemSolutionAnswerType {\n                  problem\n                  reasonForProblem\n                  solvedBy\n                  whySolutionSolved\n                }\n                ... on HowCauseEffectAnswerType {\n                  before\n                  cause\n                  after\n                }\n                ... on WhyCauseEffectAnswerType {\n                  ultimateCause\n                  proximateCause\n                }\n              }\n            }\n            ... on AdvancedOrganizer {\n              advancedSentenceStructure {\n                subject\n                verb\n                object\n              }\n              answerType {\n                ... on ProblemSolutionAnswerType {\n                  problem\n                  reasonForProblem\n                  solvedBy\n                  whySolutionSolved\n                }\n                ... on HowCauseEffectAnswerType {\n                  before\n                  cause\n                  after\n                }\n                ... on WhyCauseEffectAnswerType {\n                  ultimateCause\n                  proximateCause\n                }\n              }\n              restatement\n              conclusion\n              questionType\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport type CompletedEssayProps = {}\n\nexport const CompletedEssay = ({}: CompletedEssayProps) => {\n  const { completedEssay } = useParams()\n  const me: me_me_Student = useUserContextProvider()\n  const navigate = useNavigate()\n  const [state, event] = useCompletedEssayContextProvider()\n  const [currentSchoolDayState] = useSchoolDayContextProvider()\n  const { dateTime } = useTime()\n  const { classTime } = useClassTimeIndicator(me)\n  const { loading, data } = useQuery<\n    findCompletedEssayById,\n    findCompletedEssayByIdVariables\n  >(FIND_COMPLETED_ESSSAY_BY_ID_QUERY, {\n    variables: {\n      input: { _id: completedEssay! },\n    },\n    onCompleted: (data) => {\n      event({\n        type: 'SET_WRITING_LEVEL',\n        payload: data.findEssayById.essay.topic.writingLevel,\n      })\n      event({ type: 'SET_ESSAY_ID', payload: data.findEssayById.essay._id! })\n      event({\n        type: 'SET_DRAFT_NUMBER',\n        payload:\n          data.findEssayById.essay.finalDraft?.submittedFinalDraft[\n            data.findEssayById.essay.finalDraft.submittedFinalDraft.length - 1\n          ].draftNumber!,\n      })\n      event({\n        type: 'SET_DRAFT',\n        payload: data.findEssayById.essay.workingDraft.draft,\n      })\n    },\n    pollInterval: 15000,\n    onError: (error) => console.error(error),\n  })\n\n  const waysToImprove: (string | null)[] =\n    data?.findEssayById.essay.finalDraft?.submittedFinalDraft[\n      data.findEssayById.essay.finalDraft.submittedFinalDraft.length - 1\n    ].rubricEntries.map((entry) => entry.howToImprove)!\n\n  const submittedFinalDraft: SubmittedFinalDraftsInput = {\n    draftNumber: state.context.draftNumber + 1,\n    draft: state.context.draftToUpdate,\n    gradingDraft: state.context.draftToUpdate,\n    rubricEntries: [],\n    additionalComments: [],\n    score: 0,\n    graded: false,\n  }\n  const { data: schoolDayData } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: '12/14/2021' },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  const schoolDay = schoolDayData?.findSchoolDayByDate.schoolDay !== null\n\n  const gradePercent =\n    data?.findEssayById.essay.score.earnedPoints! /\n    data?.findEssayById.essay.score.maxPoints!\n\n  const { assignmentsAllowedInClass } = useAssignmentsAllowedInClassCheck(me)\n\n  const { schoolDayLength } = currentSchoolDayState.context.currentSchoolDay\n\n  // const classTime =\n  //   schoolDay &&\n  //   Date.parse(dateTime) >\n  //     Date.parse(\n  //       timeFinder(\n  //         schoolDayLength === SchoolDayLengthEnum.HALF\n  //           ? me.inCourses[0].hasCourseInfo?.halfDayStartsAt!\n  //           : me.inCourses[0].hasCourseInfo?.startsAt!,\n  //       ),\n  //     ) &&\n  //   Date.parse(dateTime) <\n  //     Date.parse(\n  //       timeFinder(\n  //         schoolDayLength === SchoolDayLengthEnum.HALF\n  //           ? me.inCourses[0].hasCourseInfo?.halfDayEndsAt!\n  //           : me.inCourses[0].hasCourseInfo?.endsAt!,\n  //       ),\n  //     )\n  useEffect(() => {\n    if (classTime && !assignmentsAllowedInClass && state.matches('redoEssay')) {\n      navigate('/dashboard/assignments')\n    }\n  }, [classTime, navigate, assignmentsAllowedInClass])\n\n  if (loading) return <div>Loading </div>\n\n  const isAbsent =\n    me.hasAbsences.length > 0 &&\n    me.hasAbsences.find((a) => a.dayAbsent === new Date().toLocaleDateString())\n\n  return (\n    <EssayContainer>\n      <CompletedEssayDetailsContainer>\n        <CompletedEssayDetailsPartContainers>\n          <AssignmentDetailsReadingInfo>\n            Read pages {data?.findEssayById.essay.readings.readingPages}:{' '}\n            {data?.findEssayById.essay.readings.readingSections}\n          </AssignmentDetailsReadingInfo>\n        </CompletedEssayDetailsPartContainers>\n        <CompletedEssayDetailsPartContainers>\n          <AssignmentDetailsReadingInfo>\n            Overall Score: {data?.findEssayById.essay.score.earnedPoints} /{' '}\n            {data?.findEssayById.essay.score.maxPoints} (\n            {(gradePercent * 100).toFixed(1)}%)\n          </AssignmentDetailsReadingInfo>\n        </CompletedEssayDetailsPartContainers>\n        <CompletedEssayDetailsPartContainers>\n          <AssignmentDetailsGoBackButton\n            onClick={() => navigate('/dashboard/assignments')}\n          >\n            Back to Assignments\n          </AssignmentDetailsGoBackButton>\n          {state.matches('redoEssay') && (\n            <AssignmentDetailsGoBackButton\n              onClick={() => event({ type: 'ORGANIZER' })}\n            >\n              Change Organizer\n            </AssignmentDetailsGoBackButton>\n          )}\n        </CompletedEssayDetailsPartContainers>\n      </CompletedEssayDetailsContainer>\n\n      {(state.matches('reviewEssay') || state.matches('redoEssay')) && (\n        <EssayViewContainer>\n          <MultipleDraftView essay={data?.findEssayById.essay!} />\n\n          <EssayRedoButtonContainer>\n            {state.matches('reviewEssay') && !classTime && (\n              <CompletedEssayControlButton\n                onClick={() => {\n                  event({ type: 'NEXT' })\n                }}\n              >\n                Redo Essay\n              </CompletedEssayControlButton>\n            )}\n            {state.matches('reviewEssay') &&\n              classTime &&\n              assignmentsAllowedInClass &&\n              !isAbsent && (\n                <CompletedEssayControlButton\n                  onClick={() => {\n                    event({ type: 'NEXT' })\n                  }}\n                >\n                  Redo Essay\n                </CompletedEssayControlButton>\n              )}\n            {state.matches('reviewEssay') &&\n              classTime &&\n              !assignmentsAllowedInClass && (\n                <CompletedEssayControlButton>\n                  You Can't Redo Essays During Class\n                </CompletedEssayControlButton>\n              )}\n            {state.matches('redoEssay') && (\n              <SubmitRedoneEssay\n                _id={state.context.essayId}\n                submittedFinalDraft={submittedFinalDraft}\n              />\n            )}\n          </EssayRedoButtonContainer>\n        </EssayViewContainer>\n      )}\n\n      {state.matches('reviewOrganizer') && (\n        <OrganizerContainer>\n          <RedoEssayOrganizer essay={data?.findEssayById.essay!} />\n        </OrganizerContainer>\n      )}\n      <EssayInfoContainer>\n        {/* {state.matches('redoEssay') && ( */}\n        {!state.matches('reviewOrganizer') && (\n          <HowToImprove waysToImprove={waysToImprove} />\n        )}\n        {/* )} */}\n        {state.matches('reviewOrganizer') && <RedoEssayOrganizerHelp />}\n      </EssayInfoContainer>\n    </EssayContainer>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  UpdateReadingGuideInput,\n  // InformationStructureEnum,\n  SubmitReadingGuideInput,\n} from '../../../../../../schemaTypes'\n\nexport type readingGuideToCompleteMachineSchema = {\n  states: {\n    questions: {}\n    // clarifyingQuestions: {}\n  }\n}\nexport type readingGuideToCompleteMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_READING_GUIDE_ID'; payload: string }\n  | {\n      type: 'SET_READING_GUIDE_PROPERTIES'\n      keyName: string\n      payload: string | string[]\n    }\n\n  // | { type: 'SET_HOW_IS_ORGANIZED'; payload: InformationStructureEnum[] }\n  // | { type: 'SET_WHY_IS_ORGANIZED'; payload: string }\n  // | { type: 'SET_MAJOR_ISSUE'; payload: string }\n  // | { type: 'SET_MAJOR_ISSUE_SOLVED'; payload: boolean }\n  // | { type: 'SET_MAJOR_SOLUTION'; payload: string }\n  // | { type: 'SET_CLARIFYING_QUESTION'; payload: string[] }\n  | {\n      type: 'SET_HELP'\n      payload:\n        | 'general'\n        | 'problems'\n        | 'biggestProblem'\n        | 'reasonForBiggestProblem'\n        | 'importantPeople'\n        | 'howArePeopleInvolvedInProblems'\n        | 'sectionConsequences'\n    }\n  | { type: 'SET_HELP_DISPLAY' }\n  | { type: 'SET_VOCAB_DISPLAY' }\n  | { type: 'SET_READING_GUIDE_INPUTS'; payload: UpdateReadingGuideInput }\n  | { type: 'SET_PROBLEM_LIST'; payload: string[] }\n  | { type: 'REMOVE_PROBLEM'; payload: number }\n  | { type: 'SET_IMPORTANT_PEOPLE_LIST'; payload: string[] }\n  | { type: 'REMOVE_IMPORTANT_PEOPLE'; payload: number }\n\nexport type readingGuideToCompleteMachineContext = {\n  updateReadingGuideInputs: UpdateReadingGuideInput\n  submitReadingGuideInputs: SubmitReadingGuideInput\n  help: // | 'howIsSectionOrganized'\n  // | 'whyWasSectionOrganized'\n  // | 'majorIssue'\n  // | 'majorIssueSolved'\n  // | 'majorSolution'\n  // | 'clarifyingQuestions'\n  | 'general'\n    | 'problems'\n    | 'biggestProblem'\n    | 'reasonForBiggestProblem'\n    | 'importantPeople'\n    | 'howArePeopleInvolvedInProblems'\n    | 'sectionConsequences'\n  helpDisplay: boolean\n  vocabDisplay: boolean\n  problemList: string[]\n  importantPeopleList: string[]\n}\n\nexport const readingGuideToCompleteMachine = Machine<\n  readingGuideToCompleteMachineContext,\n  readingGuideToCompleteMachineSchema,\n  readingGuideToCompleteMachineEvent\n>({\n  id: 'readingGuideToComplete',\n  initial: 'questions',\n  context: {\n    updateReadingGuideInputs: {\n      readingGuideId: '',\n      // howIsSectionOrganized: [],\n      // whyWasSectionOrganized: '',\n      // majorIssue: '',\n      // majorIssueSolved: true,\n      // majorSolution: '',\n      // clarifyingQuestions: [],\n      // problems: [],\n      // biggestProblem: '',\n      // reasonForBiggestProblem: '',\n      // importantPeople: [],\n      // howArePeopleInvolvedInProblems: '',\n      // sectionConsequences: '',\n    },\n    submitReadingGuideInputs: {\n      readingGuideId: '',\n      late: true,\n      submitTime: new Date().toLocaleString(),\n      paperBased: false,\n      responsibilityPoints: 10,\n    },\n    help: 'general',\n    helpDisplay: true,\n    vocabDisplay: false,\n    problemList: [],\n    importantPeopleList: [],\n  },\n  states: {\n    questions: {\n      on: {\n        // NEXT: 'clarifyingQuestions',\n        SET_READING_GUIDE_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateReadingGuideInputs: {\n                ...ctx.updateReadingGuideInputs,\n                readingGuideId: evt.payload,\n              },\n              submitReadingGuideInputs: {\n                ...ctx.submitReadingGuideInputs,\n                readingGuideId: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_READING_GUIDE_INPUTS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateReadingGuideInputs: evt.payload,\n            }\n          }),\n        },\n        SET_READING_GUIDE_PROPERTIES: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateReadingGuideInputs: {\n                ...ctx.updateReadingGuideInputs,\n                [evt.keyName]: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_PROBLEM_LIST: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateReadingGuideInputs: {\n                ...ctx.updateReadingGuideInputs,\n                problems: evt.payload,\n              },\n            }\n          }),\n        },\n        // REMOVE_PROBLEM: {\n        //   actions: assign((ctx, evt) => {\n        //     const problemList = [\n        //       ...ctx.updateReadingGuideInputs.problems.slice(0, evt.payload),\n        //       ...ctx.updateReadingGuideInputs.problems.slice(evt.payload + 1),\n        //     ]\n        //     return {\n        //       ...ctx,\n        //       updateReadingGuideInputs: {\n        //         ...ctx.updateReadingGuideInputs,\n        //         problems: problemList,\n        //       },\n        //     }\n        //   }),\n        // },\n        SET_IMPORTANT_PEOPLE_LIST: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateReadingGuideInputs: {\n                ...ctx.updateReadingGuideInputs,\n                importantPeople: evt.payload,\n              },\n            }\n          }),\n        },\n        // REMOVE_IMPORTANT_PEOPLE: {\n        //   actions: assign((ctx, evt) => {\n        //     const importantPersonList = [\n        //       ...ctx.updateReadingGuideInputs.importantPeople.slice(\n        //         0,\n        //         evt.payload\n        //       ),\n        //       ...ctx.updateReadingGuideInputs.importantPeople.slice(\n        //         evt.payload + 1\n        //       ),\n        //     ]\n        //     return {\n        //       ...ctx,\n        //       updateReadingGuideInputs: {\n        //         ...ctx.updateReadingGuideInputs,\n        //         importantPeople: importantPersonList,\n        //       },\n        //     }\n        //   }),\n        // },\n        // SET_HOW_IS_ORGANIZED: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       updateReadingGuideInputs: {\n        //         ...ctx.updateReadingGuideInputs,\n        //         howIsSectionOrganized: evt.payload,\n        //       },\n        //     }\n        //   }),\n        // },\n        // SET_WHY_IS_ORGANIZED: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       updateReadingGuideInputs: {\n        //         ...ctx.updateReadingGuideInputs,\n        //         whyWasSectionOrganized: evt.payload,\n        //       },\n        //     }\n        //   }),\n        // },\n        // SET_MAJOR_ISSUE: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       updateReadingGuideInputs: {\n        //         ...ctx.updateReadingGuideInputs,\n        //         majorIssue: evt.payload,\n        //       },\n        //     }\n        //   }),\n        // },\n        // SET_MAJOR_ISSUE_SOLVED: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       updateReadingGuideInputs: {\n        //         ...ctx.updateReadingGuideInputs,\n        //         majorIssueSolved: evt.payload,\n        //       },\n        //     }\n        //   }),\n        // },\n        // SET_MAJOR_SOLUTION: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       updateReadingGuideInputs: {\n        //         ...ctx.updateReadingGuideInputs,\n        //         majorSolution: evt.payload,\n        //       },\n        //     }\n        //   }),\n        // },\n\n        SET_HELP: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              help: evt.payload,\n            }\n          }),\n        },\n        SET_HELP_DISPLAY: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              helpDisplay: true,\n              vocabDisplay: false,\n            }\n          }),\n        },\n        SET_VOCAB_DISPLAY: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              helpDisplay: false,\n              vocabDisplay: true,\n            }\n          }),\n        },\n      },\n    },\n    // clarifyingQuestions: {\n    //   on: {\n    //     PREVIOUS: 'questions',\n    //     SET_CLARIFYING_QUESTION: {\n    //       actions: assign((ctx, evt) => {\n    //         return {\n    //           ...ctx,\n    //           updateReadingGuideInputs: {\n    //             ...ctx.updateReadingGuideInputs,\n    //             clarifyingQuestions: evt.payload,\n    //           },\n    //         }\n    //       }),\n    //     },\n    //     SET_HELP: {\n    //       actions: assign((ctx, evt) => {\n    //         return {\n    //           ...ctx,\n    //           help: evt.payload,\n    //         }\n    //       }),\n    //     },\n    //     SET_HELP_DISPLAY: {\n    //       actions: assign((ctx) => {\n    //         return {\n    //           ...ctx,\n    //           helpDisplay: true,\n    //           vocabDisplay: false,\n    //         }\n    //       }),\n    //     },\n    //     SET_VOCAB_DISPLAY: {\n    //       actions: assign((ctx) => {\n    //         return {\n    //           ...ctx,\n    //           helpDisplay: false,\n    //           vocabDisplay: true,\n    //         }\n    //       }),\n    //     },\n    //   },\n    // },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  readingGuideToCompleteMachine,\n  readingGuideToCompleteMachineContext,\n  readingGuideToCompleteMachineEvent,\n} from './readingGuideToCompleteMachine'\n\nconst ReadingGuideToCompleteContext = createContext<any>(undefined)\n\ntype ReadingGuideToCompleteContextProps = {\n  children: ReactNode\n}\n\nexport const ReadingGuideToCompleteContextProvider: FC<\n  ReadingGuideToCompleteContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(readingGuideToCompleteMachine)\n  return (\n    <ReadingGuideToCompleteContext.Provider value={[state, event]}>\n      {children}\n    </ReadingGuideToCompleteContext.Provider>\n  )\n}\n\nexport function useReadingGuideToCompleteContextProvider() {\n  const context = useContext(ReadingGuideToCompleteContext)\n  if (context === undefined) {\n    throw new Error(\n      'useReadingGuideToCompleteContextProvider must be used within a ReadingGuideToCompleteContextProvider',\n    )\n  }\n  return context as [\n    State<\n      readingGuideToCompleteMachineContext,\n      readingGuideToCompleteMachineEvent,\n      any,\n      any\n    >,\n    (event: readingGuideToCompleteMachineEvent) => void,\n  ]\n}\n","import { Machine, assign } from 'xstate'\nimport { DynamicLessonEnums } from '../../../schemaTypes'\n\nexport type dailyAgendaMachineSchema = {\n  states: {\n    getLesson: {}\n    todaysLesson: {}\n    oldLesson: {}\n  }\n}\nexport type dailyAgendaMachineEvent =\n  | { type: 'TODAYS_LESSON' }\n  | { type: 'GET_LESSON' }\n  | { type: 'POLLING' }\n  | {\n      type: 'SET_STATIC_LESSON_TYPE'\n      payload: DynamicLessonEnums | 'TEXT_ANALYSIS'\n    }\n\nexport type dailyAgendaMachineContext = {\n  polling: boolean\n  staticLessonTypes: DynamicLessonEnums | 'TEXT_ANALYSIS'\n}\n\nexport const dailyAgendaMachine = Machine<\n  dailyAgendaMachineContext,\n  dailyAgendaMachineSchema,\n  dailyAgendaMachineEvent\n>({\n  id: 'dailyAgenda',\n  initial: 'getLesson',\n  context: {\n    polling: false,\n    staticLessonTypes: DynamicLessonEnums.LESSON_DETAILS,\n  },\n  states: {\n    getLesson: {\n      on: {\n        TODAYS_LESSON: 'todaysLesson',\n      },\n    },\n    todaysLesson: {\n      on: {\n        GET_LESSON: 'getLesson',\n        POLLING: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              polling: !ctx.polling,\n            }\n          }),\n        },\n        SET_STATIC_LESSON_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              staticLessonTypes: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    oldLesson: {},\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  dailyAgendaMachine,\n  dailyAgendaMachineContext,\n  dailyAgendaMachineEvent,\n} from './dailyAgendaMachine'\n\nconst DailyAgendaContext = createContext<any>(undefined)\n\ntype DailyAgendaContextProps = {\n  children: ReactNode\n}\n\nexport const DailyAgendaContextProvider: FC<DailyAgendaContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(dailyAgendaMachine)\n  return (\n    <DailyAgendaContext.Provider value={[state, event]}>\n      {children}\n    </DailyAgendaContext.Provider>\n  )\n}\n\nexport function useDailyAgendaContextProvider() {\n  const context = useContext(DailyAgendaContext)\n  if (context === undefined) {\n    throw new Error(\n      'useDailyAgendaContextProvider must be used within a DailyAgendaContextProvider',\n    )\n  }\n  return context as [\n    State<dailyAgendaMachineContext, dailyAgendaMachineEvent, any, any>,\n    (event: dailyAgendaMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\nimport { Standard4x6Container, Standard8x12Container } from '../../../appStyles'\n\nexport const LessonMainMenuContainer = styled.div`\n  grid-template-rows: 1fr 1fr;\n  height: 47.5vh;\n`\n\nexport const GreetingsContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  height: 100%;\n  font-size: 3rem;\n`\n\nexport const LessonSelectorContainer = styled.div`\n  grid-template-columns: 1fr 1fr;\n  font-size: 2rem;\n  height: 100%;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const CurrentLessonContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 2fr 2fr;\n`\n\nexport const CurrentLesson = styled.div`\n  font-size: 1.8rem;\n  text-decoration: underline;\n  justify-self: center;\n`\nexport const LessonNameStyle = styled.div`\n  font-size: 1.3rem;\n  justify-self: center;\n  align-self: center;\n`\nexport const GoToLessonButton = styled.button`\n  font-size: 1.1rem;\n  border-radius: 5px;\n  height: 55%;\n  width: 75%;\n  justify-self: center;\n  background-color: var(--blue);\n  color: var(--white);\n`\nexport const LessonPageContainer = styled(Standard8x12Container)`\n  height: 95vh;\n`\n\nexport const ClassInfoContainer = styled.div`\n  grid-row: 1/-2;\n  grid-column: 1/4;\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  color: var(--white);\n  background-color: var(--blue);\n  border-top: 3px solid var(--white);\n  border-right: 3px solid var(--white);\n`\nexport const ClassInfoStyle = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  align-self: auto;\n  margin-top: 20%;\n  font-size: 4vh;\n`\nexport const StopLessonContainer = styled.div`\n  grid-row: -2/-1;\n  grid-column: 1/4;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  background-color: var(--blue);\n  border-right: 3px solid var(--white);\n`\n\nexport const StopLessonButton = styled.button`\n  height: 30%;\n  width: 70%;\n  background-color: var(--grey);\n  font-size: 1.5rem;\n  color: var(--blue);\n  border-radius: 5px;\n  box-shadow: 1px 1px 1px black;\n`\n\nexport const LessonMainScreen = styled.div`\n  grid-row: 1/-2;\n  grid-column: 4/-1;\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n`\nexport const LessonComponentTypeContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-row: -2/-1;\n  grid-column: 4/-1;\n  background-color: var(--blue);\n  grid-auto-flow: column;\n`\nexport const LessonComponentTypeStyle = styled.div`\n  color: var(--white);\n  justify-self: center;\n  font-size: 2rem;\n  width: 80%;\n  height: 80%;\n  display: grid;\n  justify-items: center;\n`\n\nexport const ProtocolsContainer = styled.div`\n  grid-row: 1/-2;\n  grid-column: 4/-1;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(8, 1fr);\n`\n\nexport const ProtocolTypeContainer = styled.div`\n  grid-row: 1/3;\n  grid-column: 1/-1;\n  font-size: 3rem;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const ProtocolTaskContainer = styled.div`\n  grid-row: 3/5;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const ProtocolTask = styled.div`\n  font-size: 3.5vh;\n`\n\nexport const ProtocolResponseContainer = styled.div`\n  grid-row: 2/8;\n  grid-column: 3/-3;\n  display: grid;\n  grid-template-rows: 5fr 1fr 5fr;\n`\nexport const ProtocolResponseTaskContainer = styled.div`\n  font-size: 3vh;\n  display: grid;\n  justify-content: center;\n  align-content: center;\n`\nexport const ProtocolResponse = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 3vh;\n`\n\nexport const ProtocolResponseHeader = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 2vh;\n`\nexport const ProtocolResponseArea = styled.textarea`\n  width: 100%;\n  height: 70%;\n  justify-self: center;\n  align-self: center;\n  background-color: transparent;\n  color: var(--blue);\n  font-family: inherit;\n  font-size: 2vh;\n  border: 1px solid var(--blue);\n  border-radius: 5px;\n`\n\nexport const ProtocolResponseButtonContainer = styled.div`\n  grid-row: -2/-1;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const ProtocolResponseButton = styled.button`\n  width: 50%;\n  height: 40%;\n  font-size: 1.6rem;\n  background-color: var(--blue);\n  color: var(--white);\n  border-radius: 5px;\n`\n\nexport const LessonComponentTitleContainer = styled.div`\n  grid-row: 1/2;\n  grid-column: 2/-2;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n`\n\nexport const LessonComponentDetailsContainer = styled.div`\n  grid-row: 2/-1;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-rows: 1fr 2fr;\n`\n\nexport const LessonComponentDetailsStyle = styled.div`\n  font-size: 3.5vh;\n`\n\nexport const LessonDetailsContainer = styled.div`\n  grid-row: 2/-1;\n  grid-column: 1/-1;\n  display: grid;\n  /* justify-items: center;\n  align-items: center; */\n  /* grid-template-rows: 1fr 1fr 1fr 1fr 6fr; */\n  font-size: 2vw;\n`\nexport const LessonDetailCenter = styled.div`\n  justify-self: center;\n  margin-bottom: 3%;\n`\n\nexport const LessonDetailLeft = styled.div`\n  justify-self: left;\n`\nexport const VocabWordContainer = styled.ul`\n  grid-row: 2/-1;\n  grid-column: 1/-1;\n  margin-left: 3%;\n  font-size: 3vh;\n  overflow: scroll;\n`\nexport const VocabWordStyle = styled.li`\n  margin-bottom: 3%;\n`\n\nexport const StudentQuestionContainer = styled.div``\nexport const AskAQuestionButton = styled.button`\n  width: 35%;\n  height: 38%;\n  font-size: 1.2rem;\n  color: var(--blue);\n  border-radius: 5px;\n  justify-self: center;\n  align-self: center;\n`\nexport const QuestionContainer = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr 1fr;\n  grid-column-gap: 1%;\n  height: 40%;\n  align-self: center;\n`\nexport const QuestionInput = styled.input`\n  font-size: 1.3rem;\n  color: var(--blue);\n`\nexport const QuestionSubmitButton = styled.button`\n  background-color: var(--grey);\n  color: var(--blue);\n  border-radius: 5px;\n  font-size: 1.3rem;\n`\nexport const CancelQuestion = styled.button`\n  background-color: var(--red);\n  color: var(--white);\n  border-radius: 5px;\n  font-size: 1.3rem;\n`\nexport const AssignedSeatsContainer = styled.div`\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  font-size: 2vh;\n`\n\nexport const AssignedSeatsTitleContainer = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 5vh;\n  text-decoration: underline;\n`\nexport const AssignedSeatsStudentListContainer = styled.div`\n  border-bottom: 1px solid var(--blue);\n`\n\nexport type AssignedSeatsStudentListItemProps = {\n  indexNumber: number\n}\n\nexport const AssignedSeatsStudentListItemHeaders = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 5fr;\n`\n\nexport const AssignedSeatsStudentListItem = styled(\n  AssignedSeatsStudentListItemHeaders,\n)<AssignedSeatsStudentListItemProps>`\n  border-top: 1px solid var(--blue);\n  grid-auto-flow: column;\n  background-color: ${({ indexNumber }) =>\n    indexNumber % 2 ? 'var(--white)' : 'var(--grey)'};\n`\n\nexport const LessonInstrcutionContainer = styled.div`\n  height: 30vh;\n  overflow: scroll;\n`\n","import { SyntheticEvent, useState } from 'react'\nimport {\n  me_me,\n  respondToProtocol,\n  respondToProtocolVariables,\n  AcademicOutcomeTypes,\n  findActiveProtocolByStudent,\n  findActiveProtocolByStudentVariables,\n  findActiveProtocolByStudent_findActiveProtocolByStudent_protocol,\n} from '../../../schemaTypes'\nimport { gql, useQuery, useMutation } from '@apollo/client'\nimport {\n  ProtocolResponseContainer,\n  ProtocolResponseButtonContainer,\n  ProtocolResponseButton,\n  ProtocolResponseArea,\n  ProtocolResponseHeader,\n  ProtocolResponse,\n  ProtocolResponseTaskContainer,\n} from '../state-n-styles/lessonStyles'\n\nexport type StudentProtocolResponseProps = {\n  me: me_me\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const FIND_ACTIVE_STUDENT_PROTOCOL_QUERY = gql`\n  query findActiveProtocolByStudent($input: FindActiveProtocolByStudentInput!) {\n    findActiveProtocolByStudent(input: $input) {\n      protocol {\n        _id\n        completed\n        assignedDate\n        academicOutcomeType\n        task\n        isActive\n        response\n      }\n    }\n  }\n`\n\nexport const RESPOND_TO_PROTOCOL_MUTATION = gql`\n  mutation respondToProtocol($input: RespondToProtocolInput!) {\n    respondToProtocol(input: $input) {\n      protocol {\n        _id\n        response\n      }\n    }\n  }\n`\nexport const StudentProtocolResponse = ({\n  me,\n  setPolling,\n}: StudentProtocolResponseProps) => {\n  const [response, setResponse] = useState('')\n\n  const [protocol, setProtocol] =\n    useState<findActiveProtocolByStudent_findActiveProtocolByStudent_protocol>({\n      __typename: 'Protocol',\n      _id: '',\n      academicOutcomeType: AcademicOutcomeTypes.LOGIC_BUILDING,\n      assignedDate: '',\n      completed: false,\n      isActive: false,\n      task: '',\n      response: null,\n    })\n\n  useQuery<findActiveProtocolByStudent, findActiveProtocolByStudentVariables>(\n    FIND_ACTIVE_STUDENT_PROTOCOL_QUERY,\n    {\n      variables: {\n        input: { studentId: me._id! },\n      },\n      fetchPolicy: 'network-only',\n      onCompleted: (data) => {\n        console.log(data)\n        setProtocol(data.findActiveProtocolByStudent.protocol)\n        setPolling(5000)\n      },\n      onError: (error) => console.error(error),\n    },\n  )\n\n  const [respond] = useMutation<respondToProtocol, respondToProtocolVariables>(\n    RESPOND_TO_PROTOCOL_MUTATION,\n    {\n      variables: { input: { protocolId: protocol._id!, response } },\n      onCompleted: (data) => {\n        setProtocol({\n          ...protocol,\n          response: data.respondToProtocol.protocol.response,\n        })\n      },\n      refetchQueries: ['findActiveProtocolByStudent'],\n    },\n  )\n\n  return (\n    <>\n      {protocol.response ? (\n        <ProtocolResponseContainer>\n          <ProtocolResponse>{protocol.response}</ProtocolResponse>\n        </ProtocolResponseContainer>\n      ) : (\n        <>\n          <ProtocolResponseContainer>\n            <ProtocolResponseTaskContainer>\n              {protocol.task}\n            </ProtocolResponseTaskContainer>\n            <ProtocolResponseHeader>\n              Respond to this Task\n            </ProtocolResponseHeader>\n            <ProtocolResponseArea\n              onChange={(e: any) => setResponse(e.target.value)}\n              onCopy={(e: SyntheticEvent) => e.preventDefault()}\n            />\n          </ProtocolResponseContainer>\n          <ProtocolResponseButtonContainer>\n            <ProtocolResponseButton onClick={() => respond()}>\n              Respond\n            </ProtocolResponseButton>\n          </ProtocolResponseButtonContainer>\n        </>\n      )}\n    </>\n  )\n}\n","import { useQuery, useMutation } from '@apollo/client'\nimport { useState } from 'react'\nimport {\n  AcademicOutcomeTypes,\n  findActiveProtocolByStudent,\n  findActiveProtocolByStudentVariables,\n  findActiveProtocolByStudent_findActiveProtocolByStudent_protocol,\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  me_me,\n  respondToProtocol,\n  respondToProtocolVariables,\n} from '../../../schemaTypes'\nimport {\n  FIND_ACTIVE_STUDENT_PROTOCOL_QUERY,\n  RESPOND_TO_PROTOCOL_MUTATION,\n} from './StudentProtocolResponse'\nimport {\n  ProtocolResponseTaskContainer,\n  ProtocolResponseArea,\n  ProtocolResponseButton,\n  ProtocolResponseButtonContainer,\n} from '../state-n-styles/lessonStyles'\n\nexport type WarmUpResponseProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  me: me_me\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const WarmUpResponse = ({\n  lesson,\n  me,\n  setPolling,\n}: WarmUpResponseProps) => {\n  const [response, setResponse] = useState('')\n\n  const [protocol, setProtocol] =\n    useState<findActiveProtocolByStudent_findActiveProtocolByStudent_protocol>({\n      __typename: 'Protocol',\n      _id: '',\n      academicOutcomeType: AcademicOutcomeTypes.LOGIC_BUILDING,\n      assignedDate: '',\n      completed: false,\n      isActive: false,\n      task: '',\n      response: null,\n    })\n\n  const { data } = useQuery<\n    findActiveProtocolByStudent,\n    findActiveProtocolByStudentVariables\n  >(FIND_ACTIVE_STUDENT_PROTOCOL_QUERY, {\n    variables: {\n      input: { studentId: me._id! },\n    },\n    fetchPolicy: 'network-only',\n    onCompleted: (data) => {\n      console.log(data)\n      setProtocol(data.findActiveProtocolByStudent.protocol)\n      setPolling(5000)\n    },\n    onError: (error) => console.error(error),\n  })\n\n  const [respond] = useMutation<respondToProtocol, respondToProtocolVariables>(\n    RESPOND_TO_PROTOCOL_MUTATION,\n    {\n      variables: { input: { protocolId: protocol._id!, response } },\n      onCompleted: (data) => {\n        setProtocol({\n          ...protocol,\n          response: data.respondToProtocol.protocol.response,\n        })\n        // setPolling(2000)\n      },\n      refetchQueries: ['findActiveProtocolByStudent'],\n    },\n  )\n  return (\n    <>\n      <ProtocolResponseTaskContainer>\n        <div>{lesson.beforeActivity.task}</div>\n      </ProtocolResponseTaskContainer>\n      {data?.findActiveProtocolByStudent.protocol && (\n        <>\n          {protocol.response ? (\n            <div>{protocol.response}</div>\n          ) : (\n            <ProtocolResponseArea\n              style={{ width: '80%' }}\n              spellCheck={true}\n              onChange={(e: any) => setResponse(e.target.value)}\n            />\n          )}\n\n          {!protocol.response && (\n            <div\n              style={{\n                display: 'grid',\n                width: '80%',\n                height: '60%',\n                alignItems: 'center',\n                justifyItems: 'center',\n              }}\n            >\n              <ProtocolResponseButton\n                style={{ height: '100%' }}\n                onClick={() => respond()}\n              >\n                Respond\n              </ProtocolResponseButton>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  AcademicOutcomeTypes,\n  respondToProtocol,\n  respondToProtocolVariables,\n  findActiveProtocolByStudent_findActiveProtocolByStudent_protocol,\n  findActiveProtocolByStudent,\n  findActiveProtocolByStudentVariables,\n  me_me,\n} from '../../../schemaTypes'\nimport {\n  LessonComponentTitleContainer,\n  LessonComponentDetailsContainer,\n  LessonComponentDetailsStyle,\n  ProtocolResponseArea,\n  ProtocolResponseButton,\n  ProtocolResponseButtonContainer,\n  ProtocolResponseContainer,\n  ProtocolResponseHeader,\n  ProtocolResponseTaskContainer,\n} from '../state-n-styles/lessonStyles'\nimport { useMutation, useQuery } from '@apollo/client'\nimport {\n  FIND_ACTIVE_STUDENT_PROTOCOL_QUERY,\n  RESPOND_TO_PROTOCOL_MUTATION,\n} from './StudentProtocolResponse'\nimport { WarmUpResponse } from './WarmUpResponse'\n\nexport type WarmUpProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  me: me_me\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const WarmUp = ({ lesson, me, setPolling }: WarmUpProps) => {\n  return (\n    <>\n      <LessonComponentTitleContainer>Warm Up</LessonComponentTitleContainer>\n      <LessonComponentDetailsContainer>\n        {lesson.lessonType === 'INTRODUCTORY' && (\n          <LessonComponentDetailsStyle>\n            {lesson.beforeActivity.task}\n          </LessonComponentDetailsStyle>\n        )}\n        {me.__typename === 'Student' && (\n          <>\n            {lesson.beforeActivity.isActive && (\n              <WarmUpResponse lesson={lesson} me={me} setPolling={setPolling} />\n            )}\n          </>\n        )}\n      </LessonComponentDetailsContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  findLessonStatus_findLessonStatus_lesson,\n} from '../../../schemaTypes'\nimport {\n  LessonComponentTitleContainer,\n  LessonComponentDetailsContainer,\n  LessonDetailsContainer,\n  LessonDetailCenter,\n  LessonDetailLeft,\n  LessonMainScreen,\n  LessonInstrcutionContainer,\n} from '../state-n-styles/lessonStyles'\n\nexport type LessonDetailsProps = {\n  lesson: findLessonStatus_findLessonStatus_lesson\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const LessonDetails = ({ lesson, setPolling }: LessonDetailsProps) => {\n  const multiPageSection =\n    lesson.pageNumbers.endingPage !== lesson.pageNumbers.startingPage\n  useEffect(() => {\n    setPolling(2000)\n  })\n  return (\n    <>\n      <LessonComponentTitleContainer>\n        <div>Daily Agenda</div>\n      </LessonComponentTitleContainer>\n      <LessonDetailsContainer>\n        <LessonDetailCenter>\n          <div>\n            Today's Section: Page{multiPageSection && 's'}{' '}\n            {lesson.pageNumbers.startingPage}\n            {multiPageSection\n              ? ' - ' + lesson.pageNumbers.endingPage\n              : null}: {lesson.assignedSections.startingSection}\n            {lesson.assignedSections.endingSection !==\n              lesson.assignedSections.startingSection &&\n              ' - ' + lesson.assignedSections.endingSection}\n          </div>\n          <div style={{ fontSize: '2vh' }}>Number of Paragraphs: {}</div>\n        </LessonDetailCenter>\n        <LessonDetailCenter>\n          Essential Question: {lesson.essentialQuestion}\n        </LessonDetailCenter>\n        <br />\n        <div>\n          <div\n            style={{\n              textAlign: 'center',\n              fontSize: '2.5vh',\n              textDecoration: 'underline',\n            }}\n          >\n            Today's Activities\n          </div>\n        </div>\n\n        {lesson.lessonType === 'INTRODUCTORY' ? (\n          <>\n            <LessonDetailCenter\n              style={{ fontSize: '3vh', textAlign: 'center' }}\n            >\n              Text Analysis\n            </LessonDetailCenter>\n            <div\n              style={{\n                textAlign: 'center',\n                fontSize: '2.5vh',\n              }}\n            >\n              Instructions\n            </div>\n            <LessonInstrcutionContainer>\n              <ol\n                style={{\n                  margin: 0,\n                  fontSize: '2.5vh',\n                  height: '30vh',\n                  overflow: 'scroll',\n                }}\n              >\n                <li>\n                  Number each paragraph before reading. Indentations start new\n                  paragraphs.\n                </li>\n\n                <li>Read each paragraph in the assigned section.</li>\n\n                <li>After each paragraph: </li>\n                <ol>\n                  <li>\n                    Underline all the actions that happen and all questions in\n                    the paragraph if there are any.\n                  </li>\n                  <li>\n                    Put question marks next to things you don't understand.\n                  </li>\n                  <li>\n                    Circle words you don't know and use the vocab to assist you.\n                  </li>\n                  <li>\n                    Write Main Ideas based on the text structure that each\n                    paragraph presented. Use the help section if needed.\n                  </li>\n                  <li>\n                    Main ideas need to be finished at home if we run out of time\n                    in class and should be used to answer reading guide/essay\n                    questions.\n                  </li>\n                </ol>\n                {/* <li>Answer the essential question.</li> */}\n              </ol>\n            </LessonInstrcutionContainer>\n          </>\n        ) : (\n          <>\n            <LessonDetailCenter\n              style={{ fontSize: '3vh', textAlign: 'center' }}\n            >\n              Questioning and Thinking Practice\n            </LessonDetailCenter>\n            <div\n              style={{\n                textAlign: 'center',\n              }}\n            >\n              Instructions\n            </div>\n\n            <LessonInstrcutionContainer>\n              <ol\n                style={{\n                  margin: 0,\n                  fontSize: '2.5vh',\n                  height: '30vh',\n                  overflow: 'scroll',\n                }}\n              >\n                <li>\n                  Today we will reinforce what we analyzed last time by thinking\n                  in multiple ways and answering and asking questions to help\n                  understand the content at a deeper level. You will need your\n                  Daily Agenda from last time.\n                </li>\n                <br />\n                <li>\n                  Be prepared to work with your partners to discuss answers to\n                  questions.\n                </li>\n                <br />\n                <li>\n                  All answers submitted on the website must be your version of\n                  the answer not a word for word copy of your partners work.\n                </li>\n                <br />\n                <li>\n                  Be prepared to answer questions I ask you at random for bonus\n                  points.\n                </li>\n                <br />\n                <li>Feel free to ask questions for bonus points.</li>\n              </ol>\n            </LessonInstrcutionContainer>\n          </>\n        )}\n      </LessonDetailsContainer>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { findLessonByCourseAndDate_findLessonByCourseAndDate_lesson } from '../../../schemaTypes'\nimport {\n  LessonComponentTitleContainer,\n  VocabWordContainer,\n  VocabWordStyle,\n} from '../state-n-styles/lessonStyles'\n\nexport type VocabProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const Vocab = ({ lesson, setPolling }: VocabProps) => {\n  useEffect(() => {\n    setPolling(2000)\n  })\n  return (\n    <>\n      <LessonComponentTitleContainer>Vocab</LessonComponentTitleContainer>\n      <VocabWordContainer>\n        {lesson.vocabList.map((word, i: number) => (\n          <VocabWordStyle key={i}>\n            {word.word}: {word.definition}\n          </VocabWordStyle>\n        ))}\n      </VocabWordContainer>\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  me_me,\n} from '../../../schemaTypes'\nimport { useUserContextProvider } from '../../../contexts/UserContext'\nimport { StudentProtocolResponse } from './StudentProtocolResponse'\nimport {\n  ProtocolsContainer,\n  ProtocolTypeContainer,\n  ProtocolTask,\n  ProtocolTaskContainer,\n} from '../state-n-styles/lessonStyles'\nimport { phraseCapitalizer, underscoreEliminator } from '../../../utils'\n\nexport type ProtocolsProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n}\n\nexport const Protocols = ({ lesson }: ProtocolsProps) => {\n  const me: me_me = useUserContextProvider()\n  const [protocol] = lesson.duringActivities.filter(\n    (protocol) => protocol.isActive,\n  )\n\n  const protocols = underscoreEliminator(protocol.academicOutcomeTypes)\n  return (\n    <>\n      <ProtocolTypeContainer>\n        {/* <div>{phraseCapitalizer(protocols)}</div> */}\n        <div>Protocol {lesson.protocolCount! + 1}</div>\n      </ProtocolTypeContainer>\n\n      <ProtocolTaskContainer>\n        <ProtocolTask>{protocol.directions}</ProtocolTask>\n        <ProtocolTask>{protocol.task}</ProtocolTask>\n      </ProtocolTaskContainer>\n\n      {/* {me.__typename === 'Student' && <StudentProtocolResponse me={me} />} */}\n    </>\n  )\n}\n","import { useState } from 'react'\nimport {\n  AcademicOutcomeTypes,\n  findActiveProtocolByStudent,\n  findActiveProtocolByStudentVariables,\n  findActiveProtocolByStudent_findActiveProtocolByStudent_protocol,\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  me_me,\n  respondToProtocol,\n  respondToProtocolVariables,\n} from '../../../schemaTypes'\nimport { useMutation, useQuery } from '@apollo/client'\nimport {\n  FIND_ACTIVE_STUDENT_PROTOCOL_QUERY,\n  RESPOND_TO_PROTOCOL_MUTATION,\n} from './StudentProtocolResponse'\nimport {\n  ProtocolResponseTaskContainer,\n  ProtocolResponseArea,\n  ProtocolResponseButton,\n} from '../state-n-styles/lessonStyles'\n\nexport type ExitActivityResponseProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  me: me_me\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const ExitActivityResponse = ({\n  lesson,\n  me,\n  setPolling,\n}: ExitActivityResponseProps) => {\n  const [response, setResponse] = useState('')\n\n  const [protocol, setProtocol] =\n    useState<findActiveProtocolByStudent_findActiveProtocolByStudent_protocol>({\n      __typename: 'Protocol',\n      _id: '',\n      academicOutcomeType: AcademicOutcomeTypes.LOGIC_BUILDING,\n      assignedDate: '',\n      completed: false,\n      isActive: false,\n      task: '',\n      response: null,\n    })\n\n  const { data } = useQuery<\n    findActiveProtocolByStudent,\n    findActiveProtocolByStudentVariables\n  >(FIND_ACTIVE_STUDENT_PROTOCOL_QUERY, {\n    variables: {\n      input: { studentId: me._id! },\n    },\n    fetchPolicy: 'network-only',\n    onCompleted: (data) => {\n      console.log(data)\n      setProtocol(data.findActiveProtocolByStudent.protocol)\n      setPolling(5000)\n    },\n    onError: (error) => console.error(error),\n  })\n\n  const [respond] = useMutation<respondToProtocol, respondToProtocolVariables>(\n    RESPOND_TO_PROTOCOL_MUTATION,\n    {\n      variables: { input: { protocolId: protocol._id!, response } },\n      onCompleted: (data) => {\n        setProtocol({\n          ...protocol,\n          response: data.respondToProtocol.protocol.response,\n        })\n        // setPolling(2000)\n      },\n      refetchQueries: ['findActiveProtocolByStudent'],\n    },\n  )\n\n  return (\n    <>\n      {\n        <>\n          <ProtocolResponseTaskContainer>\n            <div>{data?.findActiveProtocolByStudent.protocol.task}</div>\n          </ProtocolResponseTaskContainer>\n\n          {protocol.response ? (\n            <div>{protocol.response}</div>\n          ) : (\n            <ProtocolResponseArea\n              style={{ width: '80%' }}\n              spellCheck={true}\n              onChange={(e: any) => setResponse(e.target.value)}\n            />\n          )}\n\n          {!protocol.response && (\n            <div\n              style={{\n                display: 'grid',\n                width: '80%',\n                height: '60%',\n                alignItems: 'center',\n                justifyItems: 'center',\n              }}\n            >\n              <ProtocolResponseButton\n                style={{ height: '100%' }}\n                onClick={() => respond()}\n              >\n                Respond\n              </ProtocolResponseButton>\n            </div>\n          )}\n        </>\n      }\n    </>\n  )\n}\n","import {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  me_me,\n} from '../../../schemaTypes'\nimport {\n  LessonComponentTitleContainer,\n  LessonComponentDetailsContainer,\n  LessonComponentDetailsStyle,\n  LessonMainScreen,\n} from '../state-n-styles/lessonStyles'\nimport { ExitActivityResponse } from './ExitActivityResponse'\n\nexport type ExitActivityProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  me: me_me\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const ExitActivity = ({ lesson, me, setPolling }: ExitActivityProps) => {\n  return (\n    <>\n      <LessonComponentTitleContainer>Exit Ticket</LessonComponentTitleContainer>\n      <LessonComponentDetailsContainer>\n        {me.__typename === 'Student' && (\n          <>\n            {lesson.afterActivity.isActive && (\n              <ExitActivityResponse\n                lesson={lesson}\n                me={me}\n                setPolling={setPolling}\n              />\n            )}\n          </>\n        )}\n      </LessonComponentDetailsContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo_assignedSeats,\n  me_me_Teacher_teachesCourses,\n} from '../../../schemaTypes'\nimport {\n  AssignedSeatsContainer,\n  AssignedSeatsStudentListContainer,\n  AssignedSeatsStudentListItem,\n  AssignedSeatsStudentListItemHeaders,\n  AssignedSeatsTitleContainer,\n} from '../state-n-styles/lessonStyles'\n\nexport type AssignedSeatingProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n}\n\nexport const AssignedSeating = ({ lesson }: AssignedSeatingProps) => {\n  const assignedSeats =\n    lesson.assignedCourses[0].hasCourseInfo?.assignedSeats.map((seat) => seat)\n  const sortAssignedSeats = (\n    a: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo_assignedSeats,\n    b: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_assignedCourses_hasCourseInfo_assignedSeats,\n  ) => {\n    let aName = a.student?.lastName.toUpperCase()!\n    let bName = b.student?.lastName.toUpperCase()!\n    if (aName < bName) {\n      return -1\n    }\n    if (aName > bName) {\n      return 1\n    }\n\n    return 0\n  }\n  return (\n    <AssignedSeatsContainer>\n      <AssignedSeatsTitleContainer>Assigned Seats</AssignedSeatsTitleContainer>\n      <AssignedSeatsStudentListContainer>\n        <AssignedSeatsStudentListItemHeaders>\n          <div>Student Name</div>\n          <div>Seat Number</div>\n        </AssignedSeatsStudentListItemHeaders>\n        <div style={{ height: '73.5vh', overflow: 'scroll' }}>\n          {assignedSeats!\n            .filter((seat) => seat.student)\n            .sort(sortAssignedSeats)\n            .map((seat, i) => (\n              <AssignedSeatsStudentListItem\n                key={seat.deskNumber}\n                indexNumber={i}\n              >\n                <div>\n                  {seat.student?.lastName}, {seat.student?.firstName}\n                </div>\n                <div>{seat.deskNumber}</div>\n              </AssignedSeatsStudentListItem>\n            ))}\n        </div>\n      </AssignedSeatsStudentListContainer>\n    </AssignedSeatsContainer>\n  )\n}\n","import React from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  me_me_Teacher_teachesCourses,\n  me_me,\n  DynamicLessonEnums,\n  findLessonStatus_findLessonStatus_lesson,\n} from '../../../schemaTypes'\nimport { WarmUp } from '../lesson-components/WarmUp'\nimport { LessonDetails } from '../lesson-components/LessonDetails'\nimport { Vocab } from '../lesson-components/Vocab'\nimport { Protocols } from '../lesson-components/Protocols'\nimport { Standard8x12Container } from '../../../appStyles'\nimport { useDailyAgendaContextProvider } from '../state-n-styles/DailyAgendaContext'\nimport {\n  ClassInfoContainer,\n  LessonMainScreen,\n  StopLessonButton,\n  ClassInfoStyle,\n  LessonComponentTypeContainer,\n  LessonComponentTypeStyle,\n  StopLessonContainer,\n  LessonPageContainer,\n  ProtocolsContainer,\n} from '../state-n-styles/lessonStyles'\nimport { date } from '../../../utils'\nimport { ExitActivity } from '../lesson-components/ExitActivity'\nimport { StudentQuestionPrompt } from '../student-lesson/StudentQuestionPrompt'\nimport { useUserContextProvider } from '../../../contexts/UserContext'\nimport { AssignedSeating } from '../lesson-components/AssignedSeating'\nimport { StudentProtocolResponse } from '../lesson-components/StudentProtocolResponse'\n\nexport type DynamicLessonProps = {\n  lesson: findLessonStatus_findLessonStatus_lesson\n  courseToLoad?: me_me_Teacher_teachesCourses\n  fakeCourse?: me_me_Teacher_teachesCourses\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const DynamicLesson = ({\n  lesson,\n  courseToLoad,\n  setPolling,\n}: DynamicLessonProps) => {\n  const me: me_me = useUserContextProvider()\n  // const [, event] = useDailyAgendaContextProvider()\n  const { dynamicLesson } = lesson\n\n  return (\n    <LessonPageContainer>\n      <ClassInfoContainer>\n        <ClassInfoStyle>\n          <div>{courseToLoad?.name}</div>\n          <br />\n          <div>{date}</div>\n        </ClassInfoStyle>\n      </ClassInfoContainer>\n      <StopLessonContainer></StopLessonContainer>\n\n      {lesson.duringActivities.some((protocol) => protocol.isActive) ? (\n        <>\n          {me.__typename === 'Teacher' && (\n            <ProtocolsContainer>\n              <Protocols lesson={lesson} />\n            </ProtocolsContainer>\n          )}\n          {me.__typename === 'Student' && (\n            <ProtocolsContainer>\n              <StudentProtocolResponse me={me} setPolling={setPolling} />\n            </ProtocolsContainer>\n          )}\n        </>\n      ) : (\n        <LessonMainScreen>\n          {dynamicLesson === 'WARM_UP' && (\n            <WarmUp me={me} lesson={lesson} setPolling={setPolling} />\n          )}\n          {dynamicLesson === 'LESSON_DETAILS' && (\n            <LessonDetails lesson={lesson} setPolling={setPolling} />\n          )}\n          {dynamicLesson === 'VOCAB' && (\n            <Vocab lesson={lesson} setPolling={setPolling} />\n          )}\n          {dynamicLesson === 'EXIT_ACTIVITY' && (\n            <ExitActivity lesson={lesson} me={me} setPolling={setPolling} />\n          )}\n          {dynamicLesson === 'ASSIGNED_SEATING' && (\n            <AssignedSeating lesson={lesson} />\n          )}\n        </LessonMainScreen>\n      )}\n    </LessonPageContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const HandbookContainer = styled.div`\n  display: grid;\n  grid-template-rows: 2fr 5% 7fr;\n  height: 95vh;\n`\nexport const OwnersTitleContainer = styled.div`\n  font-size: 5vh;\n  display: grid;\n  /* grid-template-columns: 1fr 3fr 1fr; */\n  align-items: center;\n  justify-items: center;\n`\nexport const HandbookContentSelectorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\nexport type ContentSelectorTabProps = {\n  selected: boolean\n}\n\nexport const ContentSelectorTabType = styled.div<ContentSelectorTabProps>`\n  border-top: 1px solid var(--blue);\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n  cursor: pointer;\n  border-bottom: ${({ selected }) => {\n    return selected ? '1px solid var(--white)' : '1px solid var(--blue)'\n  }};\n  width: 100%;\n  height: 100%;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n  font-size: 2.5vh;\n`\nexport const HandbookInformationDisplayContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n  padding: 5vh;\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n  border-bottom: 1px solid var(--blue);\n`\n\nexport const DisplayTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 4vh;\n`\nexport const ContentContainer = styled.div`\n  font-size: 2vh;\n  height: 50vh;\n  overflow: scroll;\n`\nexport const DoubleSidedContentContainer = styled(ContentContainer)`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\nexport const TripleSidedContentContainer = styled(ContentContainer)`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`\nexport const IndividualContentContainer = styled.div`\n  :hover {\n    border: 1px solid var(--blue);\n    border-radius: 2%;\n  }\n`\nexport const ContentContainerTitle = styled.div`\n  text-align: center;\n  font-size: 3.5vh;\n`\nexport const TextAnalysisForStudentLessonContainer = styled.div`\n  grid-row: 1/-1;\n  grid-column: 1/-1;\n  font-size: 2.5vh;\n  display: grid;\n`\n","import {\n  DisplayTitle,\n  DoubleSidedContentContainer,\n  IndividualContentContainer,\n  ContentContainerTitle,\n  TextAnalysisForStudentLessonContainer,\n} from '../../dashboard/student/handbook/handbookStyles'\n\nexport type TextAnalysisForStudentLessonProps = {}\n\nexport const TextAnalysisForStudentLesson =\n  ({}: TextAnalysisForStudentLessonProps) => {\n    const problemSolutionWords = ['Problem', 'Solution', 'Issue', 'Compromise']\n    return (\n      <TextAnalysisForStudentLessonContainer>\n        <DisplayTitle>Text Analysis Help</DisplayTitle>\n\n        <DoubleSidedContentContainer style={{ fontSize: '2.8vh' }}>\n          <div>\n            <ContentContainerTitle>Cause and Effect</ContentContainerTitle>\n            <ul>\n              <li>\n                For each action, ask your self: Why did that action happen? If\n                there is another action in the paragraph (or one of the\n                paragraphs that came before) that made it happen; that is the\n                cause.\n                <ul>\n                  <li>\n                    One cause may have many effects, so don't think it is always\n                    one cause to an effect.\n                  </li>\n                  <li>One effect may have two or more causes.</li>\n                  <li>\n                    Look for key words to show cause and effect: because, as a\n                    result, therefore, consequently, due to...{' '}\n                  </li>\n                  <li>\n                    Label causes with the letter C and effects with the letter E\n                    to help keep track.\n                  </li>\n                </ul>\n                <li>\n                  Use that cause and effect relationship to form your main idea\n                  for that paragraph.\n                </li>\n                <ul>\n                  <li>\n                    Remember the word \"because\" helps to form cause and effect\n                    sentences.\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n          <div>\n            <ContentContainerTitle>Problem and Solution</ContentContainerTitle>\n\n            <ul>\n              <li>\n                If there is no obvious cause and effect, look for problems.\n              </li>\n              <ul>\n                <li>\n                  Problems are things that get in the way of people's goals.\n                </li>\n                <li>\n                  Label goals with the letter G and P for things that get in the\n                  way.\n                </li>\n                <li>\n                  For your main idea, build a sentence that explains the goal\n                  and who or what is getting in the way of that goal.\n                </li>\n              </ul>\n              <br />\n              <li>\n                Many times the problems are discussed in one paragraph and then\n                solved in the next paragraph or so.\n              </li>\n              <ul>\n                <li>\n                  For your main idea: Build a sentence that shows the problem\n                  and then explain what was done that achieved the goal.\n                </li>\n                <li>Label solutions with an S.</li>\n              </ul>\n              <br />\n              <li>\n                Look for key words to show problem and solution: problem,\n                solution, compromise, issue...{' '}\n              </li>\n            </ul>\n          </div>\n        </DoubleSidedContentContainer>\n      </TextAnalysisForStudentLessonContainer>\n    )\n  }\n","import React, { FC } from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  me_me_Teacher_teachesCourses,\n  DynamicLessonEnums,\n  findLessonStatus_findLessonStatus_lesson,\n  me_me,\n} from '../../../schemaTypes'\nimport {\n  LessonPageContainer,\n  ClassInfoContainer,\n  ClassInfoStyle,\n  LessonComponentTypeContainer,\n  LessonComponentTypeStyle,\n  StopLessonContainer,\n  StopLessonButton,\n  LessonMainScreen,\n} from '../state-n-styles/lessonStyles'\nimport { date } from '../../../utils'\nimport { useDailyAgendaContextProvider } from '../state-n-styles/DailyAgendaContext'\nimport { WarmUp } from '../lesson-components/WarmUp'\nimport { LessonDetails } from '../lesson-components/LessonDetails'\nimport { Vocab } from '../lesson-components/Vocab'\nimport { ExitActivity } from '../lesson-components/ExitActivity'\nimport { useNavigate } from 'react-router'\nimport { TextAnalysis } from '../../dashboard/student/handbook/TextAnalysis'\nimport { HandbookInformationDisplayContainer } from '../../dashboard/student/handbook/handbookStyles'\nimport { TextAnalysisForStudentLesson } from '../lesson-components/TextAnalysisForStudentLesson'\nimport { useUserContextProvider } from '../../../contexts/UserContext'\n\nexport type StaticLessonProps = {\n  lesson: findLessonStatus_findLessonStatus_lesson\n  courseToLoad?: me_me_Teacher_teachesCourses\n  setPolling: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const StaticLesson = ({\n  lesson,\n  courseToLoad,\n  setPolling,\n}: StaticLessonProps) => {\n  const [state, event] = useDailyAgendaContextProvider()\n  const me: me_me = useUserContextProvider()\n  const nav = useNavigate()\n  return (\n    <LessonPageContainer>\n      <ClassInfoContainer>\n        <ClassInfoStyle>\n          <div>{courseToLoad?.name}</div>\n          <br />\n          <div>{date}</div>\n        </ClassInfoStyle>\n      </ClassInfoContainer>\n      <StopLessonContainer></StopLessonContainer>\n      <LessonMainScreen>\n        {/* {state.context.staticLessonTypes === 'WARM_UP' && (\n          <WarmUp lesson={lesson} me={me} />\n        )} */}\n        {state.context.staticLessonTypes === 'LESSON_DETAILS' && (\n          <LessonDetails lesson={lesson} setPolling={setPolling} />\n        )}\n        {state.context.staticLessonTypes === 'VOCAB' && (\n          <Vocab lesson={lesson} setPolling={setPolling} />\n        )}\n        {/* {state.context.staticLessonTypes === 'EXIT_ACTIVITY' && (\n          <ExitActivity lesson={lesson} me={me} setPolling={setPolling} />\n        )} */}\n        {state.context.staticLessonTypes === 'TEXT_ANALYSIS' && (\n          <TextAnalysisForStudentLesson />\n        )}\n      </LessonMainScreen>\n      <LessonComponentTypeContainer>\n        {/* <LessonComponentTypeStyle\n          onClick={() =>\n            event({\n              type: 'SET_STATIC_LESSON_TYPE',\n              payload: DynamicLessonEnums.WARM_UP,\n            })\n          }\n        >\n          Warm Up\n        </LessonComponentTypeStyle> */}\n        <LessonComponentTypeStyle\n          onClick={() =>\n            event({\n              type: 'SET_STATIC_LESSON_TYPE',\n              payload: DynamicLessonEnums.LESSON_DETAILS,\n            })\n          }\n        >\n          Daily Agenda\n        </LessonComponentTypeStyle>\n        <LessonComponentTypeStyle\n          onClick={() =>\n            event({\n              type: 'SET_STATIC_LESSON_TYPE',\n              payload: DynamicLessonEnums.VOCAB,\n            })\n          }\n        >\n          Vocab\n        </LessonComponentTypeStyle>\n        {/* {lesson.lessonType === 'REINFORCEMENT' ? (\n          <LessonComponentTypeStyle\n            onClick={() =>\n              event({\n                type: 'SET_STATIC_LESSON_TYPE',\n                payload: DynamicLessonEnums.EXIT_ACTIVITY,\n              })\n            }\n          >\n            Exit Ticket\n          </LessonComponentTypeStyle>\n        ) : ( */}\n        <LessonComponentTypeStyle\n          onClick={() =>\n            event({\n              type: 'SET_STATIC_LESSON_TYPE',\n              payload: 'TEXT_ANALYSIS',\n            })\n          }\n        >\n          Help\n        </LessonComponentTypeStyle>\n        {/* )} */}\n      </LessonComponentTypeContainer>\n    </LessonPageContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport {\n  findLessonStatus,\n  findLessonStatusVariables,\n  me_me_Teacher_teachesCourses,\n} from '../../schemaTypes'\nimport { DynamicLesson } from './lessson-types/DynamicLesson'\nimport { StaticLesson } from './lessson-types/StaticLesson'\n\nexport type LessonLoaderProps = {\n  lessonId: string\n  courseToLoad?: me_me_Teacher_teachesCourses\n}\n\nexport const FIND_LESSON_STATUS_QUERY = gql`\n  query findLessonStatus($input: FindLessonStatusInput!) {\n    findLessonStatus(input: $input) {\n      lesson {\n        _id\n        lessonName\n        vocabList {\n          word\n          definition\n        }\n        assignedMarkingPeriod\n        pageNumbers {\n          startingPage\n          endingPage\n        }\n        assignedCourses {\n          _id\n          name\n          hasCourseInfo {\n            assignedSeats {\n              deskNumber\n              student {\n                firstName\n                lastName\n              }\n            }\n          }\n          hasSignInSheets {\n            studentsSignInlog {\n              _id\n            }\n          }\n        }\n        assignedSections {\n          startingSection\n          endingSection\n        }\n        hasNumberOfParagraphs\n        objectives\n        essentialQuestion\n        duringActivities {\n          task\n          activityType\n          academicOutcomeTypes\n          isActive\n          directions\n          completed\n        }\n        protocolCount\n        beforeActivity {\n          task\n          activityType\n          academicOutcomeTypes\n          isActive\n          completed\n        }\n        afterActivity {\n          task\n          activityType\n          academicOutcomeTypes\n          isActive\n          completed\n        }\n        dynamicLesson\n        lessonType\n        lessonStarted\n      }\n    }\n  }\n`\nexport const LessonLoader = ({ lessonId, courseToLoad }: LessonLoaderProps) => {\n  const [polling, setPolling] = useState<number>(2000)\n\n  const { loading, data } = useQuery<\n    findLessonStatus,\n    findLessonStatusVariables\n  >(FIND_LESSON_STATUS_QUERY, {\n    variables: {\n      input: { lessonId },\n    },\n    onCompleted: (data) => console.log(data.findLessonStatus.lesson),\n    pollInterval: polling,\n    onError: (error) => console.error(error),\n  })\n\n  if (loading) return <div>Loading stuff</div>\n  return (\n    <>\n      {data?.findLessonStatus.lesson!.dynamicLesson !== 'OFF' ? (\n        <>\n          <DynamicLesson\n            lesson={data?.findLessonStatus.lesson!}\n            // stopPolling={stopPolling!}\n            courseToLoad={courseToLoad}\n            setPolling={setPolling}\n            // fakeCourse={fakeCourse}\n          />\n        </>\n      ) : (\n        <StaticLesson\n          lesson={data?.findLessonStatus.lesson!}\n          courseToLoad={courseToLoad}\n          setPolling={setPolling}\n        />\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useUserContextProvider } from '../../contexts/UserContext'\nimport {\n  me_me,\n  findLessonByCourseAndDate,\n  findLessonByCourseAndDateVariables,\n  studentSignedInCheck,\n  studentSignedInCheckVariables,\n  studentSignInVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  studentSignIn,\n  SchoolDayType,\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  SchoolDayLengthEnum,\n  me_me_Student,\n  me_me_Teacher,\n} from '../../schemaTypes'\nimport { capitalizer, timeFinder, date } from '../../utils'\nimport { useDailyAgendaContextProvider } from './state-n-styles/DailyAgendaContext'\nimport { useLazyQuery, gql, useQuery, useMutation } from '@apollo/client'\n\nimport {\n  LessonMainMenuContainer,\n  GreetingsContainer,\n  LessonSelectorContainer,\n  CurrentLessonContainer,\n  CurrentLesson,\n  GoToLessonButton,\n  LessonNameStyle,\n} from './state-n-styles/lessonStyles'\nimport { DynamicLesson } from './lessson-types/DynamicLesson'\nimport { StaticLesson } from './lessson-types/StaticLesson'\n\nimport { useNavigate, Navigate } from 'react-router'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from '../dashboard/school-day/SchoolDay'\nimport { useTime } from '../../hooks/useTime'\nimport { LessonLoader } from './LessonLoader'\nimport { useClassTimeIndicator } from '../../hooks/useClassTimeIndicator'\n\nexport type LessonMainMenuProps = {}\n\nexport const FIND_LESSON_QUERY = gql`\n  query findLessonByCourseAndDate($input: FindLessonByCourseAndDateInput!) {\n    findLessonByCourseAndDate(input: $input) {\n      lesson {\n        _id\n        lessonName\n        vocabList {\n          word\n          definition\n        }\n        assignedMarkingPeriod\n        pageNumbers {\n          startingPage\n          endingPage\n        }\n        assignedCourses {\n          _id\n          name\n          hasCourseInfo {\n            assignedSeats {\n              deskNumber\n              student {\n                firstName\n                lastName\n              }\n            }\n          }\n          hasSignInSheets {\n            studentsSignInlog {\n              _id\n            }\n          }\n        }\n        assignedSections {\n          startingSection\n          endingSection\n        }\n        objectives\n        essentialQuestion\n        protocolCount\n        duringActivities {\n          task\n          activityType\n          academicOutcomeTypes\n          isActive\n          completed\n          directions\n        }\n        beforeActivity {\n          task\n          activityType\n          academicOutcomeTypes\n          isActive\n          completed\n        }\n        afterActivity {\n          task\n          activityType\n          academicOutcomeTypes\n          isActive\n          completed\n        }\n        dynamicLesson\n        lessonType\n        lessonStarted\n      }\n    }\n  }\n`\n\nexport const STUDENT_SIGNED_IN_CHECK_QUERY = gql`\n  query studentSignedInCheck($input: FindSchoolDayByDateInput!) {\n    findSchoolDayByDate(input: $input) {\n      schoolDay {\n        _id\n        signInSheets {\n          studentsSignInlog {\n            _id\n          }\n        }\n      }\n    }\n  }\n`\nexport const STUDENT_SIGN_IN_MUTATION = gql`\n  mutation studentSignIn($input: StudentSignInInput!) {\n    studentSignIn(input: $input) {\n      schoolDay {\n        _id\n      }\n    }\n  }\n`\n\nexport const LessonMainMenu = ({}: LessonMainMenuProps) => {\n  const me: me_me_Student | me_me_Teacher = useUserContextProvider()\n  const [state, event] = useDailyAgendaContextProvider()\n  // const classTime = useClassTimeIndicator()\n  const { dateTime } = useTime()\n\n  const { data: schoolDayData, loading: schoolDayLoading } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: date },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  const [loadLesson, { loading, data, startPolling, stopPolling }] =\n    useLazyQuery<findLessonByCourseAndDate, findLessonByCourseAndDateVariables>(\n      FIND_LESSON_QUERY,\n      {\n        onCompleted: (data) => {\n          data\n            ? console.log(data.findLessonByCourseAndDate.lesson)\n            : console.log('No class yet')\n        },\n        onError: (error) => console.error(error),\n      },\n    )\n\n  const schoolDayType =\n    schoolDayData?.findSchoolDayByDate.schoolDay?.currentSchoolDayType!\n\n  const schoolDayLength =\n    schoolDayData?.findSchoolDayByDate.schoolDay?.schoolDayLength!\n\n  const [courseToLoad] =\n    me.__typename === 'Teacher'\n      ? me.teachesCourses.filter(\n          (course) =>\n            Date.parse(dateTime) >\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayStartsAt!\n                    : schoolDayLength === SchoolDayLengthEnum.ONE_HOUR_DELAY\n                      ? course.hasCourseInfo.hourDelayStartsAt\n                      : course.hasCourseInfo?.startsAt!,\n                ),\n              ) &&\n            Date.parse(dateTime) <\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayEndsAt!\n                    : schoolDayLength === SchoolDayLengthEnum.ONE_HOUR_DELAY\n                      ? course.hasCourseInfo.hourDelayEndsAt\n                      : course.hasCourseInfo?.endsAt!,\n                ),\n              ) &&\n            course.hasCourseInfo?.schoolDayType === schoolDayType,\n        )\n      : me.inCourses.filter(\n          (course) =>\n            Date.parse(dateTime) >\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayStartsAt!\n                    : schoolDayLength === SchoolDayLengthEnum.ONE_HOUR_DELAY\n                      ? course.hasCourseInfo.hourDelayStartsAt\n                      : course.hasCourseInfo?.startsAt!,\n                ),\n              ) &&\n            Date.parse(dateTime) <\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayEndsAt!\n                    : schoolDayLength === SchoolDayLengthEnum.ONE_HOUR_DELAY\n                      ? course.hasCourseInfo.hourDelayEndsAt\n                      : course.hasCourseInfo?.endsAt!,\n                ),\n              ),\n        )\n\n  const course = data?.findLessonByCourseAndDate.lesson?.assignedCourses.filter(\n    (course) => course._id === courseToLoad?._id,\n  )\n  console.log(course)\n\n  const handleSignInCheck = (_id: string) => {\n    const check = course?.some((stuff) => {\n      if (\n        stuff.hasSignInSheets.some(\n          (sheet) =>\n            sheet.studentsSignInlog?.some((signIn) => signIn._id === _id),\n        )\n      ) {\n        return true\n      } else return false\n    })\n    return check\n  }\n\n  const [studentSignIn] = useMutation<studentSignIn, studentSignInVariables>(\n    STUDENT_SIGN_IN_MUTATION,\n    {\n      variables: {\n        input: {\n          courseId: courseToLoad?._id!,\n          lessonDate: date,\n          studentId: me._id!,\n          virtual: true,\n        },\n      },\n      onCompleted: () => {\n        event({ type: 'TODAYS_LESSON' })\n        startPolling!(100)\n        event({ type: 'POLLING' })\n      },\n      refetchQueries: ['studentSignedInCheck', 'me'],\n    },\n  )\n\n  const useFake = false\n  useEffect(() => {\n    if (useFake) {\n      loadLesson({\n        variables: {\n          input: { courseId: '6125056b8fde6b861b4a8c6e', lessonDate: date },\n        },\n      })\n    } else if (courseToLoad) {\n      loadLesson({\n        variables: { input: { courseId: courseToLoad._id!, lessonDate: date } },\n      })\n      if (data?.findLessonByCourseAndDate.lesson) {\n        event({ type: 'TODAYS_LESSON' })\n        startPolling!(100)\n        event({ type: 'POLLING' })\n      }\n    }\n  }, [courseToLoad, dateTime])\n\n  if (!me) return <Navigate to=\"/\" />\n  return (\n    <>\n      {state.matches('getLesson') && (\n        <div\n          style={{\n            display: 'grid',\n            justifyItems: 'center',\n            alignItems: 'center',\n            fontSize: '3vh',\n            height: '95vh',\n          }}\n        >\n          <div>\n            {courseToLoad ? 'Loading Lesson' : 'Class has not started yet'}\n          </div>\n        </div>\n      )}\n      {state.matches('todaysLesson') && (\n        <>\n          <LessonLoader\n            lessonId={data?.findLessonByCourseAndDate.lesson?._id!}\n            courseToLoad={courseToLoad}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport { UpdateArticleReviewInput } from '../../../../../../schemaTypes'\n\nexport type articleReviewToCompleteMachineSchema = {\n  states: {\n    complete: {}\n  }\n}\nexport type articleReviewToCompleteMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_INPUTS'; payload: UpdateArticleReviewInput }\n  | { type: 'SET_REVIEW_ID'; payload: string }\n  | { type: 'SET_TITLE'; payload: string }\n  | { type: 'SET_AUTHOR'; payload: string }\n  | { type: 'SET_LINK'; payload: string }\n  | { type: 'SET_REVIEW_ID'; payload: string }\n  | { type: 'SET_ISSUE'; payload: string }\n  | { type: 'SET_PUBLISHED_DATE'; payload: string }\n  | { type: 'SET_SOLUTIONS'; payload: string }\n  | { type: 'SET_BIAS'; payload: boolean | null }\n  | { type: 'SET_TOPICS_IMPORTANCE'; payload: string }\n\nexport type articleReviewToCompleteMachineContext = {\n  articleReviewToComplete: UpdateArticleReviewInput\n}\n\nexport const articleReviewToCompleteMachine = Machine<\n  articleReviewToCompleteMachineContext,\n  articleReviewToCompleteMachineSchema,\n  articleReviewToCompleteMachineEvent\n>({\n  id: 'articleReviewToComplete',\n  initial: 'complete',\n  context: {\n    articleReviewToComplete: {\n      articleTitle: '',\n      articleAuthor: '',\n      articleLink: '',\n      articleReviewId: '',\n      issue: '',\n      publishedDate: null,\n      solutions: '',\n      bias: null,\n      topicsImportance: '',\n    },\n  },\n  states: {\n    complete: {\n      on: {\n        SET_INPUTS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: evt.payload,\n            }\n          }),\n        },\n        SET_REVIEW_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                articleReviewId: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_TITLE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                articleTitle: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_AUTHOR: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                articleAuthor: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_LINK: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                articleLink: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_ISSUE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                issue: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_PUBLISHED_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                publishedDate: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_SOLUTIONS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                solutions: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_BIAS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                bias: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_TOPICS_IMPORTANCE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToComplete: {\n                ...ctx.articleReviewToComplete,\n                topicsImportance: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  articleReviewToCompleteMachine,\n  articleReviewToCompleteMachineContext,\n  articleReviewToCompleteMachineEvent,\n} from './articleReviewToCompleteMachine'\n\nconst ArticleReviewToCompleteContext = createContext<any>(undefined)\n\ntype ArticleReviewToCompleteContextProps = {\n  children: ReactNode\n}\n\nexport const ArticleReviewToCompleteContextProvider: FC<\n  ArticleReviewToCompleteContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(articleReviewToCompleteMachine)\n  return (\n    <ArticleReviewToCompleteContext.Provider value={[state, event]}>\n      {children}\n    </ArticleReviewToCompleteContext.Provider>\n  )\n}\n\nexport function useArticleReviewToCompleteContextProvider() {\n  const context = useContext(ArticleReviewToCompleteContext)\n  if (context === undefined) {\n    throw new Error(\n      'useArticleReviewToCompleteContextProvider must be used within a ArticleReviewToCompleteContextProvider',\n    )\n  }\n  return context as [\n    State<\n      articleReviewToCompleteMachineContext,\n      articleReviewToCompleteMachineEvent,\n      any,\n      any\n    >,\n    (event: articleReviewToCompleteMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\nimport {\n  LineInput,\n  Standard7x12Container,\n  Standard8x12Container,\n} from '../../../../../../appStyles'\nimport { AssignmentDetailsContainer } from '../../essays/assigned-essays/state-and-styles/assignedEssayStyles'\nimport {\n  ReadingGuideContainer,\n  ReadingGuideHeader,\n  ReadingGuideInfoContainer,\n  ReadingGuideInfoSwitchButtonContainer,\n  ReadingGuideToCompleteContainer,\n} from '../../readingGuides/state-and-styles/readingGuideStyles'\n\nexport const ArticleReviewContainer = styled(ReadingGuideContainer)``\nexport const ArticleReviewInfoContainer = styled(ReadingGuideInfoContainer)`\n  overflow: scroll;\n`\nexport const ArticleReviewHelpHeader = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  justify-self: center;\n  align-self: center;\n  text-decoration: underline;\n`\nexport const ArticleReviewHelpBody = styled.div`\n  grid-row: 2/-1;\n  grid-column: 1/-1;\n`\nexport const ArticleReviewDetalisContainer = styled(AssignmentDetailsContainer)`\n  grid-template-rows: 1fr 1fr;\n`\nexport const ArticleReviewInfoSwitchButtonContainer = styled(\n  ReadingGuideInfoSwitchButtonContainer,\n)``\n\nexport const ArticleReviewToCompleteContainer = styled(\n  ReadingGuideToCompleteContainer,\n)``\n\nexport type ArticleReviewSubmitButtonProps = {\n  toggled: boolean\n}\n\nexport const ArticleReviewSubmitButton = styled.button<ArticleReviewSubmitButtonProps>`\n  grid-row: 8/9;\n  grid-column: 1/-1;\n  background-color: ${({ toggled }) =>\n    toggled ? 'var(--red)' : 'var(--blue)'};\n  color: var(--white);\n  width: 50%;\n  height: 40%;\n  justify-self: center;\n  font-size: 2vw;\n  align-self: center;\n`\nexport const ArticleReviewHeader = styled(ReadingGuideHeader)``\nexport const ArticleReviewToCompleteInformationContainer = styled(\n  Standard7x12Container,\n)`\n  grid-row: 2/8;\n  grid-column: 1/-1;\n`\n\nexport const Required = styled.span`\n  color: var(--red);\n`\nexport const ArticleReviewInputs = styled(LineInput)`\n  width: 90%;\n  height: 50%;\n  font-size: 2vw;\n  color: var(--blue);\n`\n\nexport const ArticleReviewArticleNameContainer = styled.div`\n  grid-row: 1/2;\n  grid-column: 2/-1;\n  font-size: 2vw;\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  justify-items: left;\n  align-items: center;\n`\n\nexport const ArticleReviewArticleNameInput = styled(ArticleReviewInputs)`\n  width: 90%;\n`\n\nexport const ArticleReviewArticleLinkContainer = styled.div`\n  grid-row: 2/3;\n  grid-column: 2/-1;\n  font-size: 2vw;\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  justify-items: left;\n  align-items: center;\n`\nexport const ArticleReviewArticleLinkInput = styled(ArticleReviewInputs)`\n  width: 90%;\n`\n\nexport const ArticleReviewAuthorContainer = styled.div`\n  grid-row: 3/4;\n  grid-column: 2/-1;\n  font-size: 2vw;\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  justify-items: left;\n  align-items: center;\n`\nexport const ArticleReviewAuthorInput = styled(ArticleReviewInputs)`\n  width: 90%;\n  height: 40%;\n`\nexport const ArticleReviewIssueContainer = styled.div`\n  grid-row: 4/5;\n  grid-column: 2/-1;\n  font-size: 2vw;\n  display: grid;\n\n  justify-items: left;\n  align-items: center;\n`\nexport const ArticleReviewIssueInput = styled(ArticleReviewInputs)`\n  width: 90%;\n`\nexport const ArticleReviewBiasContainer = styled.div`\n  grid-row: 5/6;\n  grid-column: 2/-1;\n  font-size: 2vw;\n  display: grid;\n\n  justify-items: left;\n  align-items: center;\n`\nexport const ArticleReviewBiasSelect = styled.select`\n  width: 40%;\n  height: 70%;\n  color: inherit;\n  font-size: 2vw;\n`\nexport const ArticleReviewSolutionsContainer = styled.div`\n  grid-row: 6/7;\n  grid-column: 2/-1;\n  font-size: 2vw;\n  display: grid;\n\n  justify-items: left;\n  align-items: center;\n`\nexport const ArticleReviewSolutionsInput = styled.textarea`\n  width: 90%;\n  height: 100%;\n  color: var(--blue);\n  font-family: inherit;\n`\nexport const ArticleReviewArticleImportanceContainer = styled.div`\n  grid-row: 7/8;\n  grid-column: 2/-1;\n  font-size: 2vw;\n  display: grid;\n\n  justify-items: left;\n  align-items: center;\n`\nexport const ArticleReviewArticleImportanceInput = styled.textarea`\n  width: 90%;\n  height: 100%;\n  color: var(--blue);\n  font-family: inherit;\n`\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC, useEffect } from 'react'\nimport {\n  findArticleReviewById_findArticleReviewById_articleReview,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateArticleReview,\n  updateArticleReviewVariables,\n} from '../../../../../schemaTypes'\nimport { useArticleReviewToCompleteContextProvider } from './state-styles/ArticleReviewToCompleteContext'\nimport {\n  ArticleReviewArticleImportanceContainer,\n  ArticleReviewArticleImportanceInput,\n  ArticleReviewArticleLinkContainer,\n  ArticleReviewArticleLinkInput,\n  ArticleReviewArticleNameContainer,\n  ArticleReviewArticleNameInput,\n  ArticleReviewAuthorContainer,\n  ArticleReviewAuthorInput,\n  ArticleReviewBiasContainer,\n  ArticleReviewBiasSelect,\n  ArticleReviewHeader,\n  ArticleReviewIssueContainer,\n  ArticleReviewIssueInput,\n  ArticleReviewSolutionsContainer,\n  ArticleReviewSolutionsInput,\n  ArticleReviewToCompleteInformationContainer,\n  Required,\n} from './state-styles/articleReviewToCompleteStyles'\n\nexport type ArticleReviewToCompleteFormProps = {\n  articleReviewInfo: findArticleReviewById_findArticleReviewById_articleReview\n}\n\nexport const UPDATE_ARTICLE_REVIEW_MUTATION = gql`\n  mutation updateArticleReview($input: UpdateArticleReviewInput!) {\n    updateArticleReview(input: $input) {\n      articleReview {\n        _id\n      }\n    }\n  }\n`\nexport const ArticleReviewToCompleteForm: FC<\n  ArticleReviewToCompleteFormProps\n> = ({ articleReviewInfo }) => {\n  const [state, event] = useArticleReviewToCompleteContextProvider()\n  const [updateArticleReview] = useMutation<\n    updateArticleReview,\n    updateArticleReviewVariables\n  >(UPDATE_ARTICLE_REVIEW_MUTATION, {\n    variables: { input: state.context.articleReviewToComplete },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findArticleReviewById'],\n  })\n\n  useEffect(() => {\n    if (state.context.articleReviewToComplete.articleReviewId) {\n      updateArticleReview()\n    }\n  }, [state.context.articleReviewToComplete])\n  return (\n    <>\n      <ArticleReviewHeader>\n        <div>Article Review</div>\n      </ArticleReviewHeader>\n      <ArticleReviewToCompleteInformationContainer>\n        <ArticleReviewArticleNameContainer>\n          <div>\n            <Required>* </Required>\n            Name of the Article:\n          </div>\n          <ArticleReviewArticleNameInput\n            value={state.context.articleReviewToComplete.articleTitle}\n            onChange={(e: any) =>\n              event({ type: 'SET_TITLE', payload: e.target.value })\n            }\n          />\n        </ArticleReviewArticleNameContainer>\n        <ArticleReviewArticleLinkContainer>\n          <div>\n            <Required>* </Required>\n            Link to Article:\n          </div>\n          <ArticleReviewArticleLinkInput\n            value={state.context.articleReviewToComplete.articleLink}\n            onChange={(e: any) =>\n              event({ type: 'SET_LINK', payload: e.target.value })\n            }\n          />\n        </ArticleReviewArticleLinkContainer>\n        <ArticleReviewAuthorContainer>\n          <div>\n            <Required>* </Required> Article's Author:{' '}\n          </div>\n          <ArticleReviewAuthorInput\n            value={state.context.articleReviewToComplete.articleAuthor}\n            onChange={(e: any) =>\n              event({ type: 'SET_AUTHOR', payload: e.target.value })\n            }\n          />\n        </ArticleReviewAuthorContainer>\n        <ArticleReviewIssueContainer>\n          <div>\n            <Required>* </Required> What was the problem or issue the author was\n            trying to explain?{' '}\n          </div>\n          <ArticleReviewIssueInput\n            value={state.context.articleReviewToComplete.issue}\n            onChange={(e: any) =>\n              event({ type: 'SET_ISSUE', payload: e.target.value })\n            }\n          />\n        </ArticleReviewIssueContainer>\n        <ArticleReviewBiasContainer>\n          <div>Were both sides of the problem or issue represented?</div>\n          <ArticleReviewBiasSelect\n            value={\n              state.context.articleReviewToComplete.bias === null\n                ? 'none'\n                : state.context.articleReviewToComplete.bias\n                  ? 'true'\n                  : 'false'\n            }\n            onChange={(e: any) =>\n              event({\n                type: 'SET_BIAS',\n                payload:\n                  e.target.value === 'true'\n                    ? true\n                    : e.target.value === 'none'\n                      ? null\n                      : false,\n              })\n            }\n          >\n            <option value={'none'}>Pick Yes or No</option>\n            <option value={'true'}>Yes</option>\n            <option value={'false'}>No</option>\n          </ArticleReviewBiasSelect>\n        </ArticleReviewBiasContainer>\n        <ArticleReviewSolutionsContainer>\n          <div>\n            What solutions (if any) to the problem were given in the article?\n          </div>\n          <ArticleReviewSolutionsInput\n            value={\n              state.context.articleReviewToComplete.solutions\n                ? state.context.articleReviewToComplete.solutions\n                : ''\n            }\n            onChange={(e: any) =>\n              event({ type: 'SET_SOLUTIONS', payload: e.target.value })\n            }\n          />\n        </ArticleReviewSolutionsContainer>\n        <ArticleReviewArticleImportanceContainer>\n          <div>\n            <Required>* </Required> Why do you think this topic is important?\n          </div>\n          <ArticleReviewArticleImportanceInput\n            value={state.context.articleReviewToComplete.topicsImportance}\n            onChange={(e: any) =>\n              event({ type: 'SET_TOPICS_IMPORTANCE', payload: e.target.value })\n            }\n          />\n        </ArticleReviewArticleImportanceContainer>\n      </ArticleReviewToCompleteInformationContainer>\n    </>\n  )\n}\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React, { FC, useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router'\nimport {\n  findArticleReviewById,\n  findArticleReviewByIdVariables,\n  submitArticleReviewVariables,\n  submitArticleReview,\n} from '../../../../../schemaTypes'\nimport {\n  AssignmentDetailsContainer,\n  AssignmentDetailsDueDate,\n  AssignmentDetailsGoBackButton,\n  AssignmentDetailsGoBackButtonContainer,\n  AssignmentDetailsPartContainers,\n  AssignmentDetailsReadingInfo,\n} from '../essays/assigned-essays/state-and-styles/assignedEssayStyles'\nimport { ArticleReviewToCompleteForm } from './ArticleReviewToCompleteForm'\nimport { useArticleReviewToCompleteContextProvider } from './state-styles/ArticleReviewToCompleteContext'\nimport {\n  ArticleReviewContainer,\n  ArticleReviewDetalisContainer,\n  ArticleReviewHelpBody,\n  ArticleReviewHelpHeader,\n  ArticleReviewInfoContainer,\n  ArticleReviewInfoSwitchButtonContainer,\n  ArticleReviewSubmitButton,\n  ArticleReviewToCompleteContainer,\n} from './state-styles/articleReviewToCompleteStyles'\n\nexport type ArticleReviewToCompleteProps = {}\n\nexport const FIND_ARTICLE_REVIEW_BY_ID_QUERY = gql`\n  query findArticleReviewById($input: FindArticleReviewByIdInput!) {\n    findArticleReviewById(input: $input) {\n      articleReview {\n        _id\n        articleAuthor\n        articleLink\n        articleTitle\n        assignedDate\n        bias\n        dueDate\n        assignedDate\n        dueTime\n        issue\n        publishedDate\n        solutions\n        topicsImportance\n        markingPeriod\n      }\n    }\n  }\n`\n\nexport const SUBMIT_ARTICLE_REVIEW_MUTATION = gql`\n  mutation submitArticleReview($input: SubmitArticleReviewInput!) {\n    submitArticleReview(input: $input) {\n      articleReview {\n        _id\n      }\n    }\n  }\n`\n\nexport const ArticleReviewToComplete: FC<ArticleReviewToCompleteProps> = () => {\n  const { articleReviewToComplete } = useParams()\n  const [toggled, setToggled] = useState(false)\n  const navigate = useNavigate()\n\n  const [state, event] = useArticleReviewToCompleteContextProvider()\n\n  const { loading, data } = useQuery<\n    findArticleReviewById,\n    findArticleReviewByIdVariables\n  >(FIND_ARTICLE_REVIEW_BY_ID_QUERY, {\n    variables: {\n      input: { articleReviewId: articleReviewToComplete! },\n    },\n    onCompleted: (data) => {\n      const {\n        articleAuthor,\n        articleLink,\n        _id,\n        articleTitle,\n        issue,\n        topicsImportance,\n        bias,\n        publishedDate,\n        solutions,\n      } = data.findArticleReviewById.articleReview\n      event({\n        type: 'SET_INPUTS',\n        payload: {\n          articleAuthor,\n          articleLink,\n          articleReviewId: _id!,\n          articleTitle,\n          issue,\n          topicsImportance,\n          bias,\n          publishedDate,\n          solutions,\n        },\n      })\n    },\n    onError: (error) => console.error(error),\n  })\n  const [submitArticleReview] = useMutation<\n    submitArticleReview,\n    submitArticleReviewVariables\n  >(SUBMIT_ARTICLE_REVIEW_MUTATION, {\n    variables: {\n      input: {\n        articleReviewId: state.context.articleReviewToComplete.articleReviewId,\n        markingPeriod: data?.findArticleReviewById.articleReview.markingPeriod!,\n      },\n    },\n    onCompleted: () => navigate('/dashboard/assignments'),\n    refetchQueries: ['findArticleReviewsByStudent'],\n  })\n  return (\n    <ArticleReviewContainer>\n      <ArticleReviewDetalisContainer>\n        <AssignmentDetailsPartContainers>\n          <AssignmentDetailsDueDate>\n            Article Review due:{' '}\n            {data?.findArticleReviewById.articleReview.dueDate} at{' '}\n            {data?.findArticleReviewById.articleReview.dueTime}\n          </AssignmentDetailsDueDate>\n        </AssignmentDetailsPartContainers>\n        <AssignmentDetailsGoBackButtonContainer>\n          <AssignmentDetailsGoBackButton\n            onClick={() => navigate('/dashboard/assignments')}\n          >\n            Go Back to Assignments\n          </AssignmentDetailsGoBackButton>\n        </AssignmentDetailsGoBackButtonContainer>\n      </ArticleReviewDetalisContainer>\n      <ArticleReviewToCompleteContainer>\n        {data?.findArticleReviewById.articleReview && (\n          <>\n            <ArticleReviewToCompleteForm\n              articleReviewInfo={data?.findArticleReviewById.articleReview!}\n            />\n            {!toggled ? (\n              <ArticleReviewSubmitButton\n                toggled={toggled}\n                onClick={() => setToggled(true)}\n              >\n                Submit\n              </ArticleReviewSubmitButton>\n            ) : (\n              <ArticleReviewSubmitButton\n                toggled={toggled}\n                onClick={() => submitArticleReview()}\n              >\n                Are You Sure?\n              </ArticleReviewSubmitButton>\n            )}\n          </>\n        )}\n      </ArticleReviewToCompleteContainer>\n      <ArticleReviewInfoContainer>\n        <ArticleReviewHelpHeader>Help</ArticleReviewHelpHeader>\n        <ArticleReviewHelpBody>\n          <ul>\n            <li>\n              To be successful with these assignments, do a google search about\n              a current events topic about the world that interests you.\n            </li>\n            <br />\n            <li>\n              If you don't have a topic in mind, just search \"Recent Current\n              Events\" and click \"News\" below the search bar.\n            </li>\n            <br />\n            <li>\n              Try to find an article that presents an issue that you think is\n              important.\n            </li>\n            <br />\n            <li>Any question with a red star is required for full credit.</li>\n          </ul>\n        </ArticleReviewHelpBody>\n      </ArticleReviewInfoContainer>\n    </ArticleReviewContainer>\n  )\n}\n","import { Machine, assign } from 'xstate'\n\nexport type quizToCompleteMachineSchema = {\n  states: {\n    quiz: {}\n  }\n}\nexport type quizToCompleteMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_QUIZZABLE_SECTIONS'; payload: string[] }\n  | { type: 'SET_INITIAL_QUIZZABLE_SECTION'; payload: string }\n  | { type: 'NEXT_QUIZZABLE_SECTION' }\n  | { type: 'ADD_RESPONSIBILITY_POINTS'; payload: number }\n  | { type: 'ADD_EARNED_POINTS'; payload: number }\n  | { type: 'GET_CURRENT_POINTS' }\n  | { type: 'NEXT_QUESTION_NUMBER' }\n\nexport type quizToCompleteMachineContext = {\n  quizzableSections: string[]\n  currentQuizzableSection: string\n  earnedPoints: number\n  responsibilityPoints: number\n  questionNumber: number\n}\n\nexport const quizToCompleteMachine = Machine<\n  quizToCompleteMachineContext,\n  quizToCompleteMachineSchema,\n  quizToCompleteMachineEvent\n>({\n  id: 'quizToComplete',\n  initial: 'quiz',\n  context: {\n    quizzableSections: [],\n    currentQuizzableSection: '',\n    earnedPoints: 0,\n    responsibilityPoints: 0,\n    questionNumber: 1,\n  },\n  states: {\n    quiz: {\n      on: {\n        SET_QUIZZABLE_SECTIONS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              quizzableSections: evt.payload,\n            }\n          }),\n        },\n        SET_INITIAL_QUIZZABLE_SECTION: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              currentQuizzableSection: evt.payload,\n            }\n          }),\n        },\n        NEXT_QUIZZABLE_SECTION: {\n          actions: assign((ctx, evt) => {\n            const quizzableSectionIndex = ctx.quizzableSections.findIndex(\n              (i) => i === ctx.currentQuizzableSection,\n            )\n\n            return {\n              ...ctx,\n              currentQuizzableSection:\n                ctx.quizzableSections[quizzableSectionIndex + 1],\n            }\n          }),\n        },\n        ADD_EARNED_POINTS: {\n          actions: assign((ctx, evt) => {\n            const points = ctx.earnedPoints + evt.payload\n            return {\n              ...ctx,\n              earnedPoints: points,\n            }\n          }),\n        },\n        ADD_RESPONSIBILITY_POINTS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              responsibilityPoints: ctx.responsibilityPoints + evt.payload,\n            }\n          }),\n        },\n        GET_CURRENT_POINTS: {\n          actions: assign((ctx) => {\n            console.log(ctx.earnedPoints, ctx.responsibilityPoints)\n            return {\n              ...ctx,\n              earnedPoints: ctx.earnedPoints,\n              responsibilityPoints: ctx.responsibilityPoints,\n            }\n          }),\n        },\n        NEXT_QUESTION_NUMBER: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              questionNumber: ctx.questionNumber + 1,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  quizToCompleteMachine,\n  quizToCompleteMachineContext,\n  quizToCompleteMachineEvent,\n} from './quizToCompleteMachine'\n\nconst QuizToCompleteContext = createContext<any>(undefined)\n\ntype QuizToCompleteContextProps = {\n  children: ReactNode\n}\n\nexport const QuizToCompleteContextProvider = ({\n  children,\n}: QuizToCompleteContextProps) => {\n  const [state, event] = useMachine(quizToCompleteMachine)\n  return (\n    <QuizToCompleteContext.Provider value={[state, event]}>\n      {children}\n    </QuizToCompleteContext.Provider>\n  )\n}\n\nexport function useQuizToCompleteContextProvider() {\n  const context = useContext(QuizToCompleteContext)\n  if (context === undefined) {\n    throw new Error(\n      'useQuizToCompleteContextProvider must be used within a QuizToCompleteContextProvider',\n    )\n  }\n  return context as [\n    State<quizToCompleteMachineContext, quizToCompleteMachineEvent, any, any>,\n    (event: quizToCompleteMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\n\nexport const StudentInformationContainer = styled.div`\n  height: 95vh;\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  background-color: var(--white);\n  color: var(--blue);\n`\n\nexport const StudentInformationTitlePageHeader = styled.div`\n  padding-top: 10vh;\n  font-size: 4vh;\n  text-align: center;\n`\n\nexport const StudentNameSelectContainer = styled.div`\n  background-color: var(--blue);\n  color: var(--white);\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n  border-top: 3px solid var(--white);\n`\n\nexport const StudentNameSelectorContainer = styled.div`\n  display: grid;\n  font-size: 3vh;\n`\n\nexport const SelectStudentTitle = styled.div`\n  justify-self: center;\n  align-self: end;\n`\nexport const StudentSelectInput = styled.input`\n  justify-self: center;\n  align-self: center;\n  height: 4vh;\n  width: 75%;\n  font-size: 3vh;\n  color: var(--white);\n  background-color: transparent;\n  border-top: 1px solid var(--blue);\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n  border-bottom: 1px solid var(--white);\n`\n\nexport const StudentNameListContainer = styled.div`\n  display: grid;\n  grid-auto-rows: 5%;\n  justify-items: center;\n  align-items: center;\n  font-size: 2.5vh;\n  height: 70vh;\n  overflow: scroll;\n`\n\nexport const InformationContainer = styled.div`\n  display: grid;\n  grid-template-rows: 2fr 5% 7fr 1fr;\n`\n\nexport const StudentNameHeader = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 4vh;\n  text-decoration: underline;\n`\nexport const InformationTypeSelectorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\n\nexport type InformationTypeTabProps = {\n  selected: boolean\n}\n\nexport const InformationTypeTab = styled.div<InformationTypeTabProps>`\n  border-top: 1px solid var(--blue);\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n  border-bottom: ${({ selected }) => {\n    return selected ? '1px solid var(--white)' : '1px solid var(--blue)'\n  }};\n  width: 100%;\n  height: 100%;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n  font-size: 2.5vh;\n`\nexport const InformationPageOutline = styled.div`\n  border-right: 1px solid var(--blue);\n  border-left: 1px solid var(--blue);\n`\n\nexport const ProtocolInformationContainer = styled(InformationPageOutline)``\nexport const ConductInformationContainer = styled(InformationPageOutline)`\n  display: grid;\n  grid-template-rows: 1fr 8fr;\n`\nexport const StudentInformationDisplayContainer = styled(\n  InformationPageOutline,\n)``\nexport const ContactInformationContainer = styled(InformationPageOutline)``\nexport const AssignmentInformationContainer = styled(InformationPageOutline)`\n  display: grid;\n  grid-template-rows: 1fr 8fr;\n`\nexport const MarkingPeriodSelectorSwitchContainer = styled(\n  InformationPageOutline,\n)`\n  border-bottom: 1px solid var(--blue);\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const AssignmentInformationAssignmentSwitchContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n`\n\nexport type AssignmentSwitchProps = {\n  selected: boolean\n}\n\nexport const AssignmentSwitch = styled.div<AssignmentSwitchProps>`\n  justify-self: center;\n  align-self: center;\n  font-size: 2vh;\n  cursor: pointer;\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n`\n\nexport const AssignmentInformationDisplayContainer = styled.div`\n  height: 50vh;\n  display: grid;\n  grid-template-rows: 1fr 15fr;\n\n  margin: 1%;\n  border: 1px solid var(--grey);\n`\n\nexport const AssignmentInformationContainerHeader = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  align-items: center;\n  border-bottom: 1px solid var(--grey);\n`\n\nexport const AssignmentInformationStyle = styled.div`\n  overflow: scroll;\n  height: 100%;\n`\nexport type IndividualAssignmentDisplayProps = {\n  everyOtherLine: boolean\n  lastLine: boolean\n}\nexport const IndividualAssignmentDisplay = styled.div<IndividualAssignmentDisplayProps>`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  align-items: center;\n  border-bottom: ${({ lastLine }) =>\n    lastLine ? '1px solid var(--grey)' : 'none'};\n  background-color: ${({ everyOtherLine }) =>\n    everyOtherLine ? 'var(--grey)' : 'var(--white)'};\n`\nexport const SGOContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n`\nexport const SGOTypeSwitchContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n`\n\nexport type SGOTypeSwitchProps = {\n  selected: boolean\n}\nexport const SGOTypeSwitch = styled.div<SGOTypeSwitchProps>`\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n`\nexport const SGOEssayContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 2fr 3fr;\n`\nexport const SGOScoreContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\n// export const SGOEssayQuestionContainer = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr 3fr;\n// `\n","import React, { useMemo } from 'react'\nimport { createEditor } from 'slate'\nimport { withReact, Slate, Editable } from 'slate-react'\n\nexport type EssayViewerProps = { draft: string }\n\nexport const EssayViewer = ({ draft }: EssayViewerProps) => {\n  const editor = useMemo(() => withReact(createEditor()), [])\n\n  const parsedEssay = JSON.parse(draft)\n\n  return (\n    <>\n      <div>\n        <Slate\n          editor={editor}\n          value={parsedEssay as any}\n          onChange={(value: any) => {\n            // setValue(value as Node[])\n          }}\n        >\n          <Editable\n            // renderElement={renderElement}\n            spellCheck\n            onSelect={(e: any) => e.preventDefault()}\n            onCopy={(e: any) => {\n              e.preventDefault()\n            }}\n            autoFocus={true}\n            // renderLeaf={renderLeaf}\n            style={{\n              height: '98%',\n              userSelect: 'none',\n            }}\n          ></Editable>\n        </Slate>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  SGOEssayContainer,\n  SGOScoreContainer,\n} from '../state-n-styles/studentInformationStyles'\nimport { EssayViewer } from './EssayViewer'\nimport { EssayEntryType } from './SGOInfo'\n\nexport type EssaysProps = { essays: EssayEntryType }\n\nexport const Essays = ({ essays }: EssaysProps) => {\n  return (\n    <>\n      {essays.map((e) => (\n        <SGOEssayContainer key={e.number}>\n          <div>{e.studentName}</div>\n\n          <div>\n            {e.number}: {e.question}\n          </div>\n\n          <div>\n            <EssayViewer draft={e.draft} />\n          </div>\n          <br />\n\n          <SGOScoreContainer>\n            <div>\n              <div>Writing Score: {e.answerScore}</div>\n              <ul>\n                <li>\n                  {e.answerEntries.map((e, i: number) => (\n                    <div key={i}>{e}</div>\n                  ))}\n                </li>\n              </ul>\n            </div>\n            <div>\n              <div>Conclusion Score: {e.conclusionScore}</div>\n              <ul>\n                <li>\n                  {e.conclusionEntries.map((e, i: number) => (\n                    <div key={i}>{e}</div>\n                  ))}\n                </li>\n              </ul>\n            </div>\n          </SGOScoreContainer>\n        </SGOEssayContainer>\n      ))}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport {\n  findAllQuestions,\n  findEssayQuestionByIdForSGO,\n  findEssayQuestionByIdForSGOVariables,\n  findEssaysByStudentId,\n  findEssaysByStudentIdVariables,\n  findEssaysByStudentId_findEssaysByStudentId_essays_finalDraft_submittedFinalDraft_rubricEntries,\n  findSGOEssaysByStudentId,\n  findSGOEssaysByStudentIdVariables,\n  findSGOEssaysByStudentId_findSGOEssaysByStudentId_essays_finalDraft_submittedFinalDraft_rubricEntries,\n  RubricSectionEnum,\n} from '../../../../../schemaTypes'\nimport { average, copyToClipBoard } from '../../../../../utils'\nimport {\n  SGOContainer,\n  SGOTypeSwitch,\n  SGOTypeSwitchContainer,\n} from '../state-n-styles/studentInformationStyles'\nimport { Essays } from './Essays'\n\nexport type SGOInfoProps = {\n  studentId: string\n}\n\nexport const FIND_ESSAYS_BY_STUDENT_QUERY = gql`\n  query findEssaysByStudentId($input: FindEssaysByStudentIdInput!) {\n    findEssaysByStudentId(input: $input) {\n      essays {\n        _id\n        markingPeriod\n        score {\n          earnedPoints\n        }\n        topic {\n          essayQuestionId\n          question\n        }\n        readings {\n          readingSections\n        }\n        assignedDate\n        hasOwner {\n          lastName\n          firstName\n        }\n        finalDraft {\n          submittedFinalDraft {\n            score\n            draft\n            rubricEntries {\n              rubricSection\n              score\n              entry\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const FIND_ESSAY_QUESTION_INFO_FOR_SGO_QUERY = gql`\n  query findEssayQuestionByIdForSGO($input: FindEssayQuestionByIdInput!) {\n    findEssayQuestionById(input: $input) {\n      essayQuestion {\n        sgoQuestion\n      }\n    }\n  }\n`\n\nexport const FIND_SGO_ESSAYS_QUERY = gql`\n  query findSGOEssaysByStudentId($input: FindSGOEssaysByStudentIdInput!) {\n    findSGOEssaysByStudentId(input: $input) {\n      essays {\n        _id\n        markingPeriod\n        assignedDate\n        score {\n          earnedPoints\n        }\n        topic {\n          essayQuestionId\n        }\n        readings {\n          readingSections\n        }\n        finalDraft {\n          submittedFinalDraft {\n            score\n            rubricEntries {\n              rubricSection\n              score\n              entry\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport const FIND_ALL_ESSAY_QUESTIONS_QUERY = gql`\n  query findAllQuestions {\n    findAllQuestions {\n      questions\n    }\n  }\n`\n\nexport type RubricEntries =\n  | {\n      __typename: 'RubricEntry'\n      rubricSection: RubricSectionEnum\n      score: number\n      entry: string\n      readings: string\n      number: number\n    }[]\n  | null\n\nexport type AnswerEntryType = {\n  score: number\n  readingSection: string\n  number: number\n  questionNumber: number\n  draft: string\n}[]\n\nexport type EssayEntryType = {\n  readingSection: string\n  questionNumber: number\n  draft: string\n  number: number\n  question: string\n  answerScore: number\n  answerEntries: string[]\n  conclusionEntries: string[]\n  conclusionScore: number\n  studentName: string\n}[]\n\nexport const SGOInfo = ({ studentId }: SGOInfoProps) => {\n  const [sgoSwitch, setSgoSwitch] = useState<\n    'WRITING' | 'CONCLUSION' | 'ESSAYS'\n  >('WRITING')\n  const { loading, data: sgoEssays } = useQuery<\n    findSGOEssaysByStudentId,\n    findSGOEssaysByStudentIdVariables\n  >(FIND_SGO_ESSAYS_QUERY, {\n    variables: {\n      input: { studentId },\n    },\n    // onCompleted: (data) => console.log(data.findSGOEssaysByStudentId.essays),\n    onError: (error) => console.error(error),\n  })\n  const { loading: allEssayLoading, data: allEssays } = useQuery<\n    findEssaysByStudentId,\n    findEssaysByStudentIdVariables\n  >(FIND_ESSAYS_BY_STUDENT_QUERY, {\n    variables: {\n      input: { studentId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const { data: allQuestionsData } = useQuery<findAllQuestions>(\n    FIND_ALL_ESSAY_QUESTIONS_QUERY,\n    {\n      // onCompleted: (data) => console.log(data.findAllQuestions.questions),\n      onError: (error) => console.error(error),\n    },\n  )\n  if (allEssayLoading) return <div>Loading</div>\n  const essayTotal = 40\n\n  const sgoEssaysList = sgoEssays?.findSGOEssaysByStudentId.essays.slice(\n    0,\n    essayTotal,\n  )!\n\n  console.log(\n    allEssays !== undefined &&\n      allEssays?.findEssaysByStudentId.essays.filter(\n        (e) =>\n          e.__typename === 'Essay' &&\n          e.finalDraft &&\n          e.score.earnedPoints !== 0,\n      ),\n  )\n\n  const allEssayList = allEssays?.findEssaysByStudentId\n    .essays!.filter(\n      (essay) => {},\n      // essay.finalDraft &&\n      // essay.markingPeriod !== 'FIRST',\n      //  &&\n      // essay.score.earnedPoints !== 0\n    )\n    .sort((a, b) => {\n      const essayA = Date.parse(a.assignedDate)\n      const essayB = Date.parse(b.assignedDate)\n      if (essayA < essayB) return -1\n      if (essayA > essayB) return 1\n      return 0\n    })\n    .sort((a, b) => {\n      const essayA = a.score\n      const essayB = b.score\n      if (essayA < essayB) return -1\n      if (essayA > essayB) return 1\n      return 0\n    })\n  // .slice(0, 40)!\n  // console.log(allEssayList)\n  const questionList = allQuestionsData?.findAllQuestions.questions.slice(\n    16,\n    allQuestionsData.findAllQuestions.questions.length - 1,\n  )\n\n  const answerEntries: RubricEntries = []\n  const conclusionEntries: RubricEntries = []\n  // let i: number = 1\n\n  const answerEntryScore: {\n    score: number\n    readingSection: string\n    number: number\n    questionNumber: number\n  }[] = []\n\n  const conclusionEntryScore: {\n    score: number\n    readingSection: string\n    number: number\n    questionNumber: number\n  }[] = []\n\n  const essayEntryList: EssayEntryType = []\n\n  if (!loading) {\n    let i: number = 1\n    const allCompletedEssays = allEssayList!.filter(\n      (essay) => essay.finalDraft && essay.score.earnedPoints !== 0,\n    )\n\n    if (allCompletedEssays.length > 25) {\n      for (const essay of allCompletedEssays.slice(0, 25)) {\n        const studentName =\n          essay.hasOwner.firstName + ' ' + essay.hasOwner.lastName\n        const questionNo = questionList?.findIndex(\n          (i) => i === essay.topic.question,\n        )!\n\n        const essayToSort = [...essay.finalDraft?.submittedFinalDraft!]\n        const bestEssay = essayToSort.sort((a, b) => {\n          if (a.score < b.score) {\n            return 1\n          }\n          if (a.score > b.score) {\n            return -1\n          }\n          return 0\n        })[0]\n        console.log(bestEssay)\n        let answerScoreContainer: number[] = []\n        let conclusionScoreContainer: number[] = []\n\n        for (const entry of bestEssay.rubricEntries) {\n          if (entry.rubricSection === 'ANSWER') {\n            answerEntries.push({\n              __typename: entry.__typename,\n              rubricSection: entry.rubricSection,\n              score: entry.score > 4 ? 4 : entry.score,\n              entry: entry.entry,\n              readings: essay.readings.readingSections,\n              number: i,\n            })\n\n            // answerScoreContainer.push(entry.score > 4 ? 4 : entry.score)\n            answerScoreContainer.push(\n              entry.score === 0 ? 0 : entry.score === 1 ? 1 : entry.score - 1,\n            )\n          }\n\n          if (entry.rubricSection === 'CONCLUSION') {\n            conclusionEntries.push({\n              __typename: entry.__typename,\n              rubricSection: entry.rubricSection,\n              score: entry.score > 4 ? 4 : entry.score,\n              entry: entry.entry,\n              readings: essay.readings.readingSections,\n              number: i,\n            })\n            // conclusionScoreContainer.push(entry.score > 4 ? 4 : entry.score)\n            conclusionScoreContainer.push(\n              entry.score === 0 ? 0 : entry.score === 1 ? 1 : entry.score - 1,\n            )\n          }\n        }\n\n        const answerEntryList = bestEssay.rubricEntries\n          .filter((e) => e.rubricSection === 'ANSWER' && e.entry)\n          .map((e) => e.entry)\n\n        const conclusionEntryList = bestEssay.rubricEntries\n          .filter((e) => e.rubricSection === 'CONCLUSION' && e.entry)\n          .map((e) => e.entry)\n\n        answerScoreContainer.length > 1\n          ? essayEntryList.push({\n              answerScore: average(answerScoreContainer),\n              conclusionScore: average(conclusionScoreContainer),\n              draft: bestEssay.draft,\n              number: i,\n              question: essay.topic.question,\n              questionNumber: questionNo + 1,\n              readingSection: essay.readings.readingSections,\n              studentName,\n              answerEntries: answerEntryList,\n              conclusionEntries: conclusionEntryList,\n            })\n          : answerScoreContainer.length === 1\n            ? essayEntryList.push({\n                answerScore: answerScoreContainer[0],\n                conclusionScore: conclusionScoreContainer[0],\n                draft: bestEssay.draft,\n                number: i,\n                question: essay.topic.question,\n                questionNumber: questionNo + 1,\n                readingSection: essay.readings.readingSections,\n                studentName,\n                answerEntries: answerEntryList,\n                conclusionEntries: conclusionEntryList,\n              })\n            : essayEntryList.push({\n                answerScore: 0,\n                conclusionScore: 0,\n                draft: bestEssay.draft,\n                number: i,\n                question: essay.topic.question,\n                questionNumber: questionNo + 1,\n                readingSection: essay.readings.readingSections,\n                studentName,\n                answerEntries: answerEntryList,\n                conclusionEntries: conclusionEntryList,\n              })\n\n        answerScoreContainer.length > 1\n          ? answerEntryScore.push({\n              number: i,\n              readingSection: essay.readings.readingSections,\n              score: average(answerScoreContainer),\n              questionNumber: questionNo + 1,\n            })\n          : answerScoreContainer.length === 1\n            ? answerEntryScore.push({\n                number: i,\n                readingSection: essay.readings.readingSections,\n                score: answerScoreContainer[0],\n                questionNumber: questionNo + 1,\n              })\n            : answerEntryScore.push({\n                number: i,\n                readingSection: essay.readings.readingSections,\n                score: 0,\n                questionNumber: questionNo + 1,\n              })\n\n        conclusionScoreContainer.length > 1\n          ? conclusionEntryScore.push({\n              number: i,\n              readingSection: essay.readings.readingSections,\n              score: average(conclusionScoreContainer),\n              questionNumber: questionNo + 1,\n            })\n          : conclusionScoreContainer.length === 1\n            ? conclusionEntryScore.push({\n                number: i,\n                readingSection: essay.readings.readingSections,\n                score: conclusionScoreContainer[0],\n                questionNumber: questionNo + 1,\n              })\n            : conclusionEntryScore.push({\n                number: i,\n                readingSection: essay.readings.readingSections,\n                score: 0,\n                questionNumber: questionNo + 1,\n              })\n        i = i + 1\n      }\n      console.log(answerEntryScore)\n      console.log(conclusionEntryScore)\n    } else {\n      for (const essay of allEssayList!.slice(0, 25)!) {\n        const studentName =\n          essay.hasOwner.firstName + ' ' + essay.hasOwner.lastName\n        const questionNo = questionList?.findIndex(\n          (i) => i === essay.topic.question,\n        )!\n\n        if (essay.finalDraft) {\n          const essayToSort = [...essay.finalDraft?.submittedFinalDraft!]\n          const bestEssay = essayToSort.sort((a, b) => {\n            if (a.score < b.score) {\n              return 1\n            }\n            if (a.score > b.score) {\n              return -1\n            }\n            return 0\n          })[0]\n\n          let answerScoreContainer: number[] = []\n          let conclusionScoreContainer: number[] = []\n\n          for (const entry of bestEssay.rubricEntries) {\n            if (entry.rubricSection === 'ANSWER') {\n              answerEntries.push({\n                __typename: entry.__typename,\n                rubricSection: entry.rubricSection,\n                score: entry.score > 4 ? 4 : entry.score,\n                entry: entry.entry,\n                readings: essay.readings.readingSections,\n                number: i,\n              })\n\n              // answerScoreContainer.push(entry.score > 4 ? 4 : entry.score)\n              answerScoreContainer.push(\n                entry.score === 0 ? 0 : entry.score === 1 ? 1 : entry.score - 1,\n              )\n            }\n\n            if (entry.rubricSection === 'CONCLUSION') {\n              conclusionEntries.push({\n                __typename: entry.__typename,\n                rubricSection: entry.rubricSection,\n                score: entry.score > 4 ? 4 : entry.score,\n                entry: entry.entry,\n                readings: essay.readings.readingSections,\n                number: i,\n              })\n              // conclusionScoreContainer.push(entry.score > 4 ? 4 : entry.score)\n              conclusionScoreContainer.push(\n                entry.score === 0 ? 0 : entry.score === 1 ? 1 : entry.score - 1,\n              )\n            }\n\n            // answerScoreContainer.length > 1 &&\n            //   console.log(average(answerScoreContainer))\n            // conclusionEntryScore.push(average(answerScoreContainer))\n          }\n          const answerEntryList = bestEssay.rubricEntries\n            .filter((e) => e.rubricSection === 'ANSWER' && e.entry)\n            .map((e) => e.entry)\n          const conclusionEntryList = bestEssay.rubricEntries\n            .filter((e) => e.rubricSection === 'CONCLUSION' && e.entry)\n            .map((e) => e.entry)\n\n          answerScoreContainer.length > 1\n            ? essayEntryList.push({\n                answerScore: average(answerScoreContainer),\n                conclusionScore: average(conclusionScoreContainer),\n                draft: bestEssay.draft,\n                number: i,\n                question: essay.topic.question,\n                questionNumber: questionNo + 1,\n                readingSection: essay.readings.readingSections,\n                studentName,\n                answerEntries: answerEntryList,\n                conclusionEntries: conclusionEntryList,\n              })\n            : answerScoreContainer.length === 1\n              ? essayEntryList.push({\n                  answerScore: answerScoreContainer[0],\n                  conclusionScore: conclusionScoreContainer[0],\n                  draft: bestEssay.draft,\n                  number: i,\n                  question: essay.topic.question,\n                  questionNumber: questionNo + 1,\n                  readingSection: essay.readings.readingSections,\n                  studentName,\n                  answerEntries: answerEntryList,\n                  conclusionEntries: conclusionEntryList,\n                })\n              : essayEntryList.push({\n                  answerScore: 0,\n                  conclusionScore: 0,\n                  draft: bestEssay.draft,\n                  number: i,\n                  question: essay.topic.question,\n                  questionNumber: questionNo + 1,\n                  readingSection: essay.readings.readingSections,\n                  studentName,\n                  answerEntries: answerEntryList,\n                  conclusionEntries: conclusionEntryList,\n                })\n\n          answerScoreContainer.length > 1\n            ? answerEntryScore.push({\n                number: i,\n                readingSection: essay.readings.readingSections,\n                score: average(answerScoreContainer),\n                questionNumber: questionNo + 1,\n              })\n            : answerScoreContainer.length === 1\n              ? answerEntryScore.push({\n                  number: i,\n                  readingSection: essay.readings.readingSections,\n                  score: answerScoreContainer[0],\n                  questionNumber: questionNo + 1,\n                })\n              : answerEntryScore.push({\n                  number: i,\n                  readingSection: essay.readings.readingSections,\n                  score: 0,\n                  questionNumber: questionNo + 1,\n                })\n\n          conclusionScoreContainer.length > 1\n            ? conclusionEntryScore.push({\n                number: i,\n                readingSection: essay.readings.readingSections,\n                score: average(conclusionScoreContainer),\n                questionNumber: questionNo + 1,\n              })\n            : conclusionScoreContainer.length === 1\n              ? conclusionEntryScore.push({\n                  number: i,\n                  readingSection: essay.readings.readingSections,\n                  score: conclusionScoreContainer[0],\n                  questionNumber: questionNo + 1,\n                })\n              : conclusionEntryScore.push({\n                  number: i,\n                  readingSection: essay.readings.readingSections,\n                  score: 0,\n                  questionNumber: questionNo + 1,\n                })\n        } else {\n          answerEntries.push({\n            __typename: 'RubricEntry',\n            rubricSection: RubricSectionEnum.ANSWER,\n            score: 0,\n            entry: '',\n            readings: essay.readings.readingSections,\n            number: i,\n          })\n\n          answerEntryScore.push({\n            number: i,\n            readingSection: essay.readings.readingSections,\n            score: 0,\n            questionNumber: questionNo + 1,\n          })\n          conclusionEntries.push({\n            __typename: 'RubricEntry',\n            rubricSection: RubricSectionEnum.CONCLUSION,\n            score: 0,\n            entry: '',\n            readings: essay.readings.readingSections,\n            number: i,\n          })\n          conclusionEntryScore.push({\n            number: i,\n            readingSection: essay.readings.readingSections,\n            score: 0,\n            questionNumber: questionNo + 1,\n          })\n        }\n        i = i + 1\n      }\n      // console.log(answerEntryScore)\n      // console.log(conclusionEntryScore)\n    }\n\n    const totalAnswerScore = answerEntryScore\n      .map((a) => (a.score > 4 ? 4 : a.score))\n      .reduce((acc, i) => acc + i, 0)\n\n    const answerScoreAverage = totalAnswerScore / answerEntryScore.length\n\n    const totalConclusionScore = conclusionEntryScore\n      .map((a) => (a.score > 4 ? 4 : a.score))\n      .reduce((acc, i) => acc + i, 0)\n\n    const conclusionScoreAverage =\n      totalConclusionScore / conclusionEntryScore.length\n\n    const answerData = answerEntryScore.map(\n      // (entry) => entry.score + ' (' + entry.questionNumber + ')'\n      (entry) => entry.score,\n    )\n    const conclusionData = conclusionEntryScore.map(\n      // (entry) => entry.score + ' (' + entry.questionNumber + ')'\n      (entry) => entry.score,\n    )\n    // const individualEssayIds = answerEntryScore.map((i) => i.essayId)\n\n    return (\n      <SGOContainer>\n        <SGOTypeSwitchContainer>\n          <SGOTypeSwitch\n            selected={sgoSwitch === 'WRITING'}\n            onClick={() => setSgoSwitch('WRITING')}\n          >\n            Writing SGO\n          </SGOTypeSwitch>\n          <SGOTypeSwitch\n            selected={sgoSwitch === 'CONCLUSION'}\n            onClick={() => setSgoSwitch('CONCLUSION')}\n          >\n            Conclusion SGO\n          </SGOTypeSwitch>\n          <SGOTypeSwitch\n            selected={sgoSwitch === 'ESSAYS'}\n            onClick={() => setSgoSwitch('ESSAYS')}\n          >\n            Essays\n          </SGOTypeSwitch>\n        </SGOTypeSwitchContainer>\n        <div>\n          {sgoSwitch === 'WRITING' && (\n            <div style={{ overflow: 'scroll', height: '40vh' }}>\n              <button onClick={copyToClipBoard(answerData.toString())}>\n                Copy Data\n              </button>\n              <div>\n                {answerEntryScore.map((entry, i: number) => (\n                  <div key={i}>\n                    <div>\n                      Number {entry.number}: {entry.readingSection}\n                    </div>\n                    <div>{entry.score}</div>\n                  </div>\n                ))}\n              </div>\n              <div>{+answerScoreAverage.toFixed(2)}</div>\n              <br />\n            </div>\n          )}\n          {sgoSwitch === 'CONCLUSION' && (\n            <div style={{ overflow: 'scroll', height: '40vh' }}>\n              <button onClick={copyToClipBoard(conclusionData.toString())}>\n                Copy Data\n              </button>\n              <div>\n                {conclusionEntryScore.map((entry, i: number) => (\n                  <div key={i}>\n                    <div>\n                      Number {entry.number}: {entry.readingSection}\n                    </div>\n                    <div>{entry.score}</div>\n                  </div>\n                ))}\n              </div>\n              <div>{+conclusionScoreAverage.toFixed(2)}</div>\n              <br />\n            </div>\n          )}\n          {sgoSwitch === 'ESSAYS' && (\n            <div style={{ overflow: 'scroll', height: '40vh' }}>\n              <Essays essays={essayEntryList} />\n            </div>\n          )}\n        </div>\n      </SGOContainer>\n    )\n  } else return <div>Loading </div>\n}\n","import { Machine, assign } from 'xstate'\nimport { findAllStudentsForStudentInformation_findAllStudents_students } from '../../../../../schemaTypes'\n\nexport type studentInformationMachineSchema = {\n  states: {\n    nameSelect: {}\n    information: {\n      states: {\n        studentInfo: {}\n        assignments: {\n          states: {\n            essays: {}\n            readingGuides: {}\n            articleReviews: {}\n            quizzes: {}\n            sgo: {}\n          }\n        }\n        protocols: {}\n        conduct: {}\n        contacts: {}\n      }\n    }\n  }\n}\nexport type studentInformationMachineEvent =\n  | { type: 'STUDENT_INFO' }\n  | { type: 'ASSIGNMENTS' }\n  | { type: 'PROTOCOLS' }\n  | { type: 'CONDUCT' }\n  | { type: 'CONTACTS' }\n  | { type: 'READING_GUIDES' }\n  | { type: 'ESSAYS' }\n  | { type: 'QUIZZES' }\n  | { type: 'ARTICLE_REVIEWS' }\n  | {\n      type: 'UPDATE_STUDENT'\n      payload: findAllStudentsForStudentInformation_findAllStudents_students\n    }\n  | { type: 'SGO' }\n  | {\n      type: 'SET_STUDENT'\n      payload: findAllStudentsForStudentInformation_findAllStudents_students\n    }\n\nexport type studentInformationMachineContext = {\n  student: findAllStudentsForStudentInformation_findAllStudents_students | null\n}\n\nexport const studentInformationMachine = Machine<\n  studentInformationMachineContext,\n  studentInformationMachineSchema,\n  studentInformationMachineEvent\n>({\n  id: 'studentInformation',\n  initial: 'nameSelect',\n  context: {\n    student: null,\n  },\n  type: 'parallel',\n  states: {\n    nameSelect: {\n      on: {\n        SET_STUDENT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              student: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    information: {\n      initial: 'studentInfo',\n      states: {\n        studentInfo: {\n          on: {\n            ASSIGNMENTS: 'assignments',\n            CONTACTS: 'contacts',\n            PROTOCOLS: 'protocols',\n            CONDUCT: 'conduct',\n            UPDATE_STUDENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  student: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        assignments: {\n          initial: 'essays',\n          states: {\n            essays: {\n              on: {\n                STUDENT_INFO: '#studentInformation.information.studentInfo',\n                CONTACTS: '#studentInformation.information.contacts',\n                PROTOCOLS: '#studentInformation.information.protocols',\n                CONDUCT: '#studentInformation.information.conduct',\n                READING_GUIDES: 'readingGuides',\n                ARTICLE_REVIEWS: 'articleReviews',\n                QUIZZES: 'quizzes',\n                SGO: 'sgo',\n              },\n            },\n            readingGuides: {\n              on: {\n                STUDENT_INFO: '#studentInformation.information.studentInfo',\n                CONTACTS: '#studentInformation.information.contacts',\n                PROTOCOLS: '#studentInformation.information.protocols',\n                CONDUCT: '#studentInformation.information.conduct',\n                ESSAYS: 'essays',\n                ARTICLE_REVIEWS: 'articleReviews',\n                QUIZZES: 'quizzes',\n                SGO: 'sgo',\n              },\n            },\n            articleReviews: {\n              on: {\n                STUDENT_INFO: '#studentInformation.information.studentInfo',\n                CONTACTS: '#studentInformation.information.contacts',\n                PROTOCOLS: '#studentInformation.information.protocols',\n                CONDUCT: '#studentInformation.information.conduct',\n                READING_GUIDES: 'readingGuides',\n                ESSAYS: 'essays',\n                QUIZZES: 'quizzes',\n                SGO: 'sgo',\n              },\n            },\n            quizzes: {\n              on: {\n                STUDENT_INFO: '#studentInformation.information.studentInfo',\n                CONTACTS: '#studentInformation.information.contacts',\n                PROTOCOLS: '#studentInformation.information.protocols',\n                CONDUCT: '#studentInformation.information.conduct',\n                READING_GUIDES: 'readingGuides',\n                ARTICLE_REVIEWS: 'articleReviews',\n                ESSAYS: 'essays',\n                SGO: 'sgo',\n              },\n            },\n            sgo: {\n              on: {\n                STUDENT_INFO: '#studentInformation.information.studentInfo',\n                CONTACTS: '#studentInformation.information.contacts',\n                PROTOCOLS: '#studentInformation.information.protocols',\n                CONDUCT: '#studentInformation.information.conduct',\n                READING_GUIDES: 'readingGuides',\n                ARTICLE_REVIEWS: 'articleReviews',\n                ESSAYS: 'essays',\n                QUIZZES: 'quizzes',\n              },\n            },\n          },\n        },\n        protocols: {\n          on: {\n            ASSIGNMENTS: 'assignments',\n            STUDENT_INFO: 'studentInfo',\n            CONTACTS: 'contacts',\n            CONDUCT: 'conduct',\n          },\n        },\n        conduct: {\n          on: {\n            ASSIGNMENTS: 'assignments',\n            STUDENT_INFO: 'studentInfo',\n            CONTACTS: 'contacts',\n            PROTOCOLS: 'protocols',\n          },\n        },\n        contacts: {\n          on: {\n            ASSIGNMENTS: 'assignments',\n            STUDENT_INFO: 'studentInfo',\n            PROTOCOLS: 'protocols',\n            CONDUCT: 'conduct',\n          },\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  studentInformationMachine,\n  studentInformationMachineContext,\n  studentInformationMachineEvent,\n} from './studentInformationMachine'\n\nconst StudentInformationContext = createContext<any>(undefined)\n\ntype StudentInformationContextProps = {\n  children: ReactNode\n}\n\nexport const StudentInformationContextProvider: FC<\n  StudentInformationContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(studentInformationMachine)\n  return (\n    <StudentInformationContext.Provider value={[state, event]}>\n      {children}\n    </StudentInformationContext.Provider>\n  )\n}\n\nexport function useStudentInformationContextProvider() {\n  const context = useContext(StudentInformationContext)\n  if (context === undefined) {\n    throw new Error(\n      'useStudentInformationContextProvider must be used within a StudentInformationContextProvider',\n    )\n  }\n  return context as [\n    State<\n      studentInformationMachineContext,\n      studentInformationMachineEvent,\n      any,\n      any\n    >,\n    (event: studentInformationMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\n\nexport const VirtualProtocolContainer = styled.div`\n  overflow: scroll;\n`\nexport const AssignmentControlPanelContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 5fr;\n  height: 100%;\n`\nexport const HomeworkAssingerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  /* grid-template-rows: 1fr 5fr; */\n  height: 100%;\n`\n\nexport const HomeworkAssignerTitleContainer = styled.div`\n  /* grid-column: 1 / span 2; */\n  font-size: 4vh;\n  align-self: center;\n  justify-self: center;\n`\nexport const AssignmentControlSelector = styled.div`\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  font-size: 3vh;\n  justify-items: center;\n  align-items: center;\n  background-color: var(--blue);\n  color: var(--white);\n`\nexport const AssignmentControlItem = styled.div`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nexport const AssignmentBlockContainer = styled.div`\n  align-self: center;\n  justify-self: center;\n  font-size: 2.2vh;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const TextStyle = styled.div`\n  align-self: center;\n  justify-self: center;\n  text-decoration: underline;\n`\nexport const ResponseStyle = styled.div`\n  align-self: center;\n  justify-self: center;\n`\n\nexport type AssignButtonType = {\n  called: boolean\n}\nexport const AssignButton = styled.button<AssignButtonType>`\n  background-color: ${({ called }) => (called ? 'var(--grey)' : 'var(--blue)')};\n  color: ${({ called }) => (called ? 'var(--blue)' : 'var(--white)')};\n`\n\nexport const QuizControlPanelContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  grid-template-columns: 1fr;\n  height: 55vh;\n`\n\nexport const QuizNameContainer = styled.div`\n  grid-column: 1 / span 2;\n  font-size: 2.5vh;\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const AssignAllQuizzesButton = styled.button`\n  background-color: var(--blue);\n  color: var(--white);\n  width: 15vh;\n  border-radius: 5px;\n  font-size: 2vh;\n`\n\nexport type IndividualQuizContainerProps = { grey: boolean }\n\nexport const IndividualQuizContainer = styled.div<IndividualQuizContainerProps>`\n  background-color: ${({ grey }) => (grey ? 'var(--grey)' : 'var(--white')};\n`\nexport const IndividualQuizControlContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  width: 100%;\n`\n\nexport const QuizStatusIndicator = styled.div`\n  justify-self: left;\n`\n\nexport type AssignQuizButtonProps = { assigned: boolean }\n\n// export const AssignQuizButton = styled.button<AssignQuizButtonProps>`\n//   background-color: ${({ assigned }) =>\n//     assigned ? 'var(--red)' : 'var(--blue'};\n//   color: ;\n// `\n\nexport const ReadingGuideReviewContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 10fr 1fr;\n  height: 50vh;\n  justify-items: center;\n  align-items: center;\n`\nexport const ReadingGuideControlArrowContainer = styled.div`\n  font-size: 5vh;\n  cursor: pointer;\n  /* height */\n`\n","import { gql, useMutation } from '@apollo/client'\nimport React, { useEffect } from 'react'\nimport {\n  activateQuizVariables,\n  activateQuiz,\n  findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes,\n  unAssignQuizByQuizIdVariables,\n  unAssignQuizByQuizId,\n  forceFinishQuizVariables,\n  forceFinishQuiz,\n  markExemptVariables,\n  markExempt,\n} from '../../../../../../../schemaTypes'\nimport { ACTIVATE_QUIZ_MUTATION } from '../../../../../student/assignments/quizzes/QuizSelect'\nimport { MARK_EXEMPT_MUTATION } from '../../../../../student/assignments/StudentAssignments'\nimport {\n  IndividualQuizControlContainer,\n  QuizStatusIndicator,\n} from '../../../styles/mainScreenStyles'\nimport { ASSIGN_QUIZZES_MUTATION } from './QuizControlPanel'\n\nexport type IndividualQuizControlProps = {\n  quiz: findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes\n  presentStudentList: string[]\n}\n\nexport const UNASSIGN_QUIZ_MUTATION = gql`\n  mutation unAssignQuizByQuizId($input: UnAssignQuizByQuizIdInput!) {\n    unAssignQuizByQuizId(input: $input) {\n      unAssigned\n    }\n  }\n`\n\nexport const FORCE_FINISH_QUIZ_MUTATION = gql`\n  mutation forceFinishQuiz($input: ForceFinishQuizInput!) {\n    forceFinishQuiz(input: $input) {\n      finished\n    }\n  }\n`\nexport const IndividualQuizControl = ({\n  quiz,\n  presentStudentList,\n}: IndividualQuizControlProps) => {\n  const [activateQuiz] = useMutation<activateQuiz, activateQuizVariables>(\n    ACTIVATE_QUIZ_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [],\n    },\n  )\n  const [unAssignQuiz] = useMutation<\n    unAssignQuizByQuizId,\n    unAssignQuizByQuizIdVariables\n  >(UNASSIGN_QUIZ_MUTATION, {\n    variables: { input: { quizId: quiz._id! } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n\n  const [forceFinishQuiz] = useMutation<\n    forceFinishQuiz,\n    forceFinishQuizVariables\n  >(FORCE_FINISH_QUIZ_MUTATION, {\n    variables: { input: { quizId: quiz._id! } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n\n  const [markExempt] = useMutation<markExempt, markExemptVariables>(\n    MARK_EXEMPT_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findQuizzesForCourseByAssignedDate'],\n    },\n  )\n\n  useEffect(() => {\n    if (!presentStudentList.includes(quiz.hasOwner._id!)) {\n      unAssignQuiz()\n      markExempt({\n        variables: { input: { assignmentId: quiz._id!, exemptStatus: true } },\n      })\n    }\n  }, [presentStudentList])\n\n  const score = quiz.score.earnedPoints / quiz.score.maxPoints\n  const notStarted = !quiz.startedQuiz && !quiz.finishedQuiz && !quiz.isActive\n\n  return (\n    <IndividualQuizControlContainer>\n      <QuizStatusIndicator>\n        {notStarted ? (\n          'Not Started'\n        ) : quiz.isActive ? (\n          <div\n            style={{\n              display: 'grid',\n              gridAutoFlow: 'column',\n              columnGap: '3vh',\n            }}\n          >\n            <div>Active</div>\n            <button\n              style={{\n                display: 'grid',\n                justifySelf: 'center',\n                backgroundColor: 'var(--red)',\n                color: 'var(--white)',\n                borderRadius: '5px',\n                width: '100%',\n              }}\n              onClick={() => forceFinishQuiz()}\n            >\n              Finish\n            </button>\n          </div>\n        ) : quiz.finishedQuiz ? (\n          <div>Finished {(score * 100).toFixed(2)}%</div>\n        ) : (\n          'Suspended'\n        )}\n      </QuizStatusIndicator>\n\n      {!quiz.isActive && !quiz.finishedQuiz && !notStarted && (\n        <>\n          <button\n            style={\n              !quiz.isActive\n                ? {\n                    backgroundColor: 'var(--red)',\n                    color: 'var(--white)',\n                    borderRadius: '5px',\n                    width: '80%',\n                    display: 'grid',\n                    justifySelf: 'center',\n                  }\n                : {\n                    backgroundColor: 'var(--blue)',\n                    color: 'var(--white)',\n                    borderRadius: '5px',\n                    width: '80%',\n                    display: 'grid',\n                    justifySelf: 'center',\n                  }\n            }\n            onClick={() =>\n              activateQuiz({\n                variables: {\n                  input: {\n                    activate: true,\n                    quizId: quiz._id!,\n                  },\n                },\n              })\n            }\n          >\n            Reactivate\n          </button>\n          <button\n            style={{\n              display: 'grid',\n              justifySelf: 'center',\n              backgroundColor: 'var(--red)',\n              color: 'var(--white)',\n              borderRadius: '5px',\n              width: '80%',\n            }}\n            onClick={() => forceFinishQuiz()}\n          >\n            Finish\n          </button>\n        </>\n      )}\n      {quiz.assigned && notStarted && (\n        <button\n          style={\n            quiz.assigned\n              ? {\n                  backgroundColor: 'var(--red)',\n                  color: 'var(--white)',\n                  borderRadius: '5px',\n                  width: '100%',\n                }\n              : {\n                  backgroundColor: 'var(--blue)',\n                  color: 'var(--white)',\n                  borderRadius: '5px',\n                  width: '100%',\n                }\n          }\n          onClick={() => unAssignQuiz()}\n        >\n          Unassign\n        </button>\n      )}\n    </IndividualQuizControlContainer>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React from 'react'\nimport {\n  assignQuizzesByStudentIdsAndDate,\n  assignQuizzesByStudentIdsAndDateVariables,\n  findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes,\n  markExemptVariables,\n  markExempt,\n} from '../../../../../../../schemaTypes'\nimport { MARK_EXEMPT_MUTATION } from '../../../../../student/assignments/StudentAssignments'\nimport {\n  AssignAllQuizzesButton,\n  QuizControlPanelContainer,\n  QuizNameContainer,\n} from '../../../styles/mainScreenStyles'\nimport { IndividualQuizControl } from './IndividualQuizControl'\n\nexport type QuizControlPanelProps = {\n  quizzes: findQuizzesForCourseByAssignedDate_findQuizzesForCourseByAssignedDate_quizzes[]\n  presentStudentList: string[]\n}\n\nexport const ASSIGN_QUIZZES_MUTATION = gql`\n  mutation assignQuizzesByStudentIdsAndDate(\n    $input: AssignQuizzesByStudentIdsAndDateInput!\n  ) {\n    assignQuizzesByStudentIdsAndDate(input: $input) {\n      quizzes {\n        _id\n      }\n    }\n  }\n`\n\nexport const QuizControlPanel = ({\n  quizzes,\n  presentStudentList,\n}: QuizControlPanelProps) => {\n  const [assignQuizzes] = useMutation<\n    assignQuizzesByStudentIdsAndDate,\n    assignQuizzesByStudentIdsAndDateVariables\n  >(ASSIGN_QUIZZES_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findQuizzesForCourseByAssignedDate'],\n  })\n  const allQuizzesAssigned = quizzes.every((quiz) => quiz.assigned)\n\n  const [markExempt] = useMutation<markExempt, markExemptVariables>(\n    MARK_EXEMPT_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findQuizzesForCourseByAssignedDate'],\n    },\n  )\n\n  // const totalEarnedPoints =\n  //   quizzes &&\n  //   quizzes\n  //     .filter((q) => q.finishedQuiz)\n  //     .map((q) => q.score.earnedPoints)\n  //     .reduce((a, i) => a + i, 0)\n  // const totalMaxPoints =\n  //   quizzes &&\n  //   quizzes\n  //     .filter((q) => q.finishedQuiz)\n  //     .map((q) => q.score.maxPoints)\n  //     .reduce((a, i) => a + i, 0)\n  // if (totalEarnedPoints !== 0 && totalMaxPoints !== 0) {\n  //   const totalScore = totalEarnedPoints / totalMaxPoints\n  //   console.log(totalScore)\n  // }\n  return (\n    <QuizControlPanelContainer>\n      <QuizNameContainer>\n        <div>\n          {quizzes[0].readings.readingSections + ' '} <br />\n          Quiz Average:\n          {/*{' ' + (totalScore * 100).toFixed(2)}%*/}\n        </div>\n        <AssignAllQuizzesButton\n          onClick={() =>\n            assignQuizzes({\n              variables: {\n                input: {\n                  assignedDate: new Date().toLocaleDateString(),\n                  studentIds: presentStudentList,\n                  assign: true,\n                },\n              },\n            })\n          }\n        >\n          Assign\n        </AssignAllQuizzesButton>\n      </QuizNameContainer>\n\n      <div style={{ overflow: 'scroll' }}>\n        {quizzes.map((quiz, i) => (\n          <div\n            key={i}\n            style={{\n              backgroundColor: i % 2 === 0 ? 'var(--grey)' : 'var(--white)',\n              display: 'grid',\n              gridTemplateColumns: '3fr 1fr',\n              height: '8%',\n              justifyItems: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <div style={{ justifySelf: 'left' }}>\n              {quiz.hasOwner.lastName}, {quiz.hasOwner.firstName}\n            </div>\n            {quiz.assigned || quiz.finishedQuiz ? (\n              <IndividualQuizControl\n                quiz={quiz}\n                presentStudentList={presentStudentList}\n              />\n            ) : (\n              <div\n                style={{\n                  display: 'grid',\n                  gridAutoFlow: 'column',\n                  columnGap: '2vh',\n                  justifyItems: 'center',\n                }}\n              >\n                <button\n                  style={\n                    quiz.assigned\n                      ? {\n                          backgroundColor: 'var(--red)',\n                          color: 'var(--white)',\n                          borderRadius: '5px',\n                          width: '100%',\n                        }\n                      : {\n                          backgroundColor: 'var(--blue)',\n                          color: 'var(--white)',\n                          borderRadius: '5px',\n                          width: '100%',\n                        }\n                  }\n                  onClick={() =>\n                    assignQuizzes({\n                      variables: {\n                        input: {\n                          assignedDate: new Date().toLocaleDateString(),\n                          // assignedDate: '10/17/2021',\n                          studentIds: [quiz.hasOwner._id!],\n                          assign: true,\n                        },\n                      },\n                    })\n                  }\n                >\n                  Assign\n                </button>\n                <button\n                  style={\n                    quiz.assigned\n                      ? {\n                          backgroundColor: 'var(--red)',\n                          color: 'var(--white)',\n                          borderRadius: '5px',\n                          width: '100%',\n                        }\n                      : {\n                          backgroundColor: 'var(--blue)',\n                          color: 'var(--white)',\n                          borderRadius: '5px',\n                          width: '100%',\n                        }\n                  }\n                  onClick={() =>\n                    markExempt({\n                      variables: {\n                        input: {\n                          assignmentId: quiz._id!,\n                          exemptStatus: !quiz.exempt,\n                        },\n                      },\n                    })\n                  }\n                >\n                  {quiz.exempt ? 'Not Exempt' : 'Exempt'}\n                </button>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </QuizControlPanelContainer>\n  )\n}\n","import { useMutation } from '@apollo/client'\nimport {\n  activateQuizVariables,\n  findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz,\n  unAssignQuizByQuizId,\n  unAssignQuizByQuizIdVariables,\n  activateQuiz,\n  assignQuizzesByStudentIdsAndDate,\n  assignQuizzesByStudentIdsAndDateVariables,\n} from '../../../../../schemaTypes'\nimport { ACTIVATE_QUIZ_MUTATION } from '../../../student/assignments/quizzes/QuizSelect'\nimport { UNASSIGN_QUIZ_MUTATION } from '../../teachers-aid/main-screen/homework-assigner/assign-quizzes/IndividualQuizControl'\nimport { ASSIGN_QUIZZES_MUTATION } from '../../teachers-aid/main-screen/homework-assigner/assign-quizzes/QuizControlPanel'\nimport { IndividualAssignmentDisplay } from '../state-n-styles/studentInformationStyles'\n\nexport type QuizInfoProps = {\n  quiz: findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz\n  i: number\n  numberOfQuizzesTotal: number\n}\n\nexport const QuizInfo = ({ quiz, i, numberOfQuizzesTotal }: QuizInfoProps) => {\n  const [unAssignQuiz] = useMutation<\n    unAssignQuizByQuizId,\n    unAssignQuizByQuizIdVariables\n  >(UNASSIGN_QUIZ_MUTATION, {\n    variables: { input: { quizId: quiz._id! } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findAssignmentByStudentId'],\n  })\n  const [activateQuiz] = useMutation<activateQuiz, activateQuizVariables>(\n    ACTIVATE_QUIZ_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findAssignmentByStudentId'],\n    },\n  )\n  const [assignQuizzes] = useMutation<\n    assignQuizzesByStudentIdsAndDate,\n    assignQuizzesByStudentIdsAndDateVariables\n  >(ASSIGN_QUIZZES_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findAssignmentByStudentId'],\n  })\n\n  return (\n    <>\n      <IndividualAssignmentDisplay\n        key={quiz._id}\n        everyOtherLine={i % 2 === 0}\n        lastLine={numberOfQuizzesTotal === i}\n      >\n        <div>{quiz.readings.readingSections}</div>\n        {quiz.exempt ? (\n          <div>Exempt</div>\n        ) : quiz.finishedQuiz ? (\n          <div>\n            {quiz.score.earnedPoints}/{quiz.score.maxPoints}{' '}\n            {((quiz.score.earnedPoints / quiz.score.maxPoints) * 100).toFixed(\n              2,\n            )}\n            %\n          </div>\n        ) : (\n          <div>\n            {!quiz.isActive && quiz.startedQuiz && (\n              <button\n                onClick={() =>\n                  activateQuiz({\n                    variables: { input: { activate: true, quizId: quiz._id! } },\n                  })\n                }\n              >\n                Suspended\n              </button>\n            )}\n            {!quiz.startedQuiz && (\n              <button\n                onClick={() =>\n                  assignQuizzes({\n                    variables: {\n                      input: {\n                        assign: true,\n                        studentIds: [quiz.hasOwner._id!],\n                        assignedDate: quiz.assignedDate,\n                      },\n                    },\n                  })\n                }\n              >\n                Start\n              </button>\n            )}\n            {quiz.startedQuiz && quiz.isActive && <div>Active</div>}\n          </div>\n        )}\n      </IndividualAssignmentDisplay>\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport {\n  MarkingPeriodContextProvider,\n  useMarkingPeriodContextProvider,\n} from '../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport {\n  findAssignmentByStudentId,\n  findAssignmentByStudentIdVariables,\n  findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { SGOInfo } from '../sgo-info/SGOInfo'\nimport { useStudentInformationContextProvider } from '../state-n-styles/StudentInformationContext'\nimport {\n  AssignmentInformationAssignmentSwitchContainer,\n  AssignmentInformationContainer,\n  AssignmentInformationContainerHeader,\n  AssignmentInformationDisplayContainer,\n  AssignmentInformationStyle,\n  AssignmentSwitch,\n  IndividualAssignmentDisplay,\n} from '../state-n-styles/studentInformationStyles'\nimport { QuizInfo } from './QuizInfo'\n\nexport type AssignmentInformationProps = {\n  studentId: string\n  selectedMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const FIND_ASSINGMENT_INFORMATION_QUERY = gql`\n  query findAssignmentByStudentId($input: FindAssignmentByStudentIdInput!) {\n    findAssignmentByStudentId(input: $input) {\n      assignments {\n        _id\n        assigned\n        readings {\n          readingSections\n        }\n        score {\n          earnedPoints\n          maxPoints\n        }\n        exempt\n        dueDate\n        dueTime\n        assignedDate\n        gradeType\n        hasOwner {\n          _id\n          firstName\n          lastName\n        }\n        markingPeriod\n        ... on Essay {\n          finalDraft {\n            returned\n            submitted\n            submittedFinalDraft {\n              graded\n              rubricEntries {\n                rubricSection\n                score\n              }\n            }\n          }\n        }\n        ... on ReadingGuide {\n          completed\n          graded\n          readingGuideFinal {\n            submitted\n          }\n        }\n        ... on Quiz {\n          finishedQuiz\n          isActive\n          startedQuiz\n          finishedQuiz\n        }\n      }\n      articleReviews {\n        _id\n        score {\n          earnedPoints\n          maxPoints\n        }\n        assignedDate\n        exempt\n        submitted\n        markingPeriod\n        dueDate\n        dueTime\n      }\n    }\n  }\n`\n\nexport const AssignmentInformation = ({\n  studentId,\n  selectedMarkingPeriod,\n}: AssignmentInformationProps) => {\n  const [state, event] = useStudentInformationContextProvider()\n  const { loading, data } = useQuery<\n    findAssignmentByStudentId,\n    findAssignmentByStudentIdVariables\n  >(FIND_ASSINGMENT_INFORMATION_QUERY, {\n    variables: {\n      input: { studentId },\n    },\n    // onCompleted: (data) => console.log(data),\n    pollInterval: 5000,\n    onError: (error) => console.error(error),\n  })\n\n  const essays = data?.findAssignmentByStudentId.assignments.filter(\n    (assignment) =>\n      assignment.__typename === 'Essay' &&\n      assignment.markingPeriod === selectedMarkingPeriod,\n  )!\n  const readingGuides = data?.findAssignmentByStudentId.assignments.filter(\n    (assignment) =>\n      assignment.__typename === 'ReadingGuide' &&\n      assignment.markingPeriod === selectedMarkingPeriod,\n  )!\n  const quizzes = data?.findAssignmentByStudentId.assignments.filter(\n    (assignment) =>\n      assignment.__typename === 'Quiz' &&\n      assignment.markingPeriod === selectedMarkingPeriod,\n  )! as findAssignmentByStudentId_findAssignmentByStudentId_assignments_Quiz[]\n\n  const articleReviews = data?.findAssignmentByStudentId.articleReviews.filter(\n    (review) => review.markingPeriod === selectedMarkingPeriod,\n  )!\n\n  const completedEssays = data?.findAssignmentByStudentId.assignments.filter(\n    (assignment) => assignment.__typename === 'Essay' && assignment.finalDraft,\n  )!\n\n  const allEssays = data?.findAssignmentByStudentId.assignments.filter(\n    (assignment) =>\n      (assignment.__typename === 'Essay' && assignment.finalDraft?.returned) ||\n      (assignment.__typename === 'Essay' &&\n        !assignment.exempt &&\n        !assignment.finalDraft &&\n        assignment.assigned &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)),\n  )\n\n  const allEssaysEarnedPointTotal =\n    allEssays?.length! > 0 &&\n    allEssays\n      ?.map((essay) => essay.score.earnedPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n\n  const allEssaysMaxPointTotal =\n    allEssays?.length! > 0 &&\n    allEssays\n      ?.map((essay) => essay.score.maxPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n\n  const overallEssayScoreCalculator = (\n    earnedPoints: number,\n    maxPoints: number,\n  ) => {\n    if (earnedPoints === 0 && maxPoints === 0) {\n      return 0\n    }\n    return (earnedPoints / maxPoints) * 4\n  }\n\n  const overallEssayScore = overallEssayScoreCalculator(\n    allEssaysEarnedPointTotal ? allEssaysEarnedPointTotal : 0,\n    allEssaysMaxPointTotal ? allEssaysMaxPointTotal : 0,\n  )\n  // console.log(state.value)\n  if (loading) return <div>Loading </div>\n  return (\n    <AssignmentInformationContainer>\n      <AssignmentInformationAssignmentSwitchContainer>\n        <AssignmentSwitch\n          selected={state.matches('information.assignments.essays')}\n          onClick={() => event({ type: 'ESSAYS' })}\n        >\n          Essays\n        </AssignmentSwitch>\n        <AssignmentSwitch\n          selected={state.matches('information.assignments.readingGuides')}\n          onClick={() => event({ type: 'READING_GUIDES' })}\n        >\n          Reading Guides\n        </AssignmentSwitch>\n        <AssignmentSwitch\n          selected={state.matches('information.assignments.quizzes')}\n          onClick={() => event({ type: 'QUIZZES' })}\n        >\n          Quizzes\n        </AssignmentSwitch>\n        <AssignmentSwitch\n          selected={state.matches('information.assignments.sgo')}\n          onClick={() => event({ type: 'SGO' })}\n        >\n          SGO Info\n        </AssignmentSwitch>\n        {/* <AssignmentSwitch\n          selected={state.matches('information.assignments.articleReviews')}\n          onClick={() => event({ type: 'ARTICLE_REVIEWS' })}\n        >\n          Article Reviews\n        </AssignmentSwitch> */}\n      </AssignmentInformationAssignmentSwitchContainer>\n\n      <AssignmentInformationDisplayContainer>\n        <AssignmentInformationContainerHeader>\n          <div>Assignment Title</div>\n          <div>Grade</div>\n        </AssignmentInformationContainerHeader>\n\n        {state.matches('information.assignments.essays') && (\n          <AssignmentInformationStyle>\n            {essays.map((essay, i: number) => (\n              <IndividualAssignmentDisplay\n                key={essay._id}\n                everyOtherLine={i % 2 === 0}\n                lastLine={essays.length - 1 === i}\n              >\n                <div>{essay.readings.readingSections}</div>\n                {essay.__typename === 'Essay' &&\n                essay.finalDraft &&\n                essay.finalDraft.returned ? (\n                  <div>\n                    {essay.score.earnedPoints}/{essay.score.maxPoints}\n                  </div>\n                ) : essay.__typename === 'Essay' &&\n                  essay.finalDraft &&\n                  !essay.finalDraft.returned &&\n                  essay.finalDraft.submittedFinalDraft.length > 1 ? (\n                  <div>\n                    {essay.score.earnedPoints}/{essay.score.maxPoints}\n                  </div>\n                ) : essay.__typename === 'Essay' &&\n                  essay.finalDraft &&\n                  !essay.finalDraft.returned ? (\n                  <div>Pending</div>\n                ) : essay.exempt ? (\n                  <div>Exempt</div>\n                ) : !essay.assigned ? (\n                  <div>Unassigned</div>\n                ) : Date.parse(new Date().toLocaleString()) <\n                  Date.parse(`${essay.dueDate}, ${essay.dueTime}`) ? (\n                  <div>Due on {essay.dueDate}</div>\n                ) : (\n                  <div>Missing</div>\n                )}\n              </IndividualAssignmentDisplay>\n            ))}\n            <div>Overall Essay Score (FY): {overallEssayScore}</div>\n          </AssignmentInformationStyle>\n        )}\n        {state.matches('information.assignments.readingGuides') && (\n          <AssignmentInformationStyle>\n            {readingGuides.map((guide, i: number) => (\n              <IndividualAssignmentDisplay\n                key={guide._id}\n                everyOtherLine={i % 2 === 0}\n                lastLine={readingGuides.length - 1 === i}\n              >\n                <div>{guide.readings.readingSections}</div>\n                {guide.__typename === 'ReadingGuide' &&\n                guide.readingGuideFinal &&\n                guide.graded ? (\n                  <div>\n                    {guide.score.earnedPoints}/{guide.score.maxPoints}\n                  </div>\n                ) : guide.exempt ? (\n                  <div>Exempt</div>\n                ) : !guide.assigned ? (\n                  <div>Unassigned</div>\n                ) : Date.parse(new Date().toLocaleString()) <\n                  Date.parse(`${guide.dueDate}, ${guide.dueTime}`) ? (\n                  <div>Due on {guide.dueDate}</div>\n                ) : (\n                  <div>Missing</div>\n                )}\n              </IndividualAssignmentDisplay>\n            ))}\n          </AssignmentInformationStyle>\n        )}\n        {state.matches('information.assignments.quizzes') && (\n          <AssignmentInformationStyle>\n            {quizzes.map((quiz, i: number) => (\n              <QuizInfo\n                quiz={quiz}\n                i={i}\n                numberOfQuizzesTotal={quizzes.length}\n              />\n            ))}\n          </AssignmentInformationStyle>\n        )}\n        {state.matches('information.assignments.sgo') && (\n          <SGOInfo studentId={studentId!} />\n        )}\n        {/* {state.matches('information.assignments.articleReviews') && (\n          <AssignmentInformationStyle>\n            {articleReviews.map((review, i: number) => (\n              <IndividualAssignmentDisplay\n                key={review._id}\n                everyOtherLine={i % 2 === 0}\n                lastLine={articleReviews.length - 1 === i}\n              >\n                <div>{review.assignedDate}</div>\n                {review.submitted ? (\n                  <div>\n                    {review.score.earnedPoints}/{review.score.maxPoints}\n                  </div>\n                ) : (\n                  <div>Missing</div>\n                )}\n              </IndividualAssignmentDisplay>\n            ))}\n          </AssignmentInformationStyle>\n        )} */}\n      </AssignmentInformationDisplayContainer>\n    </AssignmentInformationContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { Dispatch, SetStateAction, useState } from 'react'\nimport {\n  findResponsibilityPointsByStudentId,\n  findResponsibilityPointsByStudentIdVariables,\n  findResponsibilityPointsByStudentId_findResponsibilityPointsByStudentId_responsibilityPoints,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { MarkingPeriodSelectorSwitch } from '../../../../reusable-components/MarkingPeriodSelectorSwitch'\n\nexport type ResponsibilityPointsDisplayProps = {\n  available: boolean\n  currentMarkingPeriodResponsiblityPoints: (number | undefined) | number\n}\n\nexport const RESPONSIBILITY_POINTS_QUERY = gql`\n  query findResponsibilityPointsByStudentId(\n    $input: FindResponsibilityPointsByStudentIdInput!\n  ) {\n    findResponsibilityPointsByStudentId(input: $input) {\n      responsibilityPoints {\n        responsibilityPoints\n        markingPeriod\n      }\n    }\n  }\n`\n\nexport const ResponsibilityPointsDisplay = ({\n  currentMarkingPeriodResponsiblityPoints,\n  available,\n}: ResponsibilityPointsDisplayProps) => {\n  return (\n    <div>\n      <div>Responsibility Points</div>\n      <div>\n        {available\n          ? currentMarkingPeriodResponsiblityPoints\n          : 'No points assigned '}\n      </div>\n    </div>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React from 'react'\nimport { FIND_ASSINGMENT_INFORMATION_QUERY } from '../components/dashboard/teacher/student-information/assignments/AssignmentInformation'\nimport { RESPONSIBILITY_POINTS_QUERY } from '../components/dashboard/teacher/student-information/general-student-information/ResponsibilityPointsDisplay'\nimport {\n  findAssignmentByStudentId,\n  findAssignmentByStudentIdVariables,\n  findResponsibilityPointsByStudentId,\n  findResponsibilityPointsByStudentIdVariables,\n  GradeTypeEnum,\n  MarkingPeriodEnum,\n} from '../schemaTypes'\nimport {\n  primaryGradeCalculator,\n  secondaryGradeCalculator,\n  supportiveGradeCalculator,\n  totalGrade,\n} from '../utils'\n\ntype GradeCalculatorProps = {\n  studentId: string\n  markingPeriod: MarkingPeriodEnum\n  polling: boolean\n  pollInterval?: number\n}\n\nexport const useGradeCalculator = ({\n  studentId,\n  markingPeriod,\n  polling,\n  pollInterval,\n}: GradeCalculatorProps) => {\n  const { loading: assignmentLoading, data } = useQuery<\n    findAssignmentByStudentId,\n    findAssignmentByStudentIdVariables\n  >(FIND_ASSINGMENT_INFORMATION_QUERY, {\n    variables: {\n      input: { studentId },\n    },\n    // onCompleted: (data) => console.log('polling'),\n    pollInterval: polling ? pollInterval : 0,\n    onError: (error) => console.error(error),\n  })\n\n  const {\n    loading: responsibilityPointsLoading,\n    data: responsibilityPointsData,\n  } = useQuery<\n    findResponsibilityPointsByStudentId,\n    findResponsibilityPointsByStudentIdVariables\n  >(RESPONSIBILITY_POINTS_QUERY, {\n    variables: {\n      input: { studentId },\n    },\n    pollInterval: polling ? pollInterval : 0,\n    // onCompleted: (data) => console.log('polling'),\n    onError: (error) => console.error(error),\n  })\n\n  const essays = data?.findAssignmentByStudentId.assignments.some(\n    (assignment) =>\n      (assignment.__typename === 'Essay' &&\n        assignment.markingPeriod === markingPeriod &&\n        !assignment.exempt &&\n        assignment.finalDraft?.returned &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)) ||\n      (assignment.__typename === 'Essay' &&\n        !assignment.exempt &&\n        !assignment.finalDraft &&\n        assignment.markingPeriod === markingPeriod &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)),\n  )!\n\n  // const applicableArticleReviews =\n  //   data?.findAssignmentByStudentId.articleReviews &&\n  //   data?.findAssignmentByStudentId.articleReviews.some(\n  //     (assignment) => assignment.markingPeriod === markingPeriod\n  //   )\n\n  const secondaryGrades = data?.findAssignmentByStudentId.assignments.some(\n    (assignment) =>\n      assignment.gradeType === GradeTypeEnum.SECONDARY &&\n      assignment.markingPeriod === markingPeriod &&\n      !assignment.exempt &&\n      Date.parse(new Date().toLocaleString()) >\n        Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n  )\n\n  const applicableCurrentMarkingPeriodResponsiblityPoints =\n    responsibilityPointsData?.findResponsibilityPointsByStudentId.responsibilityPoints.some(\n      (points) => points.markingPeriod === markingPeriod,\n    )!\n\n  if (!assignmentLoading && !responsibilityPointsLoading) {\n    if (\n      !applicableCurrentMarkingPeriodResponsiblityPoints &&\n      essays &&\n      secondaryGrades\n    ) {\n      // Grade Category Weights:// Grade Category Weights: Primary = .588 Secondary = .412\n      console.log('Only Primary and Secondary')\n      const applicableEssays =\n        data?.findAssignmentByStudentId.assignments.filter(\n          (assignment) =>\n            (assignment.__typename === 'Essay' &&\n              assignment.finalDraft?.returned &&\n              assignment.markingPeriod === markingPeriod) ||\n            (assignment.__typename === 'Essay' &&\n              !assignment.exempt &&\n              !assignment.finalDraft &&\n              assignment.markingPeriod === markingPeriod &&\n              Date.parse(new Date().toLocaleString()) >\n                Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)),\n        )\n\n      const essayEarnedPoints = applicableEssays\n        ?.map((essay) => essay.score.earnedPoints)\n        .reduce((acc: number, i: number) => acc + i)!\n\n      const essayMaxPoints = applicableEssays\n        ?.map((essay) => essay.score.maxPoints)\n        .reduce((acc: number, i: number) => acc + i)!\n\n      const secondaryGradeAssignments =\n        secondaryGrades &&\n        data?.findAssignmentByStudentId.assignments.filter(\n          (assignment) =>\n            assignment.gradeType === GradeTypeEnum.SECONDARY &&\n            assignment.markingPeriod === markingPeriod &&\n            !assignment.exempt &&\n            Date.parse(new Date().toLocaleString()) >\n              Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n        )\n\n      const secondaryGradesEarnedPoints = secondaryGradeAssignments\n        ?.map((review) => review.score.earnedPoints)\n        .reduce((acc: number, i: number) => acc + i)!\n\n      const secondaryGradesMaxPoints = secondaryGradeAssignments\n        ?.map((review) => review.score.maxPoints)\n        .reduce((acc: number, i: number) => acc + i)!\n\n      const primaryGrade = (earnedPoints: number, maxPoints: number) => {\n        return (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) * 60\n      }\n      const primary = primaryGrade(essayEarnedPoints, essayMaxPoints)\n\n      const secondaryGrade = (earnedPoints: number, maxPoints: number) => {\n        return (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) * 40\n      }\n\n      const secondary = secondaryGrade(\n        secondaryGradesEarnedPoints,\n        secondaryGradesMaxPoints,\n      )\n\n      const gradeTotal = (primaryGrade: number, secondaryGrade: number) => {\n        const number = Number(\n          Number(primaryGrade) + Number(secondaryGrade),\n        ).toFixed(2)\n\n        return Math.round(Number(number) * 10) / 10\n      }\n\n      return {\n        grade: gradeTotal(primary, secondary),\n        loading: assignmentLoading || responsibilityPointsLoading,\n        noGrade: false,\n      }\n    }\n\n    if (\n      !essays &&\n      !secondaryGrades &&\n      applicableCurrentMarkingPeriodResponsiblityPoints\n    ) {\n      // Grade Category Weights: Supportive = 1\n      console.log('Only ResponsibilityPoints')\n      const currentMarkingPeriodResponsiblityPoints =\n        responsibilityPointsData?.findResponsibilityPointsByStudentId.responsibilityPoints.filter(\n          (points) => points.markingPeriod === markingPeriod,\n        )!\n\n      const points =\n        currentMarkingPeriodResponsiblityPoints[0].responsibilityPoints\n\n      return {\n        grade: (Math.round(1000 * points) / 1000) * 1,\n        loading: assignmentLoading || responsibilityPointsLoading,\n        noGrade: false,\n      }\n    }\n\n    if (\n      !applicableCurrentMarkingPeriodResponsiblityPoints &&\n      !essays &&\n      secondaryGrades\n    ) {\n      console.log('Only Secondary')\n      const secondaryGradeAssignments =\n        secondaryGrades &&\n        data?.findAssignmentByStudentId.assignments.filter(\n          (assignment) =>\n            assignment.gradeType === GradeTypeEnum.SECONDARY &&\n            assignment.markingPeriod === markingPeriod &&\n            !assignment.exempt &&\n            Date.parse(new Date().toLocaleString()) >\n              Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n        )\n\n      const secondaryGradesEarnedPoints = secondaryGradeAssignments\n        ?.map((review) => review.score.earnedPoints)\n        .reduce((acc: number, i: number) => acc + i, 0)!\n\n      const secondaryGradesMaxPoints = secondaryGradeAssignments\n        ?.map((review) => review.score.maxPoints)\n        .reduce((acc: number, i: number) => acc + i, 0)!\n      // const articleReviews =\n      //   data?.findAssignmentByStudentId.articleReviews &&\n      //   data?.findAssignmentByStudentId.articleReviews.filter(\n      //     (assignment) =>\n      //       assignment.markingPeriod === markingPeriod &&\n      //       Date.parse(new Date().toLocaleString()) >\n      //         Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)\n      //   )\n\n      // const articleReviewEarnedPoints = articleReviews\n      //   ?.map((review) => review.score.earnedPoints)\n      //   .reduce((acc: number, i: number) => acc + i)!\n\n      // const articleReviewMaxPoints = articleReviews\n      //   ?.map((review) => review.score.maxPoints)\n      //   .reduce((acc: number, i: number) => acc + i)!\n\n      const secondaryGrade = (earnedPoints: number, maxPoints: number) => {\n        return (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) * 100\n      }\n\n      return {\n        grade: +secondaryGrade(\n          secondaryGradesEarnedPoints,\n          secondaryGradesMaxPoints,\n        ).toFixed(2),\n        loading: assignmentLoading || responsibilityPointsLoading,\n        noGrade: false,\n      }\n    }\n\n    if (\n      !essays &&\n      secondaryGrades &&\n      applicableCurrentMarkingPeriodResponsiblityPoints\n    ) {\n      // Grade Category Weights: Supportive = .3  Secondary = .7\n      console.log('ResponsiblityPoints and Secondary Only')\n\n      const currentMarkingPeriodResponsiblityPoints =\n        responsibilityPointsData?.findResponsibilityPointsByStudentId.responsibilityPoints.filter(\n          (points) => points.markingPeriod === markingPeriod,\n        )!\n\n      const { responsibilityPoints } =\n        currentMarkingPeriodResponsiblityPoints[0]\n\n      const supportive = (Math.round(1000 * responsibilityPoints) / 1000) * 0.3\n\n      // const articleReviews =\n      //   data?.findAssignmentByStudentId.articleReviews &&\n      //   data?.findAssignmentByStudentId.articleReviews.filter(\n      //     (assignment) =>\n      //       assignment.markingPeriod === markingPeriod &&\n      //       Date.parse(new Date().toLocaleString()) >\n      //         Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)\n      //   )\n\n      // const articleReviewEarnedPoints = articleReviews\n      //   ?.map((review) => review.score.earnedPoints)\n      //   .reduce((acc: number, i: number) => acc + i)!\n\n      // const articleReviewMaxPoints = articleReviews\n      //   ?.map((review) => review.score.maxPoints)\n      //   .reduce((acc: number, i: number) => acc + i)!\n      const secondaryGradeAssignments =\n        secondaryGrades &&\n        data?.findAssignmentByStudentId.assignments.filter(\n          (assignment) =>\n            assignment.gradeType === GradeTypeEnum.SECONDARY &&\n            assignment.markingPeriod === markingPeriod &&\n            !assignment.exempt &&\n            Date.parse(new Date().toLocaleString()) >\n              Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n        )\n      console.log(secondaryGradeAssignments)\n      const secondaryGradesEarnedPoints = secondaryGradeAssignments\n        ?.map((review) => review.score.earnedPoints)\n        .reduce((acc: number, i: number) => acc + i, 0)!\n\n      const secondaryGradesMaxPoints = secondaryGradeAssignments\n        ?.map((review) => review.score.maxPoints)\n        .reduce((acc: number, i: number) => acc + i, 0)!\n\n      const secondaryGrade = (earnedPoints: number, maxPoints: number) => {\n        return (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) * 70\n      }\n\n      const secondary = secondaryGrade(\n        secondaryGradesEarnedPoints,\n        secondaryGradesMaxPoints,\n      )\n\n      const gradeTotal = (supportive: number, secondaryGrade: number) => {\n        const number = Number(\n          Number(supportive) + Number(secondaryGrade),\n        ).toFixed(2)\n\n        return Math.round(Number(number) * 10) / 10\n      }\n      return {\n        grade: gradeTotal(supportive, secondary),\n        loading: assignmentLoading || responsibilityPointsLoading,\n        noGrade: false,\n      }\n    }\n\n    if (\n      !secondaryGrades &&\n      essays &&\n      applicableCurrentMarkingPeriodResponsiblityPoints\n    ) {\n      // Grade Category Weights: Supportive = .23068182   Primary = .76931818\n      console.log('Only Essays and ResponsibilityPoints')\n      // console.log(data?.findAssignmentByStudentId.assignments)\n      const applicableEssays =\n        data?.findAssignmentByStudentId.assignments.filter(\n          (assignment) =>\n            (assignment.__typename === 'Essay' &&\n              assignment.finalDraft?.returned &&\n              assignment.markingPeriod === markingPeriod) ||\n            (assignment.__typename === 'Essay' &&\n              !assignment.exempt &&\n              !assignment.finalDraft &&\n              assignment.markingPeriod === markingPeriod &&\n              Date.parse(new Date().toLocaleString()) >\n                Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)),\n        )\n\n      const essayEarnedPoints = applicableEssays\n        ?.map((essay) => essay.score.earnedPoints)\n        .reduce((acc: number, i: number) => acc + i)!\n\n      const essayMaxPoints = applicableEssays\n        ?.map((essay) => essay.score.maxPoints)\n        .reduce((acc: number, i: number) => acc + i)!\n\n      const primaryGrade = (earnedPoints: number, maxPoints: number) => {\n        return (\n          (Math.round(1000 * (earnedPoints / maxPoints)) / 1000) * 76.931818\n        )\n      }\n\n      const primary = primaryGrade(essayEarnedPoints, essayMaxPoints)\n\n      const currentMarkingPeriodResponsiblityPoints =\n        responsibilityPointsData?.findResponsibilityPointsByStudentId.responsibilityPoints.filter(\n          (points) => points.markingPeriod === markingPeriod,\n        )!\n\n      const { responsibilityPoints } =\n        currentMarkingPeriodResponsiblityPoints[0]\n\n      const supportive =\n        (Math.round(1000 * responsibilityPoints) / 1000) * 0.23068182\n\n      const gradeTotal = (primaryGrade: number, supportiveGrade: number) => {\n        const number = Number(\n          Number(primaryGrade) + Number(supportiveGrade),\n        ).toFixed(2)\n\n        return Math.round(Number(number) * 10) / 10\n      }\n\n      return {\n        grade: gradeTotal(primary, supportive),\n        loading: assignmentLoading || responsibilityPointsLoading,\n        noGrade: false,\n      }\n    }\n    if (\n      !applicableCurrentMarkingPeriodResponsiblityPoints &&\n      !essays &&\n      !secondaryGrades\n    ) {\n      console.log('Nothing')\n      return { grade: 0, loading: false, noGrade: true }\n    }\n\n    const applicableEssays = data?.findAssignmentByStudentId.assignments.filter(\n      (assignment) =>\n        (assignment.__typename === 'Essay' &&\n          assignment.finalDraft?.returned &&\n          assignment.markingPeriod === markingPeriod) ||\n        (assignment.__typename === 'Essay' &&\n          !assignment.exempt &&\n          !assignment.finalDraft &&\n          assignment.markingPeriod === markingPeriod &&\n          Date.parse(new Date().toLocaleString()) >\n            Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)),\n    )\n    const secondaryGradeAssignments =\n      data?.findAssignmentByStudentId.assignments.filter(\n        (assignment) =>\n          assignment.gradeType === GradeTypeEnum.SECONDARY &&\n          assignment.markingPeriod === markingPeriod &&\n          !assignment.exempt &&\n          Date.parse(new Date().toLocaleString()) >\n            Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n      )\n\n    const essayEarnedPoints = applicableEssays\n      ?.map((essay) => essay.score.earnedPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n\n    const essayMaxPoints = applicableEssays\n      ?.map((essay) => essay.score.maxPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n\n    const essayGrade = primaryGradeCalculator(essayEarnedPoints, essayMaxPoints)\n\n    // const articleReviews =\n    //   data?.findAssignmentByStudentId.articleReviews &&\n    //   data?.findAssignmentByStudentId.articleReviews.filter(\n    //     (assignment) =>\n    //       assignment.markingPeriod === markingPeriod &&\n    //       Date.parse(new Date().toLocaleString()) >\n    //         Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)\n    //   )\n\n    // const articleReviewEarnedPoints = articleReviews\n    //   ?.map((review) => review.score.earnedPoints)\n    //   .reduce((acc: number, i: number) => acc + i)!\n\n    // const articleReviewMaxPoints = articleReviews\n    //   ?.map((review) => review.score.maxPoints)\n    //   .reduce((acc: number, i: number) => acc + i)!\n\n    const secondaryGradesEarnedPoints = secondaryGradeAssignments\n      ?.map((review) => review.score.earnedPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n\n    const secondaryGradesMaxPoints = secondaryGradeAssignments\n      ?.map((review) => review.score.maxPoints)\n      .reduce((acc: number, i: number) => acc + i)!\n    // console.log(secondaryGradeAssignments!)\n    const secondary = secondaryGradeCalculator(\n      secondaryGradesEarnedPoints,\n      secondaryGradesMaxPoints,\n    )\n\n    const currentMarkingPeriodResponsiblityPoints =\n      responsibilityPointsData?.findResponsibilityPointsByStudentId.responsibilityPoints.filter(\n        (points) => points.markingPeriod === markingPeriod,\n      )!\n\n    const responsibilityPointGrade =\n      currentMarkingPeriodResponsiblityPoints &&\n      supportiveGradeCalculator(\n        currentMarkingPeriodResponsiblityPoints[0].responsibilityPoints,\n      )\n    // console.log(essayGrade, articleReviewGrade, responsibilityPointGrade)\n    const grade = totalGrade(essayGrade, secondary, responsibilityPointGrade)\n    // console.log(new Date().toISOString().substring(17, 23))\n    return {\n      grade: grade,\n      loading: assignmentLoading || responsibilityPointsLoading,\n      noGrade: false,\n    }\n  }\n  return {\n    grade: 0,\n    loading: assignmentLoading || responsibilityPointsLoading,\n    noGrade: false,\n  }\n}\n","import styled from 'styled-components'\n\nexport const QuizContainer = styled.div`\n  height: 95vh;\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n`\n\nexport const QuizTitleContainer = styled.div`\n  font-size: 4vh;\n  justify-self: center;\n  align-self: center;\n`\n\nexport const QuizMessageContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 5vh;\n`\n\nexport const QuestionBlankContainer = styled.form`\n  display: grid;\n  grid-template-rows: 1fr 4fr 3fr;\n`\nexport const FinishedQuizContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 5vh;\n`\nexport const QuizQuestionContainer = styled.div`\n  justify-self: left;\n  align-self: center;\n  font-size: 3vh;\n  margin-left: 5%;\n`\n\nexport const QuizQuestionAnswersContainer = styled.div`\n  display: grid;\n  grid-auto-rows: row;\n  justify-items: left;\n  align-items: start;\n  font-size: 3vh;\n  margin-left: 10%;\n  /* grid-row-gap: 1vh; */\n`\nexport const QuizQuestionAnswerLabelContainer = styled.label`\n  display: grid;\n  justify-items: left;\n  align-items: center;\n  grid-auto-flow: column;\n`\nexport const QuizQuestionAnswerInput = styled.input`\n  /* display: grid; */\n  justify-items: left;\n  align-items: center;\n  font-size: 3vh;\n`\n\nexport const QuizQuestionSubmitContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const SubmitButton = styled.button`\n  background-color: var(--blue);\n  color: var(--white);\n  font-size: 3vh;\n  width: 25%;\n  height: 15%;\n`\n","import { gql, useMutation } from '@apollo/client'\nimport React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { useGradeCalculator } from '../../../../../hooks/useGradeCalculator'\nimport {\n  finishQuizVariables,\n  finishQuiz,\n  me_me,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { responsibilityPointConverter } from '../../../../../utils'\nimport { FinishedQuizContainer } from './state-n-styles/QuizStyles'\nimport { useQuizToCompleteContextProvider } from './state-n-styles/QuizToCompleteContext'\n\nexport type FinishQuizProps = {\n  finished: boolean\n  quizId: string\n  markingPeriod: MarkingPeriodEnum\n}\n\nexport const FINISH_QUIZ_MUTATION = gql`\n  mutation finishQuiz($input: FinishQuizInput!) {\n    finishQuiz(input: $input) {\n      quiz {\n        _id\n      }\n    }\n  }\n`\n\nexport const FinishQuiz = ({\n  finished,\n  quizId,\n  markingPeriod,\n}: FinishQuizProps) => {\n  const [state, event] = useQuizToCompleteContextProvider()\n\n  const me: me_me = useUserContextProvider()\n  const navigate = useNavigate()\n  const { grade } = useGradeCalculator({\n    studentId: me._id!,\n    markingPeriod: markingPeriod,\n    polling: false,\n  })\n  const [finishQuiz] = useMutation<finishQuiz, finishQuizVariables>(\n    FINISH_QUIZ_MUTATION,\n    {\n      variables: {\n        input: {\n          quizId,\n          earnedPoints: +state.context.earnedPoints.toFixed(2),\n          // responsibilityPoints: state.context.responsibilityPoints,\n          responsibilityPoints: responsibilityPointConverter(\n            grade,\n            state.context.responsibilityPoints,\n          ),\n        },\n      },\n      onCompleted: () => {\n        const timer = setTimeout(() => {\n          navigate('/dashboard/assignments/')\n        }, 5000)\n        return () => clearTimeout(timer)\n      },\n      refetchQueries: ['findQuizById'],\n    },\n  )\n  let score =\n    state.context.earnedPoints / state.context.quizzableSections.length\n\n  useEffect(() => {\n    if (finished) {\n      finishQuiz()\n    }\n  }, [finished])\n\n  return finished ? (\n    <FinishedQuizContainer>\n      <div>Quiz Complete</div>\n      <div>Score: {(score * 100).toFixed(2)}%</div>\n    </FinishedQuizContainer>\n  ) : null\n}\n","import React, { Dispatch, SetStateAction, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport {\n  findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions,\n  findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList,\n  MarkingPeriodEnum,\n  QuizQuestionDifficultyLevelEnum,\n  QuizQuestionTypeEnum,\n} from '../../../../../schemaTypes'\nimport { FinishQuiz } from './FinishQuiz'\nimport { multipleChoiceGrader, trueFalseGrader } from './quizQuestionGrader'\nimport {\n  QuestionBlankContainer,\n  QuizQuestionAnswerInput,\n  QuizQuestionAnswerLabelContainer,\n  QuizQuestionAnswersContainer,\n  QuizQuestionContainer,\n  QuizQuestionSubmitContainer,\n  SubmitButton,\n} from './state-n-styles/QuizStyles'\nimport { useQuizToCompleteContextProvider } from './state-n-styles/QuizToCompleteContext'\n\nexport type QuestionBlankProps = {\n  quizId: string\n  question: string\n  questionType: QuizQuestionTypeEnum\n  answers: findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList[]\n  difficultyState: QuizQuestionDifficultyLevelEnum\n  setDifficultyState: Dispatch<SetStateAction<QuizQuestionDifficultyLevelEnum>>\n  currentQuizQuestion: findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions\n  markingPeriod: MarkingPeriodEnum\n}\n\nexport const QuestionBlank = ({\n  question,\n  questionType,\n  answers,\n  setDifficultyState,\n  difficultyState,\n  currentQuizQuestion,\n  quizId,\n  markingPeriod,\n}: QuestionBlankProps) => {\n  const [state, event] = useQuizToCompleteContextProvider()\n  const [finished, setFinished] = useState(false)\n  const { quizQuestionDifficultyLevelEnum } = useEnumContextProvider()\n  const [answerValue, setAnswerValue] =\n    useState<findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList | null>(\n      null,\n    )\n\n  const handleFinished = () => {\n    setFinished(true)\n  }\n  const handleSubmit = () => {\n    if (answerValue) {\n      if (currentQuizQuestion!.questionType === 'MULTIPLE_CHOICE') {\n        const { points, earnedPoints } = multipleChoiceGrader({\n          answer: answerValue,\n          difficultyLevel:\n            quizQuestionDifficultyLevelEnum.findIndex(\n              (i: QuizQuestionDifficultyLevelEnum) =>\n                i === currentQuizQuestion!.difficultyLevel,\n            ) + 1,\n        })\n\n        event({\n          type: 'ADD_EARNED_POINTS',\n          payload: earnedPoints,\n        })\n        event({ type: 'ADD_RESPONSIBILITY_POINTS', payload: points })\n        event({ type: 'NEXT_QUESTION_NUMBER' })\n\n        if (answerValue?.correct) {\n          if (\n            state.context.currentQuizzableSection ===\n            state.context.quizzableSections[\n              state.context.quizzableSections.length - 1\n            ]\n          ) {\n            handleFinished()\n          } else {\n            setAnswerValue(null)\n            setDifficultyState(QuizQuestionDifficultyLevelEnum.DIFFICULT)\n            event({ type: 'NEXT_QUIZZABLE_SECTION' })\n          }\n        } else {\n          const currentDifficulty = quizQuestionDifficultyLevelEnum.findIndex(\n            (i: QuizQuestionDifficultyLevelEnum) => i === difficultyState,\n          )\n          if (currentDifficulty === 0) {\n            if (\n              state.context.currentQuizzableSection ===\n              state.context.quizzableSections[\n                state.context.quizzableSections.length - 1\n              ]\n            ) {\n              handleFinished()\n            } else {\n              setDifficultyState(QuizQuestionDifficultyLevelEnum.DIFFICULT)\n              setAnswerValue(null)\n              event({ type: 'NEXT_QUIZZABLE_SECTION' })\n            }\n          } else {\n            setAnswerValue(null)\n            setDifficultyState(\n              quizQuestionDifficultyLevelEnum[currentDifficulty - 1],\n            )\n          }\n        }\n      }\n\n      if (currentQuizQuestion!.questionType === 'TRUE_FALSE') {\n        const { points, earnedPoints } = trueFalseGrader({\n          answer: answerValue,\n          difficultyLevel:\n            quizQuestionDifficultyLevelEnum.findIndex(\n              (i: QuizQuestionDifficultyLevelEnum) =>\n                i === currentQuizQuestion!.difficultyLevel,\n            ) + 1,\n        })\n\n        event({\n          type: 'ADD_EARNED_POINTS',\n          payload: earnedPoints,\n        })\n\n        event({ type: 'ADD_RESPONSIBILITY_POINTS', payload: points })\n        event({ type: 'NEXT_QUESTION_NUMBER' })\n        if (answerValue?.correct) {\n          if (\n            state.context.currentQuizzableSection ===\n            state.context.quizzableSections[\n              state.context.quizzableSections.length - 1\n            ]\n          ) {\n            handleFinished()\n          } else {\n            setDifficultyState(QuizQuestionDifficultyLevelEnum.DIFFICULT)\n            setAnswerValue(null)\n            event({ type: 'NEXT_QUIZZABLE_SECTION' })\n          }\n        } else {\n          const currentDifficulty = quizQuestionDifficultyLevelEnum.findIndex(\n            (i: QuizQuestionDifficultyLevelEnum) => i === difficultyState,\n          )\n          if (currentDifficulty === 0) {\n            if (\n              state.context.currentQuizzableSection ===\n              state.context.quizzableSections[\n                state.context.quizzableSections.length - 1\n              ]\n            ) {\n              handleFinished()\n            } else {\n              setDifficultyState(QuizQuestionDifficultyLevelEnum.DIFFICULT)\n              setAnswerValue(null)\n              event({ type: 'NEXT_QUIZZABLE_SECTION' })\n            }\n          } else {\n            setAnswerValue(null)\n            setDifficultyState(\n              quizQuestionDifficultyLevelEnum[currentDifficulty - 1],\n            )\n          }\n        }\n      }\n    } else return null\n  }\n\n  return (\n    <QuestionBlankContainer onSubmit={(e) => e.preventDefault()}>\n      {!finished ? (\n        <>\n          <QuizQuestionContainer>\n            {state.context.questionNumber}. {question}\n          </QuizQuestionContainer>\n          {questionType === QuizQuestionTypeEnum.MULTIPLE_CHOICE && (\n            <QuizQuestionAnswersContainer>\n              {answers.map((answer, i) => {\n                return (\n                  <QuizQuestionAnswerLabelContainer key={answer.answer}>\n                    <QuizQuestionAnswerInput\n                      type=\"radio\"\n                      checked={answerValue === answer}\n                      value={answer.answer}\n                      onChange={() => setAnswerValue(answer)}\n                    />\n                    {answer.answer}\n                  </QuizQuestionAnswerLabelContainer>\n                )\n              })}\n            </QuizQuestionAnswersContainer>\n          )}\n          {questionType === QuizQuestionTypeEnum.TRUE_FALSE && (\n            <QuizQuestionAnswersContainer>\n              {answers\n                .sort((x, y) => (x.answer < y.answer ? 1 : -1)) // sorts out True then False\n                .map((answer, i) => {\n                  return (\n                    <QuizQuestionAnswerLabelContainer key={i}>\n                      <QuizQuestionAnswerInput\n                        type=\"radio\"\n                        checked={answerValue === answer}\n                        onChange={() => setAnswerValue(answer)}\n                      />\n                      {answer.answer}\n                    </QuizQuestionAnswerLabelContainer>\n                  )\n                })}\n            </QuizQuestionAnswersContainer>\n          )}\n          <QuizQuestionSubmitContainer>\n            <SubmitButton type=\"submit\" onClick={handleSubmit}>\n              Submit\n            </SubmitButton>\n          </QuizQuestionSubmitContainer>\n        </>\n      ) : (\n        <>\n          <div></div>\n          <FinishQuiz\n            finished={finished}\n            quizId={quizId}\n            markingPeriod={markingPeriod}\n          />\n        </>\n      )}\n    </QuestionBlankContainer>\n  )\n}\n","import { findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList } from '../../../../../schemaTypes'\n\ntype multipleChoiceGraderProps = {\n  answer: null | findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList\n  difficultyLevel: number\n}\n\nexport const multipleChoiceGrader = ({\n  answer,\n  difficultyLevel,\n}: multipleChoiceGraderProps) => {\n  if (answer?.correct) {\n    return {\n      points: difficultyLevel,\n      earnedPoints:\n        difficultyLevel === 3 ? 1 : difficultyLevel === 2 ? 0.8 : 0.6,\n    }\n  }\n  if (answer?.partiallyCorrect) {\n    return { points: difficultyLevel / 2, earnedPoints: 0 }\n  }\n\n  return { points: 0, earnedPoints: 0 }\n}\n\ntype trueFalseGraderProps = {\n  answer: null | findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList\n  difficultyLevel: number\n}\n\nexport const trueFalseGrader = ({\n  answer,\n  difficultyLevel,\n}: trueFalseGraderProps) => {\n  if (answer?.correct) {\n    return {\n      points: difficultyLevel,\n      earnedPoints:\n        difficultyLevel === 3 ? 1 : difficultyLevel === 2 ? 0.8 : 0.6,\n    }\n  } else return { points: 0, earnedPoints: 0 }\n}\n","import { useMutation } from '@apollo/client'\nimport React, { useEffect, useState, Dispatch, SetStateAction } from 'react'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport {\n  activateQuizVariables,\n  activateQuiz,\n  findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions,\n  findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList,\n  QuizQuestionDifficultyLevelEnum,\n  QuizQuestionTypeEnum,\n  me_me_Student,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { QuestionBlank } from './QuestionBlank'\nimport { ACTIVATE_QUIZ_MUTATION } from './QuizSelect'\nimport { useQuizToCompleteContextProvider } from './state-n-styles/QuizToCompleteContext'\n\nexport type QuizQuestionDisplayProps = {\n  questions: findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions[]\n  quizId: string\n  difficultyState: QuizQuestionDifficultyLevelEnum\n  setDifficultyState: Dispatch<SetStateAction<QuizQuestionDifficultyLevelEnum>>\n  markingPeriod: MarkingPeriodEnum\n}\n\n// User has switched away from the tab (AKA tab is hidden)\n\nexport const QuizQuestionDisplay = ({\n  questions,\n  quizId,\n  difficultyState,\n  setDifficultyState,\n  markingPeriod,\n}: QuizQuestionDisplayProps) => {\n  const me: me_me_Student = useUserContextProvider()\n  const [state, event] = useQuizToCompleteContextProvider()\n\n  const [windowWidth, setwindowWidth] = useState(window.innerWidth)\n\n  const [activateQuiz] = useMutation<activateQuiz, activateQuizVariables>(\n    ACTIVATE_QUIZ_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [],\n    },\n  )\n  const onFocus = () => {\n    activateQuiz({\n      variables: {\n        input: {\n          activate: false,\n          quizId: quizId,\n        },\n      },\n    })\n  }\n  const onBlur = () => {\n    activateQuiz({\n      variables: {\n        input: {\n          activate: false,\n          quizId: quizId,\n        },\n      },\n    })\n  }\n\n  const onResize = () => {\n    activateQuiz({\n      variables: {\n        input: {\n          activate: false,\n          quizId: quizId,\n        },\n      },\n    })\n  }\n  const WindowFocusHandler = () => {\n    const width = window.innerWidth\n    useEffect(() => {\n      window.addEventListener('focus', onFocus)\n      window.addEventListener('blur', onBlur)\n      window.addEventListener('resize', onResize)\n\n      // Specify how to clean up after this effect:\n      return () => {\n        window.removeEventListener('focus', onFocus)\n        window.removeEventListener('blur', onBlur)\n        window.removeEventListener('resize', onResize)\n      }\n    }, [width])\n\n    return null\n  }\n\n  WindowFocusHandler()\n\n  const quizQuestions = questions.filter(\n    (section) =>\n      section.associatedTextSectionId === state.context.currentQuizzableSection,\n  )!\n\n  const [currentQuizQuestion] = quizQuestions.filter(\n    (question) => question.difficultyLevel === difficultyState,\n  )!\n\n  const answers = me.hasIEP\n    ? currentQuizQuestion!.answerList.filter((answer) => !answer.removable)\n    : [...currentQuizQuestion!.answerList]\n\n  function shuffleAnswerList(array: any) {\n    return array.sort(() => Math.random() - 0.5)\n  }\n  const randomizedAnswers = shuffleAnswerList(\n    answers,\n  ) as findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList[]\n\n  return (\n    <QuestionBlank\n      answers={\n        currentQuizQuestion.questionType ===\n        QuizQuestionTypeEnum.MULTIPLE_CHOICE\n          ? randomizedAnswers\n          : answers.sort((answer) => (answer.answer === 'True' ? 1 : 0))\n      }\n      currentQuizQuestion={currentQuizQuestion}\n      difficultyState={difficultyState}\n      setDifficultyState={setDifficultyState}\n      question={currentQuizQuestion.question}\n      questionType={currentQuizQuestion.questionType}\n      quizId={quizId}\n      markingPeriod={markingPeriod}\n    />\n  )\n}\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router'\nimport {\n  QuizQuestionDifficultyLevelEnum,\n  findQuizQuestionsByQuizzableSections,\n  findQuizQuestionsByQuizzableSectionsVariables,\n  findQuizById_findQuizById_quiz,\n  finishQuizVariables,\n  finishQuiz,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { FINISH_QUIZ_MUTATION } from './FinishQuiz'\nimport { QuizQuestionDisplay } from './QuizQuestionDisplay'\nimport {\n  FinishedQuizContainer,\n  QuizMessageContainer,\n} from './state-n-styles/QuizStyles'\nimport { useQuizToCompleteContextProvider } from './state-n-styles/QuizToCompleteContext'\n\nexport type QuizSectionProps = { quiz: findQuizById_findQuizById_quiz }\n\nexport const FIND_QUIZ_QUESTIONS_QUERY = gql`\n  query findQuizQuestionsByQuizzableSections(\n    $input: FindQuizQuestionsByQuizzableSectionsInput!\n  ) {\n    findQuizQuestionsByQuizzableSections(input: $input) {\n      quizQuestions {\n        _id\n        difficultyLevel\n        questionType\n        question\n        answerList {\n          answer\n          correct\n          partiallyCorrect\n          removable\n        }\n        associatedTextSectionId\n      }\n    }\n  }\n`\n\nexport const QuizSection = ({ quiz }: QuizSectionProps) => {\n  const [state] = useQuizToCompleteContextProvider()\n  const navigate = useNavigate()\n\n  const [difficultyState, setDifficultyState] =\n    useState<QuizQuestionDifficultyLevelEnum>(\n      QuizQuestionDifficultyLevelEnum.DIFFICULT,\n    )\n\n  const { loading, data } = useQuery<\n    findQuizQuestionsByQuizzableSections,\n    findQuizQuestionsByQuizzableSectionsVariables\n  >(FIND_QUIZ_QUESTIONS_QUERY, {\n    variables: {\n      input: { quizzableSectionIds: state.context.quizzableSections },\n    },\n    // onCompleted: (data) =>\n    // console.log(data.findQuizQuestionsByQuizzableSections.quizQuestions),\n    onError: (error) => console.error(error),\n  })\n\n  const [finishQuiz] = useMutation<finishQuiz, finishQuizVariables>(\n    FINISH_QUIZ_MUTATION,\n    {\n      variables: {\n        input: {\n          quizId: quiz._id!,\n          earnedPoints: +state.context.earnedPoints.toFixed(2),\n          responsibilityPoints: state.context.responsibilityPoints,\n        },\n      },\n      onCompleted: () => {\n        const timer = setTimeout(() => {\n          navigate('/dashboard/assignments/')\n        }, 5000)\n        return () => clearTimeout(timer)\n      },\n      refetchQueries: ['findQuizById'],\n    },\n  )\n\n  useEffect(() => {\n    if (!quiz.isActive && !quiz.finishedQuiz && quiz.forcedFinish) {\n      // finishQuiz()\n    }\n  }, [quiz.forcedFinish])\n\n  let score =\n    state.context.earnedPoints / state.context.quizzableSections.length\n\n  if (loading) return null\n  return (\n    <>\n      {/* {!quiz.isActive &&\n        !quiz.finishedQuiz &&\n        quiz.startedQuiz &&\n        !quiz.forcedFinish && (\n          <QuizMessageContainer>Getting Quiz</QuizMessageContainer>\n        )} */}\n      {!quiz.isActive &&\n        !quiz.finishedQuiz &&\n        quiz.startedQuiz &&\n        !quiz.forcedFinish && (\n          <QuizMessageContainer>Quiz is suspended</QuizMessageContainer>\n        )}\n      {!quiz.isActive &&\n        quiz.finishedQuiz &&\n        quiz.startedQuiz &&\n        quiz.forcedFinish && (\n          <FinishedQuizContainer>\n            <div>\n              <div>Quiz Complete</div>\n              <div>Score: {(score * 100).toFixed(2)}%</div>\n            </div>\n          </FinishedQuizContainer>\n        )}\n      {quiz.isActive && !quiz.finishedQuiz && quiz.startedQuiz && (\n        <>\n          {data?.findQuizQuestionsByQuizzableSections.quizQuestions.length! >\n            0 && (\n            <QuizQuestionDisplay\n              questions={\n                data?.findQuizQuestionsByQuizzableSections.quizQuestions!\n              }\n              quizId={quiz._id!}\n              difficultyState={difficultyState}\n              setDifficultyState={setDifficultyState}\n              markingPeriod={quiz.markingPeriod}\n            />\n          )}\n        </>\n      )}\n      {quiz.finishedQuiz && !quiz.forcedFinish && (\n        <FinishedQuizContainer>\n          <div>Quiz Complete</div>\n          <div>Score: {(score * 100).toFixed(2)}%</div>\n        </FinishedQuizContainer>\n      )}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React from 'react'\nimport { useParams } from 'react-router'\nimport { findQuizById, findQuizByIdVariables } from '../../../../../schemaTypes'\nimport { QuizSection } from './QuizSection'\nimport { QuizContainer, QuizTitleContainer } from './state-n-styles/QuizStyles'\nimport { useQuizToCompleteContextProvider } from './state-n-styles/QuizToCompleteContext'\n\nexport type QuizToCompleteProps = {}\n\nexport const FIND_QUIZ_BY_ID_QUERY = gql`\n  query findQuizById($input: FindQuizByIdInput!) {\n    findQuizById(input: $input) {\n      quiz {\n        _id\n        finishedQuiz\n        startedQuiz\n        markingPeriod\n        forcedFinish\n        isActive\n        quizzableSections\n        readings {\n          readingSections\n        }\n      }\n    }\n  }\n`\n\nexport const QuizToComplete = ({}: QuizToCompleteProps) => {\n  const [, event] = useQuizToCompleteContextProvider()\n  const params = useParams()\n  const { loading, data } = useQuery<findQuizById, findQuizByIdVariables>(\n    FIND_QUIZ_BY_ID_QUERY,\n    {\n      variables: {\n        input: { quizId: params.quizToComplete! },\n      },\n      onCompleted: (data) => {\n        event({\n          type: 'SET_QUIZZABLE_SECTIONS',\n          payload: data?.findQuizById.quiz.quizzableSections,\n        })\n        event({\n          type: 'SET_INITIAL_QUIZZABLE_SECTION',\n          payload: data.findQuizById.quiz.quizzableSections[0],\n        })\n      },\n      pollInterval: 1000,\n      onError: (error) => console.error(error),\n    },\n  )\n  // console.log(data?.findQuizById.quiz)\n  if (loading) return <div>Loading </div>\n  return (\n    <QuizContainer>\n      <QuizTitleContainer>\n        {data?.findQuizById.quiz.readings.readingSections} Quiz\n      </QuizTitleContainer>\n      <QuizSection quiz={data?.findQuizById.quiz!} />\n    </QuizContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const StudentControlPanelContainer = styled.div`\n  background-color: var(--grey);\n  color: var(--white);\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n`\n\nexport const StudentControlButtonContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-items: center;\n`\n\nexport const ControlButtons = styled.button`\n  color: var(--blue);\n  background-color: var(--white);\n  width: 15vh;\n  font-size: 2.5vh;\n`\n\nexport const StudentInfoContainer = styled.div`\n  background-color: var(--blue);\n  grid-area: StudentInfo;\n  border-left: 3px solid var(--white);\n  display: grid;\n  grid-template-rows: 2fr 3fr;\n`\n\nexport type StudentInfoDisplayProps = {\n  absent?: boolean\n}\n\nexport const StudentInfoDisplay = styled.div<StudentInfoDisplayProps>`\n  background-color: ${({ absent }) => (absent ? 'var(--red)' : 'var(--blue)')};\n  color: var(--white);\n  border-bottom: 3px solid var(--white);\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const StudentNameContainer = styled.div`\n  font-size: 3vw;\n  text-align: center;\n`\nexport const AttendanceContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport type AttendanceButtonProps = {\n  created: boolean\n  lateButton: boolean\n}\n\nexport const AttendanceButton = styled.button<AttendanceButtonProps>`\n  background-color: ${({ created }) =>\n    created ? 'var(--red)' : 'var(--blue)'};\n  color: var(--white);\n  font-size: ${({ lateButton }) => (lateButton ? '2vh' : '2.5vh')};\n  border: 1px solid var(--white);\n  box-shadow: 2px 2px 2px black;\n  border-radius: 5px;\n  width: 25vh;\n  height: 5vh;\n`\n\nexport const ProtocolDisplayContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  background-color: var(--grey);\n`\n\nexport const ProtocolTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 4vh;\n  text-decoration: underline;\n`\nexport const GroupProtocolAssessorContainer = styled.div`\n  display: grid;\n  padding-bottom: 2%;\n`\nexport const PartnerContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 3fr;\n`\nexport const CenteredTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n`\n\nexport const PartnerListContainer = styled.div`\n  display: grid;\n`\nexport const PartnerListItem = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  align-items: center;\n  height: 2vh;\n`\nexport const PartnerRemoveContainer = styled.div`\n  color: var(--white);\n  background-color: var(--red);\n  display: grid;\n  justify-items: center;\n`\nexport const DiscussionContainer = styled.div`\n  display: grid;\n  grid-row-gap: 2%;\n`\nexport const AssessmentContainer = styled.div`\n  display: grid;\n  grid-row-gap: 2%;\n`\n\nexport type AssessorButtonProps = {\n  selected: boolean\n}\n\nexport const AssessorButton = styled.button<AssessorButtonProps>`\n  font-size: 2vh;\n  background-color: ${({ selected }) =>\n    selected ? 'var(--blue)' : 'var(--white)'};\n  color: ${({ selected }) => (selected ? 'var(--white)' : 'var(--blue)')};\n  width: 90%;\n  justify-self: center;\n  border-radius: 5px;\n`\n\nexport const StudentBehaviorContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  height: 100%;\n`\n\nexport const StudentBehaviorButtonContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const StudentBehaviorTitle = styled.div`\n  color: var(--blue);\n  font-size: 3.5vh;\n  justify-self: center;\n  align-self: center;\n`\n\nexport type StudentBehaviorButtonProps = {\n  goodBehavior: boolean\n  ready?: boolean\n}\n\nexport const StudentBehaviorButton = styled.button<StudentBehaviorButtonProps>`\n  background-color: ${({ goodBehavior, ready }) =>\n    goodBehavior ? 'var(--blue)' : 'var(--red)'};\n  color: var(--white);\n  border-radius: 5px;\n  width: 75%;\n  /* height: 7vh; */\n  font-size: 2vh;\n`\n\nexport const BehaviorRemoverContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  color: var(--blue);\n  font-size: 3vh;\n`\n\nexport const BehaviorRemoverTitleContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const BehaviorItemContainer = styled.div`\n  display: grid;\n  grid-auto-rows: 15%;\n`\n\nexport const BehaviorItem = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  margin-bottom: 1%;\n`\nexport const RemoveBehaviorButton = styled.button`\n  background-color: var(--blue);\n  color: var(--white);\n`\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  findBehaviorsByStudentIdAndDate,\n  findBehaviorsByStudentIdAndDateVariables,\n  removeStudentBehaviorVariables,\n  removeStudentBehavior,\n  MarkingPeriodEnum,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors,\n} from '../../../../../../schemaTypes'\nimport {\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../../utils'\nimport {\n  BehaviorItem,\n  BehaviorItemContainer,\n  BehaviorRemoverContainer,\n  BehaviorRemoverTitleContainer,\n  RemoveBehaviorButton,\n} from '../../styles/studentInfoStyles'\n\nexport type BehaviorRemoverProps = {\n  studentId: string\n  currentMarkingPeriod: MarkingPeriodEnum\n  studentBehaviors: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors[]\n}\n\nexport const FIND_BEHAVIORS_BY_STUDENT_ID_AND_DATE_QUERY = gql`\n  query findBehaviorsByStudentIdAndDate(\n    $input: FindBehaviorsByStudentIdAndDateInput!\n  ) {\n    findBehaviorsByStudentIdAndDate(input: $input) {\n      behaviors {\n        _id\n        student {\n          firstName\n        }\n        behavior {\n          _id\n          behaviorName\n          behaviorCategory\n          behaviorQuality\n          behaviorName\n          points\n        }\n        responsibilityPoints\n      }\n    }\n  }\n`\n\nexport const REMOVE_STUDENT_BEHAVIOR_MUTATION = gql`\n  mutation removeStudentBehavior($input: RemoveStudentBehaviorInput!) {\n    removeStudentBehavior(input: $input) {\n      removed\n    }\n  }\n`\n\nexport const BehaviorRemover = ({\n  studentBehaviors,\n  studentId,\n  currentMarkingPeriod,\n}: BehaviorRemoverProps) => {\n  const { loading, data } = useQuery<\n    findBehaviorsByStudentIdAndDate,\n    findBehaviorsByStudentIdAndDateVariables\n  >(FIND_BEHAVIORS_BY_STUDENT_ID_AND_DATE_QUERY, {\n    variables: {\n      input: { date: new Date().toLocaleDateString(), studentId: studentId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  const [removeStudentBehavior] = useMutation<\n    removeStudentBehavior,\n    removeStudentBehaviorVariables\n  >(REMOVE_STUDENT_BEHAVIOR_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      'findBehaviorsByStudentIdAndDate',\n      'findStudentByIdForTeachersAid',\n    ],\n  })\n  // if (loading) return <div>Loading </div>\n  return (\n    <BehaviorRemoverContainer>\n      <BehaviorRemoverTitleContainer>\n        Today's Behavior\n      </BehaviorRemoverTitleContainer>\n      {loading ? (\n        <div>Loading</div>\n      ) : (\n        <BehaviorItemContainer>\n          {/* {data?.findBehaviorsByStudentIdAndDate.behaviors.map((behavior) => ( */}\n          {studentBehaviors.map((behavior, i: number) => (\n            <BehaviorItem key={i}>\n              <div style={{ overflowX: 'hidden' }}>\n                {phraseCapitalizer(\n                  underscoreEliminator(behavior.behavior.behaviorName),\n                ).slice(0, 15)}\n                ...\n              </div>\n              <RemoveBehaviorButton\n                onClick={() =>\n                  removeStudentBehavior({\n                    variables: {\n                      input: {\n                        markingPeriod: currentMarkingPeriod,\n                        studentBehaviorId: behavior._id!,\n                      },\n                    },\n                  })\n                }\n              >\n                Delete\n              </RemoveBehaviorButton>\n            </BehaviorItem>\n          ))}\n        </BehaviorItemContainer>\n      )}\n    </BehaviorRemoverContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const StudentBehaviorContainer = styled.div`\n  display: grid;\n  grid-template-rows: 15% 4fr 1fr;\n  height: 95vh;\n`\n\nexport const StudentBehaviorTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 5vh;\n`\nexport const StudentBehaviorContentContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\nexport const BehaviorItemContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n`\nexport const BehaviorItemTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 4vh;\n`\n\nexport const BehaviorItem = styled.li`\n  display: grid;\n  grid-template-columns: 5fr 1fr;\n  font-size: 3vh;\n`\nexport const TotalPointsForTheDayContainer = styled.div`\n  font-size: 3vh;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n","import { useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  BehaviorQualityEnum,\n  findBehaviorsByStudentIdAndDate,\n  findBehaviorsByStudentIdAndDateVariables,\n  me_me,\n  me_me_Student,\n} from '../../../../schemaTypes'\nimport { FIND_BEHAVIORS_BY_STUDENT_ID_AND_DATE_QUERY } from '../../teacher/teachers-aid/student-info/behavior/BehaviorRemover'\nimport {\n  BehaviorItem,\n  BehaviorItemContainer,\n  BehaviorItemTitle,\n  StudentBehaviorContainer,\n  StudentBehaviorContentContainer,\n  StudentBehaviorTitle,\n  TotalPointsForTheDayContainer,\n} from './studentBehaviorStyles'\n\nexport type StudentBehaviorProps = { me: me_me }\n\nexport const StudentBehavior = ({ me }: StudentBehaviorProps) => {\n  const { loading, data } = useQuery<\n    findBehaviorsByStudentIdAndDate,\n    findBehaviorsByStudentIdAndDateVariables\n  >(FIND_BEHAVIORS_BY_STUDENT_ID_AND_DATE_QUERY, {\n    variables: {\n      input: { date: new Date().toLocaleDateString(), studentId: me._id! },\n    },\n    fetchPolicy: 'network-only',\n    // onCompleted: (data) =>\n    //   console.log(\n    //     data.findBehaviorsByStudentIdAndDate.behaviors[0].responsibilityPoints\n    //   ),\n    onError: (error) => console.error(error),\n  })\n  const totalPoints =\n    data?.findBehaviorsByStudentIdAndDate.behaviors.length! > 0 &&\n    data?.findBehaviorsByStudentIdAndDate.behaviors\n      .map((behavior) => behavior.responsibilityPoints)\n      .reduce((a, i) => a + i)\n\n  return (\n    <StudentBehaviorContainer>\n      <StudentBehaviorTitle>How did I do today?</StudentBehaviorTitle>\n      <StudentBehaviorContentContainer>\n        <BehaviorItemContainer>\n          <BehaviorItemTitle>Positive Behaviors</BehaviorItemTitle>\n          <ul>\n            {data?.findBehaviorsByStudentIdAndDate.behaviors\n              .filter(\n                (b) =>\n                  b.behavior.behaviorQuality === BehaviorQualityEnum.POSITIVE,\n              )\n              .map((b) => (\n                <BehaviorItem key={b._id}>\n                  <div>{b.behavior.behaviorName}</div>\n                  {/* <div>{b.responsibilityPoints.toFixed(1)}</div> */}\n                </BehaviorItem>\n              ))}\n          </ul>\n        </BehaviorItemContainer>\n        <BehaviorItemContainer style={{ color: 'var(--red)' }}>\n          <BehaviorItemTitle>Negative Behaviors</BehaviorItemTitle>\n          <ul>\n            {data?.findBehaviorsByStudentIdAndDate.behaviors\n              .filter(\n                (b) =>\n                  b.behavior.behaviorQuality === BehaviorQualityEnum.NEGATIVE,\n              )\n              .map((b) => (\n                <BehaviorItem key={b._id}>\n                  <div>{b.behavior.behaviorName}</div>\n                  {/* <div>{b.behavior.points}</div> */}\n                </BehaviorItem>\n              ))}\n          </ul>\n        </BehaviorItemContainer>\n      </StudentBehaviorContentContainer>\n      <TotalPointsForTheDayContainer>\n        Total Points for the day: {totalPoints ? totalPoints : 'None so far'}\n      </TotalPointsForTheDayContainer>\n    </StudentBehaviorContainer>\n  )\n}\n","import React from 'react'\nimport { useMarkingPeriodContextProvider } from '../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useCalculateGrades } from '../../hooks/useCalculateGrades'\nimport { useGradeCalculator } from '../../hooks/useGradeCalculator'\nimport { GradeDisplay, StudentGradeContainer } from './homeStyles'\n\nexport type StudentGradeDisplayProps = { studentId: string }\n\nexport const StudentGradeDisplay = ({\n  studentId,\n}: StudentGradeDisplayProps) => {\n  const [currentMarkingPeriod] = useMarkingPeriodContextProvider()\n  // const { grade, loading } = useCalculateGrades({\n  //   studentId,\n  //   polling: true,\n  //   pollInterval: 5000,\n  //   markingPeriod: currentMarkingPeriod.context.currentMarkingPeriod,\n  // })\n  const { grade, loading } = useGradeCalculator({\n    studentId,\n    polling: false,\n    pollInterval: 5000,\n    markingPeriod: currentMarkingPeriod.context.currentMarkingPeriod,\n  })\n\n  return (\n    <>\n      <GradeDisplay>Current Grade</GradeDisplay>\n      <GradeDisplay>{!loading ? grade + '%' : 'Calculating'}</GradeDisplay>\n\n      {/* <div>\n            This grade may not be what is in Genesis and will change constantly.\n            If you have just completed an essay, your grade will change when\n            you've completed the essay and change again when it is graded.\n          </div> */}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { useEffect } from 'react'\nimport {\n  me_me,\n  updateUserActive,\n  updateUserActiveVariables,\n} from '../../schemaTypes'\n\nexport type UpdateUserActivityProps = {\n  userId: string\n}\n\nexport const UPDATE_USER_ACTIVITY_MUTATION = gql`\n  mutation updateUserActive($input: UpdateUserActiveInput!) {\n    updateUserActive(input: $input) {\n      updated\n    }\n  }\n`\n\nexport const UpdateUserActivity = ({ userId }: UpdateUserActivityProps) => {\n  const [updateUserActive] = useMutation<\n    updateUserActive,\n    updateUserActiveVariables\n  >(UPDATE_USER_ACTIVITY_MUTATION, {\n    // variables: { input: { userId, isActive: true } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['me'],\n  })\n\n  const onFocus = () => {\n    updateUserActive({\n      variables: { input: { userId, isActive: true } },\n    })\n  }\n  const onBlur = () => {\n    updateUserActive({\n      variables: { input: { userId, isActive: false } },\n    })\n  }\n\n  // const onResize = () => {\n  //   activateQuiz({\n  //     variables: {\n  //       input: {\n  //         activate: false,\n  //         quizId: quizId,\n  //       },\n  //     },\n  //   })\n  // }\n  const WindowFocusHandler = () => {\n    // const width = window.innerWidth\n    useEffect(() => {\n      window.addEventListener('focus', onFocus)\n      window.addEventListener('blur', onBlur)\n      // window.addEventListener('resize', onResize)\n\n      // Specify how to clean up after this effect:\n      return () => {\n        window.removeEventListener('focus', onFocus)\n        window.removeEventListener('blur', onBlur)\n        // window.removeEventListener('resize', onResize)\n      }\n    })\n\n    return null\n  }\n\n  WindowFocusHandler()\n\n  return null\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  logout,\n  me_me,\n  updateUserActive,\n  updateUserActiveVariables,\n} from '../../schemaTypes'\nimport { LogoutLink } from './homeStyles'\nimport { useNavigate } from 'react-router-dom'\nimport { UPDATE_USER_ACTIVITY_MUTATION } from './UpdateUserActivity'\nimport { useUserContextProvider } from '../../contexts/UserContext'\n\nexport const LOGOUT_MUTATION = gql`\n  mutation logout {\n    logout\n  }\n`\nexport type LogoutProps = {\n  toggleLogin: () => void\n  setIsNavOpen: Dispatch<SetStateAction<boolean>>\n}\n\nexport const Logout = ({ toggleLogin, setIsNavOpen }: LogoutProps) => {\n  const navigate = useNavigate()\n  const me: me_me = useUserContextProvider()\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [logoutMutation, { data }] = useMutation<logout>(LOGOUT_MUTATION, {\n    onCompleted: () => toggleLogin,\n    refetchQueries: ['me'],\n  })\n  const [updateUserActive] = useMutation<\n    updateUserActive,\n    updateUserActiveVariables\n  >(UPDATE_USER_ACTIVITY_MUTATION, {\n    variables: { input: { userId: me._id!, isActive: false } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['me'],\n  })\n  return (\n    <LogoutLink\n      onClick={() => {\n        updateUserActive()\n        logoutMutation()\n        navigate('/')\n        setIsNavOpen(false)\n      }}\n    >\n      Logout\n    </LogoutLink>\n  )\n}\n","import React, { FC } from 'react'\nimport { noon, evening, time, militaryTime } from '../../utils'\n\nexport type GreetingsProps = {\n  phrase: string\n}\n\nexport const Greetings = ({ phrase }: GreetingsProps) => {\n  return (\n    <>\n      {Date.parse(time) < Date.parse(noon)\n        ? 'Good Morning'\n        : Date.parse(time) > Date.parse(evening)\n          ? 'Good Evening'\n          : 'Good Afternoon'}\n      {' ' + phrase}\n    </>\n  )\n}\n","import { useLazyQuery, useQuery } from '@apollo/client'\nimport React, { Dispatch, SetStateAction, useEffect } from 'react'\nimport { Navigate } from 'react-router'\nimport { useUserContextProvider } from '../../contexts/UserContext'\nimport { useTime } from '../../hooks/useTime'\nimport {\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  findLessonByCourseAndDate,\n  findLessonByCourseAndDateVariables,\n  me_me,\n  me_me_Student,\n  me_me_Teacher,\n  SchoolDayLengthEnum,\n} from '../../schemaTypes'\nimport { date, timeFinder } from '../../utils'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from '../dashboard/school-day/SchoolDay'\n\nimport { FIND_LESSON_QUERY } from './LessonMainMenu'\nimport { useDailyAgendaContextProvider } from './state-n-styles/DailyAgendaContext'\n\nexport type TodaysLessonPlanProps = {\n  setHasLessonNow?: Dispatch<SetStateAction<boolean>>\n}\n\nexport const TodaysLessonPlan = ({\n  setHasLessonNow,\n}: TodaysLessonPlanProps) => {\n  const me: me_me_Student | me_me_Teacher = useUserContextProvider()\n  const [state, event] = useDailyAgendaContextProvider()\n  const { dateTime } = useTime()\n\n  const { data: schoolDayData } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: date },\n    },\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const schoolDayType =\n    schoolDayData?.findSchoolDayByDate.schoolDay?.currentSchoolDayType!\n\n  const schoolDayLength =\n    schoolDayData?.findSchoolDayByDate.schoolDay?.schoolDayLength!\n\n  const [courseToLoad] =\n    me.__typename === 'Teacher'\n      ? me.teachesCourses.filter(\n          (course) =>\n            Date.parse(dateTime) >\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayStartsAt!\n                    : course.hasCourseInfo?.startsAt!,\n                ),\n              ) &&\n            Date.parse(dateTime) <\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayEndsAt!\n                    : course.hasCourseInfo?.endsAt!,\n                ),\n              ) &&\n            course.hasCourseInfo?.schoolDayType === schoolDayType,\n        )\n      : me.inCourses.filter(\n          (course) =>\n            Date.parse(dateTime) >\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayStartsAt!\n                    : course.hasCourseInfo?.startsAt!,\n                ),\n              ) &&\n            Date.parse(dateTime) <\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayEndsAt!\n                    : course.hasCourseInfo?.endsAt!,\n                ),\n              ),\n        )\n\n  const [loadLesson, { loading, data, startPolling, stopPolling }] =\n    useLazyQuery<findLessonByCourseAndDate, findLessonByCourseAndDateVariables>(\n      FIND_LESSON_QUERY,\n      {\n        onCompleted: (data) => console.log(data),\n        onError: (error) => console.error(error),\n      },\n    )\n  // const [loadLesson, { loading, data, startPolling, stopPolling }] =\n  //   useLazyQuery<findLessonByCourseAndDate, findLessonByCourseAndDateVariables>(\n  //     FIND_LESSON_QUERY,\n  //     {\n  //       onCompleted: (data) => console.log(data),\n  //       onError: (error) => console.error(error),\n  //     }\n  //   )\n\n  const course = data?.findLessonByCourseAndDate.lesson?.assignedCourses.filter(\n    (course) => course._id === courseToLoad?._id,\n  )\n\n  const useFake = false\n  useEffect(() => {\n    if (useFake) {\n      loadLesson({\n        variables: {\n          input: { courseId: '6125056b8fde6b861b4a8c6e', lessonDate: date },\n        },\n      })\n    } else if (courseToLoad) {\n      loadLesson({\n        variables: { input: { courseId: courseToLoad._id!, lessonDate: date } },\n      })\n    }\n  }, [courseToLoad, dateTime, loadLesson, useFake])\n\n  useEffect(() => {\n    if (\n      data?.findLessonByCourseAndDate.lesson !== null &&\n      courseToLoad !== undefined\n    )\n      setHasLessonNow!(true)\n  }, [courseToLoad, data])\n\n  if (!me) return <Navigate to=\"/\" />\n  return null\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { Dispatch, SetStateAction, useEffect } from 'react'\nimport { useTime } from '../../../../hooks/useTime'\nimport {\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  findSchoolDayAndLesson,\n  findSchoolDayAndLessonVariables,\n  me_me,\n  me_me_Student,\n  SchoolDayLengthEnum,\n} from '../../../../schemaTypes'\nimport { date, timeFinder } from '../../../../utils'\nimport {\n  OptionTitle,\n  StudentHomeScreenOptions,\n  StudentOptionsLinkButton,\n  StudentHomeScreenOptionsNonLink,\n  StyledLink,\n} from '../../../home/homeStyles'\nimport { DailyAgendaContextProvider } from '../../../lesson/state-n-styles/DailyAgendaContext'\nimport { TodaysLessonPlan } from '../../../lesson/TodaysLessonPlan'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from '../../school-day/SchoolDay'\n\nexport type LessonDisplayProps = {\n  hasLessonNow: boolean\n  setHasLessonNow: Dispatch<SetStateAction<boolean>>\n  me: me_me_Student\n  lessonLink: '' | 'lesson-home'\n}\n\nexport const IS_THERE_A_LESSON_TODAY_QUERY = gql`\n  query findSchoolDayAndLesson($input: FindSchoolDayAndLessonInput!) {\n    findSchoolDayAndLesson(input: $input) {\n      lessonToday\n    }\n  }\n`\nexport const LessonDisplay = ({\n  setHasLessonNow,\n  hasLessonNow,\n  me,\n  lessonLink,\n}: LessonDisplayProps) => {\n  const { loading, data } = useQuery<\n    findSchoolDayAndLesson,\n    findSchoolDayAndLessonVariables\n  >(IS_THERE_A_LESSON_TODAY_QUERY, {\n    variables: {\n      input: {\n        courseId: me.inCourses[0]._id!,\n        todaysDate: new Date().toLocaleDateString(),\n      },\n    },\n    pollInterval: 1000,\n    onCompleted: (data) => {},\n    onError: (error) => console.error(error),\n  })\n  console.log(data)\n  useEffect(() => {\n    data?.findSchoolDayAndLesson.lessonToday\n      ? setHasLessonNow(true)\n      : setHasLessonNow(false)\n  }, [data])\n\n  // const { dateTime } = useTime()\n\n  // const { data: schoolDayData } = useQuery<\n  //   findCurrentSchoolDay,\n  //   findCurrentSchoolDayVariables\n  // >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n  //   variables: {\n  //     input: { date: date },\n  //   },\n  //   pollInterval: 1000,\n  //   onCompleted: (data) => console.log(data),\n  //   onError: (error) => console.error(error),\n  // })\n  // const schoolDayLength =\n  //   schoolDayData?.findSchoolDayByDate.schoolDay?.schoolDayLength!\n\n  // const [courseToLoad] = me.inCourses.filter(\n  //   (course) =>\n  //     Date.parse(dateTime) >\n  //       Date.parse(\n  //         timeFinder(\n  //           schoolDayLength === SchoolDayLengthEnum.HALF\n  //             ? course.hasCourseInfo?.halfDayStartsAt!\n  //             : course.hasCourseInfo?.startsAt!\n  //         )\n  //       ) &&\n  //     Date.parse(dateTime) <\n  //       Date.parse(\n  //         timeFinder(\n  //           schoolDayLength === SchoolDayLengthEnum.HALF\n  //             ? course.hasCourseInfo?.halfDayEndsAt!\n  //             : course.hasCourseInfo?.endsAt!\n  //         )\n  //       )\n  // )\n\n  return (\n    <StudentHomeScreenOptionsNonLink\n      style={{ gridTemplateRows: '1fr 1fr 2fr' }}\n    >\n      <OptionTitle>{new Date().toLocaleDateString()}</OptionTitle>\n      {!hasLessonNow ? (\n        <OptionTitle>No Lesson Today</OptionTitle>\n      ) : (\n        <>\n          <div>\n            <OptionTitle>Today's Lesson Plan</OptionTitle>\n            <DailyAgendaContextProvider>\n              <TodaysLessonPlan setHasLessonNow={setHasLessonNow} />\n            </DailyAgendaContextProvider>\n          </div>\n\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <StyledLink to=\"/lesson-home\">\n              <StudentOptionsLinkButton>Go</StudentOptionsLinkButton>\n            </StyledLink>\n          )}\n        </>\n      )}\n    </StudentHomeScreenOptionsNonLink>\n  )\n}\n","import styled from 'styled-components'\n\nexport const StudentGradeBreakdownContainer = styled.div`\n  display: grid;\n  grid-auto-rows: 1fr;\n  height: 95vh;\n`\n\nexport const StudentGradeBreakdownContainerTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 4vh;\n`\nexport const GradeSectionContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`\nexport const SectionContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  font-size: 3vh;\n  justify-items: center;\n`\nexport const DisclaimerContainer = styled.div`\n  text-align: center;\n  font-size: 2vh;\n`\n","import { findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments } from '../../../../../schemaTypes'\n\nexport type EssayAverageProps = {\n  essays: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments[]\n}\n\nexport const EssayAverage = ({ essays }: EssayAverageProps) => {\n  const essayList = essays.filter(\n    (assignment) =>\n      (assignment.__typename === 'Essay' &&\n        !assignment.exempt &&\n        assignment.finalDraft?.returned) ||\n      // &&\n      // Date.parse(new Date().toLocaleString()) >\n      //   Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)\n      (assignment.__typename === 'Essay' &&\n        !assignment.exempt &&\n        !assignment.finalDraft &&\n        // assignment.markingPeriod === markingPeriod &&\n        Date.parse(new Date().toLocaleString()) >\n          Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`)),\n  )\n\n  if (essayList.length > 0) {\n    const earnedPointsAverage = essayList\n      .map((e) => e.score.earnedPoints)\n      .reduce((a, i) => a + i, 0)\n    const maxPointsAverage = essayList\n      .map((e) => e.score.maxPoints)\n      .reduce((a, i) => a + i, 0)\n    const essayAverage = (earnedPointsAverage / maxPointsAverage) * 100\n\n    return (\n      <div>\n        <div>Essay Average</div>\n        <div>{essayAverage.toFixed(2)}%</div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <div>Essay Average</div>\n        <div>No Essays Yet </div>\n      </div>\n    )\n  }\n}\n","import { findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments } from '../../../../../schemaTypes'\n\nexport type QuizAverageProps = {\n  quizzes: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments[]\n}\n\nexport const QuizAverage = ({ quizzes }: QuizAverageProps) => {\n  const quizList = quizzes.filter(\n    (assignment) =>\n      !assignment.exempt &&\n      Date.parse(new Date().toLocaleString()) >\n        Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n  )\n\n  if (quizList.length > 0) {\n    const earnedPoints = quizList\n      .map((q) => q.score.earnedPoints)\n      .reduce((a, i) => a + i)\n    const maxPoints = quizList\n      .map((q) => q.score.maxPoints)\n      .reduce((a, i) => a + i)\n\n    const quizPointAverage = ((earnedPoints / maxPoints) * 100).toFixed(2)\n\n    return (\n      <div>\n        <div>Quiz Average</div>\n        <div>{quizPointAverage}%</div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <div>Quiz Average</div>\n      </div>\n    )\n  }\n}\n","import { findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments } from '../../../../../schemaTypes'\n\nexport type ReadingGuideAverageProps = {\n  readingGuides: findAllMarkingPeriodGrades_findAllMarkingPeriodGrades_assignments[]\n}\n\nexport const ReadingGuideAverage = ({\n  readingGuides,\n}: ReadingGuideAverageProps) => {\n  const readingGuideList = readingGuides.filter(\n    (assignment) =>\n      !assignment.exempt &&\n      Date.parse(new Date().toLocaleString()) >\n        Date.parse(`${assignment.dueDate}, ${assignment.dueTime}`),\n  )\n  if (readingGuideList.length > 0) {\n    const earnedPoints = readingGuideList\n      .map((rg) => rg.score.earnedPoints)\n      .reduce((a, i) => a + i)\n    const maxPoints = readingGuideList\n      .map((rg) => rg.score.maxPoints)\n      .reduce((a, i) => a + i)\n\n    const readingGuideAverage = ((earnedPoints / maxPoints) * 100).toFixed(2)\n\n    return (\n      <>\n        {readingGuideList.length > 0 && (\n          <div>\n            <div>Reading Guide Average</div>\n            <div>{readingGuideAverage}%</div>\n          </div>\n        )}\n      </>\n    )\n  } else {\n    return (\n      <>\n        {readingGuideList.length > 0 && (\n          <div>\n            <div>Reading Guide Average</div>\n          </div>\n        )}\n      </>\n    )\n  }\n}\n","import { gql, useQuery } from '@apollo/client'\nimport {\n  MarkingPeriodEnum,\n  findResponsibilityPointsByStudentId,\n  findResponsibilityPointsByStudentIdVariables,\n  me_me_Student,\n} from '../../../../../schemaTypes'\nimport { RESPONSIBILITY_POINTS_QUERY } from '../../../teacher/student-information/general-student-information/ResponsibilityPointsDisplay'\n\nexport type MyGradesResponsibilityPointsProps = {\n  me: me_me_Student\n  currentMarkingPeriod: MarkingPeriodEnum\n}\n\n// export const FIND_RESPONSIBLITY_POINTS_QUERY = gql`\n//   query findResponsibilityPointsByStudentIdFor($input: FindResponsibilityPointsByStudentIdInput!) {\n//     findResponsibilityPointsByStudentId(input: $input){\n//     responsibilityPoints {\n//       markingPeriod\n//     respob\n//     }}\n//   }\n// `\n\nexport const MyGradesResponsibilityPoints = ({\n  me,\n  currentMarkingPeriod,\n}: MyGradesResponsibilityPointsProps) => {\n  const { loading, data } = useQuery<\n    findResponsibilityPointsByStudentId,\n    findResponsibilityPointsByStudentIdVariables\n  >(RESPONSIBILITY_POINTS_QUERY, {\n    variables: {\n      input: { studentId: me._id! },\n    },\n\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  const [points] =\n    data?.findResponsibilityPointsByStudentId.responsibilityPoints.filter(\n      (p) => p.markingPeriod === currentMarkingPeriod,\n    )!\n  return (\n    <div style={{}}>\n      <div>Responsibility Points</div>\n      <div>{points.responsibilityPoints.toFixed(2)}</div>\n    </div>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React from 'react'\nimport { FIND_STUDENT_GRADES_QUERY } from '../../../../../hooks/useCalculateGrades'\nimport {\n  GradeTypeEnum,\n  MarkingPeriodEnum,\n  findAllMarkingPeriodGrades,\n  findAllMarkingPeriodGradesVariables,\n  me_me_Student,\n} from '../../../../../schemaTypes'\nimport { EssayAverage } from './EssayAverage'\nimport { QuizAverage } from './QuizAverage'\nimport { ReadingGuideAverage } from './ReadingGuideAverage'\nimport { MyGradesResponsibilityPoints } from './MyGradesResponsibilityPoints'\n\nexport type AssignmentFinderProps = {\n  me: me_me_Student\n  currentMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const AssignmentFinder = ({\n  me,\n  currentMarkingPeriod,\n}: AssignmentFinderProps) => {\n  const { loading, data } = useQuery<\n    findAllMarkingPeriodGrades,\n    findAllMarkingPeriodGradesVariables\n  >(FIND_STUDENT_GRADES_QUERY, {\n    variables: {\n      input: { markingPeriod: currentMarkingPeriod, studentId: me._id! },\n    },\n    onCompleted: (data) =>\n      console.log(data.findAllMarkingPeriodGrades.assignments),\n    onError: (error) => console.error(error),\n  })\n  if (loading)\n    return (\n      <div\n        style={{\n          display: 'grid',\n          gridAutoFlow: 'column',\n          justifyItems: 'center',\n          alignItems: 'center',\n          fontSize: '3vh',\n          textAlign: 'center',\n        }}\n      >\n        Loading...\n      </div>\n    )\n\n  const quizzes = data?.findAllMarkingPeriodGrades.assignments.filter(\n    (a) => a.gradeType === GradeTypeEnum.SECONDARY && a.__typename === 'Quiz',\n  )!\n\n  const readingGuides = data?.findAllMarkingPeriodGrades.assignments.filter(\n    (a) =>\n      a.gradeType === GradeTypeEnum.SECONDARY &&\n      a.__typename === 'ReadingGuide',\n  )!\n\n  const essays = data?.findAllMarkingPeriodGrades.assignments.filter(\n    (a) => a.gradeType === GradeTypeEnum.PRIMARY && a.__typename === 'Essay',\n  )!\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridAutoFlow: 'column',\n        justifyItems: 'center',\n        alignItems: 'center',\n        fontSize: '3vh',\n        textAlign: 'center',\n      }}\n    >\n      <MyGradesResponsibilityPoints\n        me={me}\n        currentMarkingPeriod={currentMarkingPeriod}\n      />\n      {essays.length > 0 && <EssayAverage essays={essays} />}\n      {readingGuides.length > 0 && (\n        <ReadingGuideAverage readingGuides={readingGuides} />\n      )}\n      {quizzes.length > 0 && <QuizAverage quizzes={quizzes} />}\n    </div>\n  )\n}\n","import { useMarkingPeriodContextProvider } from '../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useGradeCalculator } from '../../../../hooks/useGradeCalculator'\nimport { me_me_Student } from '../../../../schemaTypes'\nimport {\n  DisclaimerContainer,\n  StudentGradeBreakdownContainer,\n  StudentGradeBreakdownContainerTitle,\n} from './studentGradeBreakdownStyles'\nimport { AssignmentFinder } from './assignment-grades/AssignmentFinder'\n\nexport type GradesProps = { me: me_me_Student }\n\nexport const Grades = ({ me }: GradesProps) => {\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = markingPeriodState.context\n\n  const { grade, loading } = useGradeCalculator({\n    studentId: me._id!,\n    markingPeriod: currentMarkingPeriod,\n    polling: false,\n    pollInterval: 1000,\n  })\n\n  if (loading) return <div>loading</div>\n\n  return (\n    <StudentGradeBreakdownContainer>\n      <StudentGradeBreakdownContainerTitle>\n        Grade Breakdown\n      </StudentGradeBreakdownContainerTitle>\n\n      <AssignmentFinder me={me} currentMarkingPeriod={currentMarkingPeriod} />\n\n      <StudentGradeBreakdownContainerTitle>\n        Overall Grade: {grade}%\n      </StudentGradeBreakdownContainerTitle>\n      <DisclaimerContainer>\n        <div>\n          Your grades are constantly changing. Look at your averages and find\n          where you can make improvements.\n        </div>\n        <br />\n        <div>\n          These grades are more up to date than Genesis grades. Though I update\n          Genesis everyday, they won't always be accurate as the grades on this\n          website.\n        </div>\n      </DisclaimerContainer>\n    </StudentGradeBreakdownContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { findReadingGuideById_findReadingGuideById_readingGuide_lessonInfo_vocabList } from '../../../../../../schemaTypes'\nimport {\n  ReadingGuideInfoTitle,\n  ReadingGuideInfoBody,\n} from '../state-and-styles/readingGuideStyles'\n\nexport type VocabListProps = {\n  words: findReadingGuideById_findReadingGuideById_readingGuide_lessonInfo_vocabList[]\n}\n\nexport const VocabList = ({ words }: VocabListProps) => {\n  return (\n    <>\n      <ReadingGuideInfoTitle>Vocabulary</ReadingGuideInfoTitle>\n      <ReadingGuideInfoBody>\n        {words.map((word, i) => (\n          <ul key={i}>\n            <li>\n              <span>{word.word}: </span>\n              <span>{word.definition}</span>\n            </li>\n          </ul>\n        ))}\n      </ReadingGuideInfoBody>\n    </>\n  )\n}\n","import React from 'react'\nimport { useReadingGuideToCompleteContextProvider } from '../state-and-styles/ReadingGuideToCompleteContext'\nimport {\n  ReadingGuideInfoTitle,\n  ReadingGuideInfoBody,\n  SectionOrganizationBodyEntry,\n  Required,\n} from '../state-and-styles/readingGuideStyles'\nexport type ReadingGuideHelpProps = {}\n\nexport const ReadingGuideHelp = ({}: ReadingGuideHelpProps) => {\n  const [state] = useReadingGuideToCompleteContextProvider()\n\n  return (\n    <>\n      <ReadingGuideInfoTitle>Help with the Reading Guide</ReadingGuideInfoTitle>\n      <ReadingGuideInfoBody>\n        {state.context.help === 'general' && (\n          <ul>\n            <SectionOrganizationBodyEntry>\n              Complete Reading Guide to the best of your ability. Answer the\n              questions by reading through the assigned text, but if you don't\n              know the answer, please give me your best guess.\n            </SectionOrganizationBodyEntry>\n            <br />\n            {/* <SectionOrganizationBodyEntry>\n              To get full credit you need to complete every question/task that\n              has a red asterisk <Required>*</Required>\n            </SectionOrganizationBodyEntry> */}\n            <br />\n            {/* <SectionOrganizationBodyEntry>\n              If you need help understanding the question/task, click on the\n              question to get help.\n            </SectionOrganizationBodyEntry> */}\n          </ul>\n        )}\n        {state.context.help === 'problems' && (\n          <ul>\n            <SectionOrganizationBodyEntry>\n              Read through the text to find the biggest problem or issue that\n              the people are dealing with.\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              The problem or issue may have been introduced in earlier sections\n              so don't worry if it isn't a brand new problem.\n            </SectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.context.help === 'biggestProblem' && (\n          <ul>\n            <SectionOrganizationBodyEntry>\n              Problem and solution shows a problem or a solution to a problem,\n              or it shows a problem and a solution.\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              Cause and effect shows how situations happened because of\n              something. Frequently, the author with use words like 'because' or\n              'As a result'\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              Compare and Contrast shows the differences and/or similarities\n              between people, situations, actions, etc...\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              Sequence shows the order of how things happened. Be careful this\n              can be confused with cause and effect.\n            </SectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.context.help === 'reasonForBiggestProblem' && (\n          <ul>\n            <SectionOrganizationBodyEntry>\n              Just explain your thinking. What made you think it was one or more\n              of the information structures listed in #1.\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              For example, you might have noticed key word like 'because' and\n              picked cause and effect.\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              The more you write the better you'll get at understanding how\n              information is structured.\n            </SectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.context.help === 'importantPeople' && (\n          <ul>\n            <SectionOrganizationBodyEntry>\n              How did the person or people solve the problem? What actions did\n              they take?\n            </SectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.context.help === 'howArePeopleInvolvedInProblems' && (\n          <ul>\n            <SectionOrganizationBodyEntry>\n              What things could the author have made clearer to help you\n              understand why people made the decisions they made?\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              The more questions you ask the better you will understand how to\n              understand what you read. You learn best when you ask questions.\n            </SectionOrganizationBodyEntry>\n          </ul>\n        )}\n        {state.context.help === 'sectionConsequences' && (\n          <ul>\n            <SectionOrganizationBodyEntry>\n              What things could the author have made clearer to help you\n              understand why people made the decisions they made?\n            </SectionOrganizationBodyEntry>\n            <br />\n            <SectionOrganizationBodyEntry>\n              The more questions you ask the better you will understand how to\n              understand what you read. You learn best when you ask questions.\n            </SectionOrganizationBodyEntry>\n          </ul>\n        )}\n      </ReadingGuideInfoBody>\n    </>\n  )\n}\n","export type ReadingGuideQuestionState =\n  | 'SUMMARY'\n  | 'WHAT_WAS_LEARNED'\n  | 'MAIN_IDEA'\n  | 'SUBJECT_OF_SECTION'\n  | 'WHAT_DID_SUBJECT_DO'\n  | 'HOW_DID_SUBJECT_DO_IT'\n  | 'WHY_DID_SUBJECT_DO_IT'\n  | 'PROBLEM'\n  | 'WHY_PROBLEM'\n  | 'SOLUTION'\n  | 'SOLUTIONS_REASON'\n  | 'ASSUMPTIONS'\n\nexport type ReadingGuideQuestionObjectType = {\n  questionType: ReadingGuideQuestionState\n  question: string\n  directions: string\n}\n\nexport const readingGuideQuestions: ReadingGuideQuestionObjectType[] = [\n  {\n    questionType: 'SUMMARY',\n    question:\n      'Write a brief summary of what happened in the assigned sections?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'WHAT_WAS_LEARNED',\n    question: 'What was the most important thing this lesson had to teach you?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'MAIN_IDEA',\n    question:\n      'In one or two sentences, what was the main idea of the readings?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'SUBJECT_OF_SECTION',\n    question:\n      'Who are the readings about? Your answer can be individuals or groups of people or things if the text does not discuss people. Write as many as you think are important.',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'WHAT_DID_SUBJECT_DO',\n    question: 'What did the person/people you wrote in the last answer do?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'WHY_DID_SUBJECT_DO_IT',\n    question: 'Why did they do it?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'HOW_DID_SUBJECT_DO_IT',\n    question: 'How did they do it?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'PROBLEM',\n    question: 'What problem is being faced by the people in the readings?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'WHY_PROBLEM',\n    question: 'What caused this problem to happen?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'SOLUTION',\n    question:\n      \"How was the problem solved, or did they attempt to solve it? If the reading doesn't show  how they solved it, figure out a way the problem could have been solved.\",\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'SOLUTIONS_REASON',\n    question: 'Why did/would the solution solve the problem',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n  {\n    questionType: 'ASSUMPTIONS',\n    question:\n      'What assumptions are the main characters in the reading making in their solution? If you came up with the solution, what assumptions are you using in your solution?',\n    directions:\n      'Only use the assigned readings. Use of google will result in partial or no credit.',\n  },\n]\n","import React from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  findReadingGuideById_findReadingGuideById_readingGuide,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  submitReadingGuide,\n  submitReadingGuideVariables,\n} from '../../../../../../schemaTypes'\nimport { useNavigate } from 'react-router'\nimport { useReadingGuideToCompleteContextProvider } from '../state-and-styles/ReadingGuideToCompleteContext'\nimport {\n  ReadingGuideAnswerBlock,\n  ReadingGuideQuestionReview,\n  ReadingGuideQuestionReviewAnswer,\n  ReadingGuideQuestionReviewTitle,\n  SmallNextButton,\n  SubmitReadingGuideContainer,\n} from '../state-and-styles/readingGuideStyles'\nimport { responsibilityPointConverter } from '../../../../../../utils'\nimport { useCalculateGrades } from '../../../../../../hooks/useCalculateGrades'\nimport {\n  ReadingGuideQuestionState,\n  readingGuideQuestions,\n} from '../state-and-styles/RadingGuideQuestionState'\n\nexport type SubmitReadingGuideProps = {\n  readingGuideInfo: findReadingGuideById_findReadingGuideById_readingGuide\n  setCurrentIndex: React.Dispatch<React.SetStateAction<number>>\n  readingGuideLevel: ReadingGuideQuestionState[]\n}\n\nexport const SUBMIT_READING_GUIDE_MUTATION = gql`\n  mutation submitReadingGuide($input: SubmitReadingGuideInput!) {\n    submitReadingGuide(input: $input) {\n      readingGuide {\n        _id\n      }\n    }\n  }\n`\n\nexport const SubmitReadingGuide = ({\n  readingGuideInfo,\n  setCurrentIndex,\n  readingGuideLevel,\n}: SubmitReadingGuideProps) => {\n  const navigate = useNavigate()\n  const [state] = useReadingGuideToCompleteContextProvider()\n\n  const { grade, loading: gradeLoading } = useCalculateGrades({\n    studentId: readingGuideInfo.hasOwner._id!,\n    markingPeriod: readingGuideInfo.markingPeriod,\n    polling: false,\n  })\n\n  const [submitReadingGuide] = useMutation<\n    submitReadingGuide,\n    submitReadingGuideVariables\n  >(SUBMIT_READING_GUIDE_MUTATION, {\n    onCompleted: () => {\n      navigate('/dashboard/assignments')\n    },\n    refetchQueries: ['findReadingGuidesToComplete', 'findReadingGuideById'],\n  })\n\n  return (\n    <SubmitReadingGuideContainer>\n      <div style={{ width: '100%' }}>\n        <ReadingGuideQuestionReviewTitle>\n          Review Answers - Click on Answer to Change\n        </ReadingGuideQuestionReviewTitle>\n        <br />\n        <ReadingGuideQuestionReview>\n          {readingGuideInfo.readingGuideFinal?.readingGuideQuestions!.map(\n            (q) => {\n              const [question] = readingGuideQuestions.filter(\n                (question) => question.questionType === q.questionType,\n              )\n              const index = readingGuideLevel.findIndex(\n                (i) => i === question.questionType,\n              )\n\n              return (\n                <ReadingGuideAnswerBlock\n                  key={q.questionType}\n                  onClick={() => setCurrentIndex(index)}\n                >\n                  <div>{question.question}</div>\n                  <br />\n                  <ReadingGuideQuestionReviewAnswer key={q.answer}>\n                    {q.answer}\n                  </ReadingGuideQuestionReviewAnswer>\n                </ReadingGuideAnswerBlock>\n              )\n            },\n          )}\n        </ReadingGuideQuestionReview>\n      </div>\n      <SmallNextButton\n        onClick={() =>\n          submitReadingGuide({\n            variables: {\n              input: {\n                // ...state.context.submitReadingGuideInputs,\n                readingGuideId:\n                  state.context.updateReadingGuideInputs.readingGuideId,\n                completeReadingGuide: true,\n                paperBased: false,\n                late: false,\n                submitTime: new Date().toLocaleString(),\n                responsibilityPoints: responsibilityPointConverter(grade, 5),\n              },\n            },\n          })\n        }\n      >\n        Submit\n      </SmallNextButton>\n    </SubmitReadingGuideContainer>\n  )\n}\n","import React from 'react'\nimport {\n  ReadingGuideButtonArea,\n  ReadingGuideQuestionNavButtons,\n} from '../state-and-styles/readingGuideStyles'\nimport {\n  UPDATE_READING_GUIDE_MUTATION_New,\n  updateReadingGuideNewType,\n} from './CompleteReadingGuideNew'\nimport { useReadingGuideToCompleteContextProvider } from '../state-and-styles/ReadingGuideToCompleteContext'\nimport { useMutation } from '@apollo/client'\nimport {\n  updateReadingGuide,\n  updateReadingGuideVariables,\n} from '../../../../../../schemaTypes'\nimport { ReadingGuideQuestionState } from '../state-and-styles/RadingGuideQuestionState'\n\nexport type NavButtonsProps = {\n  currentIndex: number\n  setCurrentIndex: React.Dispatch<React.SetStateAction<number>>\n  answer: string\n  questionType: ReadingGuideQuestionState\n}\n\nexport const NavButtons = ({\n  currentIndex,\n  setCurrentIndex,\n  answer,\n  questionType,\n}: NavButtonsProps) => {\n  const [state] = useReadingGuideToCompleteContextProvider()\n\n  const [updateReadingGuideNew] = useMutation<\n    updateReadingGuide,\n    updateReadingGuideVariables\n  >(UPDATE_READING_GUIDE_MUTATION_New, {\n    variables: {\n      input: {\n        readingGuideId: state.context.updateReadingGuideInputs.readingGuideId,\n        answer,\n        questionType,\n      },\n    },\n    onCompleted: (data) => 'updated',\n    refetchQueries: ['findReadingGuideById'],\n  })\n\n  return (\n    <>\n      {currentIndex === 0 ? (\n        <ReadingGuideButtonArea>\n          <ReadingGuideQuestionNavButtons\n            onClick={() => updateReadingGuideNew()}\n          >\n            Save\n          </ReadingGuideQuestionNavButtons>\n          <ReadingGuideQuestionNavButtons\n            style={\n              answer === ''\n                ? { background: 'var(--red)' }\n                : { background: 'var(--blue)' }\n            }\n            onClick={() => {\n              setCurrentIndex((c) => c + 1)\n              updateReadingGuideNew()\n            }}\n            disabled={!answer ? true : false}\n          >\n            {!answer ? 'No Answer' : 'Next'}\n          </ReadingGuideQuestionNavButtons>\n        </ReadingGuideButtonArea>\n      ) : (\n        <ReadingGuideButtonArea>\n          <ReadingGuideQuestionNavButtons\n            onClick={() => {\n              setCurrentIndex((c) => c - 1)\n              updateReadingGuideNew()\n            }}\n          >\n            Back\n          </ReadingGuideQuestionNavButtons>\n          <ReadingGuideQuestionNavButtons\n            onClick={() => updateReadingGuideNew()}\n          >\n            Save\n          </ReadingGuideQuestionNavButtons>\n          <ReadingGuideQuestionNavButtons\n            style={\n              answer === ''\n                ? { background: 'var(--red)' }\n                : { background: 'var(--blue)' }\n            }\n            onClick={() => {\n              setCurrentIndex((c) => c + 1)\n              updateReadingGuideNew()\n            }}\n            disabled={!answer ? true : false}\n          >\n            {!answer ? 'No Answer' : 'Next'}\n          </ReadingGuideQuestionNavButtons>\n        </ReadingGuideButtonArea>\n      )}\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  ClarifyingQuestionsTextArea,\n  ReadingGuideQuestion,\n} from '../state-and-styles/readingGuideStyles'\nimport { NavButtons } from './NavButtons'\nimport { findReadingGuideById_findReadingGuideById_readingGuide_readingGuideFinal_readingGuideQuestions } from '../../../../../../schemaTypes'\nimport {\n  ReadingGuideQuestionObjectType,\n  ReadingGuideQuestionState,\n} from '../state-and-styles/RadingGuideQuestionState'\n\nexport type GenericQuestionBlankProps = {\n  currentIndex: number\n  setCurrentIndex: React.Dispatch<React.SetStateAction<number>>\n  questionObject: ReadingGuideQuestionObjectType\n  previousAnswers:\n    | findReadingGuideById_findReadingGuideById_readingGuide_readingGuideFinal_readingGuideQuestions[]\n    | null\n    | undefined\n}\n\nexport const GenericQuestionBlank = ({\n  currentIndex,\n  setCurrentIndex,\n  questionObject,\n  previousAnswers,\n}: GenericQuestionBlankProps) => {\n  // filter for the appropriate answer by questionType. IF questionType doesn't exist return empty string\n  const previousAnswer =\n    previousAnswers?.filter(\n      (q) => q.questionType === questionObject.questionType,\n    ).length === 0\n      ? ''\n      : previousAnswers?.filter(\n          (q) => q.questionType === questionObject.questionType,\n        )![0].answer\n\n  const [answer, setAnswer] = useState<string>(\n    previousAnswer! ? previousAnswer : '',\n  )\n\n  return (\n    <ReadingGuideQuestion style={{ height: '50vh' }}>\n      <div style={{ gridTemplateRows: '1fr 2fr', display: 'grid' }}>\n        <div>\n          <div\n            style={{\n              display: 'grid',\n              alignContent: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            {questionObject.question}\n          </div>\n          <br />\n          <div style={{ fontSize: '2vh', textAlign: 'center' }}>\n            {questionObject.directions}\n          </div>\n        </div>\n        <ClarifyingQuestionsTextArea\n          value={answer}\n          onChange={(e: any) => setAnswer(e.target.value)}\n          autoFocus={true}\n        />\n        <NavButtons\n          setCurrentIndex={setCurrentIndex}\n          currentIndex={currentIndex}\n          answer={answer}\n          questionType={questionObject.questionType}\n        />\n      </div>\n    </ReadingGuideQuestion>\n  )\n}\n","import {\n  ApolloCache,\n  DefaultContext,\n  MutationFunctionOptions,\n  gql,\n} from '@apollo/client'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport {\n  findReadingGuideById_findReadingGuideById_readingGuide,\n  updateReadingGuide,\n  updateReadingGuideVariables,\n  me_me_Student,\n  ReadingGuideMetricEnum,\n} from '../../../../../../schemaTypes'\n\nimport { SubmitReadingGuide } from './SubmitReadingGuide'\n\nimport { ReadingGuideHeader } from '../state-and-styles/readingGuideStyles'\n\nimport { useState } from 'react'\nimport { GenericQuestionBlank } from './GenericQuestionBlank'\nimport {\n  ReadingGuideQuestionState,\n  readingGuideQuestions,\n} from '../state-and-styles/RadingGuideQuestionState'\n\nexport type CompleteReadingGuideNewProps = {\n  readingGuideInfo: findReadingGuideById_findReadingGuideById_readingGuide\n}\n\nexport const UPDATE_READING_GUIDE_MUTATION_New = gql`\n  mutation updateReadingGuideNew($input: UpdateReadingGuideInput!) {\n    updateReadingGuide(input: $input) {\n      readingGuide {\n        _id\n      }\n    }\n  }\n`\n\nexport type updateReadingGuideNewType = (\n  options?:\n    | MutationFunctionOptions<\n        updateReadingGuide,\n        updateReadingGuideVariables,\n        DefaultContext,\n        ApolloCache<any>\n      >\n    | undefined,\n) => void\n\nexport const CompleteReadingGuideNew = ({\n  readingGuideInfo,\n}: CompleteReadingGuideNewProps) => {\n  const me: me_me_Student = useUserContextProvider()\n  const [currentIndex, setCurrentIndex] = useState<number>(0)\n\n  const questions = readingGuideInfo.readingGuideFinal?.readingGuideQuestions\n\n  const basicState: ReadingGuideQuestionState[] = [\n    'SUMMARY',\n    'WHAT_WAS_LEARNED',\n  ]\n\n  const developingState: ReadingGuideQuestionState[] = [\n    'SUBJECT_OF_SECTION',\n    'WHAT_DID_SUBJECT_DO',\n    // 'HOW_DID_SUBJECT_DO_IT',\n    'WHY_DID_SUBJECT_DO_IT',\n  ]\n  const academicState: ReadingGuideQuestionState[] = [\n    'SUBJECT_OF_SECTION',\n    'PROBLEM',\n    'SOLUTION',\n  ]\n  const advancedState: ReadingGuideQuestionState[] = [\n    'SUBJECT_OF_SECTION',\n    'PROBLEM',\n    'SOLUTION',\n    'SOLUTIONS_REASON',\n    'MAIN_IDEA',\n  ]\n  const masterState: ReadingGuideQuestionState[] = [\n    'SUBJECT_OF_SECTION',\n    'PROBLEM',\n    'WHY_PROBLEM',\n    'SOLUTION',\n    'SOLUTIONS_REASON',\n    'ASSUMPTIONS',\n    'MAIN_IDEA',\n  ]\n\n  const readingGuideLevel =\n    me.hasProgressTracker.readingGuideProgressTracker.readingGuideLevel\n\n  const currentState =\n    readingGuideLevel === ReadingGuideMetricEnum.BASIC\n      ? basicState\n      : readingGuideLevel === ReadingGuideMetricEnum.DEVELOPING\n        ? developingState\n        : readingGuideLevel === ReadingGuideMetricEnum.ACADEMIC\n          ? academicState\n          : readingGuideLevel === ReadingGuideMetricEnum.ADVANCED\n            ? advancedState\n            : masterState\n\n  return (\n    <>\n      <ReadingGuideHeader>\n        <div>Reading Guide</div>\n      </ReadingGuideHeader>\n      <>\n        {currentState[currentIndex] === undefined && (\n          <SubmitReadingGuide\n            readingGuideInfo={readingGuideInfo}\n            setCurrentIndex={setCurrentIndex}\n            readingGuideLevel={currentState}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'SUMMARY' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'WHAT_WAS_LEARNED' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'MAIN_IDEA' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'SUBJECT_OF_SECTION' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'WHAT_DID_SUBJECT_DO' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'WHY_DID_SUBJECT_DO_IT' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'HOW_DID_SUBJECT_DO_IT' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'PROBLEM' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'WHY_PROBLEM' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'SOLUTION' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'SOLUTIONS_REASON' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n      <>\n        {currentState[currentIndex] === 'ASSUMPTIONS' && (\n          <GenericQuestionBlank\n            setCurrentIndex={setCurrentIndex}\n            currentIndex={currentIndex}\n            questionObject={\n              readingGuideQuestions.find(\n                (q) => q.questionType === currentState[currentIndex],\n              )!\n            }\n            previousAnswers={questions}\n          />\n        )}\n      </>\n    </>\n  )\n}\n","import { useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router'\nimport { gql, useQuery, useMutation } from '@apollo/client'\nimport {\n  findReadingGuideById,\n  findReadingGuideByIdVariables,\n  me_me_Student,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  startReadingGuide,\n  startReadingGuideVariables,\n} from '../../../../../../schemaTypes'\n\nimport { CompleteReadingGuide } from './CompleteReadingGuide'\nimport { useReadingGuideToCompleteContextProvider } from '../state-and-styles/ReadingGuideToCompleteContext'\nimport { VocabList } from './VocabList'\nimport { ReadingGuideHelp } from './ReadingGuideHelp'\nimport { dueTimeDisplay } from '../../../../../../utils'\nimport {\n  ReadingGuideContainer,\n  ReadingGuideDetailsContainer,\n  ReadingGuideInfoContainer,\n  ReadingGuideToCompleteContainer,\n  ReadingGuideInfoSwitchButtonContainer,\n  ReadingGuideInfoSwitchButton,\n} from '../state-and-styles/readingGuideStyles'\nimport { useGradeCalculator } from '../../../../../../hooks/useGradeCalculator'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport { useClassTimeIndicator } from '../../../../../../hooks/useClassTimeIndicator'\nimport {\n  AssignmentDetailsContainer,\n  AssignmentDetailsPartContainers,\n  AssignmentDetailsReadingInfo,\n  AssignmentDetailsDueDate,\n  AssignmentDetailsGoBackButtonContainer,\n  AssignmentDetailsGoBackButton,\n} from '../../essays/assigned-essays/state-and-styles/assignedEssayStyles'\nimport { useAssignmentsAllowedInClassCheck } from '../../../../../../hooks/useAssignmentsAllowedInClassCheck'\nimport { useCalculateGrades } from '../../../../../../hooks/useCalculateGrades'\nimport { CompleteReadingGuideNew } from './CompleteReadingGuideNew'\n\nexport type ReadingGuideToCompleteProps = {}\n\nexport const FIND_READING_GUIDE_BY_ID_QUERY = gql`\n  query findReadingGuideById($input: FindReadingGuideByIdInput!) {\n    findReadingGuideById(input: $input) {\n      readingGuide {\n        _id\n        readings {\n          readingPages\n          readingSections\n        }\n        dueDate\n        dueTime\n        lessonInfo {\n          vocabList {\n            word\n            definition\n          }\n          assignedSectionIdList\n        }\n        readingGuideFinal {\n          # howIsSectionOrganized\n          # whyWasSectionOrganized\n          # majorIssue\n          # majorSolution\n          # clarifyingQuestions\n          # majorIssueSolved\n          # problems\n          # biggestProblem\n          # reasonForBiggestProblem\n          # importantPeople\n          # howArePeopleInvolvedInProblems\n          # sectionConsequences\n          submitted\n          readingGuideQuestions {\n            answer\n            questionType\n          }\n        }\n        markingPeriod\n        hasOwner {\n          _id\n        }\n      }\n    }\n  }\n`\n\nexport const START_READING_GUIDE_MUTATION = gql`\n  mutation startReadingGuide($input: StartReadingGuideInput!) {\n    startReadingGuide(input: $input) {\n      readingGuide {\n        _id\n      }\n    }\n  }\n`\n\nexport const ReadingGuideToComplete = ({}: ReadingGuideToCompleteProps) => {\n  const me: me_me_Student = useUserContextProvider()\n  const { classTime } = useClassTimeIndicator(me)\n  const { assignmentsAllowedInClass } = useAssignmentsAllowedInClassCheck(me)\n\n  const { readingGuideToComplete } = useParams()\n  const navigate = useNavigate()\n  const [state, event] = useReadingGuideToCompleteContextProvider()\n\n  const [startReadingGuide] = useMutation<\n    startReadingGuide,\n    startReadingGuideVariables\n  >(START_READING_GUIDE_MUTATION, {\n    variables: {\n      input: { readingGuideId: readingGuideToComplete!, paperBased: false },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findReadingGuideById'],\n  })\n\n  const { loading, data } = useQuery<\n    findReadingGuideById,\n    findReadingGuideByIdVariables\n  >(FIND_READING_GUIDE_BY_ID_QUERY, {\n    variables: {\n      input: { readingGuideId: readingGuideToComplete! },\n    },\n    onCompleted: (data) => {\n      if (!data.findReadingGuideById.readingGuide.readingGuideFinal) {\n        startReadingGuide()\n      }\n\n      event({ type: 'SET_READING_GUIDE_ID', payload: readingGuideToComplete! })\n      // if (data.findReadingGuideById.readingGuide.readingGuideFinal)\n      //   if (!data?.findReadingGuideById.readingGuide.readingGuideFinal) {\n      // event({\n      //   type: 'SET_READING_GUIDE_INPUTS',\n      //   payload: {\n      //     readingGuideId: readingGuideToComplete!,\n      // problems:\n      //   data.findReadingGuideById.readingGuide.readingGuideFinal.problems,\n      // biggestProblem:\n      //   data.findReadingGuideById.readingGuide.readingGuideFinal\n      //     .biggestProblem,\n      // reasonForBiggestProblem:\n      //   data.findReadingGuideById.readingGuide.readingGuideFinal\n      //     .reasonForBiggestProblem,\n      // importantPeople:\n      //   data.findReadingGuideById.readingGuide.readingGuideFinal\n      //     .importantPeople,\n      // howArePeopleInvolvedInProblems:\n      //   data.findReadingGuideById.readingGuide.readingGuideFinal\n      //     .howArePeopleInvolvedInProblems,\n      // sectionConsequences:\n      //   data.findReadingGuideById.readingGuide.readingGuideFinal\n      //     .sectionConsequences,\n      // },\n      // payload: {\n      //   clarifyingQuestions:\n      //     data.findReadingGuideById.readingGuide.readingGuideFinal\n      //       .clarifyingQuestions,\n      //   majorIssue:\n      //     data.findReadingGuideById.readingGuide.readingGuideFinal\n      //       .majorIssue,\n      //   howIsSectionOrganized:\n      //     data.findReadingGuideById.readingGuide.readingGuideFinal\n      //       .howIsSectionOrganized,\n      //   majorSolution:\n      //     data.findReadingGuideById.readingGuide.readingGuideFinal\n      //       .majorSolution,\n      //   whyWasSectionOrganized:\n      //     data.findReadingGuideById.readingGuide.readingGuideFinal\n      //       .whyWasSectionOrganized!,\n      //   majorIssueSolved:\n      //     data.findReadingGuideById.readingGuide.readingGuideFinal\n      //       .majorIssueSolved,\n      //   readingGuideId: readingGuideToComplete,\n      // },\n      // })\n\n      // }\n    },\n    onError: (error) => console.error('findReadingGuideById' + error),\n  })\n\n  // const { grade, loading: gradeLoading } = useCalculateGrades({\n  //   studentId: data?.findReadingGuideById.readingGuide.hasOwner._id!,\n  //   markingPeriod: data?.findReadingGuideById.readingGuide.markingPeriod!,\n  //   polling: false,\n  // })\n\n  useEffect(() => {\n    if (classTime && !assignmentsAllowedInClass)\n      navigate('/dashboard/assignments')\n  }, [classTime, navigate, assignmentsAllowedInClass])\n\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      {state.context.updateReadingGuideInputs.readingGuideId && (\n        <ReadingGuideContainer>\n          <>\n            <AssignmentDetailsContainer>\n              <AssignmentDetailsPartContainers>\n                <AssignmentDetailsReadingInfo>\n                  Read pages{' '}\n                  {\n                    data?.findReadingGuideById.readingGuide.readings\n                      .readingPages\n                  }\n                  :{' '}\n                  {\n                    data?.findReadingGuideById.readingGuide.readings\n                      .readingSections\n                  }\n                </AssignmentDetailsReadingInfo>\n              </AssignmentDetailsPartContainers>\n              <AssignmentDetailsPartContainers>\n                <AssignmentDetailsDueDate>\n                  Reading Guide due:{' '}\n                  {data?.findReadingGuideById.readingGuide.dueDate} at{' '}\n                  {data?.findReadingGuideById.readingGuide.dueTime}\n                </AssignmentDetailsDueDate>\n              </AssignmentDetailsPartContainers>\n              <AssignmentDetailsGoBackButtonContainer>\n                <AssignmentDetailsGoBackButton\n                  onClick={() => navigate('/dashboard/assignments')}\n                >\n                  Go Back to Assignments\n                </AssignmentDetailsGoBackButton>\n              </AssignmentDetailsGoBackButtonContainer>\n            </AssignmentDetailsContainer>\n\n            {/* This is the actual Question and Answer Section */}\n            <ReadingGuideToCompleteContainer>\n              <CompleteReadingGuideNew\n                readingGuideInfo={data?.findReadingGuideById.readingGuide!}\n              />\n            </ReadingGuideToCompleteContainer>\n\n            <ReadingGuideInfoContainer>\n              <ReadingGuideInfoSwitchButtonContainer>\n                <ReadingGuideInfoSwitchButton\n                  onClick={() => event({ type: 'SET_HELP_DISPLAY' })}\n                >\n                  Help\n                </ReadingGuideInfoSwitchButton>\n                <ReadingGuideInfoSwitchButton\n                  onClick={() => event({ type: 'SET_VOCAB_DISPLAY' })}\n                >\n                  Vocab\n                </ReadingGuideInfoSwitchButton>\n              </ReadingGuideInfoSwitchButtonContainer>\n              {state.context.vocabDisplay && (\n                <VocabList\n                  words={\n                    data?.findReadingGuideById.readingGuide.lessonInfo!\n                      .vocabList!\n                  }\n                />\n              )}\n              {state.context.helpDisplay && <ReadingGuideHelp />}\n            </ReadingGuideInfoContainer>\n          </>\n        </ReadingGuideContainer>\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { me_me, passwordCheck, passwordCheckVariables } from '../../schemaTypes'\nimport { useLazyQuery, gql } from '@apollo/client'\n\nexport type PasswordCheckProps = {\n  me: me_me\n  setPasswordCheck: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const PASSWORD_CHECK_QUERY = gql`\n  query passwordCheck($input: PasswordCheckInput!) {\n    passwordCheck(input: $input) {\n      firstTimeLoginIn\n    }\n  }\n`\nexport const PasswordCheck = ({ me, setPasswordCheck }: PasswordCheckProps) => {\n  const [passwordCheck] = useLazyQuery<passwordCheck, passwordCheckVariables>(\n    PASSWORD_CHECK_QUERY,\n    {\n      variables: {\n        input: { password: me.password },\n      },\n      onCompleted: (data) => {\n        if (data.passwordCheck.firstTimeLoginIn) {\n          setPasswordCheck(true)\n        } else setPasswordCheck(false)\n      },\n      onError: (error) => console.error(error),\n    },\n  )\n  useEffect(() => {\n    if (me) {\n      passwordCheck()\n    }\n  }, [me, passwordCheck])\n\n  return null\n}\n","import React, { FC, useState } from 'react'\nimport {\n  me_me,\n  changePassword,\n  changePasswordVariables,\n} from '../../schemaTypes'\nimport { gql, useMutation } from '@apollo/client'\nimport { useNavigate } from 'react-router'\nimport {\n  AcceptNewPasswordButton,\n  NewPasswordInput,\n  PasswordChangeContainer,\n  PasswordChangeItemContainers,\n} from './homeStyles'\n\nexport type InitialPasswordChangeProps = { me: me_me }\nexport const CHANGE_PASSWORD_MUTATION = gql`\n  mutation changePassword($input: ChangePasswordInput!) {\n    changePassword(input: $input) {\n      user {\n        _id\n      }\n    }\n  }\n`\nexport const InitialPasswordChange = ({ me }: InitialPasswordChangeProps) => {\n  const [newPassword, setNewPassword] = useState('')\n  const [passwordDoubleCheck, setPasswordDoubleCheck] = useState('')\n  const navigate = useNavigate()\n  const [changePassword] = useMutation<changePassword, changePasswordVariables>(\n    CHANGE_PASSWORD_MUTATION,\n    {\n      variables: {\n        input: {\n          userName: me.userName,\n          oldPassword: 'password',\n          newPassword: passwordDoubleCheck,\n        },\n      },\n      onCompleted: (data) => navigate('/'),\n      refetchQueries: ['me'],\n    },\n  )\n  return (\n    <PasswordChangeContainer>\n      <PasswordChangeItemContainers>\n        <div>Change your password!</div>\n        <NewPasswordInput\n          type=\"password\"\n          autoFocus\n          onChange={(e: any) => {\n            if (e.target.value !== '') {\n              setNewPassword(e.target.value)\n            }\n          }}\n        />\n      </PasswordChangeItemContainers>\n      <PasswordChangeItemContainers>\n        <div>Type your password in again to double check!</div>\n        <NewPasswordInput\n          type=\"password\"\n          onChange={(e: any) => {\n            if (e.target.value !== '') {\n              setPasswordDoubleCheck(e.target.value)\n            }\n          }}\n        />\n      </PasswordChangeItemContainers>\n      {passwordDoubleCheck === newPassword ? (\n        <PasswordChangeItemContainers>\n          <AcceptNewPasswordButton\n            onClick={() => {\n              changePassword()\n            }}\n          >\n            Accept New Password\n          </AcceptNewPasswordButton>\n        </PasswordChangeItemContainers>\n      ) : (\n        <PasswordChangeItemContainers>\n          Passwords don't match\n        </PasswordChangeItemContainers>\n      )}\n    </PasswordChangeContainer>\n  )\n}\n","import React from 'react'\nimport {\n  ContentContainerTitle,\n  DisplayTitle,\n  DoubleSidedContentContainer,\n  IndividualContentContainer,\n} from './handbookStyles'\n\nexport type BehaviorProps = {}\n\nexport const Behavior = ({}: BehaviorProps) => {\n  return (\n    <>\n      <DisplayTitle>Behavior Policy</DisplayTitle>\n      <DoubleSidedContentContainer style={{ fontSize: '2vh' }}>\n        <IndividualContentContainer>\n          <ContentContainerTitle>Positive Behaviors</ContentContainerTitle>\n          <ul>\n            These earn you responsibility points, but they are weighted\n            according to your grade.\n          </ul>\n          <ul>\n            <li>Being prepared and ready for class when class starts</li>\n            <br />\n            <li>Turning in assignments (more for turning them in on time)</li>\n            <br />\n            <li>Getting Quiz Questions correct</li>\n            <br />\n            <li>Answering and asking questions (verbal and written)</li>\n            <br />\n            <li>Going above and beyond helping others</li>\n          </ul>\n        </IndividualContentContainer>\n        <IndividualContentContainer style={{ color: 'var(--red)' }}>\n          <ContentContainerTitle>Negative Behaviors</ContentContainerTitle>\n          <ul>\n            These lose you responsibility points. They are not weighted\n            according to your grade.\n          </ul>\n          <ul>\n            <li>Disrupting Class</li>\n            <br />\n            <li>Refusing to follow directions</li>\n            <br />\n            <li>Using inappropriate language</li>\n            <br />\n            <li>Being late for class without a pass</li>\n            <br />\n            <li>Disrespecting any member of the class</li>\n          </ul>\n        </IndividualContentContainer>\n      </DoubleSidedContentContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport { ContentContainer, DisplayTitle } from './handbookStyles'\n\nexport type ContactInfoProps = {}\n\nexport const ContactInfo = ({}: ContactInfoProps) => {\n  return (\n    <>\n      <DisplayTitle>Contact Information</DisplayTitle>\n      <ContentContainer>\n        <ul>If you need help, please contact me:</ul>\n        <ul>\n          <li>Phone: 856-299-0576 ext.6596</li>\n          <br />\n          <li>Email: rwetherall@pgcpschools.org</li>\n          <br />\n          <li>Come see me in the halls.</li>\n          <br />\n          <li>Come after school and get help.</li>\n          <ul>\n            <li>\n              Most of the time I'll be in my room, but a few times a month I\n              have to be in a meeting.\n            </li>\n            <li>\n              You must be here to get work done. Don't just hang out. I will\n              kick you out if you are disrupting.\n            </li>\n          </ul>\n        </ul>\n      </ContentContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport { ContentContainer, DisplayTitle } from './handbookStyles'\n\nexport type ExpecationsProps = {}\n\nexport const Expecations = ({}: ExpecationsProps) => {\n  return (\n    <>\n      <DisplayTitle>Expectations</DisplayTitle>\n      <ContentContainer>\n        <ul>\n          <li>\n            I expect you to take this class, and school in general, seriously.\n          </li>\n          <br />\n          <li>I expect you to think for yourself.</li>\n          <br />\n          <li>I expect you to be honest and do your own work.</li>\n          <br />\n          <li>\n            I expect that you put your full effort into every task; especially\n            if you “think” you can’t do it.\n          </li>\n          <br />\n          <li>\n            Respect me by doing what is asked of you. I’m only going to ask you\n            to do things that will make class run better and help you become a\n            better student, so please do as you’re asked.\n          </li>\n        </ul>\n      </ContentContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport { ContentContainer, DisplayTitle } from './handbookStyles'\n\nexport type FAQProps = {}\n\nexport const FAQ = ({}: FAQProps) => {\n  return (\n    <>\n      <DisplayTitle>FAQs</DisplayTitle>\n      <ContentContainer>\n        <ul>\n          <li>Do I have to do homework?</li>\n          <ul>\n            <li>\n              You won't be able to pass if you don't. Most of the grade is\n              homework.\n            </li>\n          </ul>\n          <br />\n          <li>Is it hard?</li>\n          <ul>\n            <li>\n              No, but it is challenging which can be easily confused for hard.\n              You don't grow with out challenge, and I'm here to help you with\n              that growth.\n            </li>\n          </ul>\n          <br />\n          <li>Will there be homework every night?</li>\n          <ul>\n            <li>Pretty much. If you do it right, it won't take as long.</li>\n          </ul>\n          <br />\n          <li>Why do I have to do homework every night?</li>\n          <ul>\n            <li>\n              One: It is nearly impossible to learn everything that is being\n              taught in 38-40 minutes a day. That's all we get, so homework is\n              your time to solidify the information in your head.\n            </li>\n            <li>Two: Practice makes perfect.</li>\n          </ul>\n          <br />\n          <li>Why do I need this?</li>\n          <ul>\n            <li>\n              One: Because I'm teaching you how our country works (and the world\n              around us). If you don't like the way things are, you'll never be\n              able to change it without knowing how it works.\n            </li>\n            <li>Two: The more you learn, the easier learning becomes.</li>\n          </ul>\n          <br />\n          <li>Do I give detentions?</li>\n          <ul>\n            <li>\n              Yes. Lateness, disruptions, and negative behaviors will earn you a\n              detention. They start at 2:20 and end at 2:40.{' '}\n            </li>\n          </ul>\n\n          {/* <br />\n          <li></li>\n          <ul>\n            <li></li>\n          </ul>\n          <br /> */}\n        </ul>\n      </ContentContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  ContentContainerTitle,\n  DisplayTitle,\n  IndividualContentContainer,\n  TripleSidedContentContainer,\n} from './handbookStyles'\n\nexport type GradingProps = {}\n\nexport const Grading = ({}: GradingProps) => {\n  return (\n    <>\n      <DisplayTitle>Grading Policy</DisplayTitle>\n      <TripleSidedContentContainer style={{ fontSize: '2vh' }}>\n        <IndividualContentContainer>\n          <ContentContainerTitle>Achievement Grades</ContentContainerTitle>\n          <ul style={{ textAlign: 'center' }}>\n            Open Ended Paragraph Responses (AKA Essays)\n          </ul>\n          <ul>\n            <li>50% of your overall grade.</li>\n            <br />\n            <li>\n              These are test grades because these are your tests. I will show\n              you how to complete them and they will be given every other class\n              for the most part.\n            </li>\n            <br />\n            <li>They will be completed and submitted on this website.</li>\n            <br />\n            <li>\n              Most will be done for homework, but a few will be done in class.\n            </li>\n            <br />\n            <li>\n              They are leveled and wil get more complex as the year goes on.\n            </li>\n          </ul>\n        </IndividualContentContainer>\n        <IndividualContentContainer>\n          <ContentContainerTitle>Processes Grades</ContentContainerTitle>\n          <ul style={{ textAlign: 'center' }}>Reading Guides and Quizzes</ul>\n          <ul>\n            <li>\n              Reading Guides and Quizzes will be averaged together to get your\n              Processes grade (40%).\n            </li>\n            <br />\n            <li>\n              Reading Guides will need to be completed before you start the\n              essay.\n            </li>\n            <br />\n            <li>\n              Reading Guides are leveled and will get more complex and in depth\n              as the year goes on.\n            </li>\n            <br />\n            <li>\n              Quizzes will be given at the beginning of an Introductory Lesson\n              and won't take more than 5 minutes.\n            </li>\n            <ul>\n              <li>\n                They are set up to be shorter if you get the questions right and\n                longer if you get the questions wrong.\n              </li>\n            </ul>\n            <br />\n          </ul>\n        </IndividualContentContainer>\n        <IndividualContentContainer>\n          <ContentContainerTitle>Practices Grades</ContentContainerTitle>\n          <ul style={{ textAlign: 'center' }}>Responsibility Points</ul>\n          <ul>\n            <li>\n              You will get 100 points at the beginning of each marking period.\n              That will equal 10 points of your final grade.\n            </li>\n            <br />\n            <li>\n              You will earn points by doing what you are supposed to be doing.\n              Like completing assignments, being prepared for class, answering\n              questions when called on, etc. Refusing to try or not doing what\n              is asked of you can lose you points. (See \"Behavior\" for more\n              info)\n            </li>\n            <br />\n            <li>\n              For every 10 responsibility points you earn 1 grade point extra\n              credit as long as your over 100 points. You should be adding as\n              many points to your overall grade as you can because this is the\n              only extra credit that I offer.\n            </li>\n          </ul>\n        </IndividualContentContainer>\n      </TripleSidedContentContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  ContentContainer,\n  ContentContainerTitle,\n  DisplayTitle,\n  DoubleSidedContentContainer,\n  IndividualContentContainer,\n  TripleSidedContentContainer,\n} from './handbookStyles'\n\nexport type ProceduresProps = {}\n\nexport const Procedures = ({}: ProceduresProps) => {\n  return (\n    <>\n      <DisplayTitle>Procedures</DisplayTitle>\n      <TripleSidedContentContainer style={{ fontSize: '2vh' }}>\n        <IndividualContentContainer>\n          <ContentContainerTitle>Start of Class</ContentContainerTitle>\n          <ul>\n            <li> Be on time.</li>\n            <br />\n            <li>\n              Be prepared:\n              <ul>\n                <li>Pencil</li>\n                <li>Assignments</li>\n                <li>Laptop</li>\n              </ul>\n            </li>\n            <br />\n            <li>\n              If you need a pencil for class, I will let you borrow one, but you\n              need to put up an electronic device like headphones or a cellphone\n              (no laptops) as collateral.\n            </li>\n          </ul>\n        </IndividualContentContainer>\n        <IndividualContentContainer>\n          <ContentContainerTitle>During Class</ContentContainerTitle>\n          <ul>\n            <li>\n              You must get a drink of water before class, not during class\n              unless you absolutely need a drink.\n            </li>\n            <br />\n            <li>\n              You are allowed 4 trips to the bathroom a marking period. Expect\n              me to say no if you ask to help you keep your 4 emergencies open\n              when emergencies arise. No matter what, only one person can go to\n              the bathroom at a time.\n            </li>\n            <br />\n            <li>Don't get out of your seat without permission.</li>\n            <br />\n            <li>\n              Handraising is only required if someone is already talking. Do\n              your best to not interupt.\n            </li>\n            <br />\n            {/* <li>\n              Lessons will be either an Introductory Lesson or a Reinforcement\n              Lesson and will cover the same information. That way there will be\n              two days for every concept.\n            </li> \n            \n            <ul>\n              <li>\n                Introductory Lessons will start with a quiz from the previous\n                day's Reinforcement Lesson. Then we begin a new concept.\n              </li>\n              <br />\n              <li>\n                Reinforcement Lessons will reinforce what we have learned from\n                the previous day and will be more discussion and critical\n                thinking based.\n              </li>\n              <br /> */}\n            {/* </ul> */}\n            {/* <br /> */}\n          </ul>\n        </IndividualContentContainer>\n        <IndividualContentContainer>\n          <ContentContainerTitle>End of Class</ContentContainerTitle>\n          <ul>\n            <li>\n              Don't pack up until I tell you (probably around 2-3 minutes before\n              the bell).\n            </li>\n            <br />\n            <li>Don't get up to leave until the bell rings.</li>\n          </ul>\n        </IndividualContentContainer>\n      </TripleSidedContentContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  ContentContainerTitle,\n  DisplayTitle,\n  DoubleSidedContentContainer,\n  IndividualContentContainer,\n} from './handbookStyles'\n\nexport type TextAnalysisProps = {}\n\nexport const TextAnalysis = ({}: TextAnalysisProps) => {\n  return (\n    <>\n      <DisplayTitle>Text Analysis Help</DisplayTitle>\n      <DoubleSidedContentContainer style={{ fontSize: '2vh' }}>\n        <IndividualContentContainer>\n          <ContentContainerTitle>Cause and Effect</ContentContainerTitle>\n          <ul>After reading the paragraph and underlining the actions:</ul>\n          <ul>\n            <li>\n              For each action, ask your self: Why did that action happen? If\n              there is another action in the paragraph (or one of the paragraphs\n              that came before) that made it happen; that is the cause.\n              <ul>\n                <li>\n                  One cause may have many effects, so don't think it is always\n                  one cause to an effect.\n                </li>\n              </ul>\n              <li>\n                Use that cause and effect relationship to form your main idea\n                for that paragraph, and write it in your agenda.\n              </li>\n            </li>\n          </ul>\n        </IndividualContentContainer>\n        <IndividualContentContainer>\n          <ContentContainerTitle>Problem and Solution</ContentContainerTitle>\n          <ul>After reading the paragraphs and underlining the actions:</ul>\n          <ul>\n            <li>\n              If there is no obvious cause and effect, look for problems and/or\n              solutions.\n            </li>\n            <ul>\n              <li>\n                Problems are things that get in the way of people's goals.\n              </li>\n            </ul>\n            <li>\n              For your main idea, explain what is getting in the way of people's\n              goals\n            </li>\n            <li>\n              If you can (when the paragraph presents the information), include\n              the problem and solution.\n            </li>\n            <li>\n              If the paragraph only shows the solution, just explain the\n              solution.\n            </li>\n          </ul>\n        </IndividualContentContainer>\n      </DoubleSidedContentContainer>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { me_me_Student } from '../../../../schemaTypes'\nimport { phraseCapitalizer, underscoreEliminator } from '../../../../utils'\nimport { Behavior } from './Behavior'\nimport { ContactInfo } from './ContactInfo'\nimport { Expecations } from './Expecations'\nimport { FAQ } from './FAQ'\nimport { Grading } from './Grading'\nimport {\n  ContentSelectorTabType,\n  HandbookContainer,\n  HandbookContentSelectorContainer,\n  HandbookInformationDisplayContainer,\n  OwnersTitleContainer,\n} from './handbookStyles'\nimport { Procedures } from './Procedures'\nimport { TextAnalysis } from './TextAnalysis'\n\nexport type HandbookProps = { me: me_me_Student }\n\ntype ContentSelectorTabNameProps =\n  | 'Expectations'\n  | 'Grading'\n  | 'Procedures'\n  | 'Contact Info'\n  | 'FAQs'\n  | 'Text Analysis'\n  | 'Behavior'\n\nexport const Handbook = ({ me }: HandbookProps) => {\n  const [contentSelection, setContentSelection] =\n    useState<ContentSelectorTabNameProps>('Expectations')\n  const contentSelectionList: ContentSelectorTabNameProps[] = [\n    'Expectations',\n    'Procedures',\n    'Grading',\n    'Behavior',\n    'FAQs',\n    'Text Analysis',\n    'Contact Info',\n  ]\n\n  return (\n    <HandbookContainer>\n      <OwnersTitleContainer>\n        <div>{me.firstName}'s Social Studies Handbook</div>\n      </OwnersTitleContainer>\n      <HandbookContentSelectorContainer>\n        {contentSelectionList.map((selection) => (\n          <ContentSelectorTabType\n            key={selection}\n            selected={contentSelection === selection}\n            onClick={() => setContentSelection(selection)}\n          >\n            {selection}\n          </ContentSelectorTabType>\n        ))}\n      </HandbookContentSelectorContainer>\n      <HandbookInformationDisplayContainer>\n        {contentSelection === 'Expectations' && <Expecations />}\n        {contentSelection === 'Procedures' && <Procedures />}\n        {contentSelection === 'Grading' && <Grading />}\n        {contentSelection === 'Contact Info' && <ContactInfo />}\n        {contentSelection === 'Behavior' && <Behavior />}\n        {contentSelection === 'Text Analysis' && <TextAnalysis />}\n        {contentSelection === 'FAQs' && <FAQ />}\n      </HandbookInformationDisplayContainer>\n    </HandbookContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport { Routes, Route, useLocation } from 'react-router'\nimport { StudentAssignments } from './assignments/StudentAssignments'\nimport { EssayToComplete } from './assignments/essays/assigned-essays/EssayToComplete'\nimport { StudentEssayContextProvider } from './assignments/essays/assigned-essays/state-and-styles/StudentEssayContext'\nimport { CompletedEssay } from './assignments/essays/completed-essays/CompletedEssay'\n// import { ReadingGuideToComplete } from '../assignments/readingGuides/ReadingGuideToComplete'\nimport { ReadingGuideToCompleteContextProvider } from './assignments/readingGuides/state-and-styles/ReadingGuideToCompleteContext'\nimport { LessonMainMenu } from '../../lesson/LessonMainMenu'\nimport { DailyAgendaContextProvider } from '../../lesson/state-n-styles/DailyAgendaContext'\nimport { StudentAssignmentContextProvider } from './assignments/state-n-styles/StudentAssignmentContext'\nimport { ArticleReviewToComplete } from './assignments/articleReviews/ArticleReviewToComplete'\nimport { ArticleReviewToCompleteContextProvider } from './assignments/articleReviews/state-styles/ArticleReviewToCompleteContext'\nimport { QuizToCompleteContextProvider } from './assignments/quizzes/state-n-styles/QuizToCompleteContext'\nimport { QuizToComplete } from './assignments/quizzes/QuizToComplete'\nimport { StudentBehavior } from './behavior/StudentBehavior'\nimport { logout, me_me_Student } from '../../../schemaTypes'\nimport {\n  StudentHomeScreenOptionsContainer,\n  StudentHomeScreenOptions,\n  OptionTitle,\n  LogoutOption,\n  HomeScreenTitle,\n  HomeScreenContainer,\n} from '../../home/homeStyles'\nimport { StudentGradeDisplay } from '../../home/StudentGradeDisplay'\nimport { TodaysLessonPlan } from '../../lesson/TodaysLessonPlan'\nimport { useMutation } from '@apollo/client'\nimport { LOGOUT_MUTATION } from '../../home/Logout'\nimport { useToggle } from '../../../hooks'\nimport { capitalizer } from '../../../utils'\nimport { Greetings } from '../../home/Greetings'\nimport { LessonDisplay } from './lesson/LessonDisplay'\nimport { Grades } from './grades/Grades'\nimport { ReadingGuideToComplete } from './assignments/readingGuides/assigned-reading-guides/ReadingGuideToComplete'\nimport { PasswordCheck } from '../../home/PasswordCheck'\nimport { usePasswordCheck } from '../../../hooks/usePasswordCheck'\nimport { InitialPasswordChange } from '../../home/InitialPasswordChange'\nimport { Handbook } from './handbook/Handbook'\nimport { CompletedEssayContextProvider } from './assignments/essays/completed-essays/state/CompletedEssayContext'\n\nexport type StudentDashboardHomeProps = {\n  me: me_me_Student\n}\n\nexport const StudentDashboardHome = ({ me }: StudentDashboardHomeProps) => {\n  const { pathname } = useLocation()\n  const [isLoginVisible, toggleLogin] = useToggle(false)\n  const [hasLessonNow, setHasLessonNow] = useState(false)\n  const [passwordCheck, setPasswordCheck] = useState(false)\n  usePasswordCheck({ me, setPasswordCheck })\n\n  const [logoutMutation, { loading }] = useMutation<logout>(LOGOUT_MUTATION, {\n    onCompleted: () => {\n      toggleLogin()\n    },\n    refetchQueries: ['me'],\n  })\n  if (loading) return <div>loading</div>\n  const lessonLink = hasLessonNow ? 'lesson-home' : ''\n\n  const courseName =\n    me.inCourses[0].name === '3rd Period' ||\n    me.inCourses[0].name === '4th Period'\n  // TODO: Need to build a message system\n\n  const message: string = ``\n\n  return (\n    <>\n      {pathname === '/dashboard' && (\n        <>\n          <HomeScreenContainer>\n            <HomeScreenTitle>\n              <div></div>\n              <div style={{ textAlign: 'center' }}>\n                <Greetings phrase={me.firstName} />\n                <br />\n                <br />\n                <div style={{ fontSize: '2.5vh' }}>{message}</div>\n              </div>\n              <div></div>\n            </HomeScreenTitle>\n\n            <>\n              {loading && <div>loading</div>}\n              {passwordCheck ? (\n                <InitialPasswordChange me={me} />\n              ) : (\n                <StudentHomeScreenOptionsContainer>\n                  {/* <StudentHomeScreenOptions to={lessonLink}>\n                  <OptionTitle>Today's Lesson Plan</OptionTitle> */}\n                  <LessonDisplay\n                    setHasLessonNow={setHasLessonNow}\n                    hasLessonNow={hasLessonNow}\n                    me={me}\n                    lessonLink={lessonLink}\n                  />\n                  {/* <StyledLink to='/lesson-home'>\n          <StudentOptionsLinkButton>Go</StudentOptionsLinkButton>\n        </StyledLink> \n                </StudentHomeScreenOptions>*/}\n\n                  <StudentHomeScreenOptions to=\"/dashboard/assignments\">\n                    <OptionTitle>Get Assignments</OptionTitle>\n                    {/* <StyledLink to='/dashboard/assignments'>\n          <StudentOptionsLinkButton>Go</StudentOptionsLinkButton>\n        </StyledLink> */}\n                  </StudentHomeScreenOptions>\n                  <StudentHomeScreenOptions to=\"grades\">\n                    {me && me.__typename === 'Student' && (\n                      <StudentGradeDisplay studentId={me._id!} />\n                    )}\n                  </StudentHomeScreenOptions>\n                  <StudentHomeScreenOptions to=\"behavior-home\">\n                    <OptionTitle>How did I do Today?</OptionTitle>\n                  </StudentHomeScreenOptions>\n                  <StudentHomeScreenOptions to=\"handbook\">\n                    <OptionTitle>Student Handbook</OptionTitle>\n                  </StudentHomeScreenOptions>\n                  <LogoutOption onClick={() => logoutMutation()}>\n                    {loading ? 'Logging Out...' : 'Logout'}\n                  </LogoutOption>\n                </StudentHomeScreenOptionsContainer>\n              )}\n            </>\n          </HomeScreenContainer>\n        </>\n      )}\n      <Routes>\n        <Route\n          path=\"assignments/*\"\n          element={\n            <StudentAssignmentContextProvider>\n              <StudentAssignments />{' '}\n            </StudentAssignmentContextProvider>\n          }\n        />\n        <Route\n          path=\"assignments/essay/toComplete/:essayToComplete\"\n          element={\n            <StudentEssayContextProvider>\n              <EssayToComplete />\n            </StudentEssayContextProvider>\n          }\n        />\n        <Route\n          path=\"assignments/essay/completed/:completedEssay\"\n          element={\n            <CompletedEssayContextProvider>\n              <CompletedEssay />\n            </CompletedEssayContextProvider>\n          }\n        />\n        <Route\n          path=\"assignments/reading-guide/toComplete/:readingGuideToComplete\"\n          element={\n            <ReadingGuideToCompleteContextProvider>\n              <ReadingGuideToComplete />\n            </ReadingGuideToCompleteContextProvider>\n          }\n        />\n        <Route\n          path=\"assignments/articleReview/toComplete/:articleReviewToComplete\"\n          element={\n            <ArticleReviewToCompleteContextProvider>\n              <ArticleReviewToComplete />\n            </ArticleReviewToCompleteContextProvider>\n          }\n        />\n        <Route\n          path=\"assignments/quiz/toComplete/:quizToComplete\"\n          element={\n            <QuizToCompleteContextProvider>\n              <QuizToComplete />\n            </QuizToCompleteContextProvider>\n          }\n        />\n\n        <Route\n          path=\"/lesson-home\"\n          element={\n            <DailyAgendaContextProvider>\n              <LessonMainMenu />\n            </DailyAgendaContextProvider>\n          }\n        />\n\n        <Route path=\"behavior-home\" element={<StudentBehavior me={me} />} />\n        <Route path=\"grades\" element={<Grades me={me} />} />\n        <Route path=\"handbook\" element={<Handbook me={me} />} />\n      </Routes>\n      {/* <Routes></Routes> */}\n    </>\n  )\n}\n","import { useLazyQuery } from '@apollo/client'\nimport { useEffect } from 'react'\nimport { PASSWORD_CHECK_QUERY } from '../components/home/PasswordCheck'\nimport { passwordCheckVariables, passwordCheck, me_me } from '../schemaTypes'\n\nexport type UsePasswordCheckProps = {\n  me: me_me\n  setPasswordCheck: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const usePasswordCheck = ({\n  me,\n  setPasswordCheck,\n}: UsePasswordCheckProps) => {\n  const [passwordCheck, { loading }] = useLazyQuery<\n    passwordCheck,\n    passwordCheckVariables\n  >(PASSWORD_CHECK_QUERY, {\n    variables: {\n      input: { password: me.password },\n    },\n    onCompleted: (data) => {\n      if (data.passwordCheck.firstTimeLoginIn) {\n        setPasswordCheck(true)\n      } else setPasswordCheck(false)\n    },\n    onError: (error) => console.error(error),\n  })\n  useEffect(() => {\n    if (me) {\n      passwordCheck()\n    }\n  }, [me, passwordCheck])\n  return loading\n}\n","import styled from 'styled-components'\n\nexport const BuilderContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr 5fr;\n  /* height: 95vh; */\n  font-size: 1.5rem;\n`\n\nexport const Title = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n  text-decoration: underline;\n  /* height: 10vh; */\n`\nTitle.displayName = 'SectionBuilderTitle'\n\nexport const EditorContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`\nexport const TextandChapterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\n\nexport const CenterItems = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n","import React, { FC, useState } from 'react'\nimport { gql, useMutation } from '@apollo/client'\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { addNewText, addNewTextVariables } from '../../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\n\nexport const ADD_NEW_TEXT_MUTATION = gql`\n  mutation addNewText($input: AddNewTextInput!) {\n    addNewText(input: $input) {\n      text {\n        _id\n      }\n    }\n  }\n`\n\nexport type AddTextProps = {}\n\nexport const AddText: FC<AddTextProps> = () => {\n  const [textTitle, setTextTitle] = useState('')\n  const me = useUserContextProvider()\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [addNewText, { data }] = useMutation<addNewText, addNewTextVariables>(\n    ADD_NEW_TEXT_MUTATION,\n    {\n      variables: { input: { textTitle, ownerId: me._id } },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findTexts'],\n    },\n  )\n  return (\n    <div>\n      <div>Add New Text</div>\n      <input\n        type=\"text\"\n        value={textTitle}\n        onChange={(e: any) => setTextTitle(e.target.value)}\n      />\n      <button onClick={() => addNewText()}> Add Text</button>\n    </div>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  TextSectionProtocolsInput,\n  TextSectionQuestionsInput,\n  TextSectionVocabInput,\n  PageNumbersInput,\n} from '../../../../../../schemaTypes'\n\nexport type sectionBuilderMachineSchema = {\n  states: {\n    text: {}\n    chapter: {}\n    header: {}\n    pages: {}\n    vocab: {}\n    questions: {}\n    protocols: {}\n    create: {}\n  }\n}\n\nexport type sectionBuilderMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'COMPLETE' }\n  | { type: 'SET_TEXT_TITLE'; textTitle: string }\n  | { type: 'SET_CHAPTER_ID'; payload: string }\n  | { type: 'SET_CHAPTER_TITLE'; payload: string }\n  | { type: 'SET_HEADER'; header: string }\n  | { type: 'SET_PAGE_NUMBERS'; payload: PageNumbersInput }\n  | { type: 'SET_VOCAB_LIST'; payload: TextSectionVocabInput }\n  | { type: 'SET_QUESTIONS_LIST'; payload: TextSectionQuestionsInput }\n  | { type: 'SET_PROTOCOLS_LIST'; payload: TextSectionProtocolsInput }\n  | { type: 'RESET_SECTION' }\n\nexport type sectionBuilderMachineContext = {\n  fromText: string\n  fromChapterTitle: string\n  fromChapterId: string\n  hasProtocols: TextSectionProtocolsInput[]\n  hasQuestions: TextSectionQuestionsInput[]\n  hasVocab: TextSectionVocabInput[]\n  header: string\n  pageNumbers: PageNumbersInput\n  numberOfParagraphs: number\n}\n\nexport const sectionBuilderMachine = Machine<\n  sectionBuilderMachineContext,\n  sectionBuilderMachineSchema,\n  sectionBuilderMachineEvent\n>({\n  id: 'sectionBuilder',\n  initial: 'text',\n  context: {\n    fromText: '',\n    fromChapterId: '',\n    fromChapterTitle: '',\n    header: '',\n    pageNumbers: {\n      startingPage: 0,\n      endingPage: 0,\n    },\n    hasProtocols: [],\n    hasQuestions: [],\n    hasVocab: [],\n    numberOfParagraphs: 0,\n  },\n  states: {\n    text: {\n      on: {\n        NEXT: {\n          target: 'chapter',\n          cond: (context) => context.fromText !== '',\n        },\n        SET_TEXT_TITLE: {\n          actions: assign({\n            fromText: (context, event) => (context.fromText = event.textTitle),\n          }),\n        },\n      },\n    },\n    chapter: {\n      on: {\n        NEXT: {\n          target: 'header',\n          cond: (context) => context.fromChapterId !== '',\n        },\n        PREVIOUS: 'text',\n        SET_CHAPTER_ID: {\n          actions: assign({\n            fromChapterId: (context, event) =>\n              (context.fromChapterId = event.payload),\n          }),\n        },\n        SET_CHAPTER_TITLE: {\n          actions: assign({\n            fromChapterTitle: (context, event) =>\n              (context.fromChapterTitle = event.payload),\n          }),\n        },\n      },\n    },\n    header: {\n      on: {\n        NEXT: 'pages',\n        PREVIOUS: 'chapter',\n        SET_HEADER: {\n          actions: assign({\n            header: (context, event) => (context.header = event.header),\n          }),\n        },\n      },\n    },\n    pages: {\n      on: {\n        NEXT: 'vocab',\n        PREVIOUS: 'header',\n        SET_PAGE_NUMBERS: {\n          actions: assign({\n            pageNumbers: (context, event) => {\n              return (context.pageNumbers = event.payload)\n            },\n          }),\n        },\n      },\n    },\n    vocab: {\n      on: {\n        NEXT: 'questions',\n        PREVIOUS: 'pages',\n        SET_VOCAB_LIST: {\n          actions: assign({\n            hasVocab: (context, event) => {\n              console.log(event.payload)\n              return [...context.hasVocab, event.payload]\n            },\n          }),\n        },\n      },\n    },\n    questions: {\n      on: {\n        NEXT: 'protocols',\n        PREVIOUS: 'vocab',\n        SET_QUESTIONS_LIST: {\n          actions: assign({\n            hasQuestions: (context, event) => [\n              ...context.hasQuestions,\n              event.payload,\n            ],\n          }),\n        },\n      },\n    },\n    protocols: {\n      on: {\n        PREVIOUS: 'questions',\n        NEXT: 'create',\n        SET_PROTOCOLS_LIST: {\n          actions: assign({\n            hasProtocols: (context, event) => [\n              ...context.hasProtocols,\n              event.payload,\n            ],\n          }),\n        },\n      },\n    },\n    create: {\n      on: {\n        PREVIOUS: 'protocols',\n        COMPLETE: 'text',\n        RESET_SECTION: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              fromText: '',\n              fromChapterId: '',\n              fromChapterTitle: '',\n              header: '',\n              pageNumbers: {\n                startingPage: 0,\n                endingPage: 0,\n              },\n              hasProtocols: [],\n              hasQuestions: [],\n              hasVocab: [],\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, FC, ReactNode, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport {\n  sectionBuilderMachine,\n  sectionBuilderMachineContext,\n  sectionBuilderMachineEvent,\n} from './sectionBuilderMachine'\nimport { State } from 'xstate'\n\nconst SectionBuilderContext = createContext<any>(undefined)\n\ntype SectionBuilderContextProps = {\n  children: ReactNode\n}\n\nexport const SectionBuilderContextProvider: FC<SectionBuilderContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(sectionBuilderMachine)\n  return (\n    <SectionBuilderContext.Provider\n      value={\n        [state, event] as [\n          State<\n            sectionBuilderMachineContext,\n            sectionBuilderMachineEvent,\n            any,\n            any\n          >,\n          (event: sectionBuilderMachineEvent) => void,\n        ]\n      }\n    >\n      {children}\n    </SectionBuilderContext.Provider>\n  )\n}\n\nexport function useSectionBuilderContextProvider() {\n  const context = useContext(SectionBuilderContext)\n\n  if (context === undefined) {\n    throw new Error(\n      'useSectionBuilderContextProvider must be used within a SectionBuilderContextProvider Component',\n    )\n  }\n  return context as [\n    State<sectionBuilderMachineContext, sectionBuilderMachineEvent, any, any>,\n    (event: sectionBuilderMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { findTexts_findTexts_texts } from '../../../../../schemaTypes'\n\nimport { AddText } from './AddText'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\n\nexport type TextSelectionDisplayProps = {\n  textList: findTexts_findTexts_texts[]\n}\nexport const TextSelectionDisplay: FC<TextSelectionDisplayProps> = ({\n  textList,\n}) => {\n  const [, event] = useSectionBuilderContextProvider()\n  return (\n    <div>\n      <div>Texts: </div>\n      {textList.length > 0 ? (\n        <select\n          onChange={(e: any) => {\n            if (e.target.value !== 'Select your text') {\n              event({ type: 'SET_TEXT_TITLE', textTitle: e.target.value })\n            }\n          }}\n        >\n          <option value={undefined}>Select your text</option>\n          {textList.map((text) => (\n            <option key={text._id!} value={text.textTitle!}>\n              {text.textTitle}\n            </option>\n          ))}\n        </select>\n      ) : (\n        <AddText />\n      )}\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport { findTexts } from '../../../../../schemaTypes'\nimport { TextSelectionDisplay } from './TextSelectionDisplay'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\n\nexport type TextListLoaderProps = {}\n\nexport const FIND_TEXTS_QUERY = gql`\n  query findTexts {\n    findTexts {\n      texts {\n        _id\n        textTitle\n        ownerId\n      }\n    }\n  }\n`\n\nexport const TextListLoader: FC<TextListLoaderProps> = () => {\n  const [, event] = useSectionBuilderContextProvider()\n  const me = useUserContextProvider()\n\n  const { loading, error, data } = useQuery<findTexts>(FIND_TEXTS_QUERY)\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n\n  const texts = data?.findTexts.texts.filter((text) => text.ownerId === me._id)\n\n  return <TextSelectionDisplay textList={texts!} />\n}\n","import React, { FC } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  AddNewChapter,\n  AddNewChapterVariables,\n} from '../../../../../schemaTypes'\nimport { useForm } from '../../../../../hooks'\nimport { State } from 'xstate'\nimport { sectionBuilderMachineContext } from './state/sectionBuilderMachine'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\n\nexport type AddChapterProps = {\n  // state: State<sectionBuilderMachineContext, sectionBuilderMachineEvent, any, any>\n}\n\nexport const ADD_NEW_CHAPTER_MUTATION = gql`\n  mutation AddNewChapter($input: AddNewChapterInput!) {\n    addNewChapter(input: $input) {\n      chapter {\n        _id\n      }\n    }\n  }\n`\n\nexport const AddChapter: FC<AddChapterProps> = () => {\n  const [state] = useSectionBuilderContextProvider()\n  const [chapterValues, setValues] = useForm({\n    title: '',\n    number: '',\n  })\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [addNewChapter, { data }] = useMutation<\n    AddNewChapter,\n    AddNewChapterVariables\n  >(ADD_NEW_CHAPTER_MUTATION, {\n    variables: {\n      input: {\n        textTitle: state.context.fromText,\n        chapterNumber: Number(chapterValues.number),\n        chapterTitle: chapterValues.title,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findChaptersInText'],\n  })\n  return (\n    <div>\n      <div>Add a New Chapter</div>\n      <div>Title</div>\n      <input type=\"text\" name=\"title\" onChange={setValues} />\n      <div>Number: </div>\n      <input type=\"text\" name=\"number\" onChange={setValues} />\n      <button onClick={() => addNewChapter()}>Add Chapter</button>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport {\n  findChaptersInText,\n  findChaptersInTextVariables,\n} from '../../../../../schemaTypes'\n\nimport { State } from 'xstate'\nimport { AddChapter } from './AddChapter'\nimport { useToggle } from '../../../../../hooks'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\n\nexport const FIND_CHAPTERS_IN_TEXT_QUERY = gql`\n  query findChaptersInText($input: FindChaptersInTextInput!) {\n    findChaptersInText(input: $input) {\n      chapters {\n        _id\n        chapterTitle\n      }\n    }\n  }\n`\n\ntype ChapterSelectProps = {\n  // state: State<sectionBuilderFSMContext, sectionBuilderFSMEvent, any, any>\n  // event: (event: sectionBuilderFSMEvent) => void\n}\n\nexport const ChapterSelect: FC<ChapterSelectProps> = () => {\n  const [isAddChapterVisible, toggleVisible] = useToggle(false)\n  const [state, event] = useSectionBuilderContextProvider()\n  const { loading, error, data } = useQuery<\n    findChaptersInText,\n    findChaptersInTextVariables\n  >(FIND_CHAPTERS_IN_TEXT_QUERY, {\n    variables: { input: { textTitle: state.context.fromText } },\n  })\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n  console.log(data)\n  return (\n    <div>\n      <div>Chapter</div>\n      {data?.findChaptersInText.chapters.length! > 0 ? (\n        <>\n          <select\n            onChange={(e: any) => {\n              console.log(e.target.value)\n              if (e.target.value !== 'Choose a Chapter') {\n                const arr = e.target.value.split(',')\n                event({ type: 'SET_CHAPTER_ID', payload: arr[0] })\n                event({ type: 'SET_CHAPTER_TITLE', payload: arr[1] })\n              }\n            }}\n          >\n            <option value={undefined}>Choose a Chapter</option>\n            {data?.findChaptersInText.chapters.map((chapter) => (\n              <option\n                key={chapter._id!}\n                value={[chapter._id!, chapter.chapterTitle]}\n              >\n                {chapter.chapterTitle}\n              </option>\n            ))}\n          </select>\n          <div onClick={toggleVisible}>Add a New Chapter</div>\n          {isAddChapterVisible && <AddChapter />}\n        </>\n      ) : (\n        <AddChapter />\n      )}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\nimport { TextSectionVocabInput } from '../../../../../schemaTypes'\n\nexport const VocabInfo = () => {\n  const [vocabWordInfo, setVocabWordInfo] = useState<TextSectionVocabInput>({\n    word: '',\n    definition: '',\n  })\n  const [state, event] = useSectionBuilderContextProvider()\n\n  return (\n    <form\n      onSubmit={(e: any) => {\n        e.preventDefault()\n        setVocabWordInfo({ word: '', definition: '' })\n      }}\n    >\n      <div>Vocab</div>\n      <div>Word: </div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          setVocabWordInfo({ ...vocabWordInfo, word: e.target.value })\n        }\n      />\n      <div>Definition: </div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          setVocabWordInfo({ ...vocabWordInfo, definition: e.target.value })\n        }\n      />\n      <button\n        type=\"reset\"\n        onClick={() =>\n          event({ type: 'SET_VOCAB_LIST', payload: vocabWordInfo })\n        }\n      >\n        Add Word\n      </button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  questionTypeEnum,\n  TextSectionQuestionsInput,\n  QuestionTypeEnum,\n} from '../../../../../schemaTypes'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\n\nexport const QUESTION_TYPE_ENUM_QUERY = gql`\n  query questionTypeEnum {\n    QuestionTypeEnum: __type(name: \"QuestionTypeEnum\") {\n      enumValues {\n        name\n      }\n    }\n  }\n`\n\nexport const QuestionsInfo = () => {\n  const [questionInfo, setQuestionInfo] = useState<TextSectionQuestionsInput>({\n    question: '',\n    questionType: QuestionTypeEnum.HOW_PROBLEM_SOLUTION,\n  })\n  console.log(questionInfo)\n  const [, event] = useSectionBuilderContextProvider()\n  const { loading, error, data } = useQuery<questionTypeEnum>(\n    QUESTION_TYPE_ENUM_QUERY,\n  )\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n  const questionTypes = data?.QuestionTypeEnum?.enumValues?.map(\n    (value) => value.name,\n  )\n\n  return (\n    <form\n      onSubmit={(e: any) => {\n        e.preventDefault()\n      }}\n    >\n      <div>Questions</div>\n      <div>Question: </div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          setQuestionInfo({ ...questionInfo, question: e.target.value })\n        }\n      />\n      <div>Question Type: </div>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'Pick a Question Type') {\n            setQuestionInfo({ ...questionInfo, questionType: e.target.value })\n          }\n        }}\n      >\n        <option value={undefined}>Pick a Question Type</option>\n        {questionTypes?.map((type) => (\n          <option key={type!} value={type!}>\n            {type!}\n          </option>\n        ))}\n      </select>\n      <button\n        type={\n          questionInfo.question && questionInfo.questionType\n            ? 'reset'\n            : 'button'\n        }\n        onClick={() => {\n          if (questionInfo.question && questionInfo.questionType) {\n            event({ type: 'SET_QUESTIONS_LIST', payload: questionInfo })\n          } else console.log('one or both is blank')\n        }}\n      >\n        Add Question\n      </button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  TextSectionProtocolsInput,\n  AcademicOutcomeTypes,\n  ProtocolActivityTypes,\n} from '../../../../../schemaTypes'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\n\nexport const ProtocolsInfo = () => {\n  const { academicOutcomeTypes, protocolActivityTypes } =\n    useEnumContextProvider()\n  const [protocolValues, setProtocolValues] =\n    useState<TextSectionProtocolsInput>({\n      academicOutcomeTypes: AcademicOutcomeTypes.LOGIC_BUILDING,\n      activityType: ProtocolActivityTypes.THINK_PAIR_SHARE,\n      task: '',\n      isActive: false,\n      completed: false,\n    })\n  const [, event] = useSectionBuilderContextProvider()\n\n  return (\n    <form onSubmit={(e: any) => e.preventDefault}>\n      <div>Protocols</div>\n      <div>Academic Outcome: </div>\n      <select\n        onChange={(e: any) =>\n          setProtocolValues({\n            ...protocolValues,\n            academicOutcomeTypes: e.target.value,\n          })\n        }\n      >\n        <option value={undefined}>Choose One</option>\n        {academicOutcomeTypes?.map((outcome: AcademicOutcomeTypes) => (\n          <option key={outcome} value={outcome}>\n            {outcome}\n          </option>\n        ))}\n      </select>\n      <div>Activity Type:</div>\n      <select\n        onChange={(e: any) =>\n          setProtocolValues({\n            ...protocolValues,\n            activityType: e.target.value,\n          })\n        }\n      >\n        <option value={undefined}>Choose One</option>\n        {protocolActivityTypes?.map((outcome: ProtocolActivityTypes) => (\n          <option key={outcome} value={outcome}>\n            {outcome}\n          </option>\n        ))}\n      </select>\n      <div>Task: </div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          setProtocolValues({ ...protocolValues, task: e.target.value })\n        }\n      />\n      <button\n        type=\"reset\"\n        onClick={() =>\n          event({ type: 'SET_PROTOCOLS_LIST', payload: protocolValues })\n        }\n      >\n        Add Protocol\n      </button>\n    </form>\n  )\n}\n","import React from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createTextSection,\n  createTextSectionVariables,\n} from '../../../../../schemaTypes'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\n\nexport const CREATE_TEXT_SECTION_MUTATION = gql`\n  mutation createTextSection($input: CreateTextSectionInput!) {\n    createTextSection(input: $input) {\n      textSection {\n        _id\n      }\n    }\n  }\n`\n\nexport const CreateTextSection = () => {\n  const [state, event] = useSectionBuilderContextProvider()\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [createTextSection, { data }] = useMutation<\n    createTextSection,\n    createTextSectionVariables\n  >(CREATE_TEXT_SECTION_MUTATION, {\n    variables: {\n      input: {\n        fromChapterId: state.context.fromChapterId,\n        header: state.context.header,\n        pageNumbers: state.context.pageNumbers,\n        hasProtocols: state.context.hasProtocols,\n        hasQuestions: state.context.hasQuestions,\n        hasVocab: state.context.hasVocab,\n        numberOfParagraphs: state.context.numberOfParagraphs,\n      },\n    },\n    onCompleted: () => {\n      event({ type: 'RESET_SECTION' })\n      event({ type: 'COMPLETE' })\n    },\n    refetchQueries: ['FindTextSectionById'],\n  })\n  return <button onClick={() => createTextSection()}>Add Section</button>\n}\n","import React from 'react'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\nimport styled from 'styled-components'\n\nexport const SectionBuilderInfoDisplay = () => {\n  const [state] = useSectionBuilderContextProvider()\n  console.log(state.context)\n  return (\n    <SectionBuilderDisplayContainer>\n      <FromTextAndChapterRow>\n        <FromTextAndChapterSection>\n          <div>Title: </div>\n          <div>{state.context.fromText ? state.context.fromText : null}</div>\n        </FromTextAndChapterSection>\n        <FromTextAndChapterSection>\n          <div>Chapter: </div>\n          <div>\n            {state.context.fromChapterTitle\n              ? state.context.fromChapterTitle\n              : null}\n          </div>\n        </FromTextAndChapterSection>\n        <FromTextAndChapterSection>\n          <div>Section Header: </div>\n          <div>{state.context.header ? state.context.header : null}</div>\n        </FromTextAndChapterSection>\n        <FromTextAndChapterSection>\n          <div>Pages: </div>\n          {state.context.pageNumbers ? (\n            <div>\n              {state.context.pageNumbers.startingPage} -{' '}\n              {state.context.pageNumbers.endingPage}\n            </div>\n          ) : null}\n        </FromTextAndChapterSection>\n      </FromTextAndChapterRow>\n      <SectionBuilderDisplayLevelTwo>\n        {/* VocabBox */}\n        <LevelTwoContainers>\n          <LevelTwoTitleBoxes>\n            <div>Vocab</div>\n          </LevelTwoTitleBoxes>\n          <LevelTwoContainerVocabAndQuestions>\n            {state.context.hasVocab.map((word, i) => (\n              <div key={i}>\n                {word.word}: {word.definition}\n              </div>\n            ))}\n          </LevelTwoContainerVocabAndQuestions>\n        </LevelTwoContainers>\n        {/* QuestionsBox */}\n        <LevelTwoContainers>\n          <LevelTwoTitleBoxes>\n            <div>Questions</div>\n          </LevelTwoTitleBoxes>\n          <LevelTwoContainerVocabAndQuestions>\n            {state.context.hasQuestions.map((question, i) => (\n              <div key={i}>{question.question}</div>\n            ))}\n          </LevelTwoContainerVocabAndQuestions>\n        </LevelTwoContainers>\n        {/* ProtocolBox */}\n        <LevelTwoContainers>\n          <LevelTwoTitleBoxes>\n            <div>Protocols</div>\n          </LevelTwoTitleBoxes>\n          <LevelTwoContainerProtocols>\n            {state.context.hasProtocols.map((protocol, i) => (\n              <div key={i}>\n                {protocol.activityType} - {protocol.task}\n              </div>\n            ))}\n          </LevelTwoContainerProtocols>\n        </LevelTwoContainers>\n      </SectionBuilderDisplayLevelTwo>\n    </SectionBuilderDisplayContainer>\n  )\n}\n\nexport const SectionBuilderDisplayContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 9fr;\n`\nexport const SectionBuilderDisplayLevelTwo = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  border: 1px solid var(--blue);\n`\n\nexport const FromTextAndChapterRow = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  height: 5vh;\n`\n\nexport const FromTextAndChapterSection = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nexport const LevelTwoContainers = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n`\nexport const LevelTwoTitleBoxes = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n`\nexport const LevelTwoContainerVocabAndQuestions = styled(LevelTwoContainers)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  border-right: 1px solid var(--blue);\n  overflow-y: scroll;\n  overflow-x: hidden;\n`\nexport const LevelTwoContainerProtocols = styled(LevelTwoContainers)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`\n","import styled from 'styled-components'\n\nexport const CreateAssignmentsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  height: 95vh;\n`\n\nexport const CourseSelectContainer = styled.div`\n  background: var(--blue);\n  color: var(--white);\n  font-size: 4vh;\n  cursor: pointer;\n  display: grid;\n  border-top: 3px solid var(--white);\n  grid-template-rows: 5fr 1fr;\n`\n\nexport const BackContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const AssignmentCreatorContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n`\n\nexport const CreateAssignmentTitle = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 4vh;\n`\nexport const AssignmentTypeSelectorContainer = styled.div`\n  font-size: 3vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\n\nexport type AssignmentTypeTypes = {\n  selected: boolean\n}\n\nexport const AssignmentType = styled.div<AssignmentTypeTypes>`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-bottom: ${({ selected }) =>\n    selected ? '3px solid var(--blue)' : '3px solid var(--white)'};\n  color: ${({ selected }) => (selected ? 'var(--blue)' : 'var(--grey)')};\n`\n\nexport const LessonInformationSelectContainer = styled.div`\n  height: 95%;\n  display: grid;\n  grid-template-rows: 5fr 1fr;\n`\n\nexport const SelectorContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`\n\nexport const SelectorTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 3vh;\n  text-decoration: underline;\n`\nexport const ItemSelectorContainer = styled.div`\n  font-size: 2.5vh;\n  cursor: pointer;\n  display: grid;\n  grid-auto-rows: 10%;\n  padding-left: 5%;\n  height: 100%;\n  overflow: scroll;\n`\nexport const SelectableItem = styled.div`\n  &:hover {\n    text-decoration: underline;\n  }\n`\nexport const SelectButtonContainer = styled.div`\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\nexport const SelectButton = styled.button`\n  width: 70%;\n  height: 30%;\n  font-size: 2.5vh;\n  color: var(--white);\n  background-color: var(--blue);\n`\nexport const EssayInformationSelectContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 3fr 1fr;\n`\n\nexport const DateAssignContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const DateAssignItemContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  width: 85%;\n  grid-auto-flow: column;\n`\n\nexport const LinkCoursesContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n`\nexport const LinkCoursesHeader = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 2vh;\n  text-decoration: underline;\n`\nexport const LinkCoursesCheckbox = styled.input`\n  /* visibility: hidden; */\n  &:checked {\n    background-color: var(--blue);\n  }\n`\n\nexport const CoursesCheckBoxContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  align-self: center;\n  justify-items: center;\n  width: 100%;\n`\nexport const DateAssignInput = styled.input`\n  background-color: var(--white);\n  color: var(--blue);\n  font-size: 1.4vh;\n  border: 1px solid var(--blue);\n`\n\nexport const DateAssignSelect = styled.select`\n  background-color: var(--white);\n  color: var(--blue);\n  font-size: 1.4vh;\n  border: 1px solid var(--blue);\n`\nexport const QuestionSelectContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n`\n\nexport const QuestionSelector = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 3fr;\n  padding: 2%;\n`\nexport const MaxPointSelectorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\nexport const GeneralInput = styled.input`\n  background-color: var(--white);\n  color: var(--blue);\n  font-size: 1.4vh;\n  border: 1px solid var(--blue);\n`\n\nexport const AddQuestionForm = styled.form`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-auto-rows: 20%;\n`\nexport const AddQuestionTitle = styled.div`\n  font-size: 2vh;\n  text-decoration: underline;\n`\n\nexport const AddQuestionSelect = styled.select`\n  background-color: var(--white);\n  color: var(--blue);\n  font-size: 1.4vh;\n  border: 1px solid var(--blue);\n  width: 35vw;\n`\nexport const AddQuestionLevelSelect = styled(AddQuestionSelect)`\n  width: 15vw;\n`\nexport const SelectedQuestionContainer = styled.div`\n  grid-template-rows: 1fr 5fr;\n  border: 1px solid var(--blue);\n  margin: 1%;\n  padding-left: 1%;\n  padding-bottom: 1%;\n  padding-right: 1%;\n`\n\nexport const SelectedQuestionTitle = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.7vh;\n`\nexport const SelectedQuestionsDisplay = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  height: 93%;\n`\nexport const DisplayedQuestionWritingLevelContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n`\n\nexport type WritingLevelTitleContainerProps = { bottom: boolean }\n\nexport const WritingLevelTitleContainer = styled.div<WritingLevelTitleContainerProps>`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-top: 1px solid var(--grey);\n  border-left: 1px solid var(--grey);\n  border-bottom: ${({ bottom }) => (bottom ? '1px solid var(--grey)' : 'none')};\n`\n\nexport type DisplayedQuestionsProps = {\n  bottom: boolean\n}\n\nexport const DisplayedQuestions = styled.div<DisplayedQuestionsProps>`\n  border: 1px solid var(--grey);\n  border-bottom: ${({ bottom }) => (bottom ? '1px solid var(--grey)' : 'none')};\n  overflow: scroll;\n  height: 9vh;\n`\nexport const Question = styled.div`\n  padding-left: 1%;\n`\n\nexport const ReadingGuideInformationSelectContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 0fr 1fr;\n`\n\nexport const MaxPointsForReadingGuideContainer = styled.div`\n  height: 10vh;\n`\n","import React from 'react'\nimport { Title } from './state/sectionBuilderStyles'\nimport { TextListLoader } from './TextListLoader'\nimport { ChapterSelect } from './ChapterSelect'\nimport { VocabInfo } from './VocabInfo'\nimport { QuestionsInfo } from './QuestionsInfo'\nimport { ProtocolsInfo } from './ProtocolsInfo'\nimport { CreateTextSection } from './CreateTextSection'\nimport { useSectionBuilderContextProvider } from './state/SectionBuilderContext'\nimport { SectionBuilderInfoDisplay } from './SectionBuilderInfoDisplay'\nimport styled from 'styled-components'\nimport { BackContainer } from '../../assignments/create-assignments/state-and-styles/createAssignmentsStyles'\nimport { useNavigate } from 'react-router'\n\nexport const SectionBuilder = () => {\n  const navigate = useNavigate()\n  const [state, event] = useSectionBuilderContextProvider()\n\n  return (\n    <div>\n      <Title>\n        <BackContainer>\n          <div onClick={() => navigate('/dashboard/lessons')}>Back</div>\n        </BackContainer>\n        <div>Section Builder</div>\n      </Title>\n      {/* <DisplayInfoContainter> */}\n      <div>\n        <SectionBuilderInfoDisplay />\n      </div>\n\n      {/* </DisplayInfoContainter> */}\n      <div>\n        {state.matches('text') && (\n          <div\n            style={{\n              height: '30vh',\n              display: 'grid',\n              gridTemplateColumns: '5fr 1fr',\n            }}\n          >\n            <TextListLoader />\n            <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n          </div>\n        )}\n        {state.matches('chapter') && (\n          <>\n            <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n            <ChapterSelect />\n            <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n          </>\n        )}\n        {state.matches('header') && (\n          <div>\n            <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n            <div>Header:</div>\n            <input\n              type=\"text\"\n              name=\"header\"\n              onChange={(e: any) => {\n                if (e.target.value !== '') {\n                  event({ type: 'SET_HEADER', header: e.target.value })\n                }\n              }}\n            />\n            <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n          </div>\n        )}\n        {state.matches('pages') && (\n          <>\n            <div>\n              <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n              <div>Pages:</div>\n              <input\n                type=\"text\"\n                name=\"startingPage\"\n                onChange={(e) => {\n                  if (Number(e.target.value) > 0) {\n                    event({\n                      type: 'SET_PAGE_NUMBERS',\n                      payload: {\n                        ...state.context.pageNumbers,\n                        startingPage: Number(e.target.value),\n                      },\n                    })\n                  }\n                }}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                name=\"endingPage\"\n                onChange={(e: any) => {\n                  if (Number(e.target.value) > 0) {\n                    event({\n                      type: 'SET_PAGE_NUMBERS',\n                      payload: {\n                        ...state.context.pageNumbers,\n                        endingPage: Number(e.target.value),\n                      },\n                    })\n                  }\n                }}\n              />\n              <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n            </div>\n          </>\n        )}\n        {state.matches('vocab') && (\n          <div>\n            <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n            <VocabInfo />\n            <button\n              onClick={() => {\n                // if (state.context.hasVocab.length > 0) {\n                event({ type: 'NEXT' })\n                // }\n              }}\n            >\n              Next\n            </button>\n          </div>\n        )}\n        {state.matches('questions') && (\n          <div>\n            <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n            <QuestionsInfo />\n            <button\n              onClick={() => {\n                // if (state.context.hasQuestions.length > 0) {\n                event({ type: 'NEXT' })\n                // }\n              }}\n            >\n              Next\n            </button>\n          </div>\n        )}\n        {state.matches('protocols') && (\n          <div>\n            <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n            <ProtocolsInfo />\n            <button\n              onClick={() => {\n                // if (state.context.hasProtocols.length > 0) {\n                event({ type: 'NEXT' })\n                // }\n              }}\n            >\n              Next\n            </button>\n          </div>\n        )}\n        {state.matches('create') && (\n          <div>\n            <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n            <CreateTextSection />\n            {/* <button onClick={() => event({ type: 'NEXT' })}>Next</button> */}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport const DisplayInfoContainter = styled.div`\n  /* height: 50vh; */\n`\n","import {\n  TextSectionProtocolsInput,\n  TextSectionQuestionsInput,\n  TextSectionVocabInput,\n  PageNumbersInput,\n  CreateQuizQuestionInput,\n  QuizQuestionDifficultyLevelEnum,\n  QuizQuestionTypeEnum,\n  AnswerListInput,\n} from '../../../../../../schemaTypes'\nimport { Machine, assign } from 'xstate'\n\nexport type sectionEditorMachineSchema = {\n  states: {\n    textSectionValues: {}\n    update: {\n      states: {\n        idle: {}\n        editProtocol: {}\n        editQuestion: {}\n        editVocabWord: {}\n        addProtocol: {}\n        addQuestion: {}\n        addVocabWord: {}\n        addQuizQuestion: {}\n      }\n    }\n  }\n}\n\nexport type sectionEditorMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'IDLE' }\n  | { type: 'PROTOCOL_EDITOR' }\n  | { type: 'QUESTION_EDITOR' }\n  | { type: 'VOCAB_WORD_EDITOR' }\n  | { type: 'PROTOCOL_ADDER' }\n  | { type: 'QUESTION_ADDER' }\n  | { type: 'VOCAB_WORD_ADDER' }\n  | { type: 'CREATE_QUIZ_QUESTION' }\n  | { type: 'SHOW'; payload: boolean }\n  | { type: 'SET_CURRENT_INDEX'; payload: number }\n  | { type: 'SET_SECTION_ID'; payload: string }\n  | { type: 'SET_TEXT_TITLE'; textTitle: string }\n  | { type: 'SET_CHAPTER_ID'; payload: string }\n  | { type: 'SET_HEADER'; header: string }\n  | { type: 'SET_ORDER_NUMBER'; payload: null | number }\n  | { type: 'SET_NUMBER_OF_PARAGRAPHS'; payload: number }\n  | { type: 'SET_PAGE_NUMBERS'; payload: PageNumbersInput }\n  | { type: 'SET_VOCAB_LIST'; payload: TextSectionVocabInput[] }\n  | {\n      type: 'SET_VOCAB_WORD_TO_EDIT'\n      payload: TextSectionVocabInput | null\n      index: number | null\n    }\n  | {\n      type: 'EDIT_VOCAB_WORD'\n      payload: TextSectionVocabInput\n    }\n  | { type: 'SET_QUESTIONS_LIST'; payload: TextSectionQuestionsInput[] }\n  | {\n      type: 'SET_QUESTION_TO_EDIT'\n      payload: TextSectionQuestionsInput | null\n      index: number | null\n    }\n  | { type: 'EDIT_QUESTION'; payload: TextSectionQuestionsInput }\n  | { type: 'SET_PROTOCOLS_LIST'; payload: TextSectionProtocolsInput[] }\n  | {\n      type: 'SET_PROTOCOL_TO_EDIT'\n      payload: TextSectionProtocolsInput | null\n      index: number | null\n    }\n  | { type: 'EDIT_PROTOCOL'; payload: TextSectionProtocolsInput }\n  | {\n      type: 'SET_QUIZ_QUESTION_INPUT'\n      keyName: string\n      payload:\n        | string\n        | AnswerListInput[]\n        | QuizQuestionDifficultyLevelEnum\n        | QuizQuestionTypeEnum\n    }\n  | { type: 'RESET_QUIZ_QUESTION_INPUTS' }\n\nexport type sectionEditorMachineContext = {\n  fromText: string\n  fromChapterTitle: string\n  fromChapterId: string\n  sectionId: string\n  hasProtocols: TextSectionProtocolsInput[]\n  protocolToEdit: TextSectionProtocolsInput | null\n  protocolToEditIndex: number | null\n  hasQuestions: TextSectionQuestionsInput[]\n  questionToEdit: TextSectionQuestionsInput | null\n  questionToEditIndex: number | null\n  hasVocab: TextSectionVocabInput[]\n  vocabWordToEdit: TextSectionVocabInput | null\n  vocabWordToEditIndex: number | null\n  header: string\n  pageNumbers: PageNumbersInput\n  isHidden: boolean\n  currentIndex: number\n  addItem: boolean\n  quizQuestion: CreateQuizQuestionInput\n  orderNumber: null | number\n  numberOfParagraphs: number\n}\n\nexport const sectionEditorMachine = Machine<\n  sectionEditorMachineContext,\n  sectionEditorMachineSchema,\n  sectionEditorMachineEvent\n>({\n  id: 'sectionEditor',\n  initial: 'textSectionValues',\n  type: 'parallel',\n  context: {\n    fromText: '',\n    fromChapterId: '',\n    fromChapterTitle: '',\n    sectionId: '',\n    header: '',\n    orderNumber: null,\n    numberOfParagraphs: 0,\n    pageNumbers: {\n      startingPage: 0,\n      endingPage: 0,\n    },\n    hasProtocols: [],\n    protocolToEdit: null,\n    protocolToEditIndex: null,\n    hasQuestions: [],\n    questionToEdit: null,\n    questionToEditIndex: null,\n    hasVocab: [],\n    vocabWordToEdit: null,\n    vocabWordToEditIndex: null,\n    isHidden: true,\n    currentIndex: -1,\n    addItem: false,\n    quizQuestion: {\n      answerList: [],\n      associatedTextSectionId: '',\n      difficultyLevel: QuizQuestionDifficultyLevelEnum.EASY,\n      question: '',\n      questionType: QuizQuestionTypeEnum.MULTIPLE_CHOICE,\n    },\n  },\n\n  states: {\n    textSectionValues: {\n      on: {\n        IDLE: '#sectionEditor.update.idle',\n        PROTOCOL_EDITOR: '#sectionEditor.update.editProtocol',\n        QUESTION_EDITOR: '#sectionEditor.update.editQuestion',\n        VOCAB_WORD_EDITOR: '#sectionEditor.update.editVocabWord',\n        PROTOCOL_ADDER: '#sectionEditor.update.addProtocol',\n        QUESTION_ADDER: '#sectionEditor.update.addQuestion',\n        VOCAB_WORD_ADDER: '#sectionEditor.update.addVocabWord',\n        SET_TEXT_TITLE: {\n          actions: assign((context, event) => {\n            return { ...context, fromText: event.textTitle }\n          }),\n        },\n        SET_CHAPTER_ID: {\n          actions: assign((context, event) => {\n            return { ...context, fromChapterId: event.payload }\n          }),\n        },\n        SHOW: {\n          actions: assign((context, event) => {\n            return { ...context, isHidden: event.payload }\n          }),\n        },\n        SET_CURRENT_INDEX: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, currentIndex: evt.payload }\n          }),\n        },\n        SET_SECTION_ID: {\n          actions: assign((context, event) => {\n            return { ...context, sectionId: event.payload }\n          }),\n        },\n        SET_HEADER: {\n          actions: assign((context, event) => {\n            return { ...context, header: event.header }\n          }),\n        },\n        SET_ORDER_NUMBER: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              orderNumber: evt.payload,\n            }\n          }),\n        },\n        SET_NUMBER_OF_PARAGRAPHS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              numberOfParagraphs: evt.payload,\n            }\n          }),\n        },\n        SET_PAGE_NUMBERS: {\n          actions: assign((context, event) => {\n            return { ...context, pageNumbers: event.payload }\n          }),\n        },\n        SET_VOCAB_LIST: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, hasVocab: evt.payload }\n          }),\n        },\n        SET_VOCAB_WORD_TO_EDIT: {\n          actions: assign((ctx, evt) => {\n            // console.log(evt.index)\n            return {\n              ...ctx,\n              vocabWordToEdit: evt.payload,\n              vocabWordToEditIndex: evt.index,\n            }\n          }),\n        },\n        EDIT_VOCAB_WORD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              vocabWordToEdit: evt.payload,\n            }\n          }),\n        },\n        SET_QUESTIONS_LIST: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, hasQuestions: evt.payload }\n          }),\n        },\n        SET_QUESTION_TO_EDIT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              questionToEdit: evt.payload,\n              questionToEditIndex: evt.index,\n            }\n          }),\n        },\n        EDIT_QUESTION: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              questionToEdit: evt.payload,\n            }\n          }),\n        },\n        SET_PROTOCOLS_LIST: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, hasProtocols: evt.payload }\n          }),\n        },\n        SET_PROTOCOL_TO_EDIT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              protocolToEdit: evt.payload,\n              protocolToEditIndex: evt.index,\n            }\n          }),\n        },\n        EDIT_PROTOCOL: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              protocolToEdit: evt.payload,\n            }\n          }),\n        },\n        SET_QUIZ_QUESTION_INPUT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              quizQuestion: { ...ctx.quizQuestion, [evt.keyName]: evt.payload },\n            }\n          }),\n        },\n        RESET_QUIZ_QUESTION_INPUTS: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              quizQuestion: {\n                ...ctx.quizQuestion,\n                answerList: [],\n                difficultyLevel: QuizQuestionDifficultyLevelEnum.EASY,\n                question: '',\n                questionType: QuizQuestionTypeEnum.MULTIPLE_CHOICE,\n              },\n            }\n          }),\n        },\n      },\n    },\n    update: {\n      initial: 'idle',\n      states: {\n        idle: {\n          on: {\n            PROTOCOL_EDITOR: 'editProtocol',\n            QUESTION_EDITOR: 'editQuestion',\n            VOCAB_WORD_EDITOR: 'editVocabWord',\n            PROTOCOL_ADDER: 'addProtocol',\n            QUESTION_ADDER: 'addQuestion',\n            VOCAB_WORD_ADDER: 'addVocabWord',\n          },\n        },\n        editProtocol: {\n          on: {},\n        },\n        editQuestion: {},\n        editVocabWord: {},\n        addProtocol: {},\n        addQuestion: {},\n        addVocabWord: {},\n        addQuizQuestion: {},\n      },\n    },\n  },\n})\n","import React, { FC, createContext, ReactNode, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\n\nimport { State } from 'xstate'\nimport {\n  sectionEditorMachine,\n  sectionEditorMachineContext,\n  sectionEditorMachineEvent,\n} from './sectionEditorMachine'\n\nconst SectionEditorContext = createContext<any>(undefined)\n\ntype SectionEditorContextProps = {\n  children: ReactNode\n}\n\nexport const SectionEditorContextProvider: FC<SectionEditorContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(sectionEditorMachine)\n  return (\n    <SectionEditorContext.Provider value={[state, event]}>\n      {children}\n    </SectionEditorContext.Provider>\n  )\n}\n\nexport function useSectionEditorContextProvider() {\n  const context = useContext(SectionEditorContext)\n  if (context === undefined) {\n    throw new Error(\n      'useSectionBuilderContextProvider must be used within a SectionEditorContextProvider component',\n    )\n  }\n  return context as [\n    State<sectionEditorMachineContext, sectionEditorMachineEvent, any, any>,\n    (event: sectionEditorMachineEvent) => void,\n  ]\n}\n","import React from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findTextSectionsByChapter,\n  findTextSectionsByChapterVariables,\n} from '../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from './state-n-styles/sectionEditorContext'\n\nexport const FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY = gql`\n  query findTextSectionsByChapter($input: FindTextSectionsByChapterInput!) {\n    findTextSectionsByChapter(input: $input) {\n      textSections {\n        _id\n        header\n        orderNumber\n      }\n    }\n  }\n`\n\nexport const TextSectionList = () => {\n  const [state, event] = useSectionEditorContextProvider()\n  const { loading, error, data } = useQuery<\n    findTextSectionsByChapter,\n    findTextSectionsByChapterVariables\n  >(FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY, {\n    variables: {\n      input: { fromChapterId: state.context.fromChapterId },\n    },\n  })\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n\n  return (\n    <div>\n      {data?.findTextSectionsByChapter.textSections\n        .filter((textSection) => textSection.orderNumber)\n        .sort((a, b) => a.orderNumber! - b.orderNumber!)\n        .map((section) => (\n          <div\n            key={section._id!}\n            onClick={() =>\n              event({ type: 'SET_SECTION_ID', payload: section._id! })\n            }\n          >\n            {section.header}\n          </div>\n        ))}\n      {data?.findTextSectionsByChapter.textSections\n        .filter((textSection) => !textSection.orderNumber)\n        // .sort((a, b) => a.orderNumber! - b.orderNumber!)\n        .map((section) => (\n          <div\n            key={section._id!}\n            style={{ color: 'var(--grey)' }}\n            onClick={() =>\n              event({ type: 'SET_SECTION_ID', payload: section._id! })\n            }\n          >\n            {section.header}\n          </div>\n        ))}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { FIND_CHAPTERS_IN_TEXT_QUERY } from '../section-builder/ChapterSelect'\nimport { useQuery } from '@apollo/client'\nimport {\n  findChaptersInText,\n  findChaptersInTextVariables,\n} from '../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from './state-n-styles/sectionEditorContext'\n\ntype EditorChapterSelectProps = {}\n\nexport const EditorChapterSelect = ({}: EditorChapterSelectProps) => {\n  const [state, event] = useSectionEditorContextProvider()\n  const { loading, data } = useQuery<\n    findChaptersInText,\n    findChaptersInTextVariables\n  >(FIND_CHAPTERS_IN_TEXT_QUERY, {\n    variables: { input: { textTitle: state.context.fromText } },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <div>\n      <div>Chapter</div>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            const arr = e.target.value.split(',')\n            event({ type: 'SET_CHAPTER_ID', payload: arr[0] })\n          }\n        }}\n      >\n        <option value={'none'}>Choose a Chapter</option>\n        {data?.findChaptersInText.chapters.map((chapter) => (\n          <option\n            key={chapter._id!}\n            value={[chapter._id!, chapter.chapterTitle]}\n          >\n            {chapter.chapterTitle}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import React, { Dispatch, SetStateAction, FC, useEffect } from 'react'\nimport {\n  TextSectionVocabInput,\n  updateTextSectionVariables,\n  updateTextSection,\n} from '../../../../../../schemaTypes'\nimport {\n  sectionEditorMachineEvent,\n  sectionEditorMachineContext,\n} from '../state-n-styles/sectionEditorMachine'\nimport { State } from 'xstate'\nimport { MutationFunctionOptions } from '@apollo/client'\n\ntype AddVocabWordProps = {\n  setVocabWord: Dispatch<SetStateAction<TextSectionVocabInput>>\n  vocabWord: TextSectionVocabInput\n  event: (event: sectionEditorMachineEvent) => void\n  state: State<sectionEditorMachineContext, sectionEditorMachineEvent, any, any>\n  currentIndexForItem: number\n  updateTextSection: (\n    options?:\n      | MutationFunctionOptions<updateTextSection, updateTextSectionVariables>\n      | undefined,\n  ) => void\n}\n\nexport const AddVocabWord = ({\n  setVocabWord,\n  vocabWord,\n  event,\n  state,\n  currentIndexForItem,\n  updateTextSection,\n}: AddVocabWordProps) => {\n  useEffect(() => {\n    updateTextSection()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.hasVocab])\n\n  const newList = [\n    ...state.context.hasVocab.slice(0, currentIndexForItem + 1),\n    vocabWord,\n    ...state.context.hasVocab.slice(currentIndexForItem + 1),\n  ]\n\n  return (\n    <form>\n      <div>Word</div>\n      <input\n        type=\"text\"\n        autoFocus\n        onChange={(e: any) =>\n          setVocabWord({ ...vocabWord, word: e.target.value })\n        }\n      />\n      <div>Defintion</div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          setVocabWord({\n            ...vocabWord,\n            definition: e.target.value,\n          })\n        }\n      />\n      <>\n        <button onClick={() => event({ type: 'IDLE' })}>Cancel</button>\n        <button\n          type=\"reset\"\n          onClick={() => {\n            event({\n              type: 'SET_VOCAB_LIST',\n              payload: newList,\n            })\n            event({ type: 'IDLE' })\n          }}\n        >\n          Add Word\n        </button>\n      </>\n    </form>\n  )\n}\n","import React, { Dispatch, SetStateAction, FC, useEffect } from 'react'\nimport {\n  updateTextSectionVariables,\n  updateTextSection,\n  TextSectionQuestionsInput,\n  questionTypeEnum,\n} from '../../../../../../schemaTypes'\nimport {\n  sectionEditorMachineEvent,\n  sectionEditorMachineContext,\n} from '../state-n-styles/sectionEditorMachine'\nimport { State } from 'xstate'\nimport { MutationFunctionOptions, useQuery } from '@apollo/client'\nimport { QUESTION_TYPE_ENUM_QUERY } from '../../section-builder/QuestionsInfo'\n\ntype AddVocabWordProps = {\n  setQuestionsItem: Dispatch<SetStateAction<TextSectionQuestionsInput>>\n  questionsItem: TextSectionQuestionsInput\n  event: (event: sectionEditorMachineEvent) => void\n  state: State<sectionEditorMachineContext, sectionEditorMachineEvent, any, any>\n  currentIndexForItem: number\n  updateTextSection: (\n    options?:\n      | MutationFunctionOptions<updateTextSection, updateTextSectionVariables>\n      | undefined,\n  ) => void\n}\n\nexport const AddQuestion = ({\n  questionsItem,\n  setQuestionsItem,\n  event,\n  state,\n  currentIndexForItem,\n  updateTextSection,\n}: AddVocabWordProps) => {\n  useEffect(() => {\n    updateTextSection()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.hasQuestions])\n\n  const { loading, error, data } = useQuery<questionTypeEnum>(\n    QUESTION_TYPE_ENUM_QUERY,\n  )\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n\n  const newList = [\n    ...state.context.hasQuestions.slice(0, currentIndexForItem + 1),\n    questionsItem,\n    ...state.context.hasQuestions.slice(currentIndexForItem + 1),\n  ]\n\n  //   console.log(currentIndexForItem + 1)\n  return (\n    <form>\n      <div>Question Type</div>\n      <select\n        onChange={(e: any) =>\n          setQuestionsItem({ ...questionsItem, questionType: e.target.value })\n        }\n      >\n        <option value={undefined}>Select a Question Type</option>\n        {data?.QuestionTypeEnum?.enumValues?.map((questionType) => (\n          <option key={questionType.name!} value={questionType.name!}>\n            {questionType.name}\n          </option>\n        ))}\n      </select>\n      <div>Question</div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          setQuestionsItem({\n            ...questionsItem,\n            question: e.target.value,\n          })\n        }\n      />\n      <>\n        <button onClick={() => event({ type: 'IDLE' })}>Cancel</button>\n        <button\n          type=\"reset\"\n          onClick={() => {\n            event({\n              type: 'SET_QUESTIONS_LIST',\n              payload: newList,\n            })\n            event({ type: 'IDLE' })\n            // toggleQuestionsItemInputs(false)\n          }}\n        >\n          Add Word\n        </button>\n      </>\n    </form>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ListBoxes = styled.div`\n  display: grid;\n  /* grid-template-columns: 1fr 1fr 1fr; */\n  grid-gap: 3px;\n  height: 40vmin;\n  overflow: scroll;\n`\nexport const Boxes = styled.div`\n  border: 1px solid var(--blue);\n`\nexport const BoxTitle = styled.div`\n  text-align: center;\n  border-bottom: 1px solid var(--blue);\n  color: var(--white);\n  background: var(--blue);\n`\nexport const ListItemContainer = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  :hover {\n    background: var(--grey);\n  }\n`\nexport const ListItem = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`\nexport const AddRemoveButtons = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  margin-right: 10%;\n  cursor: pointer;\n`\n","import React, { useState, SetStateAction, Dispatch, FC, useEffect } from 'react'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\nimport {\n  Boxes,\n  BoxTitle,\n  ListItem,\n  AddRemoveButtons,\n  ListItemContainer,\n} from '../state-n-styles/sectionEditorStyles'\nimport { MutationFunctionOptions } from '@apollo/client'\nimport {\n  updateTextSection,\n  updateTextSectionVariables,\n} from '../../../../../../schemaTypes'\n\ntype VocabBoxProps = {\n  toggleVocabItemInputs: Dispatch<SetStateAction<boolean>>\n  setCurrentIndexForItem: Dispatch<SetStateAction<number>>\n  updateTextSection: (\n    options?:\n      | MutationFunctionOptions<updateTextSection, updateTextSectionVariables>\n      | undefined,\n  ) => void\n}\n\nexport const VocabBox: FC<VocabBoxProps> = ({\n  toggleVocabItemInputs,\n  setCurrentIndexForItem,\n  updateTextSection,\n}) => {\n  const [state, event] = useSectionEditorContextProvider()\n\n  useEffect(() => {\n    updateTextSection()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.hasVocab])\n\n  const [index, setIndex] = useState(-1)\n\n  function handleAdd(index: number) {\n    setCurrentIndexForItem(index)\n  }\n\n  function handleRemove(index: number) {\n    event({\n      type: 'SET_VOCAB_LIST',\n      payload: [\n        ...state.context.hasVocab.slice(0, index),\n        ...state.context.hasVocab.slice(index + 1),\n      ],\n    })\n  }\n\n  return (\n    <>\n      <Boxes onMouseOut={() => setIndex(-1)}>\n        <BoxTitle>Vocab</BoxTitle>\n        {state.context.hasVocab.length > 0 ? (\n          <div>\n            {state.context.hasVocab.map((word, i) => (\n              <ListItemContainer key={i} onMouseOver={() => setIndex(i)}>\n                <ListItem\n                  onClick={() => {\n                    const vocabWordIndex = state.context.hasVocab.findIndex(\n                      (vocabWord) => vocabWord.word === word.word,\n                    )\n                    event({\n                      type: 'SET_VOCAB_WORD_TO_EDIT',\n                      payload: word,\n                      index: vocabWordIndex,\n                    })\n                    event({ type: 'VOCAB_WORD_EDITOR' })\n                  }}\n                >\n                  {word.word}: {word.definition}\n                </ListItem>\n                {/* {!state.context.isHidden && state.context.currentIndex === i && ( */}\n                <AddRemoveButtons>\n                  <div\n                    hidden={i !== index || undefined}\n                    onClick={() => {\n                      // toggleVocabItemInputs(true)\n                      handleAdd(i)\n                      event({ type: 'VOCAB_WORD_ADDER' })\n                    }}\n                  >\n                    +\n                  </div>\n                  <div\n                    hidden={i !== index || undefined}\n                    onClick={() => handleRemove(index)}\n                  >\n                    -\n                  </div>\n                </AddRemoveButtons>\n              </ListItemContainer>\n            ))}\n          </div>\n        ) : (\n          <div\n            onClick={() => {\n              toggleVocabItemInputs(true)\n              handleAdd(0)\n            }}\n          >\n            Add a Vocab Word\n          </div>\n        )}\n      </Boxes>\n    </>\n  )\n}\n","import React, { FC, useState, Dispatch, SetStateAction, useEffect } from 'react'\nimport {\n  Boxes,\n  BoxTitle,\n  ListItem,\n  AddRemoveButtons,\n  ListItemContainer,\n} from '../state-n-styles/sectionEditorStyles'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\nimport { MutationFunctionOptions } from '@apollo/client'\nimport {\n  updateTextSection,\n  updateTextSectionVariables,\n} from '../../../../../../schemaTypes'\n\nexport type QuestionsBoxProps = {\n  setCurrentIndexForItem: Dispatch<SetStateAction<number>>\n  toggleQuestionsItemInputs: Dispatch<SetStateAction<boolean>>\n  updateTextSection: (\n    options?:\n      | MutationFunctionOptions<updateTextSection, updateTextSectionVariables>\n      | undefined,\n  ) => void\n}\n\nexport const QuestionsBox: FC<QuestionsBoxProps> = ({\n  setCurrentIndexForItem,\n  toggleQuestionsItemInputs,\n  updateTextSection,\n}) => {\n  const [state, event] = useSectionEditorContextProvider()\n\n  useEffect(() => {\n    updateTextSection()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.hasQuestions])\n\n  const [index, setIndex] = useState(-1)\n\n  function handleAdd(index: number) {\n    setCurrentIndexForItem(index)\n  }\n\n  function handleRemove(index: number) {\n    event({\n      type: 'SET_QUESTIONS_LIST',\n      payload: [\n        ...state.context.hasQuestions.slice(0, index),\n        ...state.context.hasQuestions.slice(index + 1),\n      ],\n    })\n  }\n\n  return (\n    <>\n      <Boxes onMouseOut={() => setIndex(-1)}>\n        <BoxTitle>Questions</BoxTitle>\n        {state.context.hasQuestions.length > 0 ? (\n          <div>\n            {state.context.hasQuestions.map((q, i) => (\n              <ListItemContainer\n                key={q.question}\n                onMouseOver={() => setIndex(i)}\n              >\n                <ListItem\n                  onClick={() => {\n                    const questionIndex = state.context.hasQuestions.findIndex(\n                      (question) => question.question === q.question,\n                    )\n                    event({\n                      type: 'SET_QUESTION_TO_EDIT',\n                      payload: q,\n                      index: questionIndex,\n                    })\n                    event({ type: 'QUESTION_EDITOR' })\n                  }}\n                >\n                  {q.question}\n                </ListItem>\n                <AddRemoveButtons>\n                  <div\n                    hidden={i !== index || undefined}\n                    onClick={() => {\n                      // toggleQuestionsItemInputs(true)\n                      handleAdd(i)\n                      event({ type: 'QUESTION_ADDER' })\n                    }}\n                  >\n                    +\n                  </div>\n                  <div\n                    hidden={i !== index || undefined}\n                    onClick={() => handleRemove(index)}\n                  >\n                    -\n                  </div>\n                </AddRemoveButtons>\n              </ListItemContainer>\n            ))}\n          </div>\n        ) : (\n          <div\n            onClick={() => {\n              toggleQuestionsItemInputs(true)\n              handleAdd(0)\n            }}\n          >\n            Add a Question\n          </div>\n        )}\n      </Boxes>\n    </>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction, useEffect } from 'react'\nimport {\n  sectionEditorMachineEvent,\n  sectionEditorMachineContext,\n} from '../state-n-styles/sectionEditorMachine'\nimport { State } from 'xstate'\nimport { MutationFunctionOptions } from '@apollo/client'\nimport {\n  updateTextSection,\n  updateTextSectionVariables,\n  TextSectionProtocolsInput,\n  AcademicOutcomeTypes,\n  ProtocolActivityTypes,\n} from '../../../../../../schemaTypes'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\n\nexport type AddProtocolsProps = {\n  protocolItem: TextSectionProtocolsInput\n  setProtocolItem: Dispatch<SetStateAction<TextSectionProtocolsInput>>\n  event: (event: sectionEditorMachineEvent) => void\n  state: State<sectionEditorMachineContext, sectionEditorMachineEvent, any, any>\n  currentIndexForItem: number\n  updateTextSection: (\n    options?:\n      | MutationFunctionOptions<updateTextSection, updateTextSectionVariables>\n      | undefined,\n  ) => void\n}\n\nexport const AddProtocols = ({\n  protocolItem,\n  setProtocolItem,\n  event,\n  state,\n  currentIndexForItem,\n  updateTextSection,\n}: AddProtocolsProps) => {\n  const { academicOutcomeTypes, protocolActivityTypes } =\n    useEnumContextProvider()\n\n  useEffect(() => {\n    updateTextSection()\n  }, [state.context.hasProtocols, updateTextSection])\n\n  const newList = [\n    ...state.context.hasProtocols.slice(0, currentIndexForItem + 1),\n    protocolItem,\n    ...state.context.hasProtocols.slice(currentIndexForItem + 1),\n  ]\n\n  return (\n    <>\n      <form>\n        <div>Academic Outcome Type: </div>\n        <select\n          onChange={(e: any) =>\n            setProtocolItem({\n              ...protocolItem,\n              academicOutcomeTypes: e.target.value,\n            })\n          }\n        >\n          {academicOutcomeTypes.map((outcomeType: AcademicOutcomeTypes) => (\n            <option key={outcomeType} value={outcomeType}>\n              {outcomeType}\n            </option>\n          ))}\n        </select>\n        <div>Activity Type:</div>\n        <select\n          onChange={(e: any) =>\n            setProtocolItem({\n              ...protocolItem,\n              activityType: e.target.value,\n            })\n          }\n        >\n          {protocolActivityTypes.map((activity: ProtocolActivityTypes) => (\n            <option key={activity} value={activity}>\n              {activity}\n            </option>\n          ))}\n        </select>\n        <div>Task: </div>\n        <input\n          type=\"text\"\n          onChange={(e: any) =>\n            setProtocolItem({\n              ...protocolItem,\n              task: e.target.value,\n            })\n          }\n        />\n        <>\n          <button onClick={() => event({ type: 'IDLE' })}>Cancel</button>\n          <button\n            type=\"reset\"\n            onClick={() => {\n              event({\n                type: 'SET_PROTOCOLS_LIST',\n                payload: newList,\n              })\n              event({ type: 'IDLE' })\n              // toggleProtocolItemInputs(false)\n            }}\n          >\n            Add Protocol\n          </button>\n        </>\n      </form>\n    </>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction, useState, useEffect } from 'react'\nimport {\n  Boxes,\n  BoxTitle,\n  ListItem,\n  AddRemoveButtons,\n  ListItemContainer,\n} from '../state-n-styles/sectionEditorStyles'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\nimport { UpdateTextSectionMutationProps } from '../TextSectionEditorDisplay'\n\nexport type ProtocolsBoxProps = {\n  setCurrentIndexForItem: Dispatch<SetStateAction<number>>\n  toggleProtocolItemInputs: Dispatch<SetStateAction<boolean>>\n  updateTextSection: UpdateTextSectionMutationProps\n}\n\nexport const ProtocolsBox: FC<ProtocolsBoxProps> = ({\n  setCurrentIndexForItem,\n  toggleProtocolItemInputs,\n  updateTextSection,\n}) => {\n  const [state, event] = useSectionEditorContextProvider()\n\n  useEffect(() => {\n    updateTextSection()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.hasProtocols])\n\n  const [index, setIndex] = useState(-1)\n\n  function handleAdd(index: number) {\n    setCurrentIndexForItem(index)\n  }\n\n  function handleRemove(index: number) {\n    event({\n      type: 'SET_PROTOCOLS_LIST',\n      payload: [\n        ...state.context.hasProtocols.slice(0, index),\n        ...state.context.hasProtocols.slice(index + 1),\n      ],\n    })\n  }\n\n  return (\n    <>\n      <Boxes onMouseOut={() => setIndex(-1)}>\n        <BoxTitle>Protocols</BoxTitle>\n        {state.context.hasProtocols.length > 0 ? (\n          <div>\n            {state.context.hasProtocols.map((p, i) => (\n              <ListItemContainer key={p.task} onMouseOver={() => setIndex(i)}>\n                <ListItem\n                  onClick={() => {\n                    const protocolIndex = state.context.hasProtocols.findIndex(\n                      (protocol) => protocol.task === p.task,\n                    )\n                    event({\n                      type: 'SET_PROTOCOL_TO_EDIT',\n                      payload: p,\n                      index: protocolIndex,\n                    })\n                    event({ type: 'PROTOCOL_EDITOR' })\n                  }}\n                >\n                  {p.task}\n                </ListItem>\n                <AddRemoveButtons>\n                  <div\n                    hidden={i !== index || undefined}\n                    onClick={() => {\n                      // toggleProtocolItemInputs(true)\n\n                      handleAdd(i)\n                      event({ type: 'PROTOCOL_ADDER' })\n                    }}\n                  >\n                    +\n                  </div>\n                  <div\n                    hidden={i !== index || undefined}\n                    onClick={() => handleRemove(index)}\n                  >\n                    -\n                  </div>\n                </AddRemoveButtons>\n              </ListItemContainer>\n            ))}\n          </div>\n        ) : (\n          <div\n            onClick={() => {\n              event({ type: 'PROTOCOL_ADDER' })\n              toggleProtocolItemInputs(true)\n              handleAdd(0)\n            }}\n          >\n            Add a Protocol\n          </div>\n        )}\n      </Boxes>\n    </>\n  )\n}\n","import React from 'react'\nimport { useToggle } from '../../../../../../hooks'\nimport { FindTextSectionById_findTextSectionById_textSection } from '../../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\n\nexport type EditSectionInfoProps = {\n  textSection: FindTextSectionById_findTextSectionById_textSection\n}\n\nexport const EditSectionInfo = ({ textSection }: EditSectionInfoProps) => {\n  const [state, event] = useSectionEditorContextProvider()\n  const [header, toggleHeader] = useToggle(false)\n\n  return (\n    <>\n      <div onClick={toggleHeader}>\n        {!header ? (\n          <div>{textSection.header}</div>\n        ) : (\n          <label htmlFor=\"set header\">\n            <input\n              autoFocus={true}\n              onBlur={toggleHeader}\n              onKeyDown={(e: any) => {\n                if (e.keyCode === 13) {\n                  toggleHeader()\n                }\n              }}\n              type=\"text\"\n              value={state.context.header}\n              onChange={(e: any) => {\n                event({ type: 'SET_HEADER', header: e.target.value })\n              }}\n            />\n          </label>\n        )}\n      </div>\n      <div>\n        Order:{' '}\n        {state.context.orderNumber === null\n          ? 'none'\n          : state.context.orderNumber}{' '}\n        <input\n          onChange={(e) => {\n            event({ type: 'SET_ORDER_NUMBER', payload: +e.target.value })\n          }}\n        />\n      </div>\n      <div>Pages: </div>\n      <div>Starting Page:</div>\n      <label htmlFor=\"set page numbers\">\n        <input\n          type=\"text\"\n          onChange={(e: any) =>\n            event({\n              type: 'SET_PAGE_NUMBERS',\n              payload: {\n                ...state.context.pageNumbers,\n                startingPage: Number(e.target.value),\n              },\n            })\n          }\n        />\n      </label>\n      <div>Ending Page: </div>\n      <label htmlFor=\"set page numbers\">\n        <input\n          type=\"text\"\n          onChange={(e: any) =>\n            event({\n              type: 'SET_PAGE_NUMBERS',\n              payload: {\n                ...state.context.pageNumbers,\n                endingPage: Number(e.target.value),\n              },\n            })\n          }\n        />\n      </label>\n    </>\n  )\n}\n","import React from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  AcademicOutcomeTypes,\n  ProtocolActivityTypes,\n} from '../../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\n\nexport type EditProtocolProps = {}\n\nexport const EditProtocol = ({}: EditProtocolProps) => {\n  const [state, event] = useSectionEditorContextProvider()\n\n  const { academicOutcomeTypes, protocolActivityTypes } =\n    useEnumContextProvider()\n\n  const protocolToReplace = [\n    ...state.context.hasProtocols.slice(0, state.context.protocolToEditIndex!),\n    state.context.protocolToEdit!,\n    ...state.context.hasProtocols.slice(state.context.protocolToEditIndex! + 1),\n  ]\n\n  return (\n    <>\n      <form>\n        <div>Academic Outcome Type: </div>\n        <select\n          value={state.context.protocolToEdit?.academicOutcomeTypes}\n          onChange={(e: any) =>\n            event({\n              type: 'EDIT_PROTOCOL',\n              payload: {\n                ...state.context.protocolToEdit!,\n                academicOutcomeTypes: e.target.value,\n              },\n            })\n          }\n        >\n          {academicOutcomeTypes.map((outcomeType: AcademicOutcomeTypes) => (\n            <option key={outcomeType} value={outcomeType}>\n              {outcomeType}\n            </option>\n          ))}\n        </select>\n        <div>Activity Type:</div>\n        <select\n          value={state.context.protocolToEdit?.activityType}\n          onChange={(e: any) =>\n            event({\n              type: 'EDIT_PROTOCOL',\n              payload: {\n                ...state.context.protocolToEdit!,\n                activityType: e.target.value,\n              },\n            })\n          }\n        >\n          {protocolActivityTypes.map((activity: ProtocolActivityTypes) => (\n            <option key={activity} value={activity}>\n              {activity}\n            </option>\n          ))}\n        </select>\n        <div>Task: </div>\n        <input\n          type=\"text\"\n          value={state.context.protocolToEdit?.task}\n          onChange={(e: any) =>\n            event({\n              type: 'EDIT_PROTOCOL',\n              payload: {\n                ...state.context.protocolToEdit!,\n                task: e.target.value,\n              },\n            })\n          }\n        />\n        <button\n          type=\"reset\"\n          onClick={() => {\n            event({\n              type: 'SET_PROTOCOLS_LIST',\n              payload: protocolToReplace,\n            })\n            event({ type: 'SET_PROTOCOL_TO_EDIT', payload: null, index: null })\n            event({ type: 'IDLE' })\n          }}\n        >\n          Edit Protocol\n        </button>\n      </form>\n    </>\n  )\n}\n","import React from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { QuestionTypeEnum } from '../../../../../../schemaTypes'\nimport {\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../../utils'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\n\nexport type EditQuestionProps = {}\n\nexport const EditQuestion = ({}: EditQuestionProps) => {\n  const [state, event] = useSectionEditorContextProvider()\n  const { questionTypeEnum } = useEnumContextProvider()\n  const questionToReplace = [\n    ...state.context.hasQuestions.slice(0, state.context.questionToEditIndex!),\n    state.context.questionToEdit!,\n    ...state.context.hasQuestions.slice(state.context.questionToEditIndex! + 1),\n  ]\n  return (\n    <>\n      <form>\n        <div>Question Type</div>\n        <select\n          value={state.context.questionToEdit?.questionType}\n          onChange={(e: any) =>\n            event({\n              type: 'EDIT_QUESTION',\n              payload: {\n                ...state.context.questionToEdit!,\n                questionType: e.target.value,\n              },\n            })\n          }\n        >\n          <option value={'none'}>Select a Question Type</option>\n          {questionTypeEnum.map((questionType: QuestionTypeEnum) => {\n            const formatteQuestionTypeEnum = underscoreEliminator(questionType)\n            return (\n              <option key={questionType} value={questionType}>\n                {phraseCapitalizer(formatteQuestionTypeEnum)}\n              </option>\n            )\n          })}\n        </select>\n        <div>Question</div>\n        <input\n          type=\"text\"\n          value={state.context.questionToEdit?.question}\n          onChange={(e: any) =>\n            event({\n              type: 'EDIT_QUESTION',\n              payload: {\n                ...state.context.questionToEdit!,\n                question: e.target.value,\n              },\n            })\n          }\n        />\n        <button\n          type=\"reset\"\n          onClick={() => {\n            event({\n              type: 'SET_QUESTIONS_LIST',\n              payload: questionToReplace,\n            })\n            event({ type: 'SET_QUESTION_TO_EDIT', payload: null, index: null })\n            event({ type: 'IDLE' })\n          }}\n        >\n          Edit Question\n        </button>\n      </form>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\n\nexport type EditVocabWordProps = {}\n\nexport const EditVocabWord = ({}: EditVocabWordProps) => {\n  const [state, event] = useSectionEditorContextProvider()\n  const vocabWordToReplace = [\n    ...state.context.hasVocab.slice(0, state.context.vocabWordToEditIndex!),\n    state.context.vocabWordToEdit!,\n    ...state.context.hasVocab.slice(state.context.vocabWordToEditIndex! + 1),\n  ]\n  console.log(state.context.vocabWordToEdit)\n  return (\n    <form>\n      <div>Word</div>\n      <input\n        type=\"text\"\n        value={state.context.vocabWordToEdit?.word}\n        onChange={(e: any) => {\n          event({\n            type: 'EDIT_VOCAB_WORD',\n            payload: {\n              ...state.context.vocabWordToEdit!,\n              word: e.target.value,\n            },\n          })\n        }}\n      />\n      <div>Defintion</div>\n      <input\n        type=\"text\"\n        value={state.context.vocabWordToEdit?.definition}\n        onChange={(e: any) => {\n          event({\n            type: 'EDIT_VOCAB_WORD',\n            payload: {\n              ...state.context.vocabWordToEdit!,\n              definition: e.target.value,\n            },\n          })\n        }}\n      />\n      <button\n        type=\"reset\"\n        onClick={() => {\n          event({\n            type: 'SET_VOCAB_LIST',\n            payload: vocabWordToReplace,\n          })\n          event({ type: 'SET_VOCAB_WORD_TO_EDIT', payload: null, index: null })\n          event({ type: 'IDLE' })\n        }}\n      >\n        Edit Word\n      </button>\n    </form>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport { stat } from 'fs'\nimport React, { useEffect, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  createQuizQuestionVariables,\n  createQuizQuestion,\n  QuizQuestionTypeEnum,\n  QuizQuestionDifficultyLevelEnum,\n  AnswerListInput,\n} from '../../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\nimport { FIND_QUIZ_QUESTIONS_BY_TEXT_SECTION_ID_QUERY } from './QuizQuestions'\n\nexport type AddQuizQuestionProps = {}\n\nexport const CREATE_QUIZ_QUESTION_MUTATION = gql`\n  mutation createQuizQuestion($input: CreateQuizQuestionInput!) {\n    createQuizQuestion(input: $input) {\n      quizQuestion {\n        _id\n      }\n    }\n  }\n`\n\nexport const AddQuizQuestion = ({}: AddQuizQuestionProps) => {\n  const [state, event] = useSectionEditorContextProvider()\n  const [answer, setAnswer] = useState<AnswerListInput>({\n    answer: '',\n    correct: false,\n    partiallyCorrect: false,\n    removable: false,\n  })\n  const [trueStatement, setTrueStatement] = useState(true)\n\n  const { quizQuestionDifficultyLevelEnum, quizQuestionTypeEnum } =\n    useEnumContextProvider()\n  const [createQuizQuestion] = useMutation<\n    createQuizQuestion,\n    createQuizQuestionVariables\n  >(CREATE_QUIZ_QUESTION_MUTATION, {\n    variables: { input: state.context.quizQuestion },\n    onCompleted: () => event({ type: 'RESET_QUIZ_QUESTION_INPUTS' }),\n    refetchQueries: [\n      {\n        query: FIND_QUIZ_QUESTIONS_BY_TEXT_SECTION_ID_QUERY,\n        variables: {\n          input: { associatedTextSectionId: state.context.sectionId },\n        },\n      },\n      // 'findQuizQuestionsByTextSectionId',\n    ],\n  })\n  const removableToggle = !answer.correct && !answer.partiallyCorrect\n\n  useEffect(() => {\n    event({\n      type: 'SET_QUIZ_QUESTION_INPUT',\n      keyName: 'associatedTextSectionId',\n      payload: state.context.sectionId,\n    })\n  }, [])\n\n  useEffect(() => {\n    if (\n      state.context.quizQuestion.questionType ===\n      QuizQuestionTypeEnum.TRUE_FALSE\n    ) {\n      event({\n        type: 'SET_QUIZ_QUESTION_INPUT',\n        keyName: 'answerList',\n        payload: [\n          {\n            answer: 'True',\n            correct: trueStatement,\n            partiallyCorrect: false,\n            removable: false,\n          },\n          {\n            answer: 'False',\n            correct: !trueStatement,\n            partiallyCorrect: false,\n            removable: false,\n          },\n        ],\n      })\n    }\n    if (\n      state.context.quizQuestion.questionType ===\n      QuizQuestionTypeEnum.MULTIPLE_CHOICE\n    ) {\n      event({\n        type: 'SET_QUIZ_QUESTION_INPUT',\n        keyName: 'answerList',\n        payload: [],\n      })\n    }\n  }, [state.context.quizQuestion.questionType, trueStatement])\n  return (\n    <div>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <div>Add Quiz Questions</div>\n        <div>Question:</div>\n        <input\n          onChange={(e) =>\n            event({\n              type: 'SET_QUIZ_QUESTION_INPUT',\n              keyName: 'question',\n              payload: e.target.value,\n            })\n          }\n        />\n        <div>Question Type</div>\n        <select\n          onChange={(e) =>\n            event({\n              type: 'SET_QUIZ_QUESTION_INPUT',\n              keyName: 'questionType',\n              payload: e.target.value,\n            })\n          }\n        >\n          {quizQuestionTypeEnum.map((questionType: QuizQuestionTypeEnum) => (\n            <option key={questionType}>{questionType}</option>\n          ))}\n        </select>\n        <div>Difficulty Level</div>\n        <select\n          onChange={(e) =>\n            event({\n              type: 'SET_QUIZ_QUESTION_INPUT',\n              keyName: 'difficultyLevel',\n              payload: e.target.value,\n            })\n          }\n        >\n          {quizQuestionDifficultyLevelEnum.map(\n            (difficultyLevel: QuizQuestionDifficultyLevelEnum) => (\n              <option key={difficultyLevel}>{difficultyLevel}</option>\n            ),\n          )}\n        </select>\n        {state.context.quizQuestion.questionType ===\n          QuizQuestionTypeEnum.MULTIPLE_CHOICE && (\n          <form onSubmit={(e) => e.preventDefault()}>\n            <div>Answer List Creator</div>\n            <div>Answer</div>\n            <input\n              onChange={(e) => setAnswer({ ...answer, answer: e.target.value })}\n            />\n            <div>Correct</div>\n            <select\n              value={answer.correct ? 'yes' : 'no'}\n              onChange={(e) => {\n                setAnswer({\n                  ...answer,\n                  correct: e.target.value === 'yes' ? true : false,\n                })\n              }}\n            >\n              <option value={'yes'}>Yes</option>\n              <option value={'no'}>No</option>\n            </select>\n            <div>Partially Correct</div>\n            <select\n              value={answer.partiallyCorrect ? 'yes' : 'no'}\n              onChange={(e) =>\n                setAnswer({\n                  ...answer,\n                  partiallyCorrect: e.target.value === 'yes' ? true : false,\n                })\n              }\n            >\n              <option value={'yes'}>Yes</option>\n              <option value={'no'}>No</option>\n            </select>\n            {removableToggle && (\n              <>\n                <div>Removeable</div>\n                <select\n                  value={answer.removable ? 'yes' : 'no'}\n                  onChange={(e) =>\n                    setAnswer({\n                      ...answer,\n                      removable: e.target.value === 'yes' ? true : false,\n                    })\n                  }\n                >\n                  <option value={'yes'}>Yes</option>\n                  <option value={'no'}>No</option>\n                </select>\n              </>\n            )}\n            <button\n              type=\"reset\"\n              onClick={() => {\n                event({\n                  type: 'SET_QUIZ_QUESTION_INPUT',\n                  keyName: 'answerList',\n                  payload: [...state.context.quizQuestion.answerList, answer],\n                })\n                setAnswer({\n                  answer: '',\n                  correct: false,\n                  partiallyCorrect: false,\n                  removable: false,\n                })\n              }}\n            >\n              Add Answer\n            </button>\n          </form>\n        )}\n        {state.context.quizQuestion.questionType ===\n          QuizQuestionTypeEnum.TRUE_FALSE && (\n          <>\n            <div>True Statement?</div>\n            <select\n              value={trueStatement ? 'yes' : 'no'}\n              onChange={(e) => {\n                setTrueStatement(e.target.value === 'yes' ? true : false)\n              }}\n            >\n              <option value={'yes'}>Yes</option>\n              <option value={'no'}>No</option>\n            </select>\n          </>\n          // <form onSubmit={(e) => e.preventDefault()}>\n          //   <div>Answer List Creator</div>\n          //   <div>Answer</div>\n          //   <input\n          //     onChange={(e) => setAnswer({ ...answer, answer: e.target.value })}\n          //   />\n          //   <div>Correct</div>\n          //   <select\n          //     value={answer.correct ? 'yes' : 'no'}\n          //     onChange={(e) => {\n          //       setAnswer({\n          //         ...answer,\n          //         correct: e.target.value === 'yes' ? true : false,\n          //       })\n          //     }}\n          //   >\n          //     <option value={'yes'}>Yes</option>\n          //     <option value={'no'}>No</option>\n          //   </select>\n          //   <div>Partially Correct</div>\n          //   <select\n          //     value={answer.partiallyCorrect ? 'yes' : 'no'}\n          //     onChange={(e) =>\n          //       setAnswer({\n          //         ...answer,\n          //         partiallyCorrect: e.target.value === 'yes' ? true : false,\n          //       })\n          //     }\n          //   >\n          //     <option value={'yes'}>Yes</option>\n          //     <option value={'no'}>No</option>\n          //   </select>\n          //   <button\n          //     type='reset'\n          //     onClick={() =>\n          //       event({\n          //         type: 'SET_QUIZ_QUESTION_INPUT',\n          //         keyName: 'answerList',\n          //         payload: [...state.context.quizQuestion.answerList, answer],\n          //       })\n          //     }\n          //   >\n          //     Add Answer\n          //   </button>\n          // </form>\n        )}\n\n        <div>Quiz Question Preview</div>\n        <div>{state.context.quizQuestion.question}</div>\n        <div>{state.context.quizQuestion.questionType}</div>\n        <div>{state.context.quizQuestion.difficultyLevel}</div>\n        <div>\n          {state.context.quizQuestion.answerList.map((answer, i: number) => (\n            <div key={i}>\n              <span>Answer: {answer.answer}</span>\n              <span> Correct: {answer.correct ? 'Yes' : 'No'}</span>\n              <span>\n                {' '}\n                Partially Correct: {answer.partiallyCorrect ? 'Yes' : 'No'}\n              </span>\n              <span> Removable: {answer.removable ? 'Yes' : 'No'}</span>\n            </div>\n          ))}\n        </div>\n        <button\n          type=\"reset\"\n          onClick={() => {\n            const multipleChoiceReady =\n              state.context.quizQuestion.questionType ===\n                QuizQuestionTypeEnum.MULTIPLE_CHOICE &&\n              state.context.quizQuestion.answerList.length >= 3 &&\n              state.context.quizQuestion.question\n            const trueFalseReady =\n              state.context.quizQuestion.questionType ===\n                QuizQuestionTypeEnum.TRUE_FALSE &&\n              state.context.quizQuestion.question\n            if (multipleChoiceReady || trueFalseReady) createQuizQuestion()\n          }}\n        >\n          Create Quiz Question\n        </button>\n      </form>\n    </div>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  findQuizQuestionsByTextSectionId,\n  findQuizQuestionsByTextSectionIdVariables,\n} from '../../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from '../state-n-styles/sectionEditorContext'\nimport { AddQuizQuestion } from './AddQuizQuestion'\n\nexport type QuizQuestionsProps = {}\n\nexport const FIND_QUIZ_QUESTIONS_BY_TEXT_SECTION_ID_QUERY = gql`\n  query findQuizQuestionsByTextSectionId(\n    $input: FindQuizQuestionsByTextSectionIdInput!\n  ) {\n    findQuizQuestionsByTextSectionId(input: $input) {\n      quizQuestions {\n        _id\n        question\n        answerList {\n          correct\n          partiallyCorrect\n        }\n        questionType\n        difficultyLevel\n      }\n    }\n  }\n`\n\nexport const QuizQuestions = ({}: QuizQuestionsProps) => {\n  const [state] = useSectionEditorContextProvider()\n  const { loading, data } = useQuery<\n    findQuizQuestionsByTextSectionId,\n    findQuizQuestionsByTextSectionIdVariables\n  >(FIND_QUIZ_QUESTIONS_BY_TEXT_SECTION_ID_QUERY, {\n    variables: {\n      input: { associatedTextSectionId: state.context.sectionId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  console.log(state.context.sectionId)\n  return (\n    <div>\n      <div>Quiz Questions</div>\n      <div>\n        {data?.findQuizQuestionsByTextSectionId.quizQuestions.map(\n          (question, i: number) => (\n            <div key={i}>\n              {question.difficultyLevel}: {question.question}\n            </div>\n          ),\n        )}\n      </div>\n      <AddQuizQuestion />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport {\n  FindTextSectionById,\n  FindTextSectionByIdVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateTextSection,\n  updateTextSectionVariables,\n  TextSectionVocabInput,\n  TextSectionProtocolsInput,\n  AcademicOutcomeTypes,\n  ProtocolActivityTypes,\n  TextSectionQuestionsInput,\n  QuestionTypeEnum,\n} from '../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from './state-n-styles/sectionEditorContext'\nimport {\n  gql,\n  useQuery,\n  useMutation,\n  MutationFunctionOptions,\n} from '@apollo/client'\nimport { AddVocabWord } from './vocab/AddVocabWord'\nimport { AddQuestion } from './questions/AddQuestion'\nimport { VocabBox } from './vocab/VocabBox'\nimport { QuestionsBox } from './questions/QuestionsBox'\nimport { AddProtocols } from './protocols/AddProtocols'\nimport { ProtocolsBox } from './protocols/ProtocolsBox'\n// import { Modal } from '../../../../../animations'\nimport { ListBoxes } from './state-n-styles/sectionEditorStyles'\nimport { EditSectionInfo } from './edit-section-info/EditSectionInfo'\nimport { EditProtocol } from './protocols/EditProtocol'\nimport { EditQuestion } from './questions/EditQuestion'\nimport { EditVocabWord } from './vocab/EditVocabWord'\nimport { QuizQuestions } from './quiz-questions/QuizQuestions'\n\nexport type TextSectionEditorDisplayProps = {}\n\nexport const FIND_TEXT_SECTION_BY_ID_QUERY = gql`\n  query FindTextSectionById($input: FindTextSectionByIdInput!) {\n    findTextSectionById(input: $input) {\n      textSection {\n        _id\n        header\n        pageNumbers {\n          startingPage\n          endingPage\n        }\n        orderNumber\n        hasVocab {\n          word\n          definition\n        }\n        hasQuestions {\n          question\n          questionType\n        }\n        hasProtocols {\n          activityType\n          academicOutcomeTypes\n          task\n        }\n      }\n    }\n  }\n`\n\nexport const TEXT_SECTION_UPDATER_MUTATION = gql`\n  mutation updateTextSection($input: UpdateTextSectionInput!) {\n    updateTextSection(input: $input) {\n      textSection {\n        _id\n      }\n    }\n  }\n`\n\nexport type UpdateTextSectionMutationProps = (\n  options?:\n    | MutationFunctionOptions<updateTextSection, updateTextSectionVariables>\n    | undefined,\n) => void\n\nexport type EditorTabsProps =\n  | 'PROTOCOLS'\n  | 'QUESTIONS'\n  | 'VOCAB'\n  | 'QUIZ_QUESTIONS'\n\nexport const TextSectionEditorDisplay = ({}: TextSectionEditorDisplayProps) => {\n  const [editorState, setEditorState] = useState<EditorTabsProps>('VOCAB')\n  const [vocabWord, setVocabWord] = useState<TextSectionVocabInput>({\n    word: '',\n    definition: '',\n  })\n  const [protocolItem, setProtocolItem] = useState<TextSectionProtocolsInput>({\n    academicOutcomeTypes: AcademicOutcomeTypes.LOGIC_BUILDING,\n    activityType: ProtocolActivityTypes.THINK_PAIR_SHARE,\n    task: '',\n    isActive: false,\n    completed: false,\n  })\n  const [questionsItem, setQuestionsItem] = useState<TextSectionQuestionsInput>(\n    { question: '', questionType: QuestionTypeEnum.WHY_CAUSE_EFFECT },\n  )\n\n  const [showVocabItemInputs, toggleVocabItemInputs] = useState(false)\n  const [showQuestionsItemInputs, toggleQuestionsItemInputs] = useState(false)\n  const [showProtocolItemInputs, toggleProtocolItemInputs] = useState(false)\n  const [currentIndexForItem, setCurrentIndexForItem] = useState<number>(0)\n\n  const [state, event] = useSectionEditorContextProvider()\n\n  const { loading, data } = useQuery<\n    FindTextSectionById,\n    FindTextSectionByIdVariables\n  >(FIND_TEXT_SECTION_BY_ID_QUERY, {\n    variables: {\n      input: { _id: state.context.sectionId },\n    },\n    onError: (error) => console.error(error),\n    onCompleted: (data) => {\n      event({\n        type: 'SET_HEADER',\n        header: data.findTextSectionById.textSection.header,\n      })\n      event({\n        type: 'SET_ORDER_NUMBER',\n        payload: data.findTextSectionById.textSection.orderNumber,\n      })\n      event({\n        type: 'SET_PAGE_NUMBERS',\n        payload: data.findTextSectionById.textSection.pageNumbers,\n      })\n      data.findTextSectionById.textSection.hasVocab &&\n        event({\n          type: 'SET_VOCAB_LIST',\n          payload: data.findTextSectionById.textSection.hasVocab?.map(\n            (word) => ({\n              word: word.word,\n              definition: word.definition,\n            }),\n          ),\n        })\n      data.findTextSectionById.textSection.hasQuestions &&\n        event({\n          type: 'SET_QUESTIONS_LIST',\n          payload: data.findTextSectionById.textSection.hasQuestions?.map(\n            (question) => ({\n              question: question.question,\n              questionType: question.questionType,\n            }),\n          ),\n        })\n      data.findTextSectionById.textSection.hasProtocols &&\n        event({\n          type: 'SET_PROTOCOLS_LIST',\n          payload: data.findTextSectionById.textSection.hasProtocols?.map(\n            (protocol) => ({\n              academicOutcomeTypes: protocol.academicOutcomeTypes,\n              activityType: protocol.activityType,\n              task: protocol.task,\n              isActive: false,\n              completed: false,\n            }),\n          ),\n        })\n    },\n  })\n\n  const [updateTextSection] = useMutation<\n    updateTextSection,\n    updateTextSectionVariables\n  >(TEXT_SECTION_UPDATER_MUTATION, {\n    variables: {\n      input: {\n        _id: state.context.sectionId,\n        header: state.context.header,\n        pageNumbers: {\n          startingPage: state.context.pageNumbers.startingPage,\n          endingPage: state.context.pageNumbers.endingPage,\n        },\n        fromChapterId: state.context.fromChapterId,\n        hasQuestions: state.context.hasQuestions,\n        hasProtocols: state.context.hasProtocols,\n        hasVocab: state.context.hasVocab,\n        orderNumber: state.context.orderNumber,\n        numberOfParagraphs: state.context.numberOfParagraphs,\n      },\n    },\n    // onCompleted: (updateData) => console.log(updateData),\n    refetchQueries: ['FindTextSectionById'],\n  })\n\n  useEffect(() => {\n    updateTextSection()\n  }, [state.context])\n\n  console.log(editorState)\n  if (loading) return <div>Loading </div>\n  return (\n    <div>\n      <EditSectionInfo textSection={data?.findTextSectionById.textSection!} />\n      <div style={{ display: 'grid', gridAutoFlow: 'column' }}>\n        <div onClick={() => setEditorState('VOCAB')}>Vocab</div>\n        <div onClick={() => setEditorState('QUESTIONS')}>Questions</div>\n        <div onClick={() => setEditorState('PROTOCOLS')}>Protocols</div>\n        <div onClick={() => setEditorState('QUIZ_QUESTIONS')}>\n          Quiz Questions\n        </div>\n      </div>\n      <ListBoxes>\n        {editorState === 'VOCAB' && (\n          <VocabBox\n            setCurrentIndexForItem={setCurrentIndexForItem}\n            toggleVocabItemInputs={toggleVocabItemInputs}\n            updateTextSection={updateTextSection}\n          />\n        )}\n\n        {editorState === 'QUESTIONS' && (\n          <QuestionsBox\n            setCurrentIndexForItem={setCurrentIndexForItem}\n            toggleQuestionsItemInputs={toggleQuestionsItemInputs}\n            updateTextSection={updateTextSection}\n          />\n        )}\n\n        {editorState === 'PROTOCOLS' && (\n          <ProtocolsBox\n            setCurrentIndexForItem={setCurrentIndexForItem}\n            toggleProtocolItemInputs={toggleProtocolItemInputs}\n            updateTextSection={updateTextSection}\n          />\n        )}\n        {editorState === 'QUIZ_QUESTIONS' && <QuizQuestions />}\n      </ListBoxes>\n      {/* {showVocabItemInputs && (\n        <Modal\n          isToggled={showVocabItemInputs}\n          setIsToggled={toggleVocabItemInputs}\n        > */}\n      {state.matches('update.addVocabWord') && (\n        <AddVocabWord\n          state={state}\n          event={event}\n          vocabWord={vocabWord}\n          setVocabWord={setVocabWord}\n          currentIndexForItem={currentIndexForItem}\n          updateTextSection={updateTextSection}\n        />\n      )}\n      {/* </Modal>\n      )} */}\n      {/* {showQuestionsItemInputs && (\n        <Modal\n          isToggled={showQuestionsItemInputs}\n          setIsToggled={toggleQuestionsItemInputs}\n        > */}\n      {state.matches('update.addQuestion') && (\n        <AddQuestion\n          state={state}\n          event={event}\n          questionsItem={questionsItem}\n          setQuestionsItem={setQuestionsItem}\n          currentIndexForItem={currentIndexForItem}\n          updateTextSection={updateTextSection}\n        />\n      )}\n      {/* </Modal>\n      )} */}\n      {/* {showProtocolItemInputs && (\n        <Modal\n          isToggled={showProtocolItemInputs}\n          setIsToggled={toggleProtocolItemInputs}\n        > */}\n      {state.matches('update.addProtocol') && (\n        <AddProtocols\n          currentIndexForItem={currentIndexForItem}\n          event={event}\n          protocolItem={protocolItem}\n          setProtocolItem={setProtocolItem}\n          state={state}\n          updateTextSection={updateTextSection}\n        />\n      )}\n      {/* </Modal>\n      )} */}\n      {state.matches('update.editProtocol') && <EditProtocol />}\n      {state.matches('update.editQuestion') && <EditQuestion />}\n      {state.matches('update.editVocabWord') && <EditVocabWord />}\n    </div>\n  )\n}\n","import React from 'react'\nimport { findTexts_findTexts_texts } from '../../../../../schemaTypes'\nimport { useSectionEditorContextProvider } from './state-n-styles/sectionEditorContext'\n\nexport type TextSelectionDisplayProps = {\n  textList: findTexts_findTexts_texts[]\n}\nexport const EditorTextSelectionDisplay = ({\n  textList,\n}: TextSelectionDisplayProps) => {\n  const [, event] = useSectionEditorContextProvider()\n\n  return (\n    <div>\n      <div>Texts: </div>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            event({ type: 'SET_TEXT_TITLE', textTitle: e.target.value })\n          }\n        }}\n      >\n        <option value={'none'}>Select your text</option>\n        {textList.map((text) => (\n          <option key={text._id!} value={text.textTitle!}>\n            {text.textTitle}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import React from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findTextsForTextSectionEditor,\n  me_me_Teacher,\n} from '../../../../../schemaTypes'\nimport { sectionEditorMachineEvent } from './state-n-styles/sectionEditorMachine'\nimport { EditorTextSelectionDisplay } from './EditorTextSelectionDisplay'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\n\nexport type TextListLoaderProps = {}\n\nexport const FIND_TEXTS_FOR_TEXT_SECTION_EDITOR_QUERY = gql`\n  query findTextsForTextSectionEditor {\n    findTexts {\n      texts {\n        _id\n        textTitle\n        ownerId\n      }\n    }\n  }\n`\n\nexport const EditorTextListLoader = ({}: TextListLoaderProps) => {\n  const me: me_me_Teacher = useUserContextProvider()\n\n  const { loading, data } = useQuery<findTextsForTextSectionEditor>(\n    FIND_TEXTS_FOR_TEXT_SECTION_EDITOR_QUERY,\n    {\n      onCompleted: () => console.log(data),\n      onError: (err) => console.error(err),\n    },\n  )\n\n  const texts = data?.findTexts.texts.filter((text) => text.ownerId === me._id)\n  if (loading) return null\n\n  return <EditorTextSelectionDisplay textList={texts!} />\n}\n","import React from 'react'\n\nimport { TextSectionList } from './TextSectionList'\nimport { useSectionEditorContextProvider } from './state-n-styles/sectionEditorContext'\nimport { EditorChapterSelect } from './EditorChapterSelect'\nimport { TextSectionEditorDisplay } from './TextSectionEditorDisplay'\nimport { EditorTextListLoader } from './EditorTextListLoader'\nimport { useNavigate } from 'react-router'\nimport { BackContainer } from '../../assignments/create-assignments/state-and-styles/createAssignmentsStyles'\n\nexport type SectionEditorProps = {}\n\nexport const SectionEditor = ({}: SectionEditorProps) => {\n  const navigate = useNavigate()\n  const [state] = useSectionEditorContextProvider()\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: '1fr 5fr',\n        height: '100%',\n      }}\n    >\n      <div>\n        <BackContainer>\n          <div onClick={() => navigate('/dashboard/lessons')}>Back</div>\n        </BackContainer>\n        <div>Section Editor</div>\n        <EditorTextListLoader />\n        <EditorChapterSelect />\n        <TextSectionList />\n      </div>\n\n      {state.context.sectionId && <TextSectionEditorDisplay />}\n    </div>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  TextSectionVocabInput,\n  TextSectionProtocolsInput,\n  ProtocolActivityTypes,\n  TextSectionQuestionsInput,\n  MarkingPeriodEnum,\n  AcademicOutcomeTypes,\n  LessonTypeEnum,\n  CreateQuizzesByCourseInput,\n  ReadingsInput,\n} from '../../../../../../schemaTypes'\n\nexport type lessonPlannerMachineSchema = {\n  states: {\n    date: {}\n    sections: {\n      states: {\n        text: {}\n        chapter: {}\n        sectionList: {}\n        unit: {}\n      }\n    }\n    lessonInfo: {}\n    markingPeriod: {}\n    courses: {}\n  }\n}\nexport type lessonPlannerMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_DATE'; payload: string }\n  | { type: 'SET_TEXT_TITLE'; payload: string }\n  | { type: 'SET_CHAPTER_ID'; payload: string }\n  | { type: 'SET_CHAPTER_TITLE'; payload: string }\n  | { type: 'SET_CURRENT_SECTION'; payload: string[] }\n  | { type: 'SET_UNIT'; payload: string }\n  | { type: 'ADD_SECTIONS'; payload: string[] }\n  | { type: 'SET_STARTING_SECTION'; payload: string }\n  | { type: 'SET_ENDING_SECTION'; payload: string }\n  | { type: 'SET_STARTING_PAGE'; payload: number }\n  | { type: 'SET_ENDING_PAGE'; payload: number }\n  | { type: 'SET_VOCAB_LIST'; payload: TextSectionVocabInput }\n  | { type: 'ADD_VOCAB'; payload: TextSectionVocabInput }\n  | { type: 'SET_BEFORE_ACTIVITY'; payload: TextSectionProtocolsInput }\n  | { type: 'SET_DURING_ACTIVITY'; payload: TextSectionProtocolsInput[] }\n  | { type: 'SET_AFTER_ACTIVITY'; payload: TextSectionProtocolsInput }\n  | { type: 'SET_QUESTIONS_LIST'; payload: TextSectionQuestionsInput }\n  | { type: 'SET_ESSENTIAL_QUESTION'; payload: string }\n  | { type: 'ASSIGN_TO_COURSES'; payload: string[] }\n  | { type: 'SET_LESSON_NAME'; payload: string }\n  | { type: 'SET_MARKING_PERIOD'; payload: MarkingPeriodEnum }\n  | { type: 'SET_LESSON_TYPE'; payload: LessonTypeEnum }\n  | {\n      type: 'SET_QUIZ_INPUTS'\n      keyName: string\n      payload: string | string[] | ReadingsInput\n    }\n\nexport type lessonPlannerMachineContext = {\n  date: string\n  fromText: string\n  fromChapterTitle: string\n  fromChapterId: string\n  inUnit: string\n  currentSection: string[]\n  textSectionList: string[]\n  texSectionListHeaders: string[]\n  startingSection: string\n  endingSection: string\n  startingPage: number\n  endingPage: number\n  vocabList: TextSectionVocabInput[]\n  beforeActivity: TextSectionProtocolsInput | null\n  duringActivity: TextSectionProtocolsInput[]\n  afterActivity: TextSectionProtocolsInput\n  questionList: TextSectionQuestionsInput[]\n  essentialQuestion: string\n  courses: string[]\n  lessonName: string\n  markingPeriod: MarkingPeriodEnum\n  lessonType: LessonTypeEnum\n  createQuizInputs: CreateQuizzesByCourseInput\n}\n\nexport const lessonPlannerMachine = Machine<\n  lessonPlannerMachineContext,\n  lessonPlannerMachineSchema,\n  lessonPlannerMachineEvent\n>({\n  id: 'lessonPlanner',\n  initial: 'date',\n  context: {\n    date: '',\n    fromText: '',\n    fromChapterId: '',\n    fromChapterTitle: '',\n    inUnit: '',\n    currentSection: [],\n    textSectionList: [],\n    texSectionListHeaders: [],\n    startingSection: '',\n    endingSection: '',\n    startingPage: 0,\n    endingPage: 0,\n    vocabList: [],\n    beforeActivity: {\n      academicOutcomeTypes: AcademicOutcomeTypes.SCHEMA_BUIDING,\n      activityType: ProtocolActivityTypes.INDIVIDUAL,\n      task: '',\n      isActive: false,\n      completed: false,\n    },\n    duringActivity: [],\n    afterActivity: {\n      academicOutcomeTypes: AcademicOutcomeTypes.LOGIC_BUILDING,\n      activityType: ProtocolActivityTypes.INDIVIDUAL,\n      task: '',\n      isActive: false,\n      completed: false,\n    },\n    questionList: [],\n    essentialQuestion: '',\n    courses: [],\n    lessonName: '',\n    markingPeriod: MarkingPeriodEnum.FIRST,\n    lessonType: LessonTypeEnum.REINFORCEMENT,\n    createQuizInputs: {\n      assignedDate: '',\n      // associatedLessonId: '',\n      assignedSectionIds: [],\n      courseIds: [],\n      dueDate: '',\n      dueTime: '',\n      hasAssigner: '',\n      markingPeriod: MarkingPeriodEnum.FIRST,\n      readings: { readingPages: '', readingSections: '' },\n    },\n  },\n\n  states: {\n    date: {\n      on: {\n        NEXT: 'sections',\n        SET_DATE: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, date: evt.payload }\n          }),\n        },\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              markingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    sections: {\n      initial: 'text',\n      states: {\n        text: {\n          on: {\n            NEXT: 'chapter',\n            PREVIOUS: '#lessonPlanner.date',\n            SET_TEXT_TITLE: {\n              actions: assign((ctx, evt) => {\n                return { ...ctx, fromText: evt.payload }\n              }),\n            },\n          },\n        },\n        chapter: {\n          on: {\n            PREVIOUS: 'text',\n            NEXT: 'sectionList',\n            SET_CHAPTER_ID: {\n              actions: assign((ctx, evt) => {\n                return { ...ctx, fromChapterId: evt.payload }\n              }),\n            },\n            SET_CHAPTER_TITLE: {\n              actions: assign((ctx, evt) => {\n                return { ...ctx, fromChapterTitle: evt.payload }\n              }),\n            },\n          },\n        },\n        sectionList: {\n          on: {\n            PREVIOUS: 'chapter',\n            NEXT: 'unit',\n            SET_CURRENT_SECTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  currentSection: [evt.payload[0], evt.payload[1]],\n                }\n              }),\n            },\n            ADD_SECTIONS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  textSectionList: [...ctx.textSectionList, evt.payload[0]],\n                  texSectionListHeaders: [\n                    ...ctx.texSectionListHeaders,\n                    evt.payload[1],\n                  ],\n                }\n              }),\n            },\n            SET_STARTING_SECTION: {\n              actions: assign((ctx, evt) => {\n                return { ...ctx, startingSection: evt.payload }\n              }),\n            },\n            SET_ENDING_SECTION: {\n              actions: assign((ctx, evt) => {\n                return { ...ctx, endingSection: evt.payload }\n              }),\n            },\n          },\n        },\n        unit: {\n          on: {\n            PREVIOUS: 'sectionList',\n            NEXT: '#lessonPlanner.lessonInfo',\n            SET_UNIT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  inUnit: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n      },\n    },\n    lessonInfo: {\n      on: {\n        PREVIOUS: 'sections',\n        NEXT: 'markingPeriod',\n        SET_STARTING_PAGE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              startingPage: evt.payload,\n            }\n          }),\n        },\n        SET_LESSON_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              lessonType: evt.payload,\n            }\n          }),\n        },\n        SET_ENDING_PAGE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              endingPage: evt.payload,\n            }\n          }),\n        },\n        SET_VOCAB_LIST: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, vocabList: [...ctx.vocabList, evt.payload] }\n          }),\n        },\n        ADD_VOCAB: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, vocabList: [...ctx.vocabList, evt.payload] }\n          }),\n        },\n        SET_BEFORE_ACTIVITY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              beforeActivity: evt.payload,\n            }\n          }),\n        },\n        SET_DURING_ACTIVITY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              duringActivity: evt.payload,\n            }\n          }),\n        },\n        SET_AFTER_ACTIVITY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              afterActivity: evt.payload,\n            }\n          }),\n        },\n        SET_QUESTIONS_LIST: {\n          actions: assign((ctx, evt) => {\n            return { ...ctx, questionList: [...ctx.questionList, evt.payload] }\n          }),\n        },\n        SET_ESSENTIAL_QUESTION: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              essentialQuestion: evt.payload,\n            }\n          }),\n        },\n        SET_LESSON_NAME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              lessonName: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    markingPeriod: {\n      on: {\n        PREVIOUS: 'lessonInfo',\n        NEXT: 'courses',\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              markingPeriod: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    courses: {\n      on: {\n        PREVIOUS: 'lessonInfo',\n        ASSIGN_TO_COURSES: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courses: evt.payload,\n            }\n          }),\n        },\n        SET_QUIZ_INPUTS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              createQuizInputs: {\n                ...ctx.createQuizInputs,\n                [evt.keyName]: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport {\n  lessonPlannerMachine,\n  lessonPlannerMachineEvent,\n  lessonPlannerMachineContext,\n} from './lessonPlannerMachine'\nimport { State } from 'xstate'\n\nconst LessonPlannerContext = createContext<any>(undefined)\n\ntype LessonPlannerContextProps = {\n  children: ReactNode\n}\n\nexport const LessonPlannerContextProvider: FC<LessonPlannerContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(lessonPlannerMachine)\n  return (\n    <LessonPlannerContext.Provider value={[state, event]}>\n      {children}\n    </LessonPlannerContext.Provider>\n  )\n}\n\nexport function useLessonPlannerContextProvider() {\n  const context = useContext(LessonPlannerContext)\n  if (context === undefined) {\n    throw new Error(\n      'useLessonPlannerContextProvider must be used within a LessonPlannerContextProvider',\n    )\n  }\n  return context as [\n    State<lessonPlannerMachineContext, lessonPlannerMachineEvent, any, any>,\n    (event: lessonPlannerMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\nimport { Standard8x12Container } from '../../../../../../appStyles'\n\nexport const LessonPlannerContainer = styled(Standard8x12Container)`\n  height: 95vh;\n`\nexport const LessonPlanOutput = styled.div`\n  grid-row: 1/-1;\n  grid-column: -4/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-rows: repeat(12, 1fr);\n  background-color: var(--blue);\n  border-left: 3px solid var(--white);\n  border-top: 3px solid var(--white);\n  color: var(--white);\n  font-size: 1.2rem;\n`\n\nexport const GoBackToAssignmentsContainer = styled.div`\n  grid-row: -2/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const LessonPlanOutputHeader = styled.div`\n  font-size: 2rem;\n  text-decoration: underline;\n`\n\nexport const LessonPlannerDesignContainer = styled(Standard8x12Container)`\n  grid-row: 1/-1;\n  grid-column: 1/-4;\n  border-right: 1px solid var(--blue);\n  font-size: 1.2rem;\n  /* border: 1px solid var(--blue); */\n  /* border: 1px solid var(--blue); */\n`\n\nexport const LessonPlanGeneralInfoContainer = styled.div`\n  grid-row: 2/-1;\n  grid-column: 1/-1;\n  /* display: grid;\n  justify-items: center;\n  align-items: start; */\n  font-size: 2.5rem;\n`\n\nexport const LessonPlanDateAssign = styled.div`\n  grid-row: 3/7;\n  grid-column: 3/-3;\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n  font-size: 2.5rem;\n`\nexport const LessonPlanDateInput = styled.input`\n  width: 32%;\n  height: 32%;\n  font-size: 1.5rem;\n  color: var(--blue);\n`\nexport const LessonPlanMarkingPeriodSelect = styled.select`\n  width: 32%;\n  height: 32%;\n  font-size: 1.5rem;\n  color: var(--blue);\n  background-color: var(--white);\n`\n\nexport const LessonPlannerHeader = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n  text-decoration: underline;\n`\n\nexport const LessonPlannerSectionHeader = styled.div`\n  grid-row: 2/3;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.5rem;\n`\n\nexport const LessonPlannerSectionBody = styled.div`\n  grid-row: 3/7;\n  grid-column: 3/-3;\n  font-size: 1.2rem;\n  overflow: scroll;\n`\nexport const LessonPlannerListSelectorOption = styled.div`\n  width: max-content;\n  height: max-content;\n  cursor: default;\n  :hover {\n    text-decoration: underline;\n  }\n`\nexport const LessonPlannerButtonContainer = styled.div`\n  grid-row: -2/-1;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const LessonPlannerButton = styled.button`\n  width: 80%;\n  height: 40%;\n  font-size: larger;\n  background-color: var(--blue);\n  color: var(--white);\n`\n\nexport const TextPickerHeader = styled(LessonPlannerSectionHeader)``\n\nexport const TextPickerBody = styled(LessonPlannerSectionBody)``\n\nexport const TextPickerTextSelection = styled(LessonPlannerListSelectorOption)``\n\nexport const SectionPickerHeader = styled(LessonPlannerSectionHeader)``\nexport const SectionPickerBody = styled(TextPickerBody)`\n  display: grid;\n  grid-template-rows: 6fr 1fr;\n`\nexport const SectionPickerSelectOptionsForm = styled.form`\n  display: grid;\n  grid-template-rows: 6fr 1fr;\n`\n\nexport type SectionSelectorOptionProps = {\n  selected: boolean\n}\nexport const SectionSelectorOption = styled(\n  LessonPlannerListSelectorOption,\n)<SectionSelectorOptionProps>`\n  color: ${({ selected }) => (selected ? 'var(--grey)' : 'var(--blue)')};\n`\nexport const SectionSelectorOptionAddButtonContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const SectionSelectorOptionAddButton = styled(LessonPlannerButton)`\n  justify-self: center;\n  height: 50%;\n`\nexport const SectionPickerButtonContainer = styled(\n  LessonPlannerButtonContainer,\n)`\n  grid-auto-flow: column;\n`\nexport const SectionPickerNextButton = styled(LessonPlannerButton)``\n\nexport const UnitSectionBody = styled(LessonPlannerSectionBody)`\n  /* grid-template-rows: 4fr 1fr; */\n`\nexport type UnitSelectorOptionsProps = {\n  selected: boolean\n}\nexport const UnitSelectorOption = styled(\n  LessonPlannerListSelectorOption,\n)<UnitSelectorOptionsProps>`\n  color: ${({ selected }) => (selected ? 'var(--grey)' : 'var(--blue)')};\n`\n\nexport const CreateUnitContainer = styled.div`\n  grid-row: 6/7;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const CreateUnitInput = styled.input`\n  width: 100%;\n  font-size: inherit;\n  color: inherit;\n  background-color: var(--white);\n`\nexport const CreateUnitButton = styled(SectionSelectorOptionAddButton)`\n  height: 75%;\n`\nexport const LessonInfoContainer = styled(Standard8x12Container)``\n\nexport const LessonInfoTitleContainer = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 2rem;\n`\n\nexport const LessonPlannerActivityBody = styled(Standard8x12Container)`\n  grid-row: 2/-2;\n  grid-column: 1/-1;\n  grid-auto-flow: column;\n`\n\nexport const LessonBuilderContainer = styled.div`\n  grid-row: 2/-2;\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  padding-left: 2%;\n  padding-right: 2%;\n`\n\nexport const VocabList = styled.div`\n  grid-row: 2/-1;\n  grid-column: 1/4;\n  overflow: scroll;\n`\n\nexport const LessonNameContainer = styled.div`\n  grid-row: 1/2;\n  grid-column: 1/-1;\n  display: grid;\n  /* grid-template-columns: 1fr 2fr; */\n  align-items: center;\n  justify-items: center;\n`\nexport const LessonNameTitle = styled.div`\n  /* justify-self: right;\n  padding-right: 10%; */\n  text-decoration: underline;\n  font-size: 2.5vh;\n`\n\nexport const LessonNameInput = styled.input`\n  width: 80%;\n  border: 1px solid var(--white);\n  height: 40%;\n  border-bottom: 1px solid var(--blue);\n  justify-self: left;\n  font-size: inherit;\n  color: inherit;\n`\n\nexport const ActivityContainer = styled.div`\n  grid-row: 2/5;\n  grid-column: 2/-2;\n  overflow: scroll;\n`\n\nexport const ActivitySelectorContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n  cursor: default;\n  font-size: 3vh;\n`\nexport const ActivityCreatorStyle = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-row-gap: 25%;\n  padding-top: 5%;\n`\nexport const ActivityCategorySelect = styled.select`\n  width: 60%;\n  font-size: 1.3rem;\n  color: inherit;\n  background-color: var(--white);\n`\n\nexport const ActivitySelectContainer = styled.div`\n  height: 50%;\n`\n\nexport const ActivityCategoryInput = styled.input`\n  width: 80%;\n  font-size: inherit;\n  color: inherit;\n`\nexport const BeforeActivityContainer = styled(ActivityCreatorStyle)``\nexport const DuringActivityContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n`\n\nexport const DuringActivityBuilderContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr 5fr;\n`\nexport const DuringActivityTitleContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n`\n\nexport const DuringActivityTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nexport const DuringActivityBody = styled.div`\n  overflow: scroll;\n`\nexport const DuringActivityConstructorContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 3fr 1fr 1fr;\n`\nexport const ProtocolConstructorTitle = styled.div`\n  justify-self: center;\n  align-self: center;\n`\n\nexport const ProtocolConstructorInfoContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  align-items: center;\n  justify-items: center;\n`\n\nexport const ProtocolActivitySelect = styled.input`\n  /* width: 60%; */\n  font-size: 1.3rem;\n  color: inherit;\n  background-color: var(--white);\n`\nexport const SelectedProtocolContainer = styled.div`\n  display: grid;\n  grid-template-rows: 4fr 1fr;\n  overflow: scroll;\n`\n\nexport const SelectedProtocolItem = styled.div`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nexport const AddProtocolButton = styled.button`\n  height: 4vh;\n  font-size: 3vh;\n  width: 50%;\n  text-align: center;\n  justify-self: center;\n  color: var(--white);\n  background-color: var(--blue);\n`\n\nexport type DuringActivitySelectionProps = {\n  selected: boolean\n}\nexport const DuringActivitySelection = styled.div<DuringActivitySelectionProps>`\n  :hover {\n    text-decoration: underline;\n  }\n  cursor: pointer;\n  color: ${({ selected }) => (selected ? 'var(--grey)' : 'var(--blue)')};\n`\n\nexport const AfterActivityContainer = styled(ActivityCreatorStyle)``\nexport const EssentialQuestionContainer = styled.div`\n  grid-row: 5/-2;\n  grid-column: 4/-1;\n  display: grid;\n  grid-template-rows: 1fr 2fr 1fr;\n`\nexport const EssentialQuestionTitle = styled.div`\n  font-size: 1.3rem;\n  justify-self: center;\n`\n\nexport const EssentialQuestionOptionsContainer = styled.div`\n  overflow: scroll;\n`\nexport type EssentialQuestionOptionSelectProps = {\n  selected: boolean\n}\nexport const EssentialQuestionOptionSelect = styled.div<EssentialQuestionOptionSelectProps>`\n  color: ${({ selected }) => (selected ? 'var(--grey)' : 'var(--blue)')};\n  cursor: pointer;\n`\n\nexport const EssentialQuestionAddContainter = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n`\nexport const EssentialQuestionAddTitle = styled.div`\n  justify-self: right;\n  padding-right: 10%;\n  align-self: center;\n`\nexport const EssentialQuestionInput = styled.input`\n  width: 90%;\n  align-self: center;\n  height: 50%;\n  border: 1px solid var(--white);\n  border-bottom: 1px solid var(--blue);\n  font-size: inherit;\n  color: inherit;\n  justify-self: left;\n`\n\nexport const AssignCourseContainer = styled.div`\n  grid-row: 3/-3;\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: 1fr 1fr 1fr;\n`\nexport const CourseToAssignContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  align-items: center;\n`\nexport const AssignCourseCheckBox = styled.input`\n  justify-self: right;\n  height: 3rem;\n  width: 4rem;\n  background-color: var(--white);\n`\nexport const AssignCourseName = styled.div`\n  justify-self: left;\n  font-size: 2rem;\n`\n\nexport const BackToCalendarButton = styled.button`\n  height: 3vh;\n  font-size: 2vh;\n  color: var(--blue);\n  background-color: var(--white);\n`\n\nexport const LessonTypeSelectorContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n`\n\nexport const TitleContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3.5vh;\n`\n\nexport const LessonTypeContianer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: top;\n  font-size: 3vh;\n`\nexport type LessonTypesProps = {\n  selected: boolean\n}\n\nexport const LessonTypes = styled.div<LessonTypesProps>`\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n  &:hover {\n    color: var(--grey);\n  }\n  cursor: pointer;\n`\n","import React, { FC } from 'react'\nimport { FIND_TEXTS_QUERY } from '../section-builder/TextListLoader'\nimport { useQuery } from '@apollo/client'\nimport { findTexts } from '../../../../../schemaTypes'\n// import { TextPicker } from './TextPicker'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  TextPickerHeader,\n  TextPickerBody,\n  TextPickerTextSelection,\n  SectionPickerButtonContainer,\n  SectionPickerNextButton,\n} from './state-and-styles/lessonPlannerStyles'\n\ntype LessonPlannerTextListLoaderProps = {}\n\nexport const LessonPlannerTextListLoader: FC<\n  LessonPlannerTextListLoaderProps\n> = () => {\n  const me = useUserContextProvider()\n  const [, event] = useLessonPlannerContextProvider()\n\n  const { loading, error, data } = useQuery<findTexts>(FIND_TEXTS_QUERY, {\n    onError: (error) => console.error(error),\n  })\n\n  const texts = data?.findTexts.texts.filter((text) => text.ownerId === me._id)!\n\n  return (\n    <>\n      <TextPickerHeader>\n        <div>Select the Text</div>\n      </TextPickerHeader>\n      {loading ? (\n        <TextPickerBody></TextPickerBody>\n      ) : (\n        <TextPickerBody>\n          {texts.length > 0 && (\n            // <select\n            //   onChange={(e: any) => {\n            //     if (e.target.value !== 'Select your text') {\n            //       event({ type: 'SET_TEXT_TITLE', payload: e.target.value })\n            //       event({ type: 'NEXT' })\n            //     }\n            //   }}\n            // >\n            //   <option value={undefined}>Select your text</option>\n            //   {texts.map((text) => (\n            //     <option key={text._id!} value={text.textTitle!}>\n            //       {text.textTitle}\n            //     </option>\n            //   ))}\n            // </select>\n            <div>\n              {texts.map((text) => (\n                <TextPickerTextSelection\n                  key={text._id!}\n                  onClick={() => {\n                    event({ type: 'SET_TEXT_TITLE', payload: text.textTitle })\n                    event({ type: 'NEXT' })\n                  }}\n                >\n                  {text.textTitle}\n                </TextPickerTextSelection>\n              ))}\n            </div>\n          )}\n        </TextPickerBody>\n      )}\n      <SectionPickerButtonContainer>\n        <SectionPickerNextButton onClick={() => event({ type: 'PREVIOUS' })}>\n          Back\n        </SectionPickerNextButton>\n      </SectionPickerButtonContainer>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findChaptersInText,\n  findChaptersInTextVariables,\n} from '../../../../../schemaTypes'\nimport { FIND_CHAPTERS_IN_TEXT_QUERY } from '../section-builder/ChapterSelect'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  TextPickerTextSelection,\n  TextPickerHeader,\n  TextPickerBody,\n  SectionPickerButtonContainer,\n  SectionPickerNextButton,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type LessonPlannerChapterSelectProps = {\n  text: string\n}\n\nexport const LessonPlannerChapterSelect: FC<\n  LessonPlannerChapterSelectProps\n> = ({ text }) => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const { loading, error, data } = useQuery<\n    findChaptersInText,\n    findChaptersInTextVariables\n  >(FIND_CHAPTERS_IN_TEXT_QUERY, {\n    variables: { input: { textTitle: text } },\n    onError: (error) => console.error(error),\n  })\n\n  return (\n    <>\n      <TextPickerHeader>\n        Select Chapter from {state.context.fromText}\n      </TextPickerHeader>\n      {loading ? (\n        <TextPickerBody></TextPickerBody>\n      ) : (\n        <TextPickerBody>\n          {/* <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'Choose a Chapter') {\n            const arr = e.target.value.split(',')\n            event({ type: 'SET_CHAPTER_ID', payload: arr[0] })\n            event({ type: 'SET_CHAPTER_TITLE', payload: arr[1] })\n            event({ type: 'NEXT' })\n          }\n        }}\n      >\n        <option value={undefined}>Choose a Chapter</option>\n        {data?.findChaptersInText.chapters.map((chapter) => (\n          <option\n            key={chapter._id!}\n            value={[chapter._id!, chapter.chapterTitle]}\n          >\n            {chapter.chapterTitle}\n          </option>\n        ))}\n      </select> */}\n          {data?.findChaptersInText.chapters.map((chapter) => (\n            <TextPickerTextSelection\n              onClick={() => {\n                event({ type: 'SET_CHAPTER_ID', payload: chapter._id! })\n                event({\n                  type: 'SET_CHAPTER_TITLE',\n                  payload: chapter.chapterTitle,\n                })\n                event({ type: 'NEXT' })\n              }}\n              key={chapter._id!}\n              // value={[chapter._id!, chapter.chapterTitle]}\n            >\n              {chapter.chapterTitle}\n            </TextPickerTextSelection>\n          ))}\n        </TextPickerBody>\n      )}\n      <SectionPickerButtonContainer>\n        <SectionPickerNextButton onClick={() => event({ type: 'PREVIOUS' })}>\n          Back\n        </SectionPickerNextButton>\n      </SectionPickerButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findTextSectionsByChapter,\n  findTextSectionsByChapterVariables,\n} from '../../../../../schemaTypes'\nimport { FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY } from '../section-editor/TextSectionList'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  TextPickerHeader,\n  TextPickerBody,\n  SectionPickerBody,\n  SectionPickerHeader,\n  SectionPickerButtonContainer,\n  SectionPickerNextButton,\n  SectionSelectorOption,\n  SectionSelectorOptionAddButton,\n  SectionPickerSelectOptionsForm,\n  SectionSelectorOptionAddButtonContainer,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type SectionSelectProps = {}\n\nexport const SectionSelect: FC<SectionSelectProps> = () => {\n  const [state, event] = useLessonPlannerContextProvider()\n\n  useEffect(() => {\n    if (state.context.textSectionList.length > 0) {\n      event({\n        type: 'SET_STARTING_SECTION',\n        payload: state.context.texSectionListHeaders[0],\n      })\n      event({\n        type: 'SET_ENDING_SECTION',\n        payload:\n          state.context.texSectionListHeaders[\n            state.context.texSectionListHeaders.length - 1\n          ],\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.texSectionListHeaders])\n\n  const { loading, error, data } = useQuery<\n    findTextSectionsByChapter,\n    findTextSectionsByChapterVariables\n  >(FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY, {\n    variables: {\n      input: { fromChapterId: state.context.fromChapterId },\n    },\n    onError: (error) => console.error(error),\n  })\n\n  return (\n    <>\n      <SectionPickerHeader>\n        What Sections are in the Lesson?\n      </SectionPickerHeader>\n      <SectionPickerBody>\n        <SectionPickerSelectOptionsForm\n          onSubmit={(e: any) => e.preventDefault()}\n        >\n          {/* <select\n            onChange={(e: any) => {\n              console.log(e.target.value)\n              if (e.target.value !== 'Select a Section') {\n                const arr = e.target.value.split(',')\n                event({\n                  type: 'SET_CURRENT_SECTION',\n                  payload: [arr[0], arr[1]],\n                })\n              } else event({ type: 'SET_CURRENT_SECTION', payload: ['none'] })\n            }}\n          >\n            <option value={undefined}>Select a Section</option>\n            {data?.findTextSectionsByChapter.textSections.map((sections) => (\n              <option\n                key={sections._id!}\n                value={[sections._id!, sections.header]}\n              >\n                {sections.header}\n              </option>\n            ))}\n          </select> */}\n          <div style={{ overflow: 'scroll', height: '35vh' }}>\n            {data?.findTextSectionsByChapter.textSections\n              .filter((a) => a.orderNumber)\n              .sort((a, b) => a.orderNumber! - b.orderNumber!)\n              .map((section) =>\n                loading ? (\n                  'Loading Sections...'\n                ) : (\n                  <SectionSelectorOption\n                    key={section._id!}\n                    // selected={section._id === state.context.currentSection[0]}\n                    selected={state.context.textSectionList.includes(\n                      section._id!,\n                    )}\n                    onClick={() => {\n                      // event({\n                      //   type: 'SET_CURRENT_SECTION',\n                      //   payload: [section._id!, section.header],\n                      // })\n                      event({\n                        type: 'ADD_SECTIONS',\n                        payload: [section._id!, section.header],\n                      })\n                    }}\n                  >\n                    {section.header}\n                  </SectionSelectorOption>\n                ),\n              )}\n            {data?.findTextSectionsByChapter.textSections\n              .filter((a) => !a.orderNumber)\n              // .sort((a, b) => a.orderNumber! - b.orderNumber!)\n              .map((section) =>\n                loading ? (\n                  'Loading Sections...'\n                ) : (\n                  <SectionSelectorOption\n                    key={section._id!}\n                    // selected={section._id === state.context.currentSection[0]}\n                    selected={state.context.textSectionList.includes(\n                      section._id!,\n                    )}\n                    onClick={() => {\n                      // event({\n                      //   type: 'SET_CURRENT_SECTION',\n                      //   payload: [section._id!, section.header],\n                      // })\n                      event({\n                        type: 'ADD_SECTIONS',\n                        payload: [section._id!, section.header],\n                      })\n                    }}\n                  >\n                    {section.header}\n                  </SectionSelectorOption>\n                ),\n              )}\n          </div>\n          {/* <SectionSelectorOptionAddButtonContainer>\n            <SectionSelectorOptionAddButton\n              type='reset'\n              onClick={() => {\n                if (\n                  state.context.currentSection.length > 0 &&\n                  !state.context.currentSection.includes('none')\n                ) {\n                  event({\n                    type: 'ADD_SECTIONS',\n                    payload: [\n                      state.context.currentSection[0],\n                      state.context.currentSection[1],\n                    ],\n                  })\n                  event({ type: 'SET_CURRENT_SECTION', payload: ['none'] })\n                }\n              }}\n            >\n              Add Section\n            </SectionSelectorOptionAddButton>\n          </SectionSelectorOptionAddButtonContainer> */}\n        </SectionPickerSelectOptionsForm>\n        <div>\n          <div>Starting Section: {state.context.startingSection}</div>\n          {state.context.endingSection !== state.context.startingSection && (\n            <div>Ending Section: {state.context.endingSection}</div>\n          )}\n        </div>\n      </SectionPickerBody>\n      <SectionPickerButtonContainer>\n        <SectionPickerNextButton onClick={() => event({ type: 'PREVIOUS' })}>\n          Back\n        </SectionPickerNextButton>\n        {state.context.startingSection && (\n          <SectionPickerNextButton onClick={() => event({ type: 'NEXT' })}>\n            Next\n          </SectionPickerNextButton>\n        )}\n      </SectionPickerButtonContainer>\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { gql, useQuery, useMutation } from '@apollo/client'\nimport {\n  findUnits,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createUnit,\n  createUnitVariables,\n} from '../../../../../schemaTypes'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  LessonPlannerSectionHeader,\n  LessonPlannerSectionBody,\n  LessonPlannerListSelectorOption,\n  SectionPickerButtonContainer,\n  SectionPickerNextButton,\n  UnitSectionBody,\n  CreateUnitContainer,\n  CreateUnitInput,\n  CreateUnitButton,\n  UnitSelectorOption,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type UnitAssignerProps = {}\n\nexport const FIND_UNITS_QUERY = gql`\n  query findUnits {\n    findUnits {\n      units {\n        _id\n        unitName\n      }\n    }\n  }\n`\n\nexport const CREATE_UNIT_MUTATION = gql`\n  mutation createUnit($input: CreateUnitInput!) {\n    createUnit(input: $input) {\n      unit {\n        _id\n      }\n    }\n  }\n`\n\nexport const UnitAssigner: FC<UnitAssignerProps> = () => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const [unitName, setUnitName] = useState('')\n  const { loading, data } = useQuery<findUnits>(FIND_UNITS_QUERY, {\n    onError: (error) => console.error(error),\n  })\n\n  const [createUnit] = useMutation<createUnit, createUnitVariables>(\n    CREATE_UNIT_MUTATION,\n    {\n      variables: { input: { unitName } },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findUnits'],\n    },\n  )\n\n  return (\n    <>\n      <LessonPlannerSectionHeader>\n        <div>Assign to Unit: </div>\n      </LessonPlannerSectionHeader>\n      {loading ? (\n        <UnitSectionBody>Loading Units...</UnitSectionBody>\n      ) : (\n        <>\n          <UnitSectionBody>\n            {data?.findUnits.units.map((unit) => (\n              <UnitSelectorOption\n                key={unit._id!}\n                selected={state.context.inUnit === unit._id!}\n                onClick={() => event({ type: 'SET_UNIT', payload: unit._id! })}\n              >\n                {unit.unitName}\n              </UnitSelectorOption>\n            ))}\n          </UnitSectionBody>\n          <CreateUnitContainer>\n            <div>Create New Unit</div>\n            <CreateUnitInput\n              onChange={(e: any) => setUnitName(e.target.value)}\n            />\n            <CreateUnitButton onClick={() => createUnit()}>\n              Create\n            </CreateUnitButton>\n          </CreateUnitContainer>\n        </>\n      )}\n      <SectionPickerButtonContainer>\n        <SectionPickerNextButton onClick={() => event({ type: 'PREVIOUS' })}>\n          Back\n        </SectionPickerNextButton>\n        {state.context.inUnit && (\n          <SectionPickerNextButton onClick={() => event({ type: 'NEXT' })}>\n            Next\n          </SectionPickerNextButton>\n        )}\n      </SectionPickerButtonContainer>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { LessonPlannerTextListLoader } from './LessonPlannerTextListLoader'\nimport { LessonPlannerChapterSelect } from './LessonPlannerChapterSelect'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport { SectionSelect } from './SectionSelect'\nimport { UnitAssigner } from './UnitAssigner'\n\nexport type SectionAssignerProps = {}\n\nexport const SectionAssigner: FC<SectionAssignerProps> = () => {\n  const [state] = useLessonPlannerContextProvider()\n\n  return (\n    <>\n      {state.matches('sections.text') && <LessonPlannerTextListLoader />}\n      {state.matches('sections.chapter') && (\n        <LessonPlannerChapterSelect text={state.context.fromText} />\n      )}\n      {state.matches('sections.sectionList') && <SectionSelect />}\n      {state.matches('sections.unit') && <UnitAssigner />}\n    </>\n  )\n}\n","import { useState } from 'react'\n\nexport const useCheckBox = (initialList: any[]) => {\n  const [list, setList] = useState<any[]>(initialList)\n\n  const handleChange = (e: any) => {\n    const eventValue = e.target.value\n    const periodIndex = list.findIndex((i) => i === eventValue)\n\n    if (periodIndex > -1) {\n      setList((list) => [\n        ...list.slice(0, periodIndex),\n        ...list.slice(periodIndex + 1),\n      ])\n    } else {\n      setList((list) => [...list, eventValue])\n    }\n  }\n\n  const resetList = () => setList([])\n\n  return [list, handleChange, resetList] as const\n}\n","import React, { FC } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  createLessonVariables,\n  LessonTypeEnum,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport { dateConverter } from '../../../../../utils'\nimport { LessonPlannerButton } from './state-and-styles/lessonPlannerStyles'\nimport { useNavigate } from 'react-router'\n\nexport type CreateLessonProps = {}\n\nexport const CREATE_LESSON_MUTATION = gql`\n  mutation createLesson($input: CreateLessonInput!) {\n    createLesson(input: $input) {\n      lessons {\n        _id\n        assignedMarkingPeriod\n      }\n    }\n  }\n`\n\nexport const CreateLesson: FC<CreateLessonProps> = () => {\n  const [state] = useLessonPlannerContextProvider()\n  const navigate = useNavigate()\n  const {\n    afterActivity,\n    beforeActivity,\n    courses,\n    date,\n    duringActivity,\n    endingSection,\n    textSectionList,\n    essentialQuestion,\n    questionList,\n    startingSection,\n    vocabList,\n    inUnit,\n    lessonName,\n    startingPage,\n    endingPage,\n    markingPeriod,\n    lessonType,\n  } = state.context\n\n  const [createLesson] = useMutation<createLessonVariables>(\n    CREATE_LESSON_MUTATION,\n    {\n      variables: {\n        input: {\n          assignedCourses: courses,\n          assignedDate: date,\n          assignedMarkingPeriod: markingPeriod,\n          inUnit,\n          assignedSections: {\n            startingSection,\n            endingSection,\n          },\n          lessonName,\n          assignedSectionIdList: textSectionList,\n          vocabList,\n          beforeActivity,\n          afterActivity,\n          questionList,\n          duringActivities:\n            state.context.lessonType === LessonTypeEnum.INTRODUCTORY\n              ? []\n              : duringActivity,\n          essentialQuestion: essentialQuestion,\n          pageNumbers: {\n            startingPage,\n            endingPage,\n          },\n          lessonType: lessonType,\n        },\n      },\n      onCompleted: (data) => {\n        console.log(data)\n        navigate('/dashboard/lessons')\n      },\n      onError: (error) => console.log(error),\n\n      refetchQueries: [\n        'findLessonByCourseAndDate',\n        'findLessonsByAssignedDate',\n      ],\n    },\n  )\n\n  return (\n    <>\n      <LessonPlannerButton onClick={() => createLesson()}>\n        Create Lesson\n      </LessonPlannerButton>\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport { create } from 'domain'\nimport React, { useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport {\n  createQuizzesByCourse,\n  createQuizzesByCourseVariables,\n  me_me_Teacher,\n} from '../../../../../schemaTypes'\nimport { dateConverter, dateInputConverter } from '../../../../../utils'\nimport { useLessonPlannerContextProvider } from '../lesson-planner/state-and-styles/lessonPlannerContext'\nimport { FindAllQuizzableLessons } from './FindAllQuizzableLessons'\n\nimport { useCreateQuizContextProvider } from './state-n-styles/CreateQuizContext'\n\nexport type CreateQuizProps = {}\n\nexport const CREATE_QUIZZES_MUTATION = gql`\n  mutation createQuizzesByCourse($input: CreateQuizzesByCourseInput!) {\n    createQuizzesByCourse(input: $input) {\n      quizzes {\n        _id\n      }\n    }\n  }\n`\nexport const CreateQuiz = ({}: CreateQuizProps) => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const me: me_me_Teacher = useUserContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [mp] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = mp.context\n  const params = useParams()\n  const { date } = params\n  // const quizDate = new Date(Number(date)).toLocaleDateString()\\\n  const [createQuizzes] = useMutation<\n    createQuizzesByCourse,\n    createQuizzesByCourseVariables\n  >(CREATE_QUIZZES_MUTATION, {\n    variables: { input: state.context.createQuizInputs },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n  useEffect(() => {\n    event({\n      type: 'SET_QUIZ_INPUTS',\n      keyName: 'courseIds',\n      payload: state.context.courses,\n    })\n    event({\n      type: 'SET_QUIZ_INPUTS',\n      keyName: 'hasAssigner',\n      payload: me._id!,\n    })\n    event({\n      type: 'SET_QUIZ_INPUTS',\n      keyName: 'markingPeriod',\n      payload: state.context.markingPeriod,\n    })\n    event({\n      type: 'SET_QUIZ_INPUTS',\n      keyName: 'assignedSectionIds',\n      payload: state.context.textSectionList,\n    })\n    event({\n      type: 'SET_QUIZ_INPUTS',\n      keyName: 'readings',\n      payload: {\n        readingPages: `${state.context.startingPage} - ${state.context.endingPage}`,\n        readingSections: `${state.context.startingSection} - ${state.context.endingSection}`,\n      },\n    })\n  }, [state.context.courses])\n\n  return (\n    <div style={{ gridColumn: '1/-1', fontSize: '3vh', display: 'grid' }}>\n      {/* <FindAllQuizzableLessons assignedDate={quizDate} /> */}\n      <div style={{ textAlign: 'center' }}>Create Quiz</div>\n      <div style={{ textAlign: 'center' }}>\n        When?{' '}\n        <input\n          type=\"date\"\n          value={dateInputConverter(\n            state.context.createQuizInputs.assignedDate,\n          )}\n          onChange={(e) => {\n            // console.log(new Date(e.target.value).toLocaleDateString())\n            // console.log(dateConverter(e.target.value))\n            event({\n              type: 'SET_QUIZ_INPUTS',\n              keyName: 'assignedDate',\n              payload: dateConverter(e.target.value),\n            })\n            event({\n              type: 'SET_QUIZ_INPUTS',\n              keyName: 'dueDate',\n              payload: dateConverter(e.target.value),\n            })\n            event({\n              type: 'SET_QUIZ_INPUTS',\n              keyName: 'dueTime',\n              payload: '2:15:00 PM',\n            })\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: 'grid',\n          placeItems: 'center',\n        }}\n      >\n        <button\n          style={{\n            width: '50%',\n            fontSize: '2.5vh',\n            color: 'var(--white)',\n            backgroundColor: 'var(--blue)',\n          }}\n          onClick={() => createQuizzes()}\n        >\n          Create Quizzes\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  getCoursesForUser,\n  getCoursesForUserVariables,\n  getCoursesForUser_findUserData_user_Teacher,\n  me_me_Teacher,\n} from '../../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { useCheckBox } from '../../../../../hooks/useCheckBox'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  AssignCourseContainer,\n  LessonPlannerButton,\n  AssignCourseName,\n  AssignCourseCheckBox,\n  CourseToAssignContainer,\n  SectionPickerButtonContainer,\n} from './state-and-styles/lessonPlannerStyles'\nimport { CreateLesson } from './CreateLesson'\nimport { sortByLetter } from '../../../../../utils'\nimport { CreateQuiz } from '../quiz-creator/CreateQuiz'\nimport { CreateQuizContextProvider } from '../quiz-creator/state-n-styles/CreateQuizContext'\n\nexport type CourseAssignerProps = {}\n\nexport const GET_COURSES_QUERY = gql`\n  query getCoursesForUser($input: FindUserDataInput!) {\n    findUserData(input: $input) {\n      user {\n        _id\n        ... on Teacher {\n          teachesCourses {\n            _id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const CourseAssigner: FC<CourseAssignerProps> = () => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const [, event] = useLessonPlannerContextProvider()\n  const [coursesList, handleChange] = useCheckBox([])\n\n  useEffect(() => {\n    event({ type: 'ASSIGN_TO_COURSES', payload: coursesList })\n  }, [coursesList, event])\n\n  const { loading, data } = useQuery<\n    getCoursesForUser,\n    getCoursesForUserVariables\n  >(GET_COURSES_QUERY, {\n    variables: {\n      input: { _id: me._id! },\n    },\n\n    onError: (error) => console.error(error),\n  })\n\n  const courseList = me.teachesCourses\n  const realCourseList = courseList\n    .slice(2)\n    .filter((c) => c.name !== 'Unenrolled')\n\n  return (\n    <>\n      <AssignCourseContainer>\n        {realCourseList.sort(sortByLetter).map((course) => (\n          <CourseToAssignContainer key={course._id!}>\n            <AssignCourseCheckBox\n              type=\"checkbox\"\n              value={course._id!}\n              onChange={handleChange}\n            />\n            <AssignCourseName>{course.name}</AssignCourseName>\n          </CourseToAssignContainer>\n        ))}\n        {/* <CreateQuizContextProvider> */}\n        <CreateQuiz />\n        {/* </CreateQuizContextProvider> */}\n      </AssignCourseContainer>\n      <SectionPickerButtonContainer>\n        <LessonPlannerButton onClick={() => event({ type: 'PREVIOUS' })}>\n          Back\n        </LessonPlannerButton>\n        <CreateLesson />\n      </SectionPickerButtonContainer>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { phraseCapitalizer } from '../../../../../utils'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport { LessonPlanOutputHeader } from './state-and-styles/lessonPlannerStyles'\n\nexport type LessonPlannerOutputProps = {}\n\nexport const LessonPlannerOutput: FC<LessonPlannerOutputProps> = () => {\n  const [state] = useLessonPlannerContextProvider()\n  const {\n    date,\n    fromText,\n    fromChapterTitle,\n    startingSection,\n    endingSection,\n    startingPage,\n    endingPage,\n    essentialQuestion,\n    markingPeriod,\n    lessonName,\n  } = state.context\n\n  return (\n    <>\n      <LessonPlanOutputHeader>What's the Plan</LessonPlanOutputHeader>\n      {date && <div>Date: {date}</div>}\n      {markingPeriod && (\n        <div>{phraseCapitalizer(markingPeriod)} Marking Period</div>\n      )}\n      {fromText && <div>From Text: {fromText}</div>}\n      {fromChapterTitle && <div>From Chapter: {fromChapterTitle}</div>}\n      {startingSection && <div>Starting Section: {startingSection}</div>}\n      {startingSection !== endingSection && (\n        <div>Ending Section: {endingSection}</div>\n      )}\n      {startingPage !== 0 && endingPage !== 0 ? (\n        <div>\n          Pages: {startingPage} - {endingPage}\n        </div>\n      ) : startingPage !== 0 ? (\n        <div>Page: {startingPage}</div>\n      ) : (\n        ''\n      )}\n      {essentialQuestion && (\n        <>\n          <div>Essential Question: {essentialQuestion}</div>\n        </>\n      )}\n      {lessonName && <div>Lesson Name: {state.context.lessonName}</div>}\n    </>\n  )\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport {\n  TextSectionProtocolsInput,\n  AcademicOutcomeTypes,\n  ProtocolActivityTypes,\n} from '../../../../../schemaTypes'\n\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport {\n  AfterActivityContainer,\n  ActivityCategorySelect,\n  ActivityCategoryInput,\n} from './state-and-styles/lessonPlannerStyles'\nimport { underscoreEliminator, phraseCapitalizer } from '../../../../../utils'\n\nexport type AfterActivityProps = {\n  protocolList: TextSectionProtocolsInput[]\n}\n\nexport const AfterActivity: FC<AfterActivityProps> = ({ protocolList }) => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const { academicOutcomeTypes, protocolActivityTypes } =\n    useEnumContextProvider()\n\n  const [coolDown, setCoolDown] = useState<TextSectionProtocolsInput>({\n    academicOutcomeTypes: state.context.afterActivity.academicOutcomeTypes,\n    activityType: state.context.afterActivity.activityType,\n    task: state.context.afterActivity.task!,\n    completed: false,\n    isActive: false,\n  })\n\n  useEffect(() => {\n    event({ type: 'SET_AFTER_ACTIVITY', payload: coolDown })\n  }, [coolDown, event])\n\n  return (\n    <AfterActivityContainer>\n      <div>Academic Outcome</div>\n      <ActivityCategorySelect\n        value={coolDown.academicOutcomeTypes}\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setCoolDown({ ...coolDown, academicOutcomeTypes: e.target.value })\n          }\n        }}\n      >\n        <option value=\"none\">Select Outcome Type</option>\n        {academicOutcomeTypes.map((type: AcademicOutcomeTypes) => {\n          const normalizedType = underscoreEliminator(type)\n          return (\n            <option key={type!} value={type}>\n              {phraseCapitalizer(normalizedType)}\n            </option>\n          )\n        })}\n      </ActivityCategorySelect>\n\n      <div>Activity Type</div>\n      <ActivityCategorySelect\n        value={coolDown.activityType}\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setCoolDown({ ...coolDown, activityType: e.target.value })\n          }\n        }}\n      >\n        <option value=\"none\">Select Activity Type</option>\n        {protocolActivityTypes.map((type: ProtocolActivityTypes) => {\n          const normalizedType = underscoreEliminator(type)\n          return (\n            <option key={type!} value={type}>\n              {phraseCapitalizer(normalizedType)}\n            </option>\n          )\n        })}\n      </ActivityCategorySelect>\n\n      <div>Task</div>\n      <ActivityCategoryInput\n        value={coolDown.task}\n        onChange={(e: any) =>\n          setCoolDown({ ...coolDown, task: e.target.value })\n        }\n      />\n    </AfterActivityContainer>\n  )\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport {\n  TextSectionProtocolsInput,\n  ProtocolActivityTypes,\n  AcademicOutcomeTypes,\n} from '../../../../../schemaTypes'\nimport { ProtocolSelect } from './ProtocolSelect'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport {\n  BeforeActivityContainer,\n  ActivityCategorySelect,\n  ActivityCategoryInput,\n} from './state-and-styles/lessonPlannerStyles'\nimport { phraseCapitalizer, underscoreEliminator } from '../../../../../utils'\n\nexport type BeforeActivitySelectProps = {\n  protocolList?: TextSectionProtocolsInput[]\n}\n\nexport const BeforeActivitySelect: FC<BeforeActivitySelectProps> = ({\n  protocolList,\n}) => {\n  const [state, event] = useLessonPlannerContextProvider()\n\n  const { academicOutcomeTypes, protocolActivityTypes } =\n    useEnumContextProvider()\n\n  const [warmUp, setWarmUp] = useState<TextSectionProtocolsInput>({\n    academicOutcomeTypes: state.context.beforeActivity?.academicOutcomeTypes!,\n    activityType: state.context.beforeActivity?.activityType!,\n    task: state.context.beforeActivity?.task!,\n    completed: false,\n    isActive: false,\n  })\n\n  useEffect(() => {\n    event({ type: 'SET_BEFORE_ACTIVITY', payload: warmUp })\n  }, [event, warmUp])\n\n  return (\n    <BeforeActivityContainer>\n      <div>Academic Outcome</div>\n      <ActivityCategorySelect\n        value={warmUp.academicOutcomeTypes}\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setWarmUp({ ...warmUp, academicOutcomeTypes: e.target.value })\n          }\n        }}\n      >\n        <option value={'none'}>Select Outcome Type</option>\n        {academicOutcomeTypes.map((type: AcademicOutcomeTypes) => {\n          const normalizedType = underscoreEliminator(type)\n          return (\n            <option key={type!} value={type}>\n              {phraseCapitalizer(normalizedType)}\n            </option>\n          )\n        })}\n      </ActivityCategorySelect>\n\n      <div>Activity Type</div>\n      <ActivityCategorySelect\n        value={warmUp.activityType}\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setWarmUp({ ...warmUp, activityType: e.target.value })\n          }\n        }}\n      >\n        <option value=\"none\">Select Activity Type</option>\n        {protocolActivityTypes.map((type: ProtocolActivityTypes) => {\n          const normalizedType = underscoreEliminator(type)\n          return (\n            <option key={type!} value={type}>\n              {phraseCapitalizer(normalizedType)}\n            </option>\n          )\n        })}\n      </ActivityCategorySelect>\n\n      <div>Task</div>\n      <ActivityCategoryInput\n        value={warmUp.task}\n        onChange={(e: any) => setWarmUp({ ...warmUp, task: e.target.value })}\n      />\n    </BeforeActivityContainer>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport {\n  LessonTypeEnum,\n  ProtocolActivityTypes,\n  TextSectionProtocolsInput,\n} from '../../../../../schemaTypes'\nimport { underscoreEliminator, phraseCapitalizer } from '../../../../../utils'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  ActivityCategorySelect,\n  AddProtocolButton,\n  DuringActivityBody,\n  DuringActivityBuilderContainer,\n  DuringActivityConstructorContainer,\n  DuringActivitySelection,\n  DuringActivityTitle,\n  DuringActivityTitleContainer,\n  ProtocolConstructorInfoContainer,\n  ProtocolConstructorTitle,\n  SelectedProtocolContainer,\n  SelectedProtocolItem,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type DuringActivityBuilderProps = {\n  protocolList: TextSectionProtocolsInput[]\n}\n\nexport const DuringActivityBuilder = ({\n  protocolList,\n}: DuringActivityBuilderProps) => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const [protocolListState, setprotocolListState] = useState<\n    'PROTOCOLS_TO_SELECT' | 'SELECTED_PROTOCOLS'\n  >('PROTOCOLS_TO_SELECT')\n\n  const { protocolActivityTypes } = useEnumContextProvider()\n\n  const [protocolSelectList, setProtocolSelectList] = useState<\n    TextSectionProtocolsInput[]\n  >([...state.context.duringActivity])\n\n  const [protocolToAdd, setProtocolToAdd] =\n    useState<TextSectionProtocolsInput | null>(null)\n\n  useEffect(() => {\n    event({ type: 'SET_DURING_ACTIVITY', payload: protocolSelectList })\n  }, [protocolSelectList, event])\n\n  const unUsedProtocolList = protocolList.reduce(\n    (acc: TextSectionProtocolsInput[], i) =>\n      protocolSelectList.some((protocol) => protocol.task === i.task)\n        ? [...acc]\n        : [...acc, i],\n    [],\n  )\n  const selectedProtocolList = protocolList.filter((protocol) =>\n    protocolSelectList.some((p) => p.task === protocol.task),\n  )\n\n  useEffect(() => {\n    if (selectedProtocolList.length === 0) {\n      setprotocolListState('PROTOCOLS_TO_SELECT')\n    }\n  }, [selectedProtocolList])\n  console.log(state.context.lessonType === LessonTypeEnum.INTRODUCTORY)\n  return (\n    <DuringActivityBuilderContainer>\n      <>\n        {state.context.lessonType === LessonTypeEnum.INTRODUCTORY && (\n          <div>Introductory Lessons don't have protocols during class.</div>\n        )}\n        {state.context.lessonType === LessonTypeEnum.REINFORCEMENT && (\n          <>\n            <DuringActivityTitleContainer>\n              <DuringActivityTitle\n                onClick={() => setprotocolListState('PROTOCOLS_TO_SELECT')}\n              >\n                Select from these Protocols\n              </DuringActivityTitle>\n              {protocolSelectList.length > 0 && (\n                <DuringActivityTitle\n                  onClick={() => setprotocolListState('SELECTED_PROTOCOLS')}\n                >\n                  During Protocol List ({protocolSelectList.length})\n                </DuringActivityTitle>\n              )}\n            </DuringActivityTitleContainer>\n            {protocolListState === 'PROTOCOLS_TO_SELECT' ? (\n              <>\n                <DuringActivityBody>\n                  {unUsedProtocolList.map((item, i) => {\n                    const selected = protocolToAdd?.task === item.task\n                    return (\n                      <DuringActivitySelection\n                        key={i}\n                        selected={\n                          selected ||\n                          protocolSelectList.some(\n                            (protocol) => protocol.task === item.task,\n                          )\n                        }\n                        onClick={() => {\n                          const protocolListIndexIndex = protocolList.findIndex(\n                            (index) => index.task === item.task,\n                          )\n                          const protocolSelectListIndex =\n                            protocolSelectList.findIndex(\n                              (index) => index.task === item.task,\n                            )\n\n                          if (!selected) {\n                            setProtocolToAdd(\n                              protocolList[protocolListIndexIndex],\n                            )\n                          }\n                          if (selected) {\n                            if (\n                              protocolToAdd!.task ===\n                                protocolList[protocolListIndexIndex].task &&\n                              protocolSelectListIndex === -1\n                            ) {\n                              setProtocolToAdd(null)\n                            } else {\n                              const index = protocolSelectList.findIndex(\n                                (items) => items.task === item.task,\n                              )\n                              setProtocolSelectList([\n                                ...protocolSelectList.slice(0, index),\n                                ...protocolSelectList.slice(index + 1),\n                              ])\n                            }\n                          }\n                        }}\n                      >\n                        {item.task}\n                      </DuringActivitySelection>\n                    )\n                  })}\n                </DuringActivityBody>\n                {protocolToAdd && (\n                  <DuringActivityConstructorContainer>\n                    <ProtocolConstructorTitle>\n                      Construct Protocol\n                    </ProtocolConstructorTitle>\n                    <ProtocolConstructorInfoContainer>\n                      <div>Activity Type</div>\n                      <ActivityCategorySelect\n                        value={protocolToAdd.activityType}\n                        onChange={(e: any) => {\n                          if (e.target.value !== 'none') {\n                            setProtocolToAdd({\n                              ...protocolToAdd,\n                              activityType: e.target.value,\n                            })\n                          }\n                        }}\n                      >\n                        <option value=\"none\">Select Activity Type</option>\n                        {protocolActivityTypes.map(\n                          (type: ProtocolActivityTypes) => {\n                            const normalizedType = underscoreEliminator(type)\n                            return (\n                              <option key={type!} value={type}>\n                                {phraseCapitalizer(normalizedType)}\n                              </option>\n                            )\n                          },\n                        )}\n                      </ActivityCategorySelect>\n                    </ProtocolConstructorInfoContainer>\n                    <AddProtocolButton\n                      onClick={() => {\n                        const protocolIndex = protocolList.findIndex(\n                          (index) => index.task === protocolToAdd.task,\n                        )\n                        console.log(protocolIndex)\n                        setProtocolSelectList([\n                          ...protocolSelectList,\n                          protocolToAdd,\n                        ])\n                        setProtocolToAdd(null)\n                      }}\n                    >\n                      Add to Protocol List\n                    </AddProtocolButton>\n                  </DuringActivityConstructorContainer>\n                )}\n              </>\n            ) : (\n              <SelectedProtocolContainer>\n                <div>\n                  {selectedProtocolList.map((item, i) => (\n                    <SelectedProtocolItem\n                      key={i}\n                      onClick={() => {\n                        const index = protocolSelectList.findIndex(\n                          (items) => items.task === item.task,\n                        )\n                        setProtocolSelectList([\n                          ...protocolSelectList.slice(0, index),\n                          ...protocolSelectList.slice(index + 1),\n                        ])\n                      }}\n                    >\n                      {item.task}\n                    </SelectedProtocolItem>\n                  ))}\n                </div>\n\n                <AddProtocolButton onClick={() => setProtocolSelectList([])}>\n                  Reset Protocol List\n                </AddProtocolButton>\n              </SelectedProtocolContainer>\n            )}\n          </>\n        )}\n      </>\n    </DuringActivityBuilderContainer>\n  )\n}\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  createEssentialQuestion,\n  createEssentialQuestionVariables,\n  findEssentialQuestionsByAssociatedTextSectionIds,\n  findEssentialQuestionsByAssociatedTextSectionIdsVariables,\n  findEssentialQuestionsByAssociatedTextSectionIds_findEssentialQuestionsByAssociatedTextSectionIds_essentialQuestions,\n} from '../../../../../schemaTypes'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\n\nexport type EssentialQuestionBuilderProps = {}\n\nexport const CREATE_ESSENTIAL_QUESTION_MUTATION = gql`\n  mutation createEssentialQuestion($input: CreateEssentialQuestionInput!) {\n    createEssentialQuestion(input: $input) {\n      essentialQuestion {\n        _id\n      }\n    }\n  }\n`\n\nexport const FIND_ESSENTIAL_QUESTIONS_QUERY = gql`\n  query findEssentialQuestionsByAssociatedTextSectionIds(\n    $input: FindEssentialQuestionsByAssociatedTextSectionIdsInput!\n  ) {\n    findEssentialQuestionsByAssociatedTextSectionIds(input: $input) {\n      essentialQuestions {\n        _id\n        question\n      }\n    }\n  }\n`\n\nexport const EssentialQuestionBuilder = ({}: EssentialQuestionBuilderProps) => {\n  const [state, event] = useLessonPlannerContextProvider()\n\n  const [createEssentialQuestion] = useMutation<\n    createEssentialQuestion,\n    createEssentialQuestionVariables\n  >(CREATE_ESSENTIAL_QUESTION_MUTATION, {\n    variables: {\n      input: {\n        associatedTextSectionsIds: state.context.textSectionList,\n        question: state.context.essentialQuestion,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssentialQuestionsByAssociatedTextSectionIds'],\n  })\n\n  const { loading, data } = useQuery<\n    findEssentialQuestionsByAssociatedTextSectionIds,\n    findEssentialQuestionsByAssociatedTextSectionIdsVariables\n  >(FIND_ESSENTIAL_QUESTIONS_QUERY, {\n    variables: {\n      input: { textSectionIds: state.context.textSectionList },\n    },\n    onCompleted: (data) =>\n      console.log(\n        data.findEssentialQuestionsByAssociatedTextSectionIds.essentialQuestions.reduce(\n          (\n            acc: findEssentialQuestionsByAssociatedTextSectionIds_findEssentialQuestionsByAssociatedTextSectionIds_essentialQuestions[],\n            i,\n          ) => {\n            return acc.some((q) => q._id === i._id) ? [...acc] : [...acc, i]\n          },\n          [],\n        ),\n      ),\n    onError: (error) => console.error(error),\n  })\n  const essentialQuestionList =\n    data?.findEssentialQuestionsByAssociatedTextSectionIds.essentialQuestions.reduce(\n      (\n        acc: findEssentialQuestionsByAssociatedTextSectionIds_findEssentialQuestionsByAssociatedTextSectionIds_essentialQuestions[],\n        i,\n      ) => {\n        return acc.some((q) => q._id === i._id) ? [...acc] : [...acc, i]\n      },\n      [],\n    )\n  if (loading) return <div>Loading </div>\n\n  return (\n    <div>\n      <div>Essential Question</div>\n      <div>\n        {essentialQuestionList?.map((q) => (\n          <div\n            key={q._id}\n            onClick={() =>\n              event({ type: 'SET_ESSENTIAL_QUESTION', payload: q.question })\n            }\n          >\n            {q.question}\n          </div>\n        ))}\n      </div>\n      <input\n        onChange={(e) =>\n          event({ type: 'SET_ESSENTIAL_QUESTION', payload: e.target.value })\n        }\n      />\n      <button onClick={() => createEssentialQuestion()}>\n        Use this Question Instead\n      </button>\n    </div>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  LessonNameContainer,\n  LessonNameTitle,\n  LessonNameInput,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type LessonNameProps = {}\n\nexport const LessonName: FC<LessonNameProps> = () => {\n  const [state, event] = useLessonPlannerContextProvider()\n\n  useEffect(() => {\n    event({\n      type: 'SET_LESSON_NAME',\n      payload:\n        state.context.texSectionListHeaders[0] +\n        ' - ' +\n        state.context.texSectionListHeaders[\n          state.context.texSectionListHeaders.length - 1\n        ],\n    })\n  }, [])\n\n  return (\n    // <LessonNameContainer>\n    //   <LessonNameTitle>Lesson Name: {state.context.lessonName}</LessonNameTitle>\n    // </LessonNameContainer>\n    null\n  )\n}\n","import React, { FC, useEffect, useState } from 'react'\n\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport { findTextSectionsById } from '../../../../../schemaTypes'\n\nexport type PagesProps = {\n  data: findTextSectionsById\n}\n\nexport const Pages: FC<PagesProps> = ({ data }) => {\n  const [startPage, setStartPage] = useState<number[]>([])\n  const [endPage, setEndPage] = useState<number[]>([])\n  const [state, event] = useLessonPlannerContextProvider()\n\n  useEffect(() => {\n    data?.findTextSectionsById.textSections.forEach((section) => {\n      setStartPage((list) => [...list, section.pageNumbers.startingPage])\n      setEndPage((list) => [...list, section.pageNumbers.endingPage])\n    })\n  }, [data])\n  useEffect(() => {\n    event({ type: 'SET_STARTING_PAGE', payload: startPage[0] })\n    event({ type: 'SET_ENDING_PAGE', payload: endPage[endPage.length - 1] })\n  }, [startPage, endPage, event])\n\n  return (\n    // <>\n    //   <div>Starting Page: {state.context.startingPage}</div>\n    //   <div>Ending Page: {state.context.endingPage}</div>\n    // </>\n    null\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  findTextSectionsById,\n  findTextSectionsByIdVariables,\n  TextSectionProtocolsInput,\n  TextSectionQuestionsInput,\n} from '../../../../../schemaTypes'\nimport { BeforeActivitySelect } from './BeforeActivitySelect'\nimport { DuringActivitySelect } from './DuringActivitySelect'\nimport { AfterActivity } from './AfterActivity'\n\nimport { EssentialQuestion } from './EssentialQuestion'\nimport { Pages } from './Pages'\nimport { LessonName } from './LessonName'\nimport {\n  LessonInfoContainer,\n  LessonInfoTitleContainer,\n  LessonPlannerSectionHeader,\n  LessonPlannerActivityBody,\n  VocabList,\n  ActivityContainer,\n  ActivitySelectorContainer,\n  LessonPlannerButton,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type LessonPlanInfoProps = {}\n\nexport const FIND_TEXT_SECTIONS_BY_ID_QUERY = gql`\n  query findTextSectionsById($input: FindTextSectionsByIdInput!) {\n    findTextSectionsById(input: $input) {\n      textSections {\n        _id\n        header\n        hasVocab {\n          word\n          definition\n        }\n        hasProtocols {\n          academicOutcomeTypes\n          activityType\n          task\n        }\n        hasQuestions {\n          questionType\n          question\n        }\n        pageNumbers {\n          startingPage\n          endingPage\n        }\n      }\n    }\n  }\n`\nexport type ActivitySelectorValues = 'BEFORE' | 'DURING' | 'AFTER'\n\nexport const LessonPlanInfo: FC<LessonPlanInfoProps> = () => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const [activity, setActivity] = useState<ActivitySelectorValues>('BEFORE')\n\n  const { data } = useQuery<\n    findTextSectionsById,\n    findTextSectionsByIdVariables\n  >(FIND_TEXT_SECTIONS_BY_ID_QUERY, {\n    variables: {\n      input: { _ids: state.context.textSectionList },\n    },\n    onCompleted: (data) => {\n      data?.findTextSectionsById.textSections.forEach((section) => {\n        section.hasVocab?.forEach((word) => {\n          const vocabItem = { word: word.word, definition: word.definition }\n          event({ type: 'SET_VOCAB_LIST', payload: vocabItem })\n        })\n        section.hasQuestions?.forEach((question) => {\n          const questionItem = {\n            question: question.question,\n            questionType: question.questionType,\n          }\n          event({ type: 'SET_QUESTIONS_LIST', payload: questionItem })\n        })\n      })\n    },\n    onError: (error) => console.error(error),\n  })\n\n  const protocolList: TextSectionProtocolsInput[] = []\n\n  data?.findTextSectionsById.textSections.forEach(\n    (section) =>\n      section.hasProtocols?.forEach((protocol) => {\n        const protocolItem = {\n          academicOutcomeTypes: protocol.academicOutcomeTypes,\n          activityType: protocol.activityType,\n          task: protocol.task,\n          isActive: false,\n          completed: false,\n        }\n        protocolList.push(protocolItem)\n      }),\n  )\n\n  const questionsList: TextSectionQuestionsInput[] = []\n\n  data?.findTextSectionsById.textSections.forEach((section) => {\n    section.hasQuestions?.forEach((question) => {\n      const questionItem = {\n        questionType: question.questionType,\n        question: question.question,\n      }\n      questionsList.push(questionItem)\n    })\n  })\n  console.log(state.context.lessonType)\n  return (\n    <>\n      {/* <LessonPlannerSectionHeader>\n        <div>Lesson Information</div>\n      </LessonPlannerSectionHeader> */}\n      <LessonPlannerActivityBody>\n        <Pages data={data!} />\n        <LessonName />\n        <ActivityContainer>\n          <ActivitySelectorContainer>\n            <div\n              onClick={() =>\n                activity === 'BEFORE'\n                  ? setActivity('AFTER')\n                  : activity === 'DURING'\n                    ? setActivity('BEFORE')\n                    : setActivity('DURING')\n              }\n            >\n              &lt;\n            </div>\n            <div>\n              {activity === 'BEFORE'\n                ? 'Before Activity'\n                : activity === 'DURING'\n                  ? 'During Activities'\n                  : 'After Activity'}\n            </div>\n            <div\n              onClick={() =>\n                activity === 'BEFORE'\n                  ? setActivity('DURING')\n                  : activity === 'DURING'\n                    ? setActivity('AFTER')\n                    : setActivity('BEFORE')\n              }\n            >\n              &gt;\n            </div>\n          </ActivitySelectorContainer>\n          {activity === 'BEFORE' && (\n            <BeforeActivitySelect protocolList={protocolList} />\n          )}\n          {activity === 'DURING' && (\n            <DuringActivitySelect protocolList={protocolList} />\n          )}\n          {activity === 'AFTER' && (\n            <AfterActivity protocolList={protocolList} />\n          )}\n        </ActivityContainer>\n        <EssentialQuestion questionsList={questionsList} />\n      </LessonPlannerActivityBody>\n    </>\n  )\n}\n","import React from 'react'\nimport { LessonTypeEnum } from '../../../../../schemaTypes'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  LessonTypeContianer,\n  LessonTypes,\n  LessonTypeSelectorContainer,\n  TitleContainer,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type LessonTypeSelectorProps = {}\n\nexport const LessonTypeSelector = ({}: LessonTypeSelectorProps) => {\n  const [state, event] = useLessonPlannerContextProvider()\n\n  return (\n    <LessonTypeSelectorContainer>\n      <TitleContainer>\n        <div>Choose Lesson Type</div>\n      </TitleContainer>\n      <LessonTypeContianer>\n        <LessonTypes\n          selected={state.context.lessonType === LessonTypeEnum.INTRODUCTORY}\n          onClick={() =>\n            event({\n              type: 'SET_LESSON_TYPE',\n              payload: LessonTypeEnum.INTRODUCTORY,\n            })\n          }\n        >\n          Introductory Lesson\n        </LessonTypes>\n        <LessonTypes\n          selected={state.context.lessonType === LessonTypeEnum.REINFORCEMENT}\n          onClick={() =>\n            event({\n              type: 'SET_LESSON_TYPE',\n              payload: LessonTypeEnum.REINFORCEMENT,\n            })\n          }\n        >\n          Reinforcement Lesson\n        </LessonTypes>\n      </LessonTypeContianer>\n    </LessonTypeSelectorContainer>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport {\n  findTextSectionsById,\n  findTextSectionsByIdVariables,\n  TextSectionProtocolsInput,\n} from '../../../../../schemaTypes'\nimport { phraseCapitalizer, underscoreEliminator } from '../../../../../utils'\nimport { AfterActivity } from './AfterActivity'\nimport { BeforeActivitySelect } from './BeforeActivitySelect'\nimport { DuringActivityBuilder } from './DuringActivityBuilder'\nimport { EssentialQuestionBuilder } from './EssentialQuestionBuilder'\nimport { LessonName } from './LessonName'\nimport {\n  ActivitySelectorValues,\n  FIND_TEXT_SECTIONS_BY_ID_QUERY,\n} from './LessonPlanInfo'\nimport { LessonTypeSelector } from './LessonTypeSelector'\nimport { Pages } from './Pages'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport {\n  ActivitySelectContainer,\n  ActivitySelectorContainer,\n  AfterActivityContainer,\n  DuringActivityBody,\n  LessonBuilderContainer,\n} from './state-and-styles/lessonPlannerStyles'\n\nexport type LessonBuilderProps = {}\n\nexport type LessonBuilderStagesTypes =\n  | 'LESSON_TYPE'\n  | 'ESSENTIAL_QUESTION'\n  | 'BEFORE_ACTIVITY'\n  | 'DURING_ACTIVITY'\n  | 'AFTER_ACTIVITY'\n\nexport const LessonBuilder = ({}: LessonBuilderProps) => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const [activity, setActivity] =\n    useState<LessonBuilderStagesTypes>('LESSON_TYPE')\n\n  const { data } = useQuery<\n    findTextSectionsById,\n    findTextSectionsByIdVariables\n  >(FIND_TEXT_SECTIONS_BY_ID_QUERY, {\n    variables: {\n      input: { _ids: state.context.textSectionList },\n    },\n    onCompleted: (data) => {\n      data?.findTextSectionsById.textSections.forEach((section) => {\n        section.hasVocab?.forEach((word) => {\n          const vocabItem = { word: word.word, definition: word.definition }\n          event({ type: 'SET_VOCAB_LIST', payload: vocabItem })\n        })\n        section.hasQuestions?.forEach((question) => {\n          const questionItem = {\n            question: question.question,\n            questionType: question.questionType,\n          }\n          event({ type: 'SET_QUESTIONS_LIST', payload: questionItem })\n        })\n      })\n    },\n    onError: (error) => console.error(error),\n  })\n  const protocolList: TextSectionProtocolsInput[] = []\n\n  data?.findTextSectionsById.textSections.forEach(\n    (section) =>\n      section.hasProtocols?.forEach((protocol) => {\n        const protocolItem = {\n          academicOutcomeTypes: protocol.academicOutcomeTypes,\n          activityType: protocol.activityType,\n          task: protocol.task,\n          isActive: false,\n          completed: false,\n        }\n        protocolList.push(protocolItem)\n      }),\n  )\n\n  return (\n    <>\n      <LessonBuilderContainer>\n        <Pages data={data!} />\n        <LessonName />\n        <ActivitySelectorContainer>\n          <div\n            onClick={() =>\n              activity === 'LESSON_TYPE'\n                ? setActivity('AFTER_ACTIVITY')\n                : activity === 'AFTER_ACTIVITY'\n                  ? setActivity('DURING_ACTIVITY')\n                  : activity === 'DURING_ACTIVITY'\n                    ? setActivity('BEFORE_ACTIVITY')\n                    : activity === 'BEFORE_ACTIVITY'\n                      ? setActivity('ESSENTIAL_QUESTION')\n                      : setActivity('LESSON_TYPE')\n            }\n          >\n            &lt;\n          </div>\n          <div>{phraseCapitalizer(underscoreEliminator(activity))}</div>\n          <div\n            onClick={() =>\n              activity === 'ESSENTIAL_QUESTION'\n                ? setActivity('BEFORE_ACTIVITY')\n                : activity === 'BEFORE_ACTIVITY'\n                  ? setActivity('DURING_ACTIVITY')\n                  : activity === 'DURING_ACTIVITY'\n                    ? setActivity('AFTER_ACTIVITY')\n                    : activity === 'AFTER_ACTIVITY'\n                      ? setActivity('LESSON_TYPE')\n                      : setActivity('ESSENTIAL_QUESTION')\n            }\n          >\n            &gt;\n          </div>\n        </ActivitySelectorContainer>\n        {activity === 'LESSON_TYPE' && <LessonTypeSelector />}\n        {activity === 'ESSENTIAL_QUESTION' && <EssentialQuestionBuilder />}\n        {activity === 'BEFORE_ACTIVITY' && (\n          <ActivitySelectContainer>\n            <BeforeActivitySelect />\n          </ActivitySelectContainer>\n        )}\n        {activity === 'DURING_ACTIVITY' && (\n          <DuringActivityBuilder protocolList={protocolList} />\n        )}\n        {activity === 'AFTER_ACTIVITY' && (\n          <ActivitySelectContainer>\n            <AfterActivity protocolList={protocolList} />\n          </ActivitySelectContainer>\n        )}\n      </LessonBuilderContainer>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useLessonPlannerContextProvider } from './state-and-styles/lessonPlannerContext'\nimport { SectionAssigner } from './SectionAssigner'\nimport { LessonPlanInfo } from './LessonPlanInfo'\nimport { CourseAssigner } from './CourseAssigner'\nimport {\n  LessonPlannerContainer,\n  LessonPlannerHeader,\n  LessonPlanOutput,\n  LessonPlannerDesignContainer,\n  LessonPlanDateAssign,\n  LessonPlanDateInput,\n  LessonPlannerButton,\n  SectionPickerButtonContainer,\n  LessonPlanMarkingPeriodSelect,\n  GoBackToAssignmentsContainer,\n  BackToCalendarButton,\n} from './state-and-styles/lessonPlannerStyles'\nimport { LessonPlannerOutput } from './LessonPlannerOutput'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { LessonTypeEnum, MarkingPeriodEnum } from '../../../../../schemaTypes'\nimport { useNavigate, useParams } from 'react-router'\nimport { LessonBuilder } from './LessonBuilder'\n\nexport type LessonPlannerProps = {}\n\nexport const LessonPlanner = () => {\n  const [state, event] = useLessonPlannerContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [mp] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = mp.context\n  const params = useParams()\n  const { date } = params\n\n  const lessonDate = new Date(Number(date)).toLocaleDateString()\n\n  const navigate = useNavigate()\n\n  const {\n    beforeActivity,\n    duringActivity,\n    afterActivity,\n    essentialQuestion,\n    lessonName,\n  } = state.context\n\n  const duringActivityReady =\n    state.context.lessonType === LessonTypeEnum.INTRODUCTORY\n      ? duringActivity.length === 0\n      : duringActivity.length > 0\n\n  const readyToSubmit =\n    beforeActivity?.task !== '' &&\n    duringActivityReady &&\n    afterActivity.task !== '' &&\n    essentialQuestion !== '' &&\n    lessonName !== ''\n\n  useEffect(() => {\n    event({ type: 'SET_MARKING_PERIOD', payload: currentMarkingPeriod })\n  }, [currentMarkingPeriod])\n\n  useEffect(() => {\n    event({ type: 'SET_DATE', payload: lessonDate })\n    event({ type: 'NEXT' })\n  }, [])\n\n  return (\n    <LessonPlannerContainer>\n      <LessonPlannerDesignContainer>\n        <LessonPlannerHeader>\n          <div>Lesson Planner</div>\n        </LessonPlannerHeader>\n        {state.matches('date') && (\n          <>\n            <SectionPickerButtonContainer>\n              <LessonPlannerButton onClick={() => event({ type: 'NEXT' })}>\n                Next\n              </LessonPlannerButton>\n            </SectionPickerButtonContainer>\n          </>\n        )}\n        {state.matches('sections') && <SectionAssigner />}\n        {state.matches('lessonInfo') && (\n          <>\n            {/* <LessonPlanInfo /> */}\n            <LessonBuilder />\n            <SectionPickerButtonContainer>\n              <LessonPlannerButton\n                onClick={() => {\n                  event({ type: 'PREVIOUS' })\n                }}\n              >\n                Back\n              </LessonPlannerButton>\n              {readyToSubmit && (\n                <LessonPlannerButton\n                  onClick={() => {\n                    event({ type: 'NEXT' })\n                  }}\n                >\n                  Next\n                </LessonPlannerButton>\n              )}\n            </SectionPickerButtonContainer>\n          </>\n        )}\n        {state.matches('markingPeriod') && (\n          <>\n            <LessonPlanDateAssign>\n              <div>Assigned Marking Period:</div>\n              <LessonPlanMarkingPeriodSelect\n                value={state.context.markingPeriod}\n                onChange={(e: any) =>\n                  event({\n                    type: 'SET_MARKING_PERIOD',\n                    payload: e.target.value,\n                  })\n                }\n              >\n                {markingPeriodEnum.map((mp: MarkingPeriodEnum) => (\n                  <option key={mp} value={mp}>\n                    {mp}\n                  </option>\n                ))}\n              </LessonPlanMarkingPeriodSelect>\n            </LessonPlanDateAssign>\n            <SectionPickerButtonContainer>\n              <LessonPlannerButton\n                onClick={() => {\n                  event({ type: 'PREVIOUS' })\n                }}\n              >\n                Back\n              </LessonPlannerButton>\n\n              <LessonPlannerButton\n                onClick={() => {\n                  event({ type: 'NEXT' })\n                }}\n              >\n                Next\n              </LessonPlannerButton>\n            </SectionPickerButtonContainer>\n          </>\n        )}\n        {state.matches('courses') && <CourseAssigner />}\n      </LessonPlannerDesignContainer>\n      <LessonPlanOutput>\n        <LessonPlannerOutput />\n        <GoBackToAssignmentsContainer>\n          <BackToCalendarButton onClick={() => navigate('/dashboard/lessons')}>\n            Go Back to Calendar\n          </BackToCalendarButton>\n        </GoBackToAssignmentsContainer>\n      </LessonPlanOutput>\n    </LessonPlannerContainer>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport { findLessonsByAssignedDate_findLessonsByAssignedDate_lessons } from '../../../../../../schemaTypes'\n\nexport type lessonFinderMachineSchema = {\n  states: {\n    idle: {}\n    lessonDetails: {}\n  }\n}\nexport type lessonFinderMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | {\n      type: 'GET_LESSON'\n      payload: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons\n    }\n\nexport type lessonFinderMachineContext = {\n  lesson: findLessonsByAssignedDate_findLessonsByAssignedDate_lessons | null\n}\n\nexport const lessonFinderMachine = Machine<\n  lessonFinderMachineContext,\n  lessonFinderMachineSchema,\n  lessonFinderMachineEvent\n>({\n  id: 'lessonFinder',\n  initial: 'idle',\n  context: { lesson: null },\n  states: {\n    idle: {\n      on: {\n        NEXT: 'lessonDetails',\n        GET_LESSON: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              lesson: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    lessonDetails: {\n      on: {\n        PREVIOUS: 'idle',\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  lessonFinderMachine,\n  lessonFinderMachineContext,\n  lessonFinderMachineEvent,\n} from './lessonFinderMachine'\n\nconst LessonFinderContext = createContext<any>(undefined)\n\ntype LessonFinderContextProps = {\n  children: ReactNode\n}\n\nexport const LessonFinderContextProvider: FC<LessonFinderContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(lessonFinderMachine)\n  return (\n    <LessonFinderContext.Provider value={[state, event]}>\n      {children}\n    </LessonFinderContext.Provider>\n  )\n}\n\nexport function useLessonFinderContextProvider() {\n  const context = useContext(LessonFinderContext)\n  if (context === undefined) {\n    throw new Error(\n      'useLessonFinderContextProvider must be used within a LessonFInderContextProvider',\n    )\n  }\n  return context as [\n    State<lessonFinderMachineContext, lessonFinderMachineEvent, any, any>,\n    (event: lessonFinderMachineEvent) => void,\n  ]\n}\n","import { gql, useQuery } from '@apollo/client'\nimport { access } from 'fs/promises'\nimport React, { FC, useState } from 'react'\nimport { CalendarTileProperties } from 'react-calendar'\nimport { Link } from 'react-router-dom'\nimport {\n  findLessonsByAssignedDate,\n  findLessonsByAssignedDateVariables,\n} from '../../../../../schemaTypes'\nimport { useLessonFinderContextProvider } from './state-n-styles/LessonFinderContext'\n\nexport type LessonProps = {\n  date: CalendarTileProperties\n}\n\nexport const FIND_LESSONS_BY_ASSIGNED_DATE = gql`\n  query findLessonsByAssignedDate($input: FindLessonsByAssignedDateInput!) {\n    findLessonsByAssignedDate(input: $input) {\n      lessons {\n        _id\n        lessonName\n        assignedDate\n        inUnit {\n          _id\n          unitName\n        }\n        assignedMarkingPeriod\n        assignedCourses {\n          _id\n          name\n        }\n        assignedSections {\n          startingSection\n          endingSection\n        }\n        pageNumbers {\n          startingPage\n          endingPage\n        }\n        assignedSectionIdList\n        vocabList {\n          word\n          definition\n        }\n        beforeActivity {\n          academicOutcomeTypes\n          activityType\n          task\n        }\n        duringActivities {\n          academicOutcomeTypes\n          activityType\n          task\n        }\n        afterActivity {\n          academicOutcomeTypes\n          activityType\n          task\n        }\n        questionList {\n          question\n          questionType\n        }\n        essentialQuestion\n        lessonName\n        lessonType\n      }\n    }\n  }\n`\nexport const Lesson = ({ date }: LessonProps) => {\n  const [, event] = useLessonFinderContextProvider()\n\n  const { loading, data } = useQuery<\n    findLessonsByAssignedDate,\n    findLessonsByAssignedDateVariables\n  >(FIND_LESSONS_BY_ASSIGNED_DATE, {\n    variables: {\n      input: { assignedDate: new Date(date.date).toLocaleDateString() },\n    },\n    onCompleted: (data) => console.log(data),\n    pollInterval: 1000,\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const courseLessons = data?.findLessonsByAssignedDate.lessons!\n  const weekendCheck =\n    date.date.toString().substr(0, 3) === 'Sat' ||\n    date.date.toString().substr(0, 3) === 'Sun'\n\n  const dateValue = Date.parse(new Date(date.date).toLocaleDateString())\n\n  loading && <div>loading</div>\n  return (\n    <div>\n      {/* {data?.findLessonsByAssignedDate.lessons?.length !== 0 ? ( */}\n      <>\n        {data && data?.findLessonsByAssignedDate.lessons?.length !== 0 && (\n          <div\n            style={{\n              height: '6vh',\n              overflow: 'scroll',\n              borderBottom: '1px solid var(--white)',\n            }}\n          >\n            {courseLessons.map((lesson, i: number) => (\n              <div\n                key={i}\n                onClick={() => {\n                  event({ type: 'GET_LESSON', payload: lesson })\n                  event({ type: 'NEXT' })\n                }}\n              >\n                {lesson.assignedCourses.map((course) => course.name)}\n              </div>\n            ))}\n          </div>\n        )}\n        <Link\n          style={{\n            color: 'var(--white)',\n            textDecoration: 'none',\n            display: 'grid',\n            alignItems: 'center',\n          }}\n          to={`lesson-planner/${dateValue}`}\n        >\n          Create Lesson\n        </Link>\n        {/* <Link\n          style={{\n            color: 'var(--white)',\n            textDecoration: 'none',\n            display: 'grid',\n            alignItems: 'center',\n          }}\n          to={`create-quiz/${dateValue}`}\n        >\n          Create Quiz\n        </Link> */}\n      </>\n    </div>\n  )\n}\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  findEssayQuestionsForLesson,\n  findEssayQuestionsForLessonVariables,\n  markLessonForSGOVariables,\n  markLessonForSGO,\n} from '../../../../../schemaTypes'\n\nexport type MarkLessonForSGOProps = {\n  sectionIds: string[]\n}\n\nexport const FIND_ESSAY_QUESTIONS_FOR_SGO_QUERY = gql`\n  query findEssayQuestionsForLesson($input: FindEssayQuestionsForLessonInput!) {\n    findEssayQuestionsForLesson(input: $input) {\n      essayQuestions {\n        _id\n        questionParts {\n          originalQuestion\n        }\n        sgoQuestion\n      }\n    }\n  }\n`\nexport const MARK_LESSON_FOR_SGO_MUTATION = gql`\n  mutation markLessonForSGO($input: MarkLessonForSGOInput!) {\n    markLessonForSGO(input: $input) {\n      marked\n    }\n  }\n`\n\nexport const MarkLessonForSGO = ({ sectionIds }: MarkLessonForSGOProps) => {\n  const { loading, data } = useQuery<\n    findEssayQuestionsForLesson,\n    findEssayQuestionsForLessonVariables\n  >(FIND_ESSAY_QUESTIONS_FOR_SGO_QUERY, {\n    variables: {\n      input: { sectionIds },\n    },\n    onCompleted: (data) =>\n      console.log(\n        data.findEssayQuestionsForLesson.essayQuestions.map(\n          (q) => q.sgoQuestion,\n        ),\n      ),\n    onError: (error) => console.error(error),\n  })\n\n  const [markLessonForSGO] = useMutation<\n    markLessonForSGO,\n    markLessonForSGOVariables\n  >(MARK_LESSON_FOR_SGO_MUTATION, {\n    variables: { input: { sectionIds } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssayQuestionsForLesson'],\n  })\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      <br />\n      <ul>\n        {data?.findEssayQuestionsForLesson.essayQuestions.map((q) => (\n          <li key={q._id!}>\n            {q.questionParts.originalQuestion} {q.sgoQuestion ? 'SGO' : ''}\n          </li>\n        ))}\n      </ul>\n      <br />\n      {data?.findEssayQuestionsForLesson.essayQuestions.length! > 0 && (\n        <button onClick={() => markLessonForSGO()}>Mark for SGOs</button>\n      )}\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const LessonFinderContainer = styled.div`\n  height: 95vh;\n  /* display: grid; */\n  background: var(--white);\n`\n\nexport const LessonPlanSectionTitles = styled.div`\n  text-align: center;\n  text-decoration: underline;\n`\n","import React from 'react'\nimport { LessonTypeEnum } from '../../../../../schemaTypes'\nimport { phraseCapitalizer } from '../../../../../utils'\nimport { MarkLessonForSGO } from './MarkLessonForSGO'\nimport { useLessonFinderContextProvider } from './state-n-styles/LessonFinderContext'\nimport { LessonPlanSectionTitles } from './state-n-styles/lessonFinderStyles'\n\nexport type LessonDetailsProps = {}\n\nexport const LessonDetails = ({}: LessonDetailsProps) => {\n  const [state, event] = useLessonFinderContextProvider()\n  const {\n    lessonName,\n    essentialQuestion,\n    beforeActivity,\n    pageNumbers,\n    assignedSections,\n    afterActivity,\n    duringActivities,\n    questionList,\n    lessonType,\n    assignedSectionIdList,\n  } = state.context.lesson!\n\n  const readings =\n    pageNumbers.endingPage !== pageNumbers.startingPage\n      ? pageNumbers.startingPage + ' - ' + pageNumbers.endingPage\n      : pageNumbers.startingPage\n\n  const lessonTitle =\n    assignedSections.startingSection + ' - ' + assignedSections.endingSection\n  console.log(assignedSectionIdList)\n  return (\n    <>\n      <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n      <LessonPlanSectionTitles>\n        {state.context.lesson && (\n          <>\n            <div>{lessonTitle}</div>\n            <div>{phraseCapitalizer(lessonType)} Lesson</div>\n          </>\n        )}\n      </LessonPlanSectionTitles>\n      <div>\n        <div>Grouping: Small Groups & Whole Class</div>\n        <ul>\n          <li>\n            Small groups are grouped by students participation to match students\n            who aren't normal participators with students who are more likely to\n            participate.\n          </li>\n        </ul>\n        <div>Depth of Knowledge: Levels 2 and 3</div>\n        <br />\n        <LessonPlanSectionTitles>Essential Question</LessonPlanSectionTitles>\n        <div>{essentialQuestion}</div>\n        <br />\n        <LessonPlanSectionTitles>\n          Activating Strategy\n        </LessonPlanSectionTitles>{' '}\n        {lessonType === 'INTRODUCTORY' ? (\n          <div>\n            <div>\n              Students will start off with a quiz to determine the level of\n              content aquisition each student achieved.\n            </div>\n            <div>Students will complete a SEL Check in on PBIS</div>\n          </div>\n        ) : (\n          <>\n            <div>\n              Students will start with a critical thinking question or be asked\n              to think of questions to ask to engage student's thinking about\n              the lesson.\n            </div>\n            <ul>\n              <li>Task: {beforeActivity.task}</li>\n              <div>Students will complete a SEL Check in on PBIS</div>\n            </ul>\n          </>\n        )}\n        <br />\n        <LessonPlanSectionTitles>Teaching Strategy</LessonPlanSectionTitles>\n        <div>\n          Read Page {readings}: {lessonTitle}\n        </div>\n        {lessonType === 'INTRODUCTORY' ? (\n          <div>\n            {' '}\n            <div>\n              Students will work in small groups to annotate text and find the\n              main ideas presented in the material in the aforementioned\n              sections. The main ideas and annotations will be used as a way to\n              introduce themselves to the text and prepare for going in depth\n              for the next day's lesson. Students will use\n              https://mrwetherall.org as a reference for the lesson material and\n              for directions.\n            </div>\n            <div>\n              Students will be earning PBIS points throughout class based on the\n              standards set by the administation.\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div>\n              Students will work in small groups to read a paragraph and respond\n              to a critical thinking question that will help them strengthen\n              their schemas, have them think logically, ask them to evaluate\n              decisions made in the past, or think of possible consequences to\n              the actions of the people we discuss with a brief group dicussion\n              for most paragraphs in the reading.\n            </div>\n            <div>\n              Students will be earning PBIS points throughout class based on the\n              standards set by the administation.\n            </div>\n          </div>\n        )}\n        <br />\n        {lessonType === 'INTRODUCTORY' ? (\n          <LessonPlanSectionTitles></LessonPlanSectionTitles>\n        ) : (\n          <>\n            <LessonPlanSectionTitles>\n              Deep Thinking Questions\n            </LessonPlanSectionTitles>\n            <div>\n              Students will use https://mrwetherall.org to complete their deep\n              thinking questions\n            </div>\n            <ul>\n              {duringActivities.map((question, i: number) => (\n                <li key={i}>{question.task}</li>\n              ))}\n            </ul>\n          </>\n        )}\n        <br />\n        <LessonPlanSectionTitles>\n          Summarization Strategy\n        </LessonPlanSectionTitles>\n        {lessonType === 'INTRODUCTORY' ? (\n          <div>\n            Students will take the information they've learned in class and use\n            their text and notes to complete a reading guide. If time runs short\n            the reading guide can be completed at home.\n          </div>\n        ) : (\n          <>\n            <div>Exit ticket</div>\n            <ul>\n              <li>\n                Students will respond to a prompt that will ask them to\n                summarize what was covered in the lesson.\n              </li>\n            </ul>\n          </>\n        )}\n        <br />\n        <LessonPlanSectionTitles>Modifications</LessonPlanSectionTitles>\n        <div>\n          Every student will get a chance to read, write, think, and discuss.\n          For visual learners there will be a chance to read everyday. For audio\n          learners there will be a chance to be read aloud and have discussion.\n          For tactile learners, there are graphic organizers to aid them in\n          constructing their writing.\n        </div>\n      </div>\n      <MarkLessonForSGO sectionIds={assignedSectionIdList} />\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport Calendar from 'react-calendar'\nimport styled from 'styled-components'\n\nimport { Lesson } from './Lesson'\nimport { LessonDetails } from './LessonDetails'\nimport './state-n-styles/LessonFinderCalendarStyleSheet.css'\nimport { useLessonFinderContextProvider } from './state-n-styles/LessonFinderContext'\n\nexport type LessonCalendarProps = {}\n\nexport const LessonCalendar = ({}: LessonCalendarProps) => {\n  const [value, setValue] = useState(new Date())\n  const [state, event] = useLessonFinderContextProvider()\n\n  const formatDate = (locale: string, date: Date) => {\n    const formattedDate = date.toString().substr(0, 3)\n    if (formattedDate === 'Mon') {\n      return 'Monday'\n    } else if (formattedDate === 'Tue') {\n      return 'Tuesday'\n    } else if (formattedDate === 'Wed') {\n      return 'Wednesday'\n    } else if (formattedDate === 'Thu') {\n      return 'Thursday'\n    } else if (formattedDate === 'Fri') {\n      return 'Friday'\n    } else if (formattedDate === 'Sat') {\n      return 'Saturday'\n    }\n    return 'Sunday'\n  }\n\n  return (\n    <>\n      {state.matches('idle') && (\n        <StyledCalendar\n          className=\"react-calendar\"\n          calendarType=\"US\"\n          value={value}\n          tileClassName=\"tiles\"\n          tileContent={(date) => <Lesson date={date} />}\n          view=\"month\"\n          formatShortWeekday={(locale, date) => formatDate('dd', date)}\n        />\n      )}\n      {state.matches('lessonDetails') && <LessonDetails />}\n    </>\n  )\n}\n\nconst StyledCalendar = styled(Calendar)`\n  width: 100vw;\n  /* height: 100%; */\n  /* border: 1px solid var(--blue); */\n  background-color: var(--white);\n`\n","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { LessonCalendar } from './LessonCalendar'\nimport { LessonFinderContainer } from './state-n-styles/lessonFinderStyles'\n\nexport type LessonFinderProps = {}\n\nexport const LessonFinder: FC<LessonFinderProps> = () => {\n  return (\n    <LessonFinderContainer>\n      <LessonCalendar />\n      <OptionsContainer>\n        <OptionsLink to=\"section-builder\">Section Builder</OptionsLink>\n        <OptionsLink to=\"section-editor\">Section Editor</OptionsLink>\n        <OptionsLink to=\"essay-question\">Essay Builder</OptionsLink>\n      </OptionsContainer>\n    </LessonFinderContainer>\n  )\n}\n\nconst OptionsContainer = styled.div`\n  height: 25vh;\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1vh;\n  padding: 2vh;\n`\nconst OptionsLink = styled(Link)`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  font-size: 3vh;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\n","import { Machine, assign } from 'xstate'\nimport {\n  CreateEssayQuestionInput,\n  NounTypeEnum,\n  QuestionTypeEnum,\n  QuestionWordEnum,\n  VerbTypeEnum,\n} from '../../../../../../../schemaTypes'\n\nexport type buildEssayQuestionMachineSchema = {\n  states: {\n    sections: {\n      states: {\n        text: {}\n        chapter: {}\n        sectionList: {}\n      }\n    }\n    questionInfo: {}\n  }\n}\nexport type buildEssayQuestionMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_TEXT_ID'; payload: string }\n  | { type: 'SET_TEXT_NAME'; payload: string }\n  | { type: 'SET_CHAPTER_ID'; payload: string }\n  | { type: 'SET_CHAPTER_TITLE'; payload: string }\n  | { type: 'SET_SECTION_IDS'; payload: string }\n  | {\n      type: 'SET_QUESTION_PARTS'\n      keyName: string\n      payload:\n        | string\n        | boolean\n        | QuestionWordEnum\n        | VerbTypeEnum\n        | NounTypeEnum\n        | null\n    }\n\nexport type buildEssayQuestionMachineContext = {\n  textId: string\n  textName: string\n  chapterId: string\n  chapterTitle: string\n\n  essayQuestionInfo: CreateEssayQuestionInput\n}\n\nexport const buildEssayQuestionMachine = Machine<\n  buildEssayQuestionMachineContext,\n  buildEssayQuestionMachineSchema,\n  buildEssayQuestionMachineEvent\n>({\n  id: 'buildEssayQuestion',\n  initial: 'sections',\n  context: {\n    textId: '',\n    textName: '',\n    chapterId: '',\n    chapterTitle: '',\n    essayQuestionInfo: {\n      associatedTextSectionsIds: [],\n      questionPartsInput: {\n        originalQuestion: '',\n        modifiedQuestion: '',\n        completeSubject: '',\n        simpleSubject: '',\n        nounType: NounTypeEnum.THING,\n        compoundNoun: false,\n        completePredicate: '',\n        simplePredicate: '',\n        helpingVerb: '',\n        verbType: VerbTypeEnum.ACTION,\n        questionWord: QuestionWordEnum.HOW,\n        object: null,\n        subjectCompliment: null,\n        questionType: QuestionTypeEnum.HOW_CAUSE_EFFECT,\n      },\n    },\n  },\n  states: {\n    sections: {\n      initial: 'text',\n      states: {\n        text: {\n          on: {\n            NEXT: 'chapter',\n            SET_TEXT_ID: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  textId: evt.payload,\n                }\n              }),\n            },\n            SET_TEXT_NAME: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  textName: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        chapter: {\n          on: {\n            PREVIOUS: 'text',\n            NEXT: 'sectionList',\n            SET_CHAPTER_ID: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  chapterId: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        sectionList: {\n          on: {\n            PREVIOUS: 'chapter',\n            NEXT: '#buildEssayQuestion.questionInfo',\n            SET_SECTION_IDS: {\n              actions: assign((ctx, evt) => {\n                const { associatedTextSectionsIds } = ctx.essayQuestionInfo\n                if (\n                  ctx.essayQuestionInfo.associatedTextSectionsIds.includes(\n                    evt.payload,\n                  )\n                ) {\n                  const sectionIdIndex = associatedTextSectionsIds.findIndex(\n                    (index) => index === evt.payload,\n                  )\n                  return {\n                    ...ctx,\n                    essayQuestionInfo: {\n                      ...ctx.essayQuestionInfo,\n                      associatedTextSectionsIds: [\n                        ...ctx.essayQuestionInfo.associatedTextSectionsIds.slice(\n                          0,\n                          sectionIdIndex,\n                        ),\n                        ...ctx.essayQuestionInfo.associatedTextSectionsIds.slice(\n                          sectionIdIndex + 1,\n                        ),\n                      ],\n                    },\n                  }\n                } else\n                  return {\n                    ...ctx,\n                    essayQuestionInfo: {\n                      ...ctx.essayQuestionInfo,\n                      associatedTextSectionsIds: [\n                        ...ctx.essayQuestionInfo.associatedTextSectionsIds,\n                        evt.payload,\n                      ],\n                    },\n                  }\n              }),\n            },\n          },\n        },\n      },\n    },\n    questionInfo: {\n      on: {\n        SET_QUESTION_PARTS: {\n          actions: assign((ctx, evt) => {\n            const { keyName, payload } = evt\n            return {\n              ...ctx,\n              essayQuestionInfo: {\n                ...ctx.essayQuestionInfo,\n                questionPartsInput: {\n                  ...ctx.essayQuestionInfo.questionPartsInput,\n                  [keyName]: payload,\n                },\n              },\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  buildEssayQuestionMachine,\n  buildEssayQuestionMachineContext,\n  buildEssayQuestionMachineEvent,\n} from './buildEssayQuestionMachine'\n\nconst BuildEssayQuestionContext = createContext<any>(undefined)\n\ntype BuildEssayQuestionContextProps = {\n  children: ReactNode\n}\n\nexport const BuildEssayQuestionContextProvider: FC<\n  BuildEssayQuestionContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(buildEssayQuestionMachine)\n  return (\n    <BuildEssayQuestionContext.Provider value={[state, event]}>\n      {children}\n    </BuildEssayQuestionContext.Provider>\n  )\n}\n\nexport function useBuildEssayQuestionContextProvider() {\n  const context = useContext(BuildEssayQuestionContext)\n  if (context === undefined) {\n    throw new Error(\n      'useBuildEssayQuestionContextProvider must be used within a BuildEssayQuestionContextProvider',\n    )\n  }\n  return context as [\n    State<\n      buildEssayQuestionMachineContext,\n      buildEssayQuestionMachineEvent,\n      any,\n      any\n    >,\n    (event: buildEssayQuestionMachineEvent) => void,\n  ]\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  findChaptersByTextId,\n  findChaptersByTextIdVariables,\n} from '../../../../../../schemaTypes'\nimport {\n  TextPickerHeader,\n  TextPickerBody,\n  TextPickerTextSelection,\n  SectionPickerButtonContainer,\n  SectionPickerNextButton,\n} from '../../lesson-planner/state-and-styles/lessonPlannerStyles'\nimport { useBuildEssayQuestionContextProvider } from './state-n-styles/BuildEssayQuestionContext'\n\nexport type ChapterSelectProps = {}\nexport const FIND_SECTIONS_BY_CHAPTER_QUERY = gql`\n  query findChaptersByTextId($input: FindChaptersByTextIdInput!) {\n    findChaptersByTextId(input: $input) {\n      chapters {\n        _id\n        chapterTitle\n      }\n    }\n  }\n`\n\nexport const ChapterSelect = ({}: ChapterSelectProps) => {\n  const [state, event] = useBuildEssayQuestionContextProvider()\n  const { loading, data } = useQuery<\n    findChaptersByTextId,\n    findChaptersByTextIdVariables\n  >(FIND_SECTIONS_BY_CHAPTER_QUERY, {\n    variables: {\n      input: { textId: state.context.textId },\n    },\n    onError: (error) => console.error(error),\n  })\n\n  const chapters = data?.findChaptersByTextId.chapters!\n\n  return (\n    <>\n      <TextPickerHeader>\n        Select Chapter from {state.context.textName}\n      </TextPickerHeader>\n      {loading ? (\n        <TextPickerBody>Loading</TextPickerBody>\n      ) : (\n        <TextPickerBody>\n          {chapters &&\n            chapters.map((chapter) => (\n              <TextPickerTextSelection\n                onClick={() => {\n                  event({ type: 'SET_CHAPTER_ID', payload: chapter._id! })\n                  event({\n                    type: 'SET_CHAPTER_TITLE',\n                    payload: chapter.chapterTitle,\n                  })\n                  // event({\n                  //   type: 'SET_CHAPTER_TITLE',\n                  //   payload: chapter.chapterTitle,\n                  // })\n                  event({ type: 'NEXT' })\n                }}\n                key={chapter._id!}\n                // value={[chapter._id!, chapter.chapterTitle]}\n              >\n                {chapter.chapterTitle}\n              </TextPickerTextSelection>\n            ))}\n        </TextPickerBody>\n      )}\n      <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const EssayQuestionInfoContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 3fr;\n`\n","import { gql, useMutation } from '@apollo/client'\nimport React, { SyntheticEvent, useEffect, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  CreateEssayQuestion,\n  CreateEssayQuestionVariables,\n  NounTypeEnum,\n  VerbTypeEnum,\n  QuestionWordEnum,\n} from '../../../../../../schemaTypes'\nimport { QuestionDeconstruction } from '../../../../student/assignments/essays/assigned-essays/organizers/question-deconstruction/QuestionDeconstruction'\nimport { useBuildEssayQuestionContextProvider } from './state-n-styles/BuildEssayQuestionContext'\nimport { EssayQuestionInfoContainer } from './state-n-styles/essayQuestionStyles'\n\nexport type EssayQuestionInformationProps = {}\n\nexport const CREATE_ESSAY_QUESTION_MUTATION = gql`\n  mutation CreateEssayQuestion($input: CreateEssayQuestionInput!) {\n    createEssayQuestion(input: $input) {\n      essayQuestion {\n        _id\n      }\n    }\n  }\n`\n\nexport type EssayQuestionStepsProps = 'create' | 'test'\n\nexport const EssayQuestionInformation = ({}: EssayQuestionInformationProps) => {\n  const [state, event] = useBuildEssayQuestionContextProvider()\n  const [essayQuestionSteps, setEssayQuestionSteps] =\n    useState<EssayQuestionStepsProps>('create')\n  const { nounTypeEnum, verbTypeEnum, questionWordEnum, questionTypeEnum } =\n    useEnumContextProvider()\n  console.log(state.context.essayQuestionInfo.questionPartsInput)\n\n  const [createEssayQuestion] = useMutation<\n    CreateEssayQuestion,\n    CreateEssayQuestionVariables\n  >(CREATE_ESSAY_QUESTION_MUTATION, {\n    variables: { input: state.context.essayQuestionInfo },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n\n  const handleSimpleSubject = (e: any) => {\n    event({\n      type: 'SET_QUESTION_PARTS',\n      keyName: 'simpleSubject',\n      payload: e.target.value.trim(),\n    })\n    if (e.target.value.split(' ').length > 1) {\n      event({\n        type: 'SET_QUESTION_PARTS',\n        keyName: 'compoundNoun',\n        payload: true,\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (\n      state.context.essayQuestionInfo.questionPartsInput.originalQuestion\n        .split(' ')\n        .includes('did')\n    ) {\n      event({\n        type: 'SET_QUESTION_PARTS',\n        keyName: 'helpingVerb',\n        payload: 'did',\n      })\n    } else if (\n      state.context.essayQuestionInfo.questionPartsInput.originalQuestion\n        .split(' ')\n        .includes('was')\n    ) {\n      event({\n        type: 'SET_QUESTION_PARTS',\n        keyName: 'helpingVerb',\n        payload: 'was',\n      })\n    } else if (\n      state.context.essayQuestionInfo.questionPartsInput.originalQuestion\n        .split(' ')\n        .includes('were')\n    ) {\n      event({\n        type: 'SET_QUESTION_PARTS',\n        keyName: 'helpingVerb',\n        payload: 'were',\n      })\n    }\n    if (\n      state.context.essayQuestionInfo.questionPartsInput.originalQuestion.split(\n        ' ',\n      )[0] === 'How'\n    ) {\n      event({\n        type: 'SET_QUESTION_PARTS',\n        keyName: 'questionWord',\n        payload: QuestionWordEnum.HOW,\n      })\n    } else if (\n      state.context.essayQuestionInfo.questionPartsInput.originalQuestion.split(\n        ' ',\n      )[0] === 'Why'\n    ) {\n      event({\n        type: 'SET_QUESTION_PARTS',\n        keyName: 'questionWord',\n        payload: QuestionWordEnum.WHY,\n      })\n    }\n  }, [state.context.essayQuestionInfo.questionPartsInput.originalQuestion])\n\n  return (\n    <EssayQuestionInfoContainer>\n      <div>\n        <div>\n          <div>Essay Question Information</div>\n        </div>\n        <div>\n          <div>Create New Question</div>\n          <div>\n            {\n              state.context.essayQuestionInfo.questionPartsInput\n                .originalQuestion\n            }\n          </div>\n          <input\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'originalQuestion',\n                payload: e.target.value.trim(),\n              })\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'modifiedQuestion',\n                payload: e.target.value.trim(),\n              })\n            }}\n          />\n        </div>\n        <div>\n          <div>Complete Subject</div>\n          <input\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'completeSubject',\n                payload: e.target.value.trim(),\n              })\n            }}\n          />\n        </div>\n        <div>\n          <div>Simple Subject</div>\n          <input onChange={handleSimpleSubject} />\n        </div>\n        <div>\n          <div>Noun Type</div>\n          <select\n            value={state.context.essayQuestionInfo.questionPartsInput.nounType}\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'nounType',\n                payload: e.target.value.trim(),\n              })\n            }}\n          >\n            {nounTypeEnum.map((nounType: NounTypeEnum) => (\n              <option key={nounType}>{nounType}</option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <div>Compound Noun</div>\n          <select\n            value={\n              state.context.essayQuestionInfo.questionPartsInput.compoundNoun\n                ? '1'\n                : '0'\n            }\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'compoundNoun',\n                payload: e.target.value === '1' ? true : false,\n              })\n            }}\n          >\n            <option value={1}>Yes</option>\n            <option value={0}>No</option>\n          </select>\n        </div>\n        <div>\n          <div>Complete Predicate</div>\n          <input\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'completePredicate',\n                payload: e.target.value.trim(),\n              })\n            }}\n          />\n        </div>\n        <div>\n          <div>Simple Predicate</div>\n          <input\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'simplePredicate',\n                payload: e.target.value.trim(),\n              })\n            }}\n          />\n        </div>\n        <div>\n          <div>\n            Helping Verb:{' '}\n            {state.context.essayQuestionInfo.questionPartsInput.helpingVerb}\n          </div>\n          {/* <input\n            onChange={(e) => {\n              if (\n                state.context.essayQuestionInfo.questionPartsInput.originalQuestion\n                  .split(' ')\n                  .includes('did')\n              ) {\n                event({\n                  type: 'SET_QUESTION_PARTS',\n                  keyName: 'helpingVerb',\n                  payload: 'did',\n                })\n              }\n            }}\n          /> */}\n        </div>\n        <div>\n          <div>Verb Type</div>\n          <select\n            value={state.context.essayQuestionInfo.questionPartsInput.verbType}\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'verbType',\n                payload: e.target.value,\n              })\n            }}\n          >\n            {verbTypeEnum.map((verbType: VerbTypeEnum) => (\n              <option key={verbType}>{verbType}</option>\n            ))}\n          </select>\n        </div>\n        {/* <div>\n          <div>Question Word</div>\n          <select\n            value={\n              state.context.essayQuestionInfo.questionPartsInput.questionWord\n            }\n            // onChange={(e) => {\n            //   event({\n            //     type: 'SET_QUESTION_PARTS',\n            //     keyName: 'questionWord',\n            //     payload: e.target.value,\n            //   })\n            // }}\n          >\n            {questionWordEnum.map((questionWord: QuestionWordEnum) => (\n              <option key={questionWord}>{questionWord}</option>\n            ))}\n          </select>\n        </div> */}\n        <div>\n          <div>Object</div>\n          <input\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'object',\n                payload: e.target.value.trim(),\n              })\n            }}\n          />\n        </div>\n        <div>\n          <div>Subject Compliment</div>\n          <input\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'subjectCompliment',\n                payload: e.target.value.trim(),\n              })\n            }}\n          />\n        </div>\n        <div>\n          <div>Question Word</div>\n          <select\n            value={\n              state.context.essayQuestionInfo.questionPartsInput.questionType\n            }\n            onChange={(e) => {\n              event({\n                type: 'SET_QUESTION_PARTS',\n                keyName: 'questionType',\n                payload: e.target.value,\n              })\n            }}\n          >\n            {questionTypeEnum.map((questionType: QuestionWordEnum) => (\n              <option key={questionType}>{questionType}</option>\n            ))}\n          </select>\n        </div>\n        <button onClick={() => setEssayQuestionSteps('test')}>Test</button>\n      </div>\n      {essayQuestionSteps === 'test' && (\n        <div>\n          <div>Test</div>\n          {/* <QuestionDeconstruction /> */}\n          <button onClick={() => createEssayQuestion()}>Create Question</button>\n        </div>\n      )}\n    </EssayQuestionInfoContainer>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  findTextSectionsByChapter,\n  findTextSectionsByChapterVariables,\n} from '../../../../../../schemaTypes'\nimport {\n  SectionPickerHeader,\n  SectionSelectorOption,\n} from '../../lesson-planner/state-and-styles/lessonPlannerStyles'\nimport { FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY } from '../../section-editor/TextSectionList'\nimport { useBuildEssayQuestionContextProvider } from './state-n-styles/BuildEssayQuestionContext'\n\nexport type SectionSelectProps = {}\n\nexport const SectionSelect = ({}: SectionSelectProps) => {\n  const [state, event] = useBuildEssayQuestionContextProvider()\n  const { loading, data } = useQuery<\n    findTextSectionsByChapter,\n    findTextSectionsByChapterVariables\n  >(FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY, {\n    variables: {\n      input: { fromChapterId: state.context.chapterId },\n    },\n    onCompleted: (data) =>\n      console.log(data.findTextSectionsByChapter.textSections),\n    onError: (error) => console.error(error),\n  })\n\n  return (\n    <>\n      <SectionPickerHeader>What Sections?</SectionPickerHeader>\n      <div style={{ overflow: 'scroll', height: '35vh' }}>\n        {data?.findTextSectionsByChapter.textSections.map((section) =>\n          loading ? (\n            'Loading Sections...'\n          ) : (\n            <>\n              <SectionSelectorOption\n                key={section._id!}\n                // selected={section._id === state.context.currentSection[0]}\n                selected={state.context.essayQuestionInfo.associatedTextSectionsIds.includes(\n                  section._id!,\n                )}\n                onClick={() => {\n                  // event({\n                  //   type: 'SET_CURRENT_SECTION',\n                  //   payload: [section._id!, section.header],\n                  // })\n                  // event({\n                  //   type: 'ADD_SECTIONS',\n                  //   payload: [section._id!, section.header],\n                  // })\n                  event({ type: 'SET_SECTION_IDS', payload: section._id! })\n                }}\n              >\n                {section.header}\n              </SectionSelectorOption>\n            </>\n          ),\n        )}\n      </div>\n      <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n    </>\n  )\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport { findTexts } from '../../../../../../schemaTypes'\nimport {\n  TextPickerHeader,\n  TextPickerBody,\n  TextPickerTextSelection,\n} from '../../lesson-planner/state-and-styles/lessonPlannerStyles'\nimport { FIND_TEXTS_QUERY } from '../../section-builder/TextListLoader'\nimport { useBuildEssayQuestionContextProvider } from './state-n-styles/BuildEssayQuestionContext'\n\nexport type TextSelectProps = {}\n\nexport const TextSelect = ({}: TextSelectProps) => {\n  const me = useUserContextProvider()\n  const [, event] = useBuildEssayQuestionContextProvider()\n\n  const { loading, data } = useQuery<findTexts>(FIND_TEXTS_QUERY, {\n    onError: (error) => console.error(error),\n  })\n\n  const texts = data?.findTexts.texts.filter((text) => text.ownerId === me._id)!\n\n  return (\n    <>\n      <TextPickerHeader>\n        <div>Select the Text</div>\n      </TextPickerHeader>\n      {loading ? (\n        <TextPickerBody></TextPickerBody>\n      ) : (\n        <TextPickerBody>\n          {texts.length > 0 && (\n            <div>\n              {texts.map((text) => (\n                <TextPickerTextSelection\n                  key={text._id!}\n                  onClick={() => {\n                    event({ type: 'SET_TEXT_ID', payload: text._id! })\n                    event({ type: 'SET_TEXT_NAME', payload: text.textTitle })\n                    event({ type: 'NEXT' })\n                  }}\n                >\n                  {text.textTitle}\n                </TextPickerTextSelection>\n              ))}\n            </div>\n          )}\n        </TextPickerBody>\n      )}\n      {/* <SectionPickerButtonContainer>\n        <SectionPickerNextButton onClick={() => event({ type: 'PREVIOUS' })}>\n          Back\n        </SectionPickerNextButton>\n      </SectionPickerButtonContainer> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { ChapterSelect } from './ChapterSelect'\nimport { EssayQuestionInformation } from './EssayQuestionInformation'\nimport { SectionSelect } from './SectionSelect'\nimport { useBuildEssayQuestionContextProvider } from './state-n-styles/BuildEssayQuestionContext'\n\nimport { TextSelect } from './TextSelect'\n\nexport type EssayQuestionBuilderProps = {}\n\nexport const EssayQuestionBuilder = ({}: EssayQuestionBuilderProps) => {\n  const [state, event] = useBuildEssayQuestionContextProvider()\n\n  return (\n    <>\n      <div>Essay Questions</div>\n      {state.matches('sections.text') && <TextSelect />}\n      {state.matches('sections.chapter') && <ChapterSelect />}\n      {state.matches('sections.sectionList') && <SectionSelect />}\n      {state.matches('questionInfo') && <EssayQuestionInformation />}\n    </>\n  )\n}\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { BackContainer } from '../../assignments/create-assignments/state-and-styles/createAssignmentsStyles'\nimport { EssayQuestionBuilder } from './build-essay-questions/EssayQuestionBuilder'\n\nexport type QuestionsProps = {}\n\nexport const Questions = ({}: QuestionsProps) => {\n  const navigate = useNavigate()\n  return (\n    <>\n      <BackContainer>\n        <div onClick={() => navigate('/dashboard/lessons')}>Back</div>\n      </BackContainer>\n      <EssayQuestionBuilder />\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  CreateQuizzesByCourseInput,\n  createQuizzesByCourseVariables,\n  MarkingPeriodEnum,\n} from '../../../../../../schemaTypes'\n\nexport type createQuizMachineSchema = {\n  states: {\n    quizInputs: {}\n  }\n}\nexport type createQuizMachineEvent = {\n  type: 'SET_QUIZ_INPUTS'\n  keyName: string\n  payload: string | string[]\n}\n\nexport type createQuizMachineContext = {\n  createQuizInputs: CreateQuizzesByCourseInput\n}\n\nexport const createQuizMachine = Machine<\n  createQuizMachineContext,\n  createQuizMachineSchema,\n  createQuizMachineEvent\n>({\n  id: 'createQuiz',\n  initial: 'quizInputs',\n  context: {\n    createQuizInputs: {\n      assignedDate: '',\n      assignedSectionIds: [],\n      courseIds: [],\n      dueDate: '',\n      dueTime: '',\n      hasAssigner: '',\n      markingPeriod: MarkingPeriodEnum.FIRST,\n      readings: { readingPages: '', readingSections: '' },\n    },\n  },\n  states: {\n    quizInputs: {\n      on: {\n        SET_QUIZ_INPUTS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              createQuizInputs: {\n                ...ctx.createQuizInputs,\n                [evt.keyName]: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  createQuizMachine,\n  createQuizMachineContext,\n  createQuizMachineEvent,\n} from './createQuizMachine'\n\nconst CreateQuizContext = createContext<any>(undefined)\n\ntype CreateQuizContextProps = {\n  children: ReactNode\n}\n\nexport const CreateQuizContextProvider: FC<CreateQuizContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(createQuizMachine)\n  return (\n    <CreateQuizContext.Provider value={[state, event]}>\n      {children}\n    </CreateQuizContext.Provider>\n  )\n}\n\nexport function useCreateQuizContextProvider() {\n  const context = useContext(CreateQuizContext)\n  if (context === undefined) {\n    throw new Error(\n      'useCreateQuizContextProvider must be used within a CreateQuizContextProvider',\n    )\n  }\n  return context as [\n    State<createQuizMachineContext, createQuizMachineEvent, any, any>,\n    (event: createQuizMachineEvent) => void,\n  ]\n}\n","import { Machine, assign } from 'xstate'\n\nexport type teacherNavMachineSchema = {\n  states: {\n    dashboard: {}\n    lessons: {}\n    assignments: {}\n    rubrics: {}\n    studentInformation: {}\n    parentContacts: {}\n    behavior: {}\n    development: {}\n    courses: {\n      states: {\n        home: {\n          states: {\n            idle: {}\n            courseSelect: {}\n          }\n        }\n      }\n    }\n  }\n}\nexport type teacherNavTargets =\n  | 'DASHBOARD'\n  | 'LESSONS'\n  | 'ASSIGNMENTS'\n  | 'RUBRICS'\n  | 'COURSES'\n  | 'COURSE_SELECT'\n  | 'LESSON_EDITOR'\n  | 'STUDENT_INFORMATION'\n  | 'PARENT_CONTACTS'\n  | 'BEHAVIOR'\n  | 'DEVELOPMENT'\n// | 'SET_COURSE'\nexport type teacherNavMachineEvent =\n  | { type: 'DASHBOARD' }\n  | { type: 'LESSONS' }\n  | { type: 'ASSIGNMENTS' }\n  | { type: 'RUBRICS' }\n  | { type: 'COURSES' }\n  | { type: 'COURSE_SELECT' }\n  | { type: 'LESSON_EDITOR' }\n  | { type: 'STUDENT_INFORMATION' }\n  | { type: 'PARENT_CONTACTS' }\n  | { type: 'BEHAVIOR' }\n  | { type: 'DEVELOPMENT' }\n  | { type: 'SET_COURSE'; payload: string }\n\nexport type teacherNavMachineContext = {\n  course: string\n}\n\nexport const teacherNavMachine = Machine<\n  teacherNavMachineContext,\n  teacherNavMachineSchema,\n  teacherNavMachineEvent\n>({\n  id: 'teacherNav',\n  initial: 'dashboard',\n  context: {\n    course: '',\n  },\n  states: {\n    dashboard: {\n      on: {\n        LESSONS: 'lessons',\n        COURSES: 'courses',\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    lessons: {\n      on: {\n        DASHBOARD: 'dashboard',\n        COURSES: 'courses',\n        LESSONS: 'lessons',\n\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    assignments: {\n      on: {\n        DASHBOARD: 'dashboard',\n        LESSONS: 'lessons',\n        COURSES: 'courses',\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    rubrics: {\n      on: {\n        DASHBOARD: 'dashboard',\n        LESSONS: 'lessons',\n        COURSES: 'courses',\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    studentInformation: {\n      on: {\n        DASHBOARD: 'dashboard',\n        LESSONS: 'lessons',\n        COURSES: 'courses',\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    parentContacts: {\n      on: {\n        DASHBOARD: 'dashboard',\n        LESSONS: 'lessons',\n        COURSES: 'courses',\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    behavior: {\n      on: {\n        DASHBOARD: 'dashboard',\n        LESSONS: 'lessons',\n        COURSES: 'courses',\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    development: {\n      on: {\n        DASHBOARD: 'dashboard',\n        LESSONS: 'lessons',\n        COURSES: 'courses',\n        ASSIGNMENTS: 'assignments',\n        RUBRICS: 'rubrics',\n        STUDENT_INFORMATION: 'studentInformation',\n        PARENT_CONTACTS: 'parentContacts',\n        BEHAVIOR: 'behavior',\n        DEVELOPMENT: 'development',\n      },\n    },\n    courses: {\n      initial: 'home',\n      states: {\n        home: {\n          initial: 'idle',\n          states: {\n            idle: {\n              on: {\n                DASHBOARD: '#teacherNav.dashboard',\n                COURSE_SELECT: 'courseSelect',\n                LESSONS: '#teacherNav.lessons',\n                COURSES: '#teacherNav.courses',\n                ASSIGNMENTS: '#teacherNav.assignments',\n                RUBRICS: '#teacherNav.rubrics',\n                STUDENT_INFORMATION: '#teacherNav.studentInformation',\n                PARENT_CONTACTS: '#teacherNav.parentContacts',\n                BEHAVIOR: '#teacherNav.behavior',\n                DEVELOPMENT: '#teacherNav.development',\n                SET_COURSE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      course: evt.payload,\n                    }\n                  }),\n                },\n              },\n            },\n            courseSelect: {\n              on: {\n                COURSES: '#teacherNav.courses.home',\n                DASHBOARD: '#teacherNav.dashboard',\n                LESSONS: '#teacherNav.lessons',\n\n                ASSIGNMENTS: '#teacherNav.assignments',\n                RUBRICS: '#teacherNav.rubrics',\n                STUDENT_INFORMATION: '#teacherNav.studentInformation',\n                PARENT_CONTACTS: '#teacherNav.parentContacts',\n                BEHAVIOR: '#teacherNav.behavior',\n                DEVELOPMENT: '#teacherNav.development',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n})\n","import React, { ReactNode, FC, useContext } from 'react'\nimport { createContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport {\n  teacherNavMachine,\n  teacherNavMachineEvent,\n  teacherNavMachineContext,\n} from './teacherNavMachine'\nimport { State } from 'xstate'\n\nconst TeacherNavContext = createContext<any>(undefined)\n\ntype NavContextProps = {\n  children: ReactNode\n}\n\nexport const TeacherNavContextProvider: FC<NavContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(teacherNavMachine)\n  return (\n    <TeacherNavContext.Provider value={[state, event]}>\n      {children}\n    </TeacherNavContext.Provider>\n  )\n}\n\nexport function useTeacherNavContextProvider() {\n  const context = useContext(TeacherNavContext)\n  if (context === undefined) {\n    throw new Error(\n      'useSectionBuilderContextProvider must be used within a SectionBuilderContextProvider Component',\n    )\n  }\n  return context as [\n    State<teacherNavMachineContext, teacherNavMachineEvent, any, any>,\n    (event: teacherNavMachineEvent) => void,\n  ]\n}\n","import { useEffect } from 'react'\nimport { useTeacherNavContextProvider } from '../navigation/teacher-nav/TeacherNavContext'\nimport {\n  teacherNavMachineEvent,\n  teacherNavTargets,\n} from '../navigation/teacher-nav/teacherNavMachine'\n\nexport const useNavSync = (location: any, navTarget: teacherNavTargets) => {\n  const [navState, navSync] = useTeacherNavContextProvider()\n\n  useEffect(() => {\n    if (location.pathname.includes(navState.value.toString())) {\n      navSync({ type: navTarget })\n    }\n  }, [])\n}\n","import React from 'react'\nimport { Routes, Route, useLocation } from 'react-router'\nimport { SectionBuilder } from './section-builder/SectionBuilder'\nimport { SectionEditor } from './section-editor/SectionEditor'\nimport { SectionEditorContextProvider } from './section-editor/state-n-styles/sectionEditorContext'\nimport { LessonPlanner } from './lesson-planner/LessonPlanner'\n\nimport { SectionBuilderContextProvider } from './section-builder/state/SectionBuilderContext'\nimport { LessonPlannerContextProvider } from './lesson-planner/state-and-styles/lessonPlannerContext'\n\nimport { LessonFinder } from './lesson-finder/LessonFinder'\nimport { LessonFinderContextProvider } from './lesson-finder/state-n-styles/LessonFinderContext'\n\nimport { BuildEssayQuestionContextProvider } from './essay-question/build-essay-questions/state-n-styles/BuildEssayQuestionContext'\nimport { EssayQuestionBuilder } from './essay-question/build-essay-questions/EssayQuestionBuilder'\nimport { Questions } from './essay-question/Questions'\nimport { CreateQuiz } from './quiz-creator/CreateQuiz'\nimport { CreateQuizContextProvider } from './quiz-creator/state-n-styles/CreateQuizContext'\nimport { useNavSync } from '../../../../hooks/useNavSync'\n\nexport const LessonsHome = () => {\n  const location = useLocation()\n  useNavSync(location, 'LESSONS')\n  return (\n    <Routes>\n      <Route\n        path=\"lesson-planner/:date/*\"\n        element={\n          <LessonPlannerContextProvider>\n            <LessonPlanner />\n          </LessonPlannerContextProvider>\n        }\n      />\n      <Route\n        path=\"\"\n        element={\n          <LessonFinderContextProvider>\n            <LessonFinder />\n          </LessonFinderContextProvider>\n        }\n      />\n      <Route\n        path=\"section-builder\"\n        element={\n          <SectionBuilderContextProvider>\n            <SectionBuilder />\n          </SectionBuilderContextProvider>\n        }\n      />\n      <Route\n        path=\"section-editor\"\n        element={\n          <SectionEditorContextProvider>\n            <SectionEditor />\n          </SectionEditorContextProvider>\n        }\n      />\n      <Route\n        path=\"essay-question\"\n        element={\n          <BuildEssayQuestionContextProvider>\n            <Questions />\n          </BuildEssayQuestionContextProvider>\n        }\n      />\n      <Route\n        path=\"create-quiz/:date/*\"\n        element={\n          <CreateQuizContextProvider>\n            <CreateQuiz />\n          </CreateQuizContextProvider>\n        }\n      />\n    </Routes>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  TextSectionQuestionsInput,\n  ReadingsInput,\n  TopicInput,\n  MarkingPeriodEnum,\n  findLessonById_findLessonById_lesson_assignedCourses_hasCourseInfo,\n  SchoolDayType,\n  TimeOfDay,\n  findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions_questionParts,\n} from '../../../../../../schemaTypes'\nimport { dateConverter } from '../../../../../../utils'\n\nexport type createAssignmentMachineSchema = {\n  states: {\n    idle: {}\n    essay: {\n      states: {\n        unit: {}\n        lesson: {}\n        essayInfo: {}\n        createEssay: {}\n      }\n    }\n    readingGuide: {\n      states: {\n        unit: {}\n        lesson: {}\n        readingGuideInfo: {}\n        createReadingGuide: {}\n      }\n    }\n  }\n}\n\nexport type createAssignmentMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'ESSAY' }\n  | { type: 'ESSAY_UNIT' }\n  | { type: 'ESSAY_LESSON' }\n  | { type: 'ESSAY_INFO' }\n  | { type: 'CREATE_ESSAY' }\n  | { type: 'PREVIOUS' }\n  | { type: 'READING_GUIDE' }\n  | { type: 'READING_GUIDE_UNIT' }\n  | { type: 'READING_GUIDE_LESSON' }\n  | { type: 'CREATE_READING_GUIDE' }\n  | { type: 'RETURN' }\n  | { type: 'BACK' }\n  | { type: 'READING_GUIDE_INFO' }\n  | { type: 'SET_COURSE_ID'; payload: string }\n  | {\n      type: 'SET_COURSE_INFO'\n      payload: findLessonById_findLessonById_lesson_assignedCourses_hasCourseInfo\n    }\n  | { type: 'SET_LINKED_COURSES_IDS'; payload: string[] }\n  | { type: 'SET_UNIT'; payload: string }\n  | { type: 'SET_LESSON'; payload: string }\n  | { type: 'SET_LESSON_DATE'; payload: string }\n  | {\n      type: 'SET_QUESTION_LIST'\n      payload: findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions_questionParts[]\n    }\n  | { type: 'SET_DUE_DATE'; payload: any }\n  | { type: 'SET_READING_GUIDE_DUE_DATE'; payload: any }\n  | { type: 'SET_DUE_TIME'; payload: any }\n  | { type: 'SET_READING_GUIDE_DUE_TIME'; payload: any }\n  | { type: 'SET_ASSIGNED_DATE'; payload: any }\n  | { type: 'SET_READING_GUIDE_ASSIGNED_DATE'; payload: any }\n  | { type: 'SET_ASSIGNER_ID'; payload: string }\n  | { type: 'SET_MARKING_PERIOD'; payload: MarkingPeriodEnum }\n  | { type: 'SET_READING_GUIDE_MARKING_PERIOD'; payload: MarkingPeriodEnum }\n  | { type: 'SET_MAX_POINTS'; payload: number }\n  | { type: 'SET_READING_GUIDE_MAX_POINTS'; payload: number }\n  | { type: 'SET_READINGS_READING_PAGES'; payload: string }\n  | { type: 'SET_READING_GUIDE_READINGS_READING_PAGES'; payload: string }\n  | { type: 'SET_READINGS_READING_SECTIONS'; payload: string }\n  | { type: 'SET_READING_GUIDE_READINGS_READING_SECTIONS'; payload: string }\n  | { type: 'SET_TOPIC_QUESTION_LIST'; payload: TopicInput }\n  | { type: 'DELETE_TOPIC_QUESTION'; payload: number }\n  | { type: 'SET_MAX_POINTS'; payload: number }\n  | { type: 'SET_READING_GUIDE_MAX_POINTS'; payload: number }\n  | { type: 'IDLE' }\n\nexport type createAssignmentMachineContext = {\n  courseId: string\n  courseInfo: findLessonById_findLessonById_lesson_assignedCourses_hasCourseInfo\n  hasAssignerId: string\n  essay: {\n    unit: string\n    lesson: string\n    lessonDate: string\n    assignedCourseId: string[]\n    questionList: findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions_questionParts[]\n    dueDate: any\n    dueTime: TimeOfDay\n    assignedDate: any\n    readings: ReadingsInput\n    maxPoints: number\n    markingPeriod: MarkingPeriodEnum\n    topicList: TopicInput[]\n  }\n  readingGuide: {\n    unit: string\n    lesson: string\n    assignedCourseId: string[]\n    dueDate: any\n    dueTime: TimeOfDay\n    assignedDate: any\n    markingPeriod: MarkingPeriodEnum\n    maxPoints: number\n    readings: ReadingsInput\n  }\n}\n\nexport const createAssignmentMachine = Machine<\n  createAssignmentMachineContext,\n  createAssignmentMachineSchema,\n  createAssignmentMachineEvent\n>({\n  id: 'createAssignment',\n  initial: 'idle',\n  // type: 'parallel',\n  context: {\n    courseId: '',\n    courseInfo: {\n      __typename: 'CourseInfo',\n      endsAt: '',\n      schoolDayType: SchoolDayType.A,\n      startsAt: '',\n    },\n    hasAssignerId: '',\n    essay: {\n      unit: '',\n      lesson: '',\n      lessonDate: '',\n      assignedCourseId: [],\n      questionList: [],\n      dueDate: '',\n      dueTime: TimeOfDay.BEFORE_CLASS,\n      // assignedDate: dateConverter(new Date().toISOString().substring(0, 10)),\n      assignedDate: '',\n      maxPoints: 5,\n      markingPeriod: MarkingPeriodEnum.FIRST,\n      readings: {\n        readingPages: '',\n        readingSections: '',\n      },\n      topicList: [],\n    },\n    readingGuide: {\n      unit: '',\n      lesson: '',\n      assignedCourseId: [],\n      readings: {\n        readingPages: '',\n        readingSections: '',\n      },\n      markingPeriod: MarkingPeriodEnum.FIRST,\n      maxPoints: 3,\n      assignedDate: dateConverter(new Date().toISOString().substring(0, 10)),\n      dueDate: '',\n      dueTime: TimeOfDay.BEFORE_CLASS,\n    },\n  },\n  states: {\n    idle: {\n      on: {\n        ESSAY: 'essay',\n        READING_GUIDE: 'readingGuide',\n        SET_COURSE_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseId: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    essay: {\n      initial: 'unit',\n      states: {\n        unit: {\n          on: {\n            IDLE: '#createAssignment.idle',\n            ESSAY_LESSON: 'lesson',\n            READING_GUIDE: '#createAssignment.readingGuide',\n            SET_UNIT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, unit: evt.payload },\n                }\n              }),\n            },\n          },\n        },\n        lesson: {\n          on: {\n            ESSAY_UNIT: 'unit',\n            ESSAY_INFO: 'essayInfo',\n            IDLE: '#createAssignment.idle',\n            READING_GUIDE: '#createAssignment.readingGuide',\n            SET_LESSON: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, lesson: evt.payload },\n                }\n              }),\n            },\n            SET_ASSIGNED_DATE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, assignedDate: evt.payload },\n                }\n              }),\n            },\n          },\n        },\n        essayInfo: {\n          on: {\n            ESSAY_LESSON: 'lesson',\n            CREATE_ESSAY: 'createEssay',\n            READING_GUIDE: '#createAssignment.readingGuide',\n            IDLE: '#createAssignment.idle',\n            SET_COURSE_INFO: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  courseInfo: evt.payload,\n                }\n              }),\n            },\n            SET_LINKED_COURSES_IDS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, assignedCourseId: evt.payload },\n                }\n              }),\n            },\n            SET_QUESTION_LIST: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, questionList: evt.payload },\n                }\n              }),\n            },\n            SET_ASSIGNED_DATE: {\n              actions: assign((ctx, evt) => {\n                console.log(evt.payload)\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, assignedDate: evt.payload },\n                }\n              }),\n            },\n            SET_DUE_DATE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, dueDate: evt.payload },\n                }\n              }),\n            },\n            SET_DUE_TIME: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, dueTime: evt.payload },\n                }\n              }),\n            },\n            SET_ASSIGNER_ID: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  hasAssignerId: evt.payload,\n                }\n              }),\n            },\n            SET_MARKING_PERIOD: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, markingPeriod: evt.payload },\n                }\n              }),\n            },\n            SET_MAX_POINTS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: { ...ctx.essay, maxPoints: evt.payload },\n                }\n              }),\n            },\n            SET_READINGS_READING_PAGES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: {\n                    ...ctx.essay,\n                    readings: {\n                      ...ctx.essay.readings,\n                      readingPages: evt.payload,\n                    },\n                  },\n                }\n              }),\n            },\n            SET_READINGS_READING_SECTIONS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: {\n                    ...ctx.essay,\n                    readings: {\n                      ...ctx.essay.readings,\n                      readingSections: evt.payload,\n                    },\n                  },\n                }\n              }),\n            },\n            SET_TOPIC_QUESTION_LIST: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: {\n                    ...ctx.essay,\n                    topicList: [...ctx.essay.topicList, evt.payload],\n                  },\n                }\n              }),\n            },\n            DELETE_TOPIC_QUESTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: {\n                    ...ctx.essay,\n                    topicList: [\n                      ...ctx.essay.topicList.slice(0, evt.payload),\n                      ...ctx.essay.topicList.slice(evt.payload + 1),\n                    ],\n                  },\n                }\n              }),\n            },\n          },\n        },\n        createEssay: {},\n      },\n    },\n    readingGuide: {\n      initial: 'unit',\n      states: {\n        unit: {\n          on: {\n            PREVIOUS: '#createAssignment.idle',\n            ESSAY: '#createAssignment.essay',\n            READING_GUIDE_LESSON: 'lesson',\n            IDLE: '#createAssignment.idle',\n            SET_UNIT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: { ...ctx.readingGuide, unit: evt.payload },\n                }\n              }),\n            },\n          },\n        },\n        lesson: {\n          on: {\n            READING_GUIDE_UNIT: 'unit',\n            READING_GUIDE_INFO: 'readingGuideInfo',\n            ESSAY: '#createAssignment.essay',\n            IDLE: '#createAssignment.idle',\n            SET_LESSON: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: { ...ctx.readingGuide, lesson: evt.payload },\n                }\n              }),\n            },\n          },\n        },\n        readingGuideInfo: {\n          on: {\n            PREVIOUS: 'lesson',\n            CREATE_READING_GUIDE: 'createReadingGuide',\n            ESSAY: '#createAssignment.essay',\n            IDLE: '#createAssignment.idle',\n            SET_COURSE_INFO: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  courseInfo: evt.payload,\n                }\n              }),\n            },\n\n            SET_READING_GUIDE_ASSIGNED_DATE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: {\n                    ...ctx.readingGuide,\n                    assignedDate: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_READING_GUIDE_DUE_DATE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: { ...ctx.readingGuide, dueDate: evt.payload },\n                }\n              }),\n            },\n            SET_READING_GUIDE_DUE_TIME: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: { ...ctx.readingGuide, dueTime: evt.payload },\n                }\n              }),\n            },\n            SET_ASSIGNER_ID: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  hasAssignerId: evt.payload,\n                }\n              }),\n            },\n            SET_READING_GUIDE_MARKING_PERIOD: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: {\n                    ...ctx.readingGuide,\n                    markingPeriod: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_READING_GUIDE_MAX_POINTS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: { ...ctx.readingGuide, maxPoints: evt.payload },\n                }\n              }),\n            },\n            SET_READING_GUIDE_READINGS_READING_PAGES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: {\n                    ...ctx.readingGuide,\n                    readings: {\n                      ...ctx.readingGuide.readings,\n                      readingPages: evt.payload,\n                    },\n                  },\n                }\n              }),\n            },\n            SET_READING_GUIDE_READINGS_READING_SECTIONS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: {\n                    ...ctx.readingGuide,\n                    readings: {\n                      ...ctx.readingGuide.readings,\n                      readingSections: evt.payload,\n                    },\n                  },\n                }\n              }),\n            },\n          },\n        },\n        createReadingGuide: {},\n      },\n    },\n  },\n})\n","import React, { FC, createContext, ReactNode, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport {\n  createAssignmentMachine,\n  createAssignmentMachineEvent,\n  createAssignmentMachineContext,\n} from './createAssignmentMachine'\nimport { State } from 'xstate'\n\nexport type CreateAssignmentContextProps = {\n  children: ReactNode\n}\n\nconst CreateAssignmentContext = createContext<any>(undefined)\n\nexport const CreateAssignmentContextProvider: FC<\n  CreateAssignmentContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(createAssignmentMachine)\n  return (\n    <CreateAssignmentContext.Provider value={[state, event]}>\n      {children}\n    </CreateAssignmentContext.Provider>\n  )\n}\n\nexport function useCreateAssignmentContextPovider() {\n  const context = useContext(CreateAssignmentContext)\n  if (context === undefined) {\n    throw new Error(\n      'useCreateAssignmentContextPovider must be used within a CreateAssignmentContextProvider',\n    )\n  }\n  return context as [\n    State<\n      createAssignmentMachineContext,\n      createAssignmentMachineEvent,\n      any,\n      any\n    >,\n    (event: createAssignmentMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { FIND_UNITS_QUERY } from '../../../lessons/lesson-planner/UnitAssigner'\nimport { findUnits } from '../../../../../../schemaTypes'\nimport { useQuery } from '@apollo/client'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\nimport {\n  ItemSelectorContainer,\n  LessonInformationSelectContainer,\n  SelectableItem,\n  SelectButton,\n  SelectButtonContainer,\n  SelectorContainer,\n  SelectorTitle,\n} from '../state-and-styles/createAssignmentsStyles'\n\nexport type EssayUnitSelectProps = {}\n\nexport const EssayUnitSelect: FC<EssayUnitSelectProps> = () => {\n  const [state, event] = useCreateAssignmentContextPovider()\n\n  const { loading, data } = useQuery<findUnits>(FIND_UNITS_QUERY, {\n    onCompleted: (data) => console.log(data.findUnits.units),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <LessonInformationSelectContainer>\n      <SelectorContainer>\n        <SelectorTitle>Select Unit </SelectorTitle>\n        <ItemSelectorContainer>\n          {data?.findUnits.units.map((unit) => (\n            <SelectableItem\n              key={unit._id}\n              onClick={() => {\n                event({ type: 'SET_UNIT', payload: unit._id! })\n                event({ type: 'ESSAY_LESSON' })\n              }}\n            >\n              {unit.unitName}\n            </SelectableItem>\n          ))}\n        </ItemSelectorContainer>\n      </SelectorContainer>\n      <SelectButtonContainer></SelectButtonContainer>\n    </LessonInformationSelectContainer>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: var(--white);\n  stroke-width: 3.5px;\n`\n// Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\nexport type StyledCheckboxProps = {\n  checked: boolean\n  boxHeight: number\n  boxWidth: number\n}\nconst StyledCheckbox = styled.div<StyledCheckboxProps>`\n  display: inline-block;\n  width: ${({ boxWidth }) => boxWidth}px;\n  height: ${({ boxHeight }) => boxHeight}px;\n  background: ${({ checked }) => (checked ? 'var(--blue)' : 'var(--white)')};\n  border-radius: 3px;\n  border: 1px solid var(--blue);\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px var(--white);\n  }\n\n  ${Icon} {\n    visibility: ${(props) => (props.checked ? 'visible' : 'hidden')};\n  }\n`\n\nexport type CheckBoxProps = {\n  checked: boolean\n  onChange: (e: any) => void\n  value: any\n  label: string\n  leftMargin?: number\n  labelWidth: number\n  boxHeight: number\n  boxWidth: number\n  fontWeight?: 200 | 300 | 400\n}\n\nconst CheckBox = ({\n  checked,\n  onChange,\n  label,\n  leftMargin,\n  labelWidth,\n  boxHeight,\n  boxWidth,\n  fontWeight,\n  ...props\n}: CheckBoxProps) => (\n  <>\n    <label\n      style={{\n        width: labelWidth + '%',\n        marginLeft: leftMargin ? leftMargin + '%' : 'none',\n      }}\n    >\n      <CheckboxContainer>\n        <HiddenCheckbox checked={checked} {...props} onChange={onChange} />\n        <StyledCheckbox\n          checked={checked}\n          boxHeight={boxHeight}\n          boxWidth={boxWidth}\n        >\n          <Icon viewBox=\"0 3 24 24\">\n            <polyline points=\"20 6 9 17 4 12\" />\n          </Icon>\n        </StyledCheckbox>\n      </CheckboxContainer>\n      <span style={{ marginLeft: '1%', fontWeight }}>{label}</span>\n    </label>\n  </>\n)\n\nexport default CheckBox\n","import { Machine, assign } from 'xstate'\n\nexport type assignEssayByCourseMachineSchema = {\n  states: {\n    essayInfo: {}\n  }\n}\nexport type assignEssayByCourseMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_STUDENT_IDS'; payload: string[] }\n  | { type: 'SET_LESSON_ID'; payload: string }\n  | { type: 'SET_ASSIGNED_DATE'; payload: string }\n  | { type: 'SET_DUE_DATE'; payload: string }\n//   | { type: 'IS_ASSIGNED'; payload: boolean }\n\nexport type assignEssayByCourseMachineContext = {\n  studentIds: string[]\n  associatedLessonId: string\n  assignedDate: string\n  dueDate: string\n  //   isEssayAssigned: boolean\n}\n\nexport const assignEssayByCourseMachine = Machine<\n  assignEssayByCourseMachineContext,\n  assignEssayByCourseMachineSchema,\n  assignEssayByCourseMachineEvent\n>({\n  id: 'assignEssayByCourse',\n  initial: 'essayInfo',\n  context: {\n    studentIds: [],\n    associatedLessonId: '',\n    assignedDate: '',\n    dueDate: '',\n    // isEssayAssigned: false,\n  },\n  states: {\n    essayInfo: {\n      on: {\n        SET_STUDENT_IDS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentIds: evt.payload,\n            }\n          }),\n        },\n        SET_LESSON_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              associatedLessonId: evt.payload,\n            }\n          }),\n        },\n        SET_ASSIGNED_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              assignedDate: evt.payload,\n            }\n          }),\n        },\n        SET_DUE_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              dueDate: evt.payload,\n            }\n          }),\n        },\n        // IS_ASSIGNED: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       isEssayAssigned: evt.payload,\n        //     }\n        //   }),\n        // },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  assignEssayByCourseMachine,\n  assignEssayByCourseMachineContext,\n  assignEssayByCourseMachineEvent,\n} from './assignEssayByCourseMachine'\n\nconst AssignEssayByCourseContext = createContext<any>(undefined)\n\ntype AssignEssayByCourseContextProps = {\n  children: ReactNode\n}\n\nexport const AssignEssayByCourseContextProvider: FC<\n  AssignEssayByCourseContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(assignEssayByCourseMachine)\n  return (\n    <AssignEssayByCourseContext.Provider value={[state, event]}>\n      {children}\n    </AssignEssayByCourseContext.Provider>\n  )\n}\n\nexport function useAssignEssayByCourseContextProvider() {\n  const context = useContext(AssignEssayByCourseContext)\n  if (context === undefined) {\n    throw new Error(\n      'useAssignEssayByCourseContextProvider must be used within a AssignEssayByCourseContextProvider',\n    )\n  }\n  return context as [\n    State<\n      assignEssayByCourseMachineContext,\n      assignEssayByCourseMachineEvent,\n      any,\n      any\n    >,\n    (event: assignEssayByCourseMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { useAssignEssayByCourseContextProvider } from './AssignEssayByCourseContext'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  assignEssays,\n  assignEssaysVariables,\n} from '../../../../../../../schemaTypes'\n\nexport type AssignEssayProps = {}\n\nexport const ASSIGN_ESSAYS_MUTATION = gql`\n  mutation assignEssays($input: AssignEssaysInput!) {\n    assignEssays(input: $input) {\n      essays {\n        _id\n      }\n    }\n  }\n`\n\nexport const AssignEssay: FC<AssignEssayProps> = () => {\n  const [state] = useAssignEssayByCourseContextProvider()\n  const [assignEssays, { data, called }] = useMutation<\n    assignEssays,\n    assignEssaysVariables\n  >(ASSIGN_ESSAYS_MUTATION, {\n    variables: {\n      input: {\n        assignedDate: state.context.assignedDate,\n        dueDate: state.context.dueDate,\n        associatedLessonId: state.context.associatedLessonId,\n        studentIds: state.context.studentIds,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n\n  return (\n    <>\n      {data ? (\n        <div>Finished</div>\n      ) : (\n        <button\n          style={\n            !called\n              ? { backgroundColor: 'var(--blue)', color: 'var(--white)' }\n              : { backgroundColor: 'var(--grey)', color: 'var(--blue)' }\n          }\n          onClick={() => {\n            if (!called) {\n              assignEssays()\n            }\n          }}\n        >\n          Assign\n        </button>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findEssaysByAssociatedLessonIdAndCourseId,\n  findEssaysByAssociatedLessonIdAndCourseIdVariables,\n} from '../../../../../../../schemaTypes'\nimport { AssignEssay } from './AssignEssay'\nimport { useAssignEssayByCourseContextProvider } from './AssignEssayByCourseContext'\nimport { todaysLocaleDate } from '../../../../../../../utils'\n\nexport type AssignLessonProps = {\n  lessonId: string\n  courseId: string\n}\n\nexport const FIND_ESSAYS_BY_LESSON_AND_COURSE_QUERY = gql`\n  query findEssaysByAssociatedLessonIdAndCourseId(\n    $input: FindEssaysByAssociatedLessonIdAndCourseIdInput!\n  ) {\n    findEssaysByAssociatedLessonIdAndCourseId(input: $input) {\n      essays {\n        assigned\n        hasOwner {\n          _id\n          firstName\n          lastName\n        }\n        readings {\n          readingSections\n        }\n        dueDate\n        assignedDate\n      }\n    }\n  }\n`\n\nexport const AssignLesson: FC<AssignLessonProps> = ({ lessonId, courseId }) => {\n  const [state, event] = useAssignEssayByCourseContextProvider()\n\n  const { loading, data } = useQuery<\n    findEssaysByAssociatedLessonIdAndCourseId,\n    findEssaysByAssociatedLessonIdAndCourseIdVariables\n  >(FIND_ESSAYS_BY_LESSON_AND_COURSE_QUERY, {\n    variables: {\n      input: { courseId, lessonId },\n    },\n    onCompleted: (data) => {\n      if (data.findEssaysByAssociatedLessonIdAndCourseId.essays.length > 0) {\n        const studentIds: string[] =\n          data.findEssaysByAssociatedLessonIdAndCourseId.essays.map(\n            (essay) => essay.hasOwner._id!,\n          )\n        const assignedDate: string =\n          data.findEssaysByAssociatedLessonIdAndCourseId.essays[0].assignedDate\n        const dueDate: string =\n          data.findEssaysByAssociatedLessonIdAndCourseId.essays[0].dueDate\n\n        event({ type: 'SET_STUDENT_IDS', payload: studentIds })\n        event({ type: 'SET_LESSON_ID', payload: lessonId })\n        event({ type: 'SET_DUE_DATE', payload: dueDate })\n        event({ type: 'SET_ASSIGNED_DATE', payload: assignedDate })\n      }\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      {data?.findEssaysByAssociatedLessonIdAndCourseId.essays.length! > 0 && (\n        <>\n          <div>AssignedDate: {state.context.assignedDate}</div>\n          {state.context.assignedDate !== todaysLocaleDate && (\n            <button\n              onClick={() =>\n                event({ type: 'SET_ASSIGNED_DATE', payload: todaysLocaleDate })\n              }\n            >\n              Use Today's Date\n            </button>\n          )}\n          <div>DueDate: {state.context.dueDate}</div>\n          <div>\n            Reading Sections:{' '}\n            {\n              data?.findEssaysByAssociatedLessonIdAndCourseId.essays[0].readings\n                .readingSections\n            }\n          </div>\n          {data?.findEssaysByAssociatedLessonIdAndCourseId.essays.some(\n            (essay) => essay.assigned === false,\n          ) ? (\n            <AssignEssay />\n          ) : (\n            <div>Already Assigned</div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport {\n  findLessonsByCourse,\n  findLessonsByCourseVariables,\n} from '../../../../../../../schemaTypes'\nimport { AssignLesson } from './AssignLesson'\n\nexport type LessonSelectProps = {\n  course: string\n}\n\nexport const FIND_LESSONS_BY_COURSE_QUERY = gql`\n  query findLessonsByCourse($input: FindLessonByCourseInput!) {\n    findLessonByCourse(input: $input) {\n      lessons {\n        _id\n        lessonName\n        assignedDate\n        lessonType\n      }\n    }\n  }\n`\n\nexport const LessonSelect: FC<LessonSelectProps> = ({ course }) => {\n  const [lessonId, setLessonId] = useState('')\n  const { loading, data } = useQuery<\n    findLessonsByCourse,\n    findLessonsByCourseVariables\n  >(FIND_LESSONS_BY_COURSE_QUERY, {\n    variables: {\n      input: { courseId: course },\n    },\n    onCompleted: (data) => console.log(data.findLessonByCourse.lessons),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setLessonId(e.target.value)\n          }\n        }}\n      >\n        <option value={'none'}>Select a Lesson</option>\n        {data?.findLessonByCourse.lessons.map((lesson) => (\n          <option key={lesson._id!} value={lesson._id!}>\n            {lesson.lessonName}\n          </option>\n        ))}\n      </select>\n      {lessonId && <AssignLesson courseId={course} lessonId={lessonId} />}\n    </>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React, { useEffect } from 'react'\nimport {\n  findLessonsByCourse,\n  findLessonsByCourseVariables,\n  findLessonsByCourse_findLessonByCourse_lessons,\n} from '../../../../../../schemaTypes'\nimport { FIND_LESSONS_BY_COURSE_QUERY } from '../../assign-assignments/assign-essays/assign-by-course/LessonSelect'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\n\nexport type DueDateCheckProps = { courseId: string; lessonId: string }\n\nexport const DueDateCheck = ({ courseId, lessonId }: DueDateCheckProps) => {\n  const [, event] = useCreateAssignmentContextPovider()\n  useQuery<findLessonsByCourse, findLessonsByCourseVariables>(\n    FIND_LESSONS_BY_COURSE_QUERY,\n    {\n      variables: {\n        input: { courseId },\n      },\n      onCompleted: (data) => {\n        const [assignedLesson] = data?.findLessonByCourse.lessons.filter(\n          (lesson) => {\n            if (lesson._id) return lesson._id === lessonId\n          },\n        )!\n\n        const lessonIndex = data?.findLessonByCourse.lessons.findIndex(\n          (lesson) => {\n            if (assignedLesson) return lesson._id === assignedLesson._id\n          },\n        )!\n\n        const sortedLessons = data?.findLessonByCourse.lessons\n          .slice()\n          .sort(sortByDate)!\n\n        const nextLesson = sortedLessons[lessonIndex + 1]!\n\n        if (nextLesson) {\n          event({\n            type: 'SET_DUE_DATE',\n            payload: nextLesson.assignedDate,\n          })\n        }\n      },\n      onError: (error) => console.error(error),\n    },\n  )\n  function sortByDate(\n    a: findLessonsByCourse_findLessonByCourse_lessons,\n    b: findLessonsByCourse_findLessonByCourse_lessons,\n  ) {\n    let dateA = new Date(a.assignedDate).getTime()\n\n    let dateB = new Date(b.assignedDate).getTime()\n\n    return dateA > dateB ? 1 : -1\n  }\n\n  return null\n}\n","import React, { FC, useState } from 'react'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\n\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  WritingLevelEnum,\n  TopicInput,\n  QuestionTypeEnum,\n  createEssayVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createEssay,\n  me_me_Teacher,\n  TimeOfDay,\n  MarkingPeriodEnum,\n  NounTypeEnum,\n  VerbTypeEnum,\n  QuestionWordEnum,\n  findWritingLevelsForCourseVariables,\n  findWritingLevelsForCourse,\n  findLessonById_findLessonById_lesson,\n  // NounTypeEnum,\n  // QuestionWordEnum,\n  // VerbTypeEnum,\n} from '../../../../../../schemaTypes'\nimport { useCheckBox } from '../../../../../../hooks/useCheckBox'\nimport {\n  dateConverter,\n  dateInputConverter,\n  phraseCapitalizer,\n  sortByLetter,\n} from '../../../../../../utils'\nimport {\n  AddQuestionForm,\n  AddQuestionLevelSelect,\n  AddQuestionSelect,\n  AddQuestionTitle,\n  CoursesCheckBoxContainer,\n  DateAssignContainer,\n  DateAssignInput,\n  DateAssignItemContainer,\n  DateAssignSelect,\n  DisplayedQuestions,\n  DisplayedQuestionWritingLevelContainer,\n  EssayInformationSelectContainer,\n  GeneralInput,\n  LessonInformationSelectContainer,\n  LinkCoursesContainer,\n  LinkCoursesHeader,\n  MaxPointSelectorContainer,\n  Question,\n  QuestionSelectContainer,\n  QuestionSelector,\n  SelectButton,\n  SelectButtonContainer,\n  SelectedQuestionContainer,\n  SelectedQuestionsDisplay,\n  SelectedQuestionTitle,\n  SelectorTitle,\n  WritingLevelTitleContainer,\n} from '../state-and-styles/createAssignmentsStyles'\nimport CheckBox from '../../../../../reusable-components/CheckBox'\nimport { DueDateCheck } from './DueDateCheck'\n\nexport type CreateEssayProps = {\n  me: me_me_Teacher\n  courseIdList: string[]\n  courseId: string\n  lesson: findLessonById_findLessonById_lesson\n}\n\nexport const CREATE_ESSAY_MUTATION = gql`\n  mutation createEssay($input: CreateEssayInput!) {\n    createEssay(input: $input) {\n      essays {\n        _id\n      }\n    }\n  }\n`\n\nexport const FIND_WRITING_LEVELS_QUERY = gql`\n  query findWritingLevelsForCourse($input: FindStudentsByCourseInput!) {\n    findStudentsByCourse(input: $input) {\n      students {\n        hasProgressTracker {\n          writingProgressTracker {\n            overallWritingLevel\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const CreateEssay = ({\n  me,\n  courseIdList,\n  courseId,\n  lesson,\n}: CreateEssayProps) => {\n  const [state, event] = useCreateAssignmentContextPovider()\n\n  const { writingLevelEnum, markingPeriodEnum, timeOfDayEnum } =\n    useEnumContextProvider()\n\n  const [topicQuestion, setTopicQuestion] = useState<TopicInput>({\n    question: '',\n    questionType: QuestionTypeEnum.WHY_CAUSE_EFFECT,\n    writingLevel: WritingLevelEnum.DEVELOPING,\n    essayQuestionId: '',\n  })\n\n  const [assignedCourseIds, handleChange] = useCheckBox(courseIdList)\n\n  const { loading, data: writingLevelData } = useQuery<\n    findWritingLevelsForCourse,\n    findWritingLevelsForCourseVariables\n  >(FIND_WRITING_LEVELS_QUERY, {\n    variables: {\n      input: { courseId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const writingLevels = writingLevelData?.findStudentsByCourse.students\n    .map(\n      (student) =>\n        student.hasProgressTracker.writingProgressTracker.overallWritingLevel,\n    )\n    .reduce(\n      (accum: string[], cValue) =>\n        accum.includes(cValue) ? [...accum] : [...accum, cValue],\n      [],\n    )\n\n  const [createEssay, { called, data }] = useMutation<\n    createEssay,\n    createEssayVariables\n  >(CREATE_ESSAY_MUTATION, {\n    variables: {\n      input: {\n        topicList: state.context.essay.topicList,\n        assignedCourseId: [courseId],\n        assignedDate: state.context.essay.assignedDate,\n        dueDate: state.context.essay.dueDate,\n        dueTime: state.context.essay.dueTime,\n        associatedLessonId: state.context.essay.lesson,\n        hasAssignerId: state.context.hasAssignerId,\n        markingPeriod: state.context.essay.markingPeriod,\n        maxPoints: 5,\n        readings: state.context.essay.readings,\n      },\n    },\n    onCompleted: () => {\n      console.log(data)\n      event({ type: 'READING_GUIDE' })\n    },\n    onError: (error) => console.error(error),\n    refetchQueries: [],\n  })\n  const courses = me.teachesCourses\n    .slice(1)\n    .sort(sortByLetter)\n    .filter((c) => c.name !== 'Unenrolled')\n\n  const selectedDevelopingEssays = state.context.essay.topicList.filter(\n    (essay) => essay.writingLevel === 'DEVELOPING',\n  )\n  const selectedAcademicEssays = state.context.essay.topicList.filter(\n    (essay) => essay.writingLevel === 'ACADEMIC',\n  )\n  const selectedAdvancedEssays = state.context.essay.topicList.filter(\n    (essay) => essay.writingLevel === 'ADVANCED',\n  )\n\n  return (\n    <LessonInformationSelectContainer>\n      {courseId && <DueDateCheck lessonId={lesson._id!} courseId={courseId} />}\n      <EssayInformationSelectContainer>\n        <SelectorTitle>Create Essay</SelectorTitle>\n        <DateAssignContainer>\n          <DateAssignItemContainer>\n            <div>Assigned Date: </div>\n            <DateAssignInput\n              type=\"date\"\n              value={dateInputConverter(state.context.essay.assignedDate)}\n              onChange={(e: any) =>\n                event({\n                  type: 'SET_ASSIGNED_DATE',\n                  payload: dateConverter(e.target.value),\n                })\n              }\n            />\n          </DateAssignItemContainer>\n          <DateAssignItemContainer>\n            <div>Due Date: </div>\n            <DateAssignInput\n              type=\"date\"\n              value={\n                state.context.essay.dueDate\n                  ? dateInputConverter(state.context.essay.dueDate)\n                  : ''\n              }\n              onChange={(e: any) =>\n                event({\n                  type: 'SET_DUE_DATE',\n                  payload: dateConverter(e.target.value),\n                })\n              }\n            />\n          </DateAssignItemContainer>\n          <DateAssignItemContainer>\n            <div>Time: </div>\n            <DateAssignSelect\n              value={state.context.essay.dueTime}\n              onChange={(e: any) =>\n                event({\n                  type: 'SET_DUE_TIME',\n                  payload: e.target.value,\n                })\n              }\n            >\n              {timeOfDayEnum.map((time: TimeOfDay) => (\n                <option key={time!} value={time!}>\n                  {time === 'BEFORE_SCHOOL'\n                    ? 'Before School'\n                    : time === 'BEFORE_CLASS'\n                      ? 'Before Class'\n                      : time === 'END_OF_CLASS'\n                        ? 'After Class'\n                        : 'After School'}\n                </option>\n              ))}\n            </DateAssignSelect>\n          </DateAssignItemContainer>\n          <DateAssignItemContainer>\n            <div>Marking Period</div>\n            <DateAssignSelect\n              value={state.context.essay.markingPeriod}\n              onChange={(e: any) =>\n                event({ type: 'SET_MARKING_PERIOD', payload: e.target.value })\n              }\n            >\n              {markingPeriodEnum.map((mp: MarkingPeriodEnum) => (\n                <option key={mp} value={mp}>\n                  {phraseCapitalizer(mp)}\n                </option>\n              ))}\n            </DateAssignSelect>\n          </DateAssignItemContainer>\n        </DateAssignContainer>\n        <QuestionSelectContainer>\n          <QuestionSelector>\n            <MaxPointSelectorContainer>\n              <div>Max Points</div>\n              <GeneralInput\n                type=\"text\"\n                value={state.context.essay.maxPoints}\n                onChange={(e: any) =>\n                  event({\n                    type: 'SET_MAX_POINTS',\n                    payload: Number(e.target.value),\n                  })\n                }\n              />\n            </MaxPointSelectorContainer>\n            <AddQuestionForm\n              onSubmit={(e: any) => {\n                e.preventDefault()\n              }}\n            >\n              <AddQuestionTitle>Add a Question</AddQuestionTitle>\n              <AddQuestionSelect\n                onChange={(e: any) => {\n                  const arr = e.target.value.split(',')\n                  setTopicQuestion({\n                    ...topicQuestion,\n                    question: arr[0],\n                    questionType: arr[1],\n                    essayQuestionId: arr[2],\n                  })\n                }}\n              >\n                <option value={undefined}>Pick a Question</option>\n                {state.context.essay.questionList.map((question: any) => {\n                  return (\n                    // <option\n                    //   key={question.originalQuestion!}\n                    //   value={[question.originalQuestion, question.questionType, question.essayQuestionId]}\n                    // >\n                    //   {question.originalQuestion}\n                    // </option>\n                    <option\n                      key={question[0]}\n                      value={[question[0], question[1], question[2]]}\n                    >\n                      {question[0]}\n                    </option>\n                  )\n                })}\n              </AddQuestionSelect>\n              <AddQuestionLevelSelect\n                onChange={(e: any) =>\n                  setTopicQuestion({\n                    ...topicQuestion,\n                    writingLevel: e.target.value,\n                  })\n                }\n              >\n                <option value={undefined}>Pick a Level</option>\n                {writingLevelEnum.map((type: string) => (\n                  <option key={type!} value={type}>\n                    {phraseCapitalizer(type)}\n                  </option>\n                ))}\n              </AddQuestionLevelSelect>\n              <SelectButton\n                style={{ fontSize: '2vh', height: '65%' }}\n                type=\"reset\"\n                onClick={() =>\n                  event({\n                    type: 'SET_TOPIC_QUESTION_LIST',\n                    payload: topicQuestion,\n                  })\n                }\n              >\n                Select Question\n              </SelectButton>\n            </AddQuestionForm>\n          </QuestionSelector>\n          <SelectedQuestionContainer>\n            <SelectedQuestionTitle>\n              <div>Selected Questions</div>\n            </SelectedQuestionTitle>\n            <SelectedQuestionsDisplay>\n              <DisplayedQuestionWritingLevelContainer>\n                <WritingLevelTitleContainer bottom={false}>\n                  {writingLevels?.includes('DEVELOPING') &&\n                  selectedDevelopingEssays.length === 0 ? (\n                    <div style={{ color: 'var(--red)' }}>*Developing</div>\n                  ) : (\n                    <div>Developing</div>\n                  )}\n                </WritingLevelTitleContainer>\n                <DisplayedQuestions bottom={false}>\n                  {selectedDevelopingEssays.map((question, i: number) => (\n                    <Question\n                      key={i}\n                      onClick={() => {\n                        const topicIndex =\n                          state.context.essay.topicList.findIndex(\n                            (topic) => topic.question === question.question,\n                          )\n\n                        event({\n                          type: 'DELETE_TOPIC_QUESTION',\n                          payload: topicIndex,\n                        })\n                      }}\n                    >\n                      {question.question}\n                    </Question>\n                  ))}\n                </DisplayedQuestions>\n              </DisplayedQuestionWritingLevelContainer>\n              <DisplayedQuestionWritingLevelContainer>\n                <WritingLevelTitleContainer bottom={false}>\n                  {writingLevels?.includes('ACADEMIC') &&\n                  selectedAcademicEssays.length === 0 ? (\n                    <div style={{ color: 'var(--red)' }}>*Academic</div>\n                  ) : (\n                    <div>Academic</div>\n                  )}\n                </WritingLevelTitleContainer>\n                <DisplayedQuestions bottom={false}>\n                  {selectedAcademicEssays.map((question, i: number) => (\n                    <Question\n                      key={i}\n                      onClick={() => {\n                        const topicIndex =\n                          state.context.essay.topicList.findIndex(\n                            (topic) => topic.question === question.question,\n                          )\n\n                        event({\n                          type: 'DELETE_TOPIC_QUESTION',\n                          payload: topicIndex,\n                        })\n                      }}\n                    >\n                      {question.question}\n                    </Question>\n                  ))}\n                </DisplayedQuestions>\n              </DisplayedQuestionWritingLevelContainer>\n              <DisplayedQuestionWritingLevelContainer>\n                <WritingLevelTitleContainer bottom={true}>\n                  {writingLevels?.includes('ADVANCED') &&\n                  selectedAdvancedEssays.length === 0 ? (\n                    <div style={{ color: 'var(--red)' }}>*Advanced</div>\n                  ) : (\n                    <div>Advanced</div>\n                  )}\n                </WritingLevelTitleContainer>\n                <DisplayedQuestions bottom={true}>\n                  {selectedAdvancedEssays.map((question, i: number) => (\n                    <Question\n                      key={i}\n                      onClick={() => {\n                        const topicIndex =\n                          state.context.essay.topicList.findIndex(\n                            (topic) => topic.question === question.question,\n                          )\n\n                        event({\n                          type: 'DELETE_TOPIC_QUESTION',\n                          payload: topicIndex,\n                        })\n                      }}\n                    >\n                      {question.question}\n                    </Question>\n                  ))}\n                </DisplayedQuestions>\n              </DisplayedQuestionWritingLevelContainer>\n            </SelectedQuestionsDisplay>\n          </SelectedQuestionContainer>\n        </QuestionSelectContainer>\n        <LinkCoursesContainer>\n          <LinkCoursesHeader>Add or Delete Linked Courses</LinkCoursesHeader>\n          <CoursesCheckBoxContainer>\n            {courses.map((course) => (\n              <CheckBox\n                checked={assignedCourseIds.includes(course._id)}\n                onChange={handleChange}\n                value={course._id}\n                label={course.name}\n                key={course._id}\n                labelWidth={40}\n                boxHeight={20}\n                boxWidth={20}\n              />\n            ))}\n          </CoursesCheckBoxContainer>\n        </LinkCoursesContainer>\n      </EssayInformationSelectContainer>\n      {!data ? (\n        <SelectButtonContainer>\n          <SelectButton onClick={() => event({ type: 'ESSAY_LESSON' })}>\n            Pick Different Lesson\n          </SelectButton>\n          <SelectButton\n            style={\n              called\n                ? { backgroundColor: 'var(--grey)', color: 'var(--blue)' }\n                : { backgroundColor: 'var(--blue)', color: 'var(--white)' }\n            }\n            onClick={() => {\n              if (\n                assignedCourseIds.includes(courseId) &&\n                state.context.essay.dueDate &&\n                !called\n              )\n                createEssay()\n            }}\n          >\n            {assignedCourseIds.includes(courseId) && state.context.essay.dueDate\n              ? 'Create Essays'\n              : 'Complete Form'}\n          </SelectButton>\n        </SelectButtonContainer>\n      ) : (\n        data && <div>Finished</div>\n      )}\n    </LessonInformationSelectContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport {\n  findTextSectionsByIdForEssayQuestionLoader,\n  findTextSectionsByIdForEssayQuestionLoaderVariables,\n  findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions_questionParts,\n} from '../../../../../../schemaTypes'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\n\nexport type EssayTopicLoaderProps = {\n  ids: string[]\n}\n\nexport const FIND_TEXT_SECTIONS_BY_ID_MUTATION = gql`\n  query findTextSectionsByIdForEssayQuestionLoader(\n    $input: FindTextSectionsByIdInput!\n  ) {\n    findTextSectionsById(input: $input) {\n      textSections {\n        hasEssayQuestions {\n          _id\n          questionParts {\n            originalQuestion\n            questionType\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const EssayTopicLoader = ({ ids }: EssayTopicLoaderProps) => {\n  const [state, event] = useCreateAssignmentContextPovider()\n  console.log(ids)\n  useQuery<\n    findTextSectionsByIdForEssayQuestionLoader,\n    findTextSectionsByIdForEssayQuestionLoaderVariables\n  >(FIND_TEXT_SECTIONS_BY_ID_MUTATION, {\n    variables: {\n      input: { _ids: ids },\n    },\n    onCompleted: (data) => {\n      // console.log(\n      //   data.findTextSectionsById.textSections.map((section) =>\n      //     section.hasEssayQuestions.map((question) => [\n      //       question.questionParts.originalQuestion,\n      //       question.questionParts.questionType,\n      //       question._id,\n      //     ])\n      //   )\n      // )\n      // console.log(data)\n      console.log(\n        data.findTextSectionsById.textSections.map((section) =>\n          section.hasEssayQuestions.map((question) => [\n            question.questionParts.originalQuestion,\n            question.questionParts.questionType,\n            question._id,\n          ]),\n        ),\n      )\n      const questionList = data.findTextSectionsById.textSections\n        .map((section) =>\n          section.hasEssayQuestions.map((question) => [\n            question.questionParts.originalQuestion,\n            question.questionParts.questionType,\n            question._id,\n          ]),\n        )\n        .reduce(\n          (\n            acc: findTextSectionsByIdForEssayQuestionLoader_findTextSectionsById_textSections_hasEssayQuestions_questionParts[],\n            i: any,\n          ) => {\n            console.log(i)\n            return acc.includes(i) ? [...acc] : [...i]\n          },\n          [],\n        )!\n      console.log(questionList)\n      event({\n        type: 'SET_QUESTION_LIST',\n        payload: questionList,\n      })\n    },\n    onError: (error) => console.error(error),\n  })\n  return null\n}\n","import React, { FC } from 'react'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findLessonById,\n  findLessonByIdVariables,\n  me_me_Teacher,\n} from '../../../../../../schemaTypes'\nimport { CreateEssay } from './CreateEssay'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { EssayTopicLoader } from './EssayTopicLoader'\n\nexport type EssayLessonInfoProps = {\n  me: me_me_Teacher\n  courseId: string\n}\n\nexport const FIND_LESSON_BY_ID_QUERY = gql`\n  query findLessonById($input: FindLessonByIdInput!) {\n    findLessonById(input: $input) {\n      lesson {\n        _id\n        assignedMarkingPeriod\n        assignedDate\n        questionList {\n          question\n          questionType\n        }\n        pageNumbers {\n          startingPage\n          endingPage\n        }\n        assignedSections {\n          startingSection\n          endingSection\n        }\n        assignedSectionIdList\n        assignedCourses {\n          hasCourseInfo {\n            startsAt\n            endsAt\n            schoolDayType\n          }\n          _id\n        }\n      }\n    }\n  }\n`\n\nexport const EssayLessonInfo = ({ me, courseId }: EssayLessonInfoProps) => {\n  const [state, event] = useCreateAssignmentContextPovider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n\n  const { loading, data } = useQuery<findLessonById, findLessonByIdVariables>(\n    FIND_LESSON_BY_ID_QUERY,\n    {\n      variables: {\n        input: { _id: state.context.essay.lesson },\n      },\n      onCompleted: (data) => {\n        // event({\n        //   type: 'SET_QUESTION_LIST',\n        //   payload: data?.findLessonById.lesson.questionList,\n        // })\n        console.log(data.findLessonById.lesson.questionList)\n        event({\n          type: 'SET_READINGS_READING_PAGES',\n          payload:\n            data?.findLessonById.lesson.pageNumbers.startingPage ===\n            data?.findLessonById.lesson.pageNumbers.endingPage\n              ? `${data?.findLessonById.lesson.pageNumbers.startingPage}`\n              : `${data?.findLessonById.lesson.pageNumbers.startingPage} - ${data?.findLessonById.lesson.pageNumbers.endingPage}`,\n        })\n        event({\n          type: 'SET_READINGS_READING_SECTIONS',\n          payload:\n            data.findLessonById.lesson.assignedSections.startingSection ===\n            data.findLessonById.lesson.assignedSections.endingSection\n              ? `${data?.findLessonById.lesson.assignedSections.startingSection}`\n              : `${data?.findLessonById.lesson.assignedSections.startingSection} - ${data?.findLessonById.lesson.assignedSections.endingSection}`,\n        })\n        event({ type: 'SET_ASSIGNER_ID', payload: me._id! })\n        event({\n          type: 'SET_MARKING_PERIOD',\n          payload: data.findLessonById.lesson.assignedMarkingPeriod,\n        })\n      },\n      onError: (error) => console.error(error),\n    },\n  )\n  if (loading) return <div>Loading </div>\n\n  const courseIdList = [courseId]\n  const lesson = data?.findLessonById.lesson!\n  return (\n    <>\n      {state.matches('essay.essayInfo') && (\n        <>\n          <EssayTopicLoader\n            ids={data?.findLessonById.lesson.assignedSectionIdList!}\n          />\n          <CreateEssay\n            me={me}\n            courseIdList={courseIdList}\n            courseId={courseId}\n            lesson={lesson}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findLessonsByUnit,\n  findLessonsByUnitVariables,\n} from '../../../../../../schemaTypes'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\nimport {\n  ItemSelectorContainer,\n  LessonInformationSelectContainer,\n  SelectableItem,\n  SelectButton,\n  SelectButtonContainer,\n  SelectorContainer,\n  SelectorTitle,\n} from '../state-and-styles/createAssignmentsStyles'\n\nexport type EssayLessonSelectProps = {\n  courseId: string\n}\n\nexport const FIND_LESSONS_BY_UNIT_QUERY = gql`\n  query findLessonsByUnit($input: FindLessonsByUnitInput!) {\n    findLessonsByUnit(input: $input) {\n      lessons {\n        _id\n        lessonName\n        assignedDate\n        lessonType\n      }\n    }\n  }\n`\n\nexport const EssayLessonSelect: FC<EssayLessonSelectProps> = ({ courseId }) => {\n  const [state, event] = useCreateAssignmentContextPovider()\n\n  const { loading, data } = useQuery<\n    findLessonsByUnit,\n    findLessonsByUnitVariables\n  >(FIND_LESSONS_BY_UNIT_QUERY, {\n    variables: {\n      input: {\n        unitId: state.context.essay.unit,\n        courseId,\n      },\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <LessonInformationSelectContainer>\n      <SelectorContainer>\n        <SelectorTitle>Select Lesson</SelectorTitle>\n        <ItemSelectorContainer>\n          {data?.findLessonsByUnit.lessons\n            .filter((lesson) => lesson.lessonType === 'REINFORCEMENT')\n            .map((lesson) => (\n              <SelectableItem\n                key={lesson._id!}\n                onClick={() => {\n                  event({ type: 'SET_LESSON', payload: lesson._id! })\n                  event({\n                    type: 'SET_ASSIGNED_DATE',\n                    payload: lesson.assignedDate!,\n                  })\n                  event({ type: 'ESSAY_INFO' })\n                }}\n              >\n                {lesson.lessonName}\n              </SelectableItem>\n            ))}\n        </ItemSelectorContainer>\n      </SelectorContainer>\n      <SelectButtonContainer>\n        <SelectButton onClick={() => event({ type: 'ESSAY_UNIT' })}>\n          Choose Different Unit\n        </SelectButton>\n      </SelectButtonContainer>\n    </LessonInformationSelectContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\nimport { useQuery } from '@apollo/client'\nimport { findUnits } from '../../../../../../schemaTypes'\nimport { FIND_UNITS_QUERY } from '../../../lessons/lesson-planner/UnitAssigner'\nimport {\n  ItemSelectorContainer,\n  LessonInformationSelectContainer,\n  SelectableItem,\n  SelectButtonContainer,\n  SelectorContainer,\n  SelectorTitle,\n} from '../state-and-styles/createAssignmentsStyles'\n\nexport type ReadingGuideUnitSelectProps = {}\n\nexport const ReadingGuideUnitSelect: FC<ReadingGuideUnitSelectProps> = () => {\n  const [, event] = useCreateAssignmentContextPovider()\n\n  const { loading, data } = useQuery<findUnits>(FIND_UNITS_QUERY, {\n    // onCompleted: (data) => console.log(data.findUnits.units),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <LessonInformationSelectContainer>\n      <SelectorContainer>\n        <SelectorTitle>Select Unit </SelectorTitle>\n        <ItemSelectorContainer>\n          {data?.findUnits.units.map((unit) => (\n            <SelectableItem\n              key={unit._id}\n              onClick={() => {\n                event({ type: 'SET_UNIT', payload: unit._id! })\n                event({ type: 'READING_GUIDE_LESSON' })\n              }}\n            >\n              {unit.unitName}\n            </SelectableItem>\n          ))}\n        </ItemSelectorContainer>\n      </SelectorContainer>\n      <SelectButtonContainer></SelectButtonContainer>\n    </LessonInformationSelectContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\nimport { useQuery } from '@apollo/client'\nimport {\n  findLessonsByUnit,\n  findLessonsByUnitVariables,\n} from '../../../../../../schemaTypes'\nimport { FIND_LESSONS_BY_UNIT_QUERY } from '../create-essay/EssayLessonSelect'\nimport {\n  LessonInformationSelectContainer,\n  SelectorContainer,\n  SelectorTitle,\n  ItemSelectorContainer,\n  SelectableItem,\n  SelectButtonContainer,\n  SelectButton,\n} from '../state-and-styles/createAssignmentsStyles'\n\nexport type ReadingGuideLessonSelectProps = {\n  courseId: string\n}\n\nexport const ReadingGuideLessonSelect = ({\n  courseId,\n}: ReadingGuideLessonSelectProps) => {\n  const [state, event] = useCreateAssignmentContextPovider()\n\n  const { loading, data } = useQuery<\n    findLessonsByUnit,\n    findLessonsByUnitVariables\n  >(FIND_LESSONS_BY_UNIT_QUERY, {\n    variables: {\n      input: {\n        unitId: state.context.readingGuide.unit,\n        courseId,\n      },\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  console.log(\n    data?.findLessonsByUnit.lessons.filter(\n      (lesson) => lesson.lessonType === 'INTRODUCTORY',\n    ),\n  )\n  return (\n    <LessonInformationSelectContainer>\n      <SelectorContainer>\n        <SelectorTitle>Select Lesson</SelectorTitle>\n        <ItemSelectorContainer>\n          {data?.findLessonsByUnit.lessons\n            .filter((lesson) => lesson.lessonType === 'INTRODUCTORY')\n            .map((lesson) => (\n              <SelectableItem\n                key={lesson._id!}\n                onClick={() => {\n                  event({ type: 'SET_LESSON', payload: lesson._id! })\n                  // event({\n                  //   type: 'SET_ASSIGNED_DATE',\n                  //   payload: lesson.assignedDate!,\n                  // })\n                  event({ type: 'READING_GUIDE_INFO' })\n                }}\n              >\n                {lesson.lessonName}\n              </SelectableItem>\n            ))}\n        </ItemSelectorContainer>\n      </SelectorContainer>\n      <SelectButtonContainer>\n        <SelectButton onClick={() => event({ type: 'READING_GUIDE_UNIT' })}>\n          Choose Different Unit\n        </SelectButton>\n      </SelectButtonContainer>\n    </LessonInformationSelectContainer>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React, { useEffect } from 'react'\nimport {\n  findLessonsByCourse,\n  findLessonsByCourseVariables,\n  findLessonsByCourse_findLessonByCourse_lessons,\n} from '../../../../../../schemaTypes'\nimport { FIND_LESSONS_BY_COURSE_QUERY } from '../../assign-assignments/assign-essays/assign-by-course/LessonSelect'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\n\nexport type AssignedDateCheckProps = { courseId: string; lessonId: string }\n\nexport const AssignedDateCheck = ({\n  courseId,\n  lessonId,\n}: AssignedDateCheckProps) => {\n  const [, event] = useCreateAssignmentContextPovider()\n  useQuery<findLessonsByCourse, findLessonsByCourseVariables>(\n    FIND_LESSONS_BY_COURSE_QUERY,\n    {\n      variables: {\n        input: { courseId },\n      },\n      onCompleted: (data) => {\n        const [assignedLesson] = data?.findLessonByCourse.lessons.filter(\n          (lesson) => lesson._id === lessonId,\n        )!\n\n        const lessonIndex = data?.findLessonByCourse.lessons.findIndex(\n          (lesson) => lesson._id === assignedLesson._id,\n        )!\n\n        const sortedLessons = data?.findLessonByCourse.lessons\n          .slice()\n          .sort(sortByDate)!\n\n        const previousLesson = sortedLessons[lessonIndex]! //this works like its the lessons date\n\n        const previousLessonDate = previousLesson\n          ? previousLesson.assignedDate\n          : new Date().toLocaleDateString()\n\n        event({\n          type: 'SET_READING_GUIDE_ASSIGNED_DATE',\n          payload: previousLessonDate,\n        })\n      },\n      onError: (error) => console.error(error),\n    },\n  )\n  function sortByDate(\n    a: findLessonsByCourse_findLessonByCourse_lessons,\n    b: findLessonsByCourse_findLessonByCourse_lessons,\n  ) {\n    let dateA = new Date(a.assignedDate).getTime()\n\n    let dateB = new Date(b.assignedDate).getTime()\n\n    return dateA > dateB ? 1 : -1\n  }\n\n  return null\n}\n","import React, { Dispatch, SetStateAction } from 'react'\nimport {\n  me_me_Teacher,\n  createReadingGuideVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createReadingGuide,\n  TimeOfDay,\n  MarkingPeriodEnum,\n  findLessonById_findLessonById_lesson,\n  checkQuizQuestionsForTextSections,\n  checkQuizQuestionsForTextSectionsVariables,\n} from '../../../../../../schemaTypes'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useCheckBox } from '../../../../../../hooks/useCheckBox'\nimport {\n  dateConverter,\n  dateInputConverter,\n  phraseCapitalizer,\n  sortByLetter,\n} from '../../../../../../utils'\nimport {\n  CoursesCheckBoxContainer,\n  DateAssignContainer,\n  DateAssignInput,\n  DateAssignItemContainer,\n  DateAssignSelect,\n  GeneralInput,\n  LessonInformationSelectContainer,\n  LinkCoursesContainer,\n  LinkCoursesHeader,\n  MaxPointSelectorContainer,\n  MaxPointsForReadingGuideContainer,\n  QuestionSelector,\n  ReadingGuideInformationSelectContainer,\n  SelectButton,\n  SelectButtonContainer,\n  SelectorTitle,\n} from '../state-and-styles/createAssignmentsStyles'\nimport { useNavigate } from 'react-router'\nimport CheckBox from '../../../../../reusable-components/CheckBox'\nimport { AssignedDateCheck } from './AssignedDateCheck'\n\nexport type CreateReadingGuideProps = {\n  me: me_me_Teacher\n  courseIdList: string[]\n  courseId: string\n  setCourseId: Dispatch<SetStateAction<string>>\n  lesson: findLessonById_findLessonById_lesson\n}\n\nexport const CREATE_READING_GUIDE_MUTATION = gql`\n  mutation createReadingGuide($input: CreateReadingGuideInput!) {\n    createReadingGuide(input: $input) {\n      readingGuides {\n        _id\n      }\n    }\n  }\n`\nexport const CHECK_QUIZ_QUESTIONS_QUERY = gql`\n  query checkQuizQuestionsForTextSections(\n    $input: CheckQuizQuestionsForTextSectionsInput!\n  ) {\n    checkQuizQuestionsForTextSections(input: $input) {\n      textSectionIds\n    }\n  }\n`\nexport const CreateReadingGuide = ({\n  me,\n  courseIdList,\n  courseId,\n  lesson,\n  setCourseId,\n}: CreateReadingGuideProps) => {\n  const [state, event] = useCreateAssignmentContextPovider()\n  const { markingPeriodEnum, timeOfDayEnum } = useEnumContextProvider()\n  const [assignedCourseIds, handleChange] = useCheckBox([courseId])\n  const navigate = useNavigate()\n\n  const courses = me.teachesCourses\n    .slice(0)\n    .sort(sortByLetter)\n    .filter((c) => c.name !== 'Unenrolled')\n\n  const [currentCourseInfo] = me.teachesCourses.filter(\n    (course) => course._id === courseId,\n  )\n\n  const sortedCourses = me.teachesCourses.slice(2)\n  console.log()\n  const currentCourseIndex = sortedCourses.findIndex(\n    (course) => course._id === courseId,\n  )\n\n  const { loading, data: quizQuestionIdData } = useQuery<\n    checkQuizQuestionsForTextSections,\n    checkQuizQuestionsForTextSectionsVariables\n  >(CHECK_QUIZ_QUESTIONS_QUERY, {\n    variables: {\n      input: { textSectionIds: lesson.assignedSectionIdList },\n    },\n    onCompleted: (data) =>\n      event({\n        type: 'SET_READING_GUIDE_MAX_POINTS',\n        payload: data.checkQuizQuestionsForTextSections.textSectionIds.length,\n      }),\n    onError: (error) => console.error(error),\n  })\n\n  const [createReadingGuide, { data, called }] = useMutation<\n    createReadingGuide,\n    createReadingGuideVariables\n  >(CREATE_READING_GUIDE_MUTATION, {\n    variables: {\n      input: {\n        assignedCourseIds: [courseId],\n        assignedDate: state.context.readingGuide.assignedDate,\n        associatedLessonId: state.context.readingGuide.lesson,\n        dueDate: state.context.readingGuide.dueDate,\n        dueTime: state.context.readingGuide.dueTime,\n        hasAssignerId: me._id!,\n        markingPeriod: state.context.readingGuide.markingPeriod,\n        maxPoints: state.context.readingGuide.maxPoints,\n        readings: state.context.readingGuide.readings,\n      },\n    },\n    onCompleted: (data) => {\n      if (sortedCourses[currentCourseIndex + 1]) {\n        setCourseId(sortedCourses[currentCourseIndex + 1]._id!)\n        event({ type: 'IDLE' })\n      } else navigate('/dashboard')\n    },\n    refetchQueries: [],\n  })\n\n  return (\n    <LessonInformationSelectContainer>\n      <AssignedDateCheck courseId={courseId} lessonId={lesson._id!} />\n      <ReadingGuideInformationSelectContainer>\n        <SelectorTitle>\n          <div style={{ textAlign: 'center' }}>Create Reading Guide</div>\n          <div>\n            {lesson.assignedSections.startingSection}-\n            {lesson.assignedSections.endingSection}\n          </div>\n        </SelectorTitle>\n        <DateAssignContainer>\n          <DateAssignItemContainer>\n            <div>Assigned Date: </div>\n            <DateAssignInput\n              type=\"date\"\n              value={dateInputConverter(\n                state.context.readingGuide.assignedDate,\n              )}\n              onChange={(e: any) => {\n                event({\n                  type: 'SET_READING_GUIDE_ASSIGNED_DATE',\n                  payload: dateConverter(e.target.value),\n                })\n              }}\n            />\n          </DateAssignItemContainer>\n\n          <DateAssignItemContainer>\n            <div>Due Date: </div>\n            <DateAssignInput\n              type=\"date\"\n              value={dateInputConverter(state.context.readingGuide.dueDate)}\n              onChange={(e: any) => {\n                event({\n                  type: 'SET_READING_GUIDE_DUE_DATE',\n                  payload: dateConverter(e.target.value),\n                })\n              }}\n            />\n          </DateAssignItemContainer>\n\n          <DateAssignItemContainer>\n            <div>Time: </div>\n            <DateAssignSelect\n              value={state.context.readingGuide.dueTime}\n              onChange={(e: any) => {\n                event({\n                  type: 'SET_READING_GUIDE_DUE_TIME',\n                  payload: e.target.value,\n                })\n              }}\n            >\n              {timeOfDayEnum.map((time: TimeOfDay) => {\n                return (\n                  <option key={time!} value={time!}>\n                    {time === 'BEFORE_SCHOOL'\n                      ? 'Before School'\n                      : time === 'BEFORE_CLASS'\n                        ? 'Before Class'\n                        : time === 'END_OF_CLASS'\n                          ? 'After Class'\n                          : 'After School'}\n                  </option>\n                )\n              })}\n            </DateAssignSelect>\n          </DateAssignItemContainer>\n          <DateAssignItemContainer>\n            <div>Marking Period</div>\n            <DateAssignSelect\n              value={state.context.readingGuide.markingPeriod}\n              onChange={(e: any) =>\n                event({\n                  type: 'SET_READING_GUIDE_MARKING_PERIOD',\n                  payload: e.target.value,\n                })\n              }\n            >\n              {markingPeriodEnum.map((mp: MarkingPeriodEnum) => (\n                <option key={mp} value={mp}>\n                  {phraseCapitalizer(mp)}\n                </option>\n              ))}\n            </DateAssignSelect>\n          </DateAssignItemContainer>\n        </DateAssignContainer>\n        <MaxPointsForReadingGuideContainer>\n          <QuestionSelector>\n            <MaxPointSelectorContainer>\n              <div>Max Points</div>\n              <GeneralInput\n                type=\"text\"\n                value={\n                  loading ? 'loading' : state.context.readingGuide.maxPoints\n                }\n                onChange={(e: any) =>\n                  // quizQuestionIdData?.checkQuizQuestionsForTextSections.textSectionIds.length\n                  event({\n                    type: 'SET_READING_GUIDE_MAX_POINTS',\n                    payload: Number(e.target.value),\n                  })\n                }\n              />\n            </MaxPointSelectorContainer>\n          </QuestionSelector>\n        </MaxPointsForReadingGuideContainer>\n        <LinkCoursesContainer>\n          <LinkCoursesHeader>Add or Delete Linked Courses</LinkCoursesHeader>\n          <CoursesCheckBoxContainer>\n            {courses.map((course) => (\n              <CheckBox\n                key={course._id}\n                checked={assignedCourseIds.includes(course._id)}\n                onChange={handleChange}\n                value={course._id!}\n                label={course.name}\n                labelWidth={40}\n                boxHeight={10}\n                boxWidth={10}\n              />\n            ))}\n          </CoursesCheckBoxContainer>\n        </LinkCoursesContainer>\n      </ReadingGuideInformationSelectContainer>\n      {!data ? (\n        <SelectButtonContainer>\n          <SelectButton onClick={() => event({ type: 'PREVIOUS' })}>\n            Pick Different Lesson\n          </SelectButton>\n          <SelectButton\n            style={\n              called\n                ? { backgroundColor: 'var(--grey)', color: 'var(--blue)' }\n                : { backgroundColor: 'var(--blue)', color: 'var(--white)' }\n            }\n            onClick={() => {\n              if (\n                assignedCourseIds.includes(courseId) &&\n                state.context.readingGuide.dueDate &&\n                !called\n              )\n                createReadingGuide()\n            }}\n          >\n            {assignedCourseIds.includes(courseId) &&\n            state.context.readingGuide.dueDate\n              ? 'Create Reading Guide'\n              : 'Complete Form'}\n          </SelectButton>\n        </SelectButtonContainer>\n      ) : (\n        data && <div>Finished</div>\n      )}\n    </LessonInformationSelectContainer>\n  )\n}\n","import React, { Dispatch, FC, SetStateAction, useEffect } from 'react'\nimport { useCreateAssignmentContextPovider } from '../state-and-styles/CreateAssignmentContext'\nimport { useQuery } from '@apollo/client'\nimport {\n  findLessonById,\n  findLessonByIdVariables,\n  me_me_Teacher,\n} from '../../../../../../schemaTypes'\nimport { FIND_LESSON_BY_ID_QUERY } from '../create-essay/EssayLessonInfo'\nimport { CreateReadingGuide } from './CreateReadingGuide'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\n\nexport type ReadingGuideLessonInfoProps = {\n  me: me_me_Teacher\n  courseId: string\n  setCourseId: Dispatch<SetStateAction<string>>\n}\n\nexport const ReadingGuideLessonInfo = ({\n  me,\n  courseId,\n  setCourseId,\n}: ReadingGuideLessonInfoProps) => {\n  const [state, event] = useCreateAssignmentContextPovider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n\n  const { loading, data } = useQuery<findLessonById, findLessonByIdVariables>(\n    FIND_LESSON_BY_ID_QUERY,\n    {\n      variables: {\n        input: { _id: state.context.readingGuide.lesson },\n      },\n      onCompleted: (data) => {\n        // event({\n        //   type: 'SET_QUESTION_LIST',\n        //   payload: data?.findLessonById.lesson.questionList,\n        // })\n        event({\n          type: 'SET_READING_GUIDE_READINGS_READING_PAGES',\n          payload:\n            data?.findLessonById.lesson.pageNumbers.startingPage ===\n            data?.findLessonById.lesson.pageNumbers.endingPage\n              ? `${data?.findLessonById.lesson.pageNumbers.startingPage}`\n              : `${data?.findLessonById.lesson.pageNumbers.startingPage} - ${data?.findLessonById.lesson.pageNumbers.endingPage}`,\n        })\n        event({\n          type: 'SET_READING_GUIDE_READINGS_READING_SECTIONS',\n          payload:\n            data.findLessonById.lesson.assignedSections.startingSection ===\n            data.findLessonById.lesson.assignedSections.endingSection\n              ? `${data?.findLessonById.lesson.assignedSections.startingSection}`\n              : `${data?.findLessonById.lesson.assignedSections.startingSection} - ${data?.findLessonById.lesson.assignedSections.endingSection}`,\n        })\n        event({ type: 'SET_ASSIGNER_ID', payload: me._id! })\n        event({\n          type: 'SET_READING_GUIDE_MARKING_PERIOD',\n          payload: data.findLessonById.lesson.assignedMarkingPeriod,\n        })\n        event({\n          type: 'SET_READING_GUIDE_DUE_DATE',\n          payload: data.findLessonById.lesson.assignedDate,\n        })\n      },\n      onError: (error) => console.error(error),\n    },\n  )\n  const courseIdList = data?.findLessonById.lesson.assignedCourses!\n  const lesson = data?.findLessonById.lesson!\n\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      {state.matches('readingGuide.readingGuideInfo') && (\n        <CreateReadingGuide\n          me={me}\n          courseIdList={courseIdList.map((course) => course._id!)}\n          courseId={courseId}\n          lesson={lesson}\n          setCourseId={setCourseId}\n        />\n      )}\n    </>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Standard8x12Container } from '../../../../../../appStyles'\n\nexport const EssaysToGradeContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  height: 95vh;\n`\n\nexport const CourseSelectContainer = styled.div`\n  background: var(--blue);\n  color: var(--white);\n  font-size: 4vh;\n  cursor: pointer;\n  display: grid;\n  border-top: 3px solid var(--white);\n  grid-template-rows: 1fr 5fr 1fr;\n`\n\nexport const CourseSelect = styled.div`\n  display: grid;\n  grid-auto-rows: 10%;\n  justify-items: center;\n  align-items: center;\n`\nexport type CourseToSelectProps = { selected: boolean }\n\nexport const CourseToSelect = styled.span<CourseToSelectProps>`\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n  &:hover {\n    color: var(--grey);\n  }\n`\n\nexport const CourseEssaysToGradeContainer = styled.div`\n  display: grid;\n  grid-template-rows: 9% 8% 8% 70% 5%;\n`\n\nexport const EssayTitle = styled.div`\n  /* grid-row: 1/2;\n  grid-column: 1/-1; */\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 4vh;\n`\nexport const MarkingPeriodSelector = styled.div`\n  display: grid;\n  align-self: center;\n`\n\nexport const EssayStatusSelector = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  font-size: 3vh;\n  align-items: center;\n  justify-items: center;\n  margin-left: 5%;\n  margin-right: 5%;\n  border-bottom: 3px solid var(--blue);\n`\nexport type EssayStatusSelectProps = {\n  toGradeIndicator: boolean\n}\nexport const EssayStatusSelect = styled.div<EssayStatusSelectProps>`\n  color: ${({ toGradeIndicator }) =>\n    toGradeIndicator ? 'var(--red)' : 'var(--false)'};\n`\n\nexport const EssayListContainer = styled.div`\n  /* grid-row: 4/-2;\n  grid-column: 1/-1; */\n  margin-left: 5%;\n`\nexport const EssayList = styled.ul``\nexport const EssayListItem = styled.li`\n  padding-bottom: 1vh;\n`\n\nexport const EssaySelect = styled(Link)`\n  color: var(--blue);\n  text-decoration: none;\n  font-size: 2vh;\n`\n\nexport const OrderSwitchContainer = styled.div`\n  /* grid-row: -1/-2;\n  grid-column: 1/-1; */\n  display: grid;\n  grid-auto-flow: column;\n`\nexport const PaperBasedToggleContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const PaperBasedContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n`\n","import React, { FC, useState } from 'react'\nimport { useCreateAssignmentContextPovider } from './state-and-styles/CreateAssignmentContext'\nimport { EssayUnitSelect } from './create-essay/EssayUnitSelect'\n\nimport { EssayLessonInfo } from './create-essay/EssayLessonInfo'\n\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { me_me_Teacher } from '../../../../../schemaTypes'\nimport { EssayLessonSelect } from './create-essay/EssayLessonSelect'\n\nimport { ReadingGuideUnitSelect } from './create-readingGuide/ReadingGuideUnitSelect'\nimport { ReadingGuideLessonSelect } from './create-readingGuide/ReadingGuideLessonSelect'\nimport { ReadingGuideLessonInfo } from './create-readingGuide/ReadingGuideLessonInfo'\nimport { sortByLetter } from '../../../../../utils'\nimport {\n  CourseSelect,\n  CourseToSelect,\n} from '../grade-assignments/state-n-styles/GradeEssayContainerStyles'\nimport {\n  CourseSelectContainer,\n  CreateAssignmentTitle,\n  CreateAssignmentsContainer,\n  AssignmentTypeSelectorContainer,\n  AssignmentCreatorContainer,\n  AssignmentType,\n  BackContainer,\n} from './state-and-styles/createAssignmentsStyles'\nimport { Navigate, useNavigate } from 'react-router'\n\nexport type CreateAssignmentProps = {}\n\nexport const CreateAssignment = ({}: CreateAssignmentProps) => {\n  const navigate = useNavigate()\n  const [courseId, setCourseId] = useState('')\n  const [state, event] = useCreateAssignmentContextPovider()\n  const me: me_me_Teacher = useUserContextProvider()\n  const { teachesCourses } = me\n\n  return (\n    <CreateAssignmentsContainer>\n      <CourseSelectContainer>\n        <CourseSelect>\n          <div>Select Course</div>\n          {teachesCourses\n            .slice(0)\n            .sort(sortByLetter)\n            .filter((c) => !c.hasCourseInfo.isHidden)\n            .map((course) => (\n              <CourseToSelect\n                key={course._id!}\n                onClick={() => {\n                  event({ type: 'SET_COURSE_ID', payload: course._id! })\n                  setCourseId(course._id!)\n                  event({ type: 'ESSAY' })\n                }}\n                selected={course._id === courseId}\n              >\n                {course.name}\n              </CourseToSelect>\n            ))}\n        </CourseSelect>\n        <BackContainer>\n          <div onClick={() => navigate('/dashboard/assignments')}>Back</div>\n        </BackContainer>\n      </CourseSelectContainer>\n      <AssignmentCreatorContainer>\n        <CreateAssignmentTitle>\n          <div>Create Assignments</div>\n        </CreateAssignmentTitle>\n        <div>\n          {courseId && (\n            <div>\n              <AssignmentTypeSelectorContainer>\n                <AssignmentType selected={state.matches('essay')}>\n                  <div\n                    onClick={() => {\n                      event({ type: 'ESSAY' })\n                    }}\n                  >\n                    Essay\n                  </div>\n                </AssignmentType>\n                <AssignmentType selected={state.matches('readingGuide')}>\n                  <div onClick={() => event({ type: 'READING_GUIDE' })}>\n                    Reading Guide\n                  </div>\n                </AssignmentType>\n              </AssignmentTypeSelectorContainer>\n            </div>\n          )}\n          {courseId && (\n            <>\n              {state.matches('essay') && (\n                <>\n                  {state.matches('essay.unit') && <EssayUnitSelect />}\n                  {state.matches('essay.lesson') && (\n                    <EssayLessonSelect courseId={courseId} />\n                  )}\n                  {state.matches('essay.essayInfo') && (\n                    <EssayLessonInfo me={me} courseId={courseId} />\n                  )}\n                </>\n              )}\n              {state.matches('readingGuide') && (\n                <>\n                  {state.matches('readingGuide.unit') && (\n                    <ReadingGuideUnitSelect />\n                  )}\n                  {state.matches('readingGuide.lesson') && (\n                    <ReadingGuideLessonSelect courseId={courseId} />\n                  )}\n                  {state.matches('readingGuide.readingGuideInfo') && (\n                    <ReadingGuideLessonInfo\n                      me={me}\n                      courseId={courseId}\n                      setCourseId={setCourseId}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </AssignmentCreatorContainer>\n    </CreateAssignmentsContainer>\n  )\n}\n","import React, { FC } from 'react'\n\nexport type EditAssignmentsProps = {}\n\nexport const EditAssignments: FC<EditAssignmentsProps> = () => {\n  return (\n    <>\n      <div>Edit Assignments</div>\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport { findStudentsByCourse_findStudentsByCourse_students } from '../../../../../../schemaTypes'\n\nexport type gradeEssayContainerMachineSchema = {\n  states: {\n    gradeEssayContainer: {}\n    essayTypes: {\n      states: {\n        onTime: {}\n        late: {}\n        resubmitted: {}\n      }\n    }\n  }\n}\nexport type gradeEssayContainerMachineEvent =\n  | {\n      type: 'SET_COURSE_ID'\n      payload: string\n    }\n  | { type: 'ONTIME' }\n  | { type: 'LATE' }\n  | { type: 'RESUBMITTED' }\n  | { type: 'SET_STUDENT_ID'; payload: string }\n  | { type: 'SET_ORDER_BY'; payload: 'LAST_NAME' | 'DATE' }\n  | {\n      type: 'SET_PAPER_BASED_STUDENT'\n      payload: findStudentsByCourse_findStudentsByCourse_students\n    }\n\nexport type gradeEssayContainerMachineContext = {\n  courseId: string\n  paperBasedStudentId: string | null\n  paperBasedStudent: findStudentsByCourse_findStudentsByCourse_students | null\n  orderBy: 'LAST_NAME' | 'DATE'\n}\n\nexport const gradeEssayContainerMachine = Machine<\n  gradeEssayContainerMachineContext,\n  gradeEssayContainerMachineSchema,\n  gradeEssayContainerMachineEvent\n>({\n  id: 'gradeEssayContainer',\n  initial: 'gradeEssayContainer',\n  context: {\n    courseId: '',\n    paperBasedStudentId: null,\n    paperBasedStudent: null,\n    orderBy: 'DATE',\n  },\n  type: 'parallel',\n  states: {\n    gradeEssayContainer: {\n      on: {\n        SET_COURSE_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseId: evt.payload,\n            }\n          }),\n        },\n        SET_STUDENT_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              paperBasedStudentId: evt.payload,\n            }\n          }),\n        },\n        SET_PAPER_BASED_STUDENT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              paperBasedStudent: evt.payload,\n            }\n          }),\n        },\n        SET_ORDER_BY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              orderBy: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    essayTypes: {\n      initial: 'onTime',\n      states: {\n        onTime: { on: { LATE: 'late', RESUBMITTED: 'resubmitted' } },\n        late: { on: { ONTIME: 'onTime', RESUBMITTED: 'resubmitted' } },\n        resubmitted: { on: { LATE: 'late', ONTIME: 'onTime' } },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  gradeEssayContainerMachine,\n  gradeEssayContainerMachineContext,\n  gradeEssayContainerMachineEvent,\n} from './gradeEssayContainerMachine'\n\nconst GradeEssayContainerContext = createContext<any>(undefined)\n\ntype GradeEssayContainerContextProps = {\n  children: ReactNode\n}\n\nexport const GradeEssayContainerContextProvider: FC<\n  GradeEssayContainerContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(gradeEssayContainerMachine)\n  return (\n    <GradeEssayContainerContext.Provider value={[state, event]}>\n      {children}\n    </GradeEssayContainerContext.Provider>\n  )\n}\n\nexport function useGradeEssayContainerContextProvider() {\n  const context = useContext(GradeEssayContainerContext)\n  if (context === undefined) {\n    throw new Error(\n      'useGradeEssayContainerContextProvider must be used within a GradeEssayContainerContextProvider',\n    )\n  }\n  return context as [\n    State<\n      gradeEssayContainerMachineContext,\n      gradeEssayContainerMachineEvent,\n      any,\n      any\n    >,\n    (event: gradeEssayContainerMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\n\nexport const ArticleReviewManagerContainer = styled.div`\n  height: 95vh;\n`\nexport const ArticleReviewManagerMenu = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  border-top: 3px solid var(--white);\n`\nexport const ArticleReviewFunctionSelect = styled.div`\n  height: 95vh;\n  background: var(--blue);\n  color: var(--white);\n  display: grid;\n  grid-auto-rows: 10%;\n  justify-items: center;\n  align-items: center;\n  font-size: 4vh;\n`\n\nexport const ArticleReviewMainMenuDisplay = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 6vh;\n`\nexport const NoCourseDisplay = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 6vh;\n`\nexport const ReviewerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  border-top: 3px solid var(--white);\n  background: var(--white);\n`\nexport const ReviewerCourseSelectContainer = styled.div`\n  height: 95vh;\n  background: var(--blue);\n  color: var(--white);\n  font-size: 4vh;\n  cursor: pointer;\n  display: grid;\n  grid-template-rows: 5fr 1fr;\n`\nexport const ReviewerCourseSelect = styled.div`\n  display: grid;\n  grid-auto-rows: 10%;\n  justify-items: center;\n  align-items: center;\n`\nexport const ReviewerCourseSelectBack = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const ReviewMainDisplay = styled.div`\n  height: 95vh;\n  display: grid;\n  grid-template-rows: 8% 7% 5% 1fr;\n`\n\nexport const TitleContainer = styled.div`\n  display: grid;\n`\nexport const MarkingPeriodSelectorContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n  font-size: 3vh;\n`\nexport const CurrentMarkingPeriodContainer = styled.div`\n  grid-column: 5/8;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const MarkingPeriodSelectorBack = styled.div`\n  grid-column: 4/5;\n  justify-self: center;\n  align-self: center;\n`\nexport const MarkingPeriodSelectorForward = styled.div`\n  grid-column: 8/9;\n  justify-self: center;\n  align-self: center;\n`\nexport type ArticleReviewNeedsGrading = {\n  needsGrading: boolean\n}\n\nexport const Title = styled.div<ArticleReviewNeedsGrading>`\n  align-self: center;\n  justify-self: center;\n  font-size: 5vh;\n  color: ${({ needsGrading }) => (needsGrading ? 'var(--red)' : 'var(--blue)')};\n`\n\nexport const DatesToReviewContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  border-bottom: 3px solid var(--blue);\n  margin-left: 5%;\n  margin-right: 5%;\n`\n\nexport type DateToReviewProps = {\n  selected: boolean\n  needsGradingIndicator: boolean\n}\n\nexport const DateToReview = styled.div<DateToReviewProps>`\n  text-align: center;\n  font-size: 3vh;\n  cursor: pointer;\n  color: ${({ selected, needsGradingIndicator }) =>\n    selected\n      ? 'var(--grey)'\n      : needsGradingIndicator\n        ? 'var(--red)'\n        : 'var(--blue)'};\n`\nexport const ReviewListContainer = styled.div`\n  margin-top: 5%;\n\n  overflow: scroll;\n`\n\nexport const ReviewList = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-auto-rows: 3vh;\n  /* width: 50%; */\n  border-left: 1px solid var(--blue);\n  border-right: 1px solid var(--blue);\n  border-bottom: 1px solid var(--blue);\n`\nexport type ReturnNameProps = {\n  returned: boolean\n}\nexport const ReviewName = styled.div<ReturnNameProps>`\n  display: grid;\n  justify-items: left;\n  align-items: center;\n  color: ${({ returned }) => (returned ? 'var(--blue)' : 'var(--red)')};\n`\n\nexport const ReturnReview = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  cursor: pointer;\n`\nexport const ReturnedStatus = styled.div`\n  color: var(--red);\n`\n","import React, { FC, useState, useEffect } from 'react'\nimport {\n  findEssaysToGradeById,\n  findEssaysToGradeByIdVariables,\n  me_me_Teacher,\n  findEssaysToGradeById_findEssaysToGradeById_essays,\n  MarkingPeriodEnum,\n} from '../../../../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../../../../contexts/UserContext'\nimport { useQuery, gql } from '@apollo/client'\nimport { useMarkingPeriodContextProvider } from '../../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useEnumContextProvider } from '../../../../../../../contexts/EnumContext'\nimport {\n  CourseEssaysToGradeContainer,\n  EssayList,\n  EssayListContainer,\n  EssayListItem,\n  EssaySelect,\n  EssayStatusSelect,\n  EssayStatusSelector,\n  EssayTitle,\n  MarkingPeriodSelector,\n  OrderSwitchContainer,\n} from '../../state-n-styles/GradeEssayContainerStyles'\nimport { useGradeEssayContainerContextProvider } from '../../state-n-styles/GradeEssayContainerContext'\nimport { useToggle } from '../../../../../../../hooks'\nimport {\n  CurrentMarkingPeriodContainer,\n  MarkingPeriodSelectorBack,\n  MarkingPeriodSelectorContainer,\n  MarkingPeriodSelectorForward,\n} from '../../../article-reviews/state-styles/articleReviewStyles'\nimport { phraseCapitalizer, sortByLetter } from '../../../../../../../utils'\n\nexport type EssaysToGradeProps = {\n  courseId: string\n}\n\nexport const FIND_ESSAYS_TO_GRADE_BY_ID_QUERY = gql`\n  query findEssaysToGradeById($input: FindEssaysToGradeByIdInput!) {\n    findEssaysToGradeById(input: $input) {\n      essays {\n        _id\n        late\n        assigned\n        markingPeriod\n        readings {\n          readingSections\n        }\n        hasOwner {\n          _id\n          firstName\n          lastName\n          inCourses {\n            _id\n          }\n        }\n        finalDraft {\n          returned\n          submitted\n          submitTime\n          submittedFinalDraft {\n            draftNumber\n            graded\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const EssaysToGrade = ({ courseId }: EssaysToGradeProps) => {\n  const [state, event] = useGradeEssayContainerContextProvider()\n  const [orderBy, switchOrder] = useToggle(false)\n  const [essayList, setEssayList] = useState<\n    findEssaysToGradeById_findEssaysToGradeById_essays[]\n  >([])\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n\n  const [markingPeriodToGrade, setMarkingPeriodToGrade] = useState(\n    markingPeriodState.context.currentMarkingPeriod,\n    // MarkingPeriodEnum.SECOND,\n  )\n\n  const [resubmittedEssayList, setResubmittedEssayList] = useState<\n    findEssaysToGradeById_findEssaysToGradeById_essays[]\n  >([])\n\n  const me: me_me_Teacher = useUserContextProvider()\n\n  const { loading, data } = useQuery<\n    findEssaysToGradeById,\n    findEssaysToGradeByIdVariables\n  >(FIND_ESSAYS_TO_GRADE_BY_ID_QUERY, {\n    variables: {\n      input: { teacherId: me._id! },\n    },\n    onCompleted: (data) => {},\n    pollInterval: 1000,\n    onError: (error) => console.error(error),\n  })\n\n  useEffect(() => {\n    setEssayList(\n      data?.findEssaysToGradeById.essays.filter(\n        (essay) =>\n          essay.hasOwner.inCourses.some((course) => course._id === courseId) &&\n          essay.finalDraft?.submittedFinalDraft.length! === 1,\n      )!,\n    )\n    setResubmittedEssayList(\n      data?.findEssaysToGradeById.essays.filter(\n        (essay) =>\n          essay.hasOwner.inCourses.some((course) => course._id === courseId) &&\n          essay.finalDraft?.submittedFinalDraft.length! > 1,\n      )!,\n    )\n  }, [data, courseId])\n\n  if (loading) return <div>Loading </div>\n\n  const sortingFn = () => {\n    if (state.context.orderBy === 'LAST_NAME') {\n      return sortByLetter\n    }\n  }\n\n  const essaysSubmittedOnTime =\n    essayList !== undefined &&\n    essayList.filter(\n      (essay) =>\n        essay.late === false && essay.markingPeriod === markingPeriodToGrade,\n    )\n  const onTimeEssaysToGrade =\n    essayList !== undefined &&\n    essayList.some(\n      (essay) => !essay.late && essay.markingPeriod === markingPeriodToGrade,\n    )\n\n  const lateEssays =\n    essayList !== undefined &&\n    essayList.filter(\n      (essay) =>\n        essay.late === true && essay.markingPeriod === markingPeriodToGrade,\n    )\n\n  const lateEssaysToGrade =\n    essayList !== undefined &&\n    essayList.some(\n      (essay) => essay.late && essay.markingPeriod === markingPeriodToGrade,\n    )\n\n  const index = markingPeriodEnum.findIndex(\n    (c: MarkingPeriodEnum) => c === markingPeriodToGrade,\n  )\n\n  return (\n    <CourseEssaysToGradeContainer>\n      <EssayTitle>\n        <div>Essays To Grade</div>\n      </EssayTitle>\n      <MarkingPeriodSelector>\n        <MarkingPeriodSelectorContainer>\n          {index > 0 && (\n            <MarkingPeriodSelectorBack\n              onClick={() => {\n                setMarkingPeriodToGrade(markingPeriodEnum[index - 1])\n              }}\n            >\n              &lt;\n            </MarkingPeriodSelectorBack>\n          )}\n          <CurrentMarkingPeriodContainer>\n            <div>{phraseCapitalizer(markingPeriodToGrade)} Marking Period</div>\n          </CurrentMarkingPeriodContainer>\n          {index < 3 && (\n            <MarkingPeriodSelectorForward\n              onClick={() =>\n                setMarkingPeriodToGrade(markingPeriodEnum[index + 1])\n              }\n            >\n              &gt;\n            </MarkingPeriodSelectorForward>\n          )}\n        </MarkingPeriodSelectorContainer>\n      </MarkingPeriodSelector>\n      <EssayStatusSelector>\n        <EssayStatusSelect\n          toGradeIndicator={onTimeEssaysToGrade}\n          onClick={() => event({ type: 'ONTIME' })}\n        >\n          Current\n        </EssayStatusSelect>\n        <EssayStatusSelect\n          toGradeIndicator={lateEssaysToGrade}\n          onClick={() => event({ type: 'LATE' })}\n        >\n          Late\n        </EssayStatusSelect>\n        <EssayStatusSelect\n          toGradeIndicator={\n            resubmittedEssayList && resubmittedEssayList.length > 0\n          }\n          onClick={() => event({ type: 'RESUBMITTED' })}\n        >\n          Resubmitted\n        </EssayStatusSelect>\n      </EssayStatusSelector>\n      <EssayListContainer>\n        {state.matches('essayTypes.onTime') && (\n          <EssayList>\n            {essaysSubmittedOnTime &&\n              essaysSubmittedOnTime.map((essay) => (\n                <EssayListItem key={essay._id!}>\n                  <EssaySelect to={essay._id!} key={essay._id!}>\n                    {essay.hasOwner.lastName}, {essay.hasOwner.firstName}:{' '}\n                    {essay.readings.readingSections}\n                    {/* {essay.finalDraft?.submitTime} */}\n                  </EssaySelect>\n                </EssayListItem>\n              ))}\n          </EssayList>\n        )}\n\n        {state.matches('essayTypes.late') && (\n          <EssayList>\n            {lateEssays &&\n              lateEssays.map((essay) => (\n                <EssayListItem key={essay._id!}>\n                  <EssaySelect to={essay._id!} key={essay._id!}>\n                    {essay.hasOwner.lastName}, {essay.hasOwner.firstName}:{' '}\n                    {essay.readings.readingSections}{' '}\n                    {essay.finalDraft?.submitTime}\n                  </EssaySelect>\n                </EssayListItem>\n              ))}\n          </EssayList>\n        )}\n\n        {state.matches('essayTypes.resubmitted') && (\n          <EssayList>\n            {resubmittedEssayList !== undefined &&\n              resubmittedEssayList\n                .filter((essay) => essay.markingPeriod === markingPeriodToGrade)\n                .map((essay) => (\n                  <EssayListItem key={essay._id!}>\n                    <EssaySelect to={essay._id!} key={essay._id!}>\n                      {essay.hasOwner.lastName}, {essay.hasOwner.firstName}:{' '}\n                      {essay.readings.readingSections}\n                    </EssaySelect>\n                  </EssayListItem>\n                ))}\n          </EssayList>\n        )}\n      </EssayListContainer>\n      <OrderSwitchContainer>\n        <div\n          onClick={() => event({ type: 'SET_ORDER_BY', payload: 'LAST_NAME' })}\n        >\n          Order By Student\n        </div>\n        <div onClick={() => event({ type: 'SET_ORDER_BY', payload: 'DATE' })}>\n          Order By Date\n        </div>\n      </OrderSwitchContainer>\n    </CourseEssaysToGradeContainer>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport {\n  findStudentsByCourse,\n  findStudentsByCourseVariables,\n} from '../../../../../../schemaTypes'\nimport { gql, useQuery } from '@apollo/client'\nimport { useNavigate } from 'react-router-dom'\nimport { PaperBasedContainer } from '../state-n-styles/GradeEssayContainerStyles'\n\nexport type FindAssignmentByStudentProps = {\n  courseId: string\n}\n\nexport const FIND_STUDENTS_BY_COURSE_ID_QUERY = gql`\n  query findStudentsByCourse($input: FindStudentsByCourseInput!) {\n    findStudentsByCourse(input: $input) {\n      students {\n        _id\n        firstName\n        lastName\n        hasAssignments {\n          _id\n          __typename\n          markingPeriod\n          readings {\n            readingSections\n          }\n          ... on Essay {\n            finalDraft {\n              submitted\n            }\n          }\n          ... on ReadingGuide {\n            readingGuideFinal {\n              submitted\n            }\n            graded\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const FindAssignmentByStudent: FC<FindAssignmentByStudentProps> = ({\n  courseId,\n}) => {\n  const navigate = useNavigate()\n  const [studentId, setStudentId] = useState('')\n\n  const [essayId, setEssayId] = useState('')\n  const [readingGuideId, setReadingGuideId] = useState('')\n\n  // const [assignmentType, setAssignmentType] = useState<\n  //   'Test' | 'Essay' | 'ReadingGuide'\n  // >('Essay')\n  const { loading, data } = useQuery<\n    findStudentsByCourse,\n    findStudentsByCourseVariables\n  >(FIND_STUDENTS_BY_COURSE_ID_QUERY, {\n    variables: {\n      input: { courseId },\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const [student] = data?.findStudentsByCourse.students!.filter(\n    (student) => student._id === studentId,\n  )!\n  console.log(\n    student &&\n      student.hasAssignments.filter(\n        (assignment) => assignment.__typename === 'Essay',\n      ).length,\n  )\n  console.log(\n    student &&\n      student.hasAssignments.filter(\n        (assignment) =>\n          assignment.__typename === 'Essay' &&\n          !assignment.finalDraft?.submitted,\n      ).length,\n  )\n  return (\n    <PaperBasedContainer>\n      <div>\n        <div>SelectStudent</div>\n        <select\n          onChange={(e: any) => {\n            if (e.target.value !== 'none') {\n              setStudentId(e.target.value)\n            }\n          }}\n        >\n          <option value={'none'}>Pick a Student</option>\n          {data?.findStudentsByCourse.students.map((student) => (\n            <option key={student._id!} value={student._id!}>\n              {student.lastName}, {student.firstName}\n            </option>\n          ))}\n        </select>\n      </div>\n      {student && (\n        <>\n          <div>\n            <div>Essays</div>\n            <select\n              onChange={(e: any) => {\n                if (e.target.value !== 'none') setEssayId(e.target.value)\n              }}\n            >\n              <option value={'none'}>Pick an Essay</option>\n              {student.hasAssignments\n                .filter(\n                  (assignment) =>\n                    assignment.__typename === 'Essay' &&\n                    !assignment.finalDraft?.submitted,\n                )\n                .map((assignment) => (\n                  <option key={assignment._id!} value={assignment._id!}>\n                    {assignment.readings.readingSections}\n                  </option>\n                ))}\n            </select>\n            {essayId && (\n              <div onClick={() => navigate(`paper-based/${essayId}`)}>\n                Set Paper Based\n              </div>\n            )}\n          </div>\n          <div>\n            <div>Reading Guides</div>\n            <select\n              onChange={(e: any) => {\n                if (e.target.value !== 'none') setReadingGuideId(e.target.value)\n              }}\n            >\n              <option value={'none'}>Pick an Reading Guide</option>\n              {student.hasAssignments\n                .filter(\n                  (assignment) =>\n                    assignment.__typename === 'ReadingGuide' &&\n                    !assignment.readingGuideFinal?.submitted &&\n                    !assignment.graded,\n                )\n                .map((assignment) => (\n                  <option key={assignment._id!} value={assignment._id!}>\n                    {assignment.readings.readingSections}\n                  </option>\n                ))}\n            </select>\n            {readingGuideId && (\n              <div onClick={() => navigate(`paper-based/${readingGuideId}`)}>\n                Set Paper Based\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </PaperBasedContainer>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { me_me_Teacher } from '../../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { EssaysToGrade } from './essays/essay-grader/EssaysToGrade'\nimport { FindAssignmentByStudent } from './paper-based/FindAssignmentByStudent'\nimport {\n  CourseSelect,\n  CourseSelectContainer,\n  CourseToSelect,\n  EssaysToGradeContainer,\n  PaperBasedToggleContainer,\n} from './state-n-styles/GradeEssayContainerStyles'\nimport { useToggle } from '../../../../../hooks'\nimport { sortByLetter } from '../../../../../utils'\nimport { BackContainer } from '../create-assignments/state-and-styles/createAssignmentsStyles'\nimport { useNavigate } from 'react-router'\n\nexport type AssignmentsToGradeProps = {}\n\nexport const AssignmentsToGrade = ({}: AssignmentsToGradeProps) => {\n  const navigate = useNavigate()\n  const [courseId, setCourseId] = useState('')\n  const me: me_me_Teacher = useUserContextProvider()\n  const { teachesCourses } = me\n  const [paperBasedToggle, togglePaperBased] = useToggle(false)\n\n  return (\n    <EssaysToGradeContainer>\n      <CourseSelectContainer>\n        <BackContainer>\n          <div onClick={() => navigate('/dashboard/assignments')}>Back</div>\n        </BackContainer>\n        <CourseSelect>\n          <div>Select Course</div>\n          {teachesCourses\n            .slice(0)\n            .sort(sortByLetter)\n            .filter((c) => !c.hasCourseInfo.isHidden)\n            .map((course) => (\n              <CourseToSelect\n                key={course._id}\n                onClick={() => setCourseId(course._id!)}\n                selected={course._id === courseId}\n              >\n                {course.name}\n              </CourseToSelect>\n            ))}\n        </CourseSelect>\n        <div>\n          {courseId && (\n            <PaperBasedToggleContainer>\n              {!paperBasedToggle ? (\n                <div onClick={() => togglePaperBased()}>Paper Based</div>\n              ) : (\n                <div onClick={() => togglePaperBased()}>Submitted </div>\n              )}\n            </PaperBasedToggleContainer>\n          )}\n        </div>\n      </CourseSelectContainer>\n      {courseId && !paperBasedToggle && <EssaysToGrade courseId={courseId} />}\n      {courseId && paperBasedToggle && (\n        <FindAssignmentByStudent courseId={courseId} />\n      )}\n    </EssaysToGradeContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  AddCommentButton,\n  AddCommentContainer,\n  AddCommentInput,\n  AdditionalCommentsContainer,\n  AdditionalCommentTitle,\n  Comments,\n} from '../state-n-styles/EssaysToGradeStyles'\nimport { useGradeEssayContextProvider } from '../state-n-styles/GradeEssayContext'\n\nexport type AdditionalCommentsProps = {}\n\nexport const AdditionalComments: FC<AdditionalCommentsProps> = () => {\n  const [state, event] = useGradeEssayContextProvider()\n  return (\n    <AdditionalCommentsContainer>\n      <AdditionalCommentTitle>Additional Comments</AdditionalCommentTitle>\n      <AddCommentContainer onSubmit={(e: any) => e.preventDefault()}>\n        <AddCommentInput\n          onChange={(e: any) =>\n            event({ type: 'SET_COMMENT', payload: e.target.value })\n          }\n        />\n        <AddCommentButton\n          type=\"reset\"\n          onClick={() => {\n            event({\n              type: 'ADD_ADDITIONAL_COMMENT',\n              payload: state.context.comment,\n            })\n            event({ type: 'RESET_COMMENT' })\n          }}\n        >\n          Add Comment\n        </AddCommentButton>\n      </AddCommentContainer>\n      <Comments>\n        {state.context.draftToGrade.additionalComments!.map(\n          (comment, i: number) => {\n            return (\n              <div key={i}>\n                <span\n                  onClick={() => event({ type: 'REMOVE_COMMENT', payload: i })}\n                >\n                  {comment}\n                </span>\n              </div>\n            )\n          },\n        )}\n      </Comments>\n    </AdditionalCommentsContainer>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { useGradeEssayContextProvider } from '../state-n-styles/GradeEssayContext'\nimport {\n  findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer,\n  findRubricEntries_findRubricEntries_rubricEntries,\n  ReturnedRubricEntryInput,\n  RubricEntryInput,\n  RubricSectionEnum,\n  WritingLevelEnum,\n} from '../../../../../../../../schemaTypes'\nimport { useEnumContextProvider } from '../../../../../../../../contexts/EnumContext'\nimport { useCheckBox } from '../../../../../../../../hooks/useCheckBox'\nimport { AdditionalComments } from './AdditionalComments'\nimport {\n  AdditionalCommentsContainer,\n  RubricCheckBoxContainer,\n  RubricCheckBoxInput,\n  RubricContainer,\n  RubricSectionEnumContainer,\n  RubricTypeTitle,\n} from '../state-n-styles/EssaysToGradeStyles'\nimport { sortByRubricEntryScore } from '../../../../../../../../utils'\nimport CheckBox from '../../../../../../../reusable-components/CheckBox'\n\nexport type DevelopingGradingToolProps = {\n  rubricEntries: findRubricEntries_findRubricEntries_rubricEntries[]\n  organizer?: findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer\n}\n\nexport const DevelopingGradingTool = ({\n  rubricEntries,\n}: DevelopingGradingToolProps) => {\n  const [state, event] = useGradeEssayContextProvider()\n  const { rubricSectionEnum } = useEnumContextProvider()\n  const [sectionSelector, setSectionSelector] = useState(0)\n  const [rubricList, handleChange] = useCheckBox([])\n  const rubricEntriesList: ReturnedRubricEntryInput[] = []\n\n  const modifiedRubricSections = rubricSectionEnum\n    .slice(2)\n    .concat(rubricSectionEnum.slice(0, 2))\n\n  rubricList.forEach((entry: string) => {\n    const splitValues = entry.split(',')\n    console.log(splitValues[4])\n    const rubricEntryValues: ReturnedRubricEntryInput = {\n      entry: splitValues[0],\n      rubricSection: splitValues[3] as RubricSectionEnum,\n      score: Number(splitValues[1]),\n      howToImprove: splitValues[2],\n      _id: splitValues[4],\n    }\n    rubricEntriesList.push(rubricEntryValues)\n  })\n\n  const totalScore = rubricEntriesList\n    .map((entry) => entry.score)\n    .reduce((a, b) => a + b, 0)\n  const averageScore = totalScore / rubricEntriesList.length\n\n  useEffect(() => {\n    event({ type: 'SET_RUBRIC_ENTRIES', payload: rubricEntriesList })\n    if (averageScore) {\n      event({\n        type: 'SET_SCORE',\n        payload: Number(averageScore.toFixed(2)),\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rubricList])\n\n  useEffect(() => {\n    event({\n      type: 'SET_CURRENT_RUBRIC_SECTION',\n      payload: rubricSectionEnum[sectionSelector],\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionSelector, rubricSectionEnum])\n\n  return (\n    <>\n      <RubricContainer>\n        <RubricTypeTitle>\n          <div>Developing Rubric</div>\n        </RubricTypeTitle>\n\n        <RubricSectionEnumContainer>\n          <div\n            onClick={(e: any) => {\n              if (\n                rubricSectionEnum.indexOf(state.context.currentRubricSection) >\n                0\n              ) {\n                setSectionSelector(sectionSelector - 1)\n              }\n            }}\n          >\n            &lt;\n          </div>\n\n          <div>{state.context.currentRubricSection}</div>\n          <div\n            onClick={(e: any) => {\n              if (\n                rubricSectionEnum.indexOf(state.context.currentRubricSection) <\n                rubricSectionEnum.length - 1\n              ) {\n                setSectionSelector(sectionSelector + 1)\n              }\n            }}\n          >\n            &gt;\n          </div>\n        </RubricSectionEnumContainer>\n\n        <RubricCheckBoxContainer>\n          {rubricEntries\n            .filter(\n              (entry) =>\n                entry.rubricWritingLevels.includes(\n                  WritingLevelEnum.DEVELOPING,\n                ) && entry.rubricSection === state.context.currentRubricSection,\n            )\n            .sort(sortByRubricEntryScore)\n            .map((entry) => {\n              return (\n                <CheckBox\n                  key={entry._id}\n                  checked={state.context.draftToGrade.rubricEntries.some(\n                    (entries) => entries.entry === entry.entry,\n                  )}\n                  onChange={handleChange}\n                  label={entry.entry}\n                  labelWidth={100}\n                  leftMargin={1}\n                  boxHeight={22}\n                  boxWidth={22}\n                  value={[\n                    entry.entry,\n                    entry.score.toString(),\n                    entry.howToImprove!,\n                    entry.rubricSection,\n                    entry._id,\n                  ]}\n                />\n              )\n            })}\n        </RubricCheckBoxContainer>\n      </RubricContainer>\n      <AdditionalComments />\n    </>\n  )\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport { useGradeEssayContextProvider } from '../state-n-styles/GradeEssayContext'\nimport {\n  findRubricEntries_findRubricEntries_rubricEntries,\n  WritingLevelEnum,\n  ReturnedRubricEntryInput,\n  RubricSectionEnum,\n} from '../../../../../../../../schemaTypes'\nimport { useCheckBox } from '../../../../../../../../hooks/useCheckBox'\nimport { useEnumContextProvider } from '../../../../../../../../contexts/EnumContext'\nimport { AdditionalComments } from './AdditionalComments'\nimport {\n  RubricContainer,\n  AdditionalCommentsContainer,\n  RubricCheckBoxContainer,\n  RubricCheckBoxInput,\n  RubricSectionEnumContainer,\n  RubricTypeTitle,\n} from '../state-n-styles/EssaysToGradeStyles'\nimport {\n  capitalizer,\n  sortByRubricEntryScore,\n} from '../../../../../../../../utils'\nimport CheckBox from '../../../../../../../reusable-components/CheckBox'\nimport { createPortal } from 'react-dom'\nimport { useToggle } from '../../../../../../../../hooks'\n\nexport type AcademicGradingToolProps = {\n  rubricEntries: findRubricEntries_findRubricEntries_rubricEntries[]\n}\n\nexport const AcademicGradingTool = ({\n  rubricEntries,\n}: AcademicGradingToolProps) => {\n  const [state, event] = useGradeEssayContextProvider()\n  const [automaticZero, toggleAutomaticZero] = useState(false)\n  const { rubricSectionEnum } = useEnumContextProvider()\n  const [sectionSelector, setSectionSelector] = useState(0)\n  const [rubricList, handleChange] = useCheckBox([])\n  const rubricEntriesList: ReturnedRubricEntryInput[] = []\n\n  const topicEntriesList: ReturnedRubricEntryInput[] = []\n  const answerEntriesList: ReturnedRubricEntryInput[] = []\n  const conclusionEntriesList: ReturnedRubricEntryInput[] = []\n  const overallEntriesList: ReturnedRubricEntryInput[] = []\n  const proofreadingEntriesList: ReturnedRubricEntryInput[] = []\n\n  rubricList.forEach((entry: string) => {\n    const splitValues = entry.split(',')\n\n    const rubricEntryValues: ReturnedRubricEntryInput = {\n      entry: splitValues[0],\n      rubricSection: splitValues[3] as RubricSectionEnum,\n      score: Number(splitValues[1]),\n      howToImprove: splitValues[2],\n    }\n    rubricEntriesList.push(rubricEntryValues)\n\n    if (splitValues[3] === RubricSectionEnum.TOPIC) {\n      topicEntriesList.push(rubricEntryValues)\n    }\n    if (splitValues[3] === RubricSectionEnum.ANSWER) {\n      answerEntriesList.push(rubricEntryValues)\n    }\n    if (splitValues[3] === RubricSectionEnum.CONCLUSION) {\n      conclusionEntriesList.push(rubricEntryValues)\n    }\n    if (splitValues[3] === RubricSectionEnum.OVERALL) {\n      overallEntriesList.push(rubricEntryValues)\n    }\n    if (splitValues[3] === RubricSectionEnum.PROOFREADING) {\n      proofreadingEntriesList.push(rubricEntryValues)\n    }\n  })\n\n  useEffect(() => {\n    if (overallEntriesList.find((entry) => entry.score === 0)) {\n      if (!automaticZero) {\n        toggleAutomaticZero(true)\n      }\n    } else toggleAutomaticZero(false)\n  }, [overallEntriesList, automaticZero])\n\n  const topicScore =\n    topicEntriesList.length > 0\n      ? topicEntriesList\n          .map((entry) => entry.score)\n          .reduce((a, b) => a + b, 0) / topicEntriesList.length\n      : 0\n\n  const answerScore =\n    answerEntriesList.length > 0\n      ? answerEntriesList\n          .map((entry) => entry.score)\n          .reduce((a, b) => a + b, 0) / answerEntriesList.length\n      : 0\n\n  const conclusionScore =\n    conclusionEntriesList.length > 0\n      ? conclusionEntriesList\n          .map((entry) => entry.score)\n          .reduce((a, b) => a + b, 0) / conclusionEntriesList.length\n      : 0\n\n  const overallScore = overallEntriesList\n    .map((entry) => entry.score)\n    .reduce((a, b) => a + b, 0)\n\n  const proofreadingScore = proofreadingEntriesList\n    .map((entry) => entry.score)\n    .reduce((a, b) => a + b, 0)\n\n  const scoreBelowZero =\n    topicScore * 0.1 +\n      answerScore * 0.6 +\n      conclusionScore * 0.3 -\n      overallScore * 0.1 -\n      proofreadingScore * 0.2 <\n    0\n\n  const weightedScore =\n    scoreBelowZero || automaticZero\n      ? 0\n      : topicScore * 0.1 +\n        answerScore * 0.5 +\n        conclusionScore * 0.4 -\n        overallScore * 0.1 -\n        proofreadingScore * 0.2\n\n  const totalScore = rubricEntriesList\n    .map((entry) => entry.score)\n    .reduce((a, b) => a + b, 0)\n\n  const averageScore =\n    rubricEntriesList.length > 0 ? totalScore / rubricEntriesList.length : 0\n\n  useEffect(() => {\n    event({ type: 'SET_RUBRIC_ENTRIES', payload: rubricEntriesList })\n    event({\n      type: 'SET_SCORE',\n      payload: Number(weightedScore.toFixed(2)),\n    })\n  }, [rubricList, weightedScore])\n\n  useEffect(() => {\n    event({\n      type: 'SET_CURRENT_RUBRIC_SECTION',\n      payload: rubricSectionEnum[sectionSelector],\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionSelector, rubricSectionEnum])\n\n  return (\n    <>\n      <RubricContainer>\n        <RubricTypeTitle>\n          <div>Academic Rubric</div>\n        </RubricTypeTitle>\n        <RubricSectionEnumContainer>\n          <div\n            onClick={(e: any) => {\n              if (\n                rubricSectionEnum.indexOf(state.context.currentRubricSection) >\n                0\n              ) {\n                setSectionSelector(sectionSelector - 1)\n              }\n            }}\n          >\n            &lt;\n          </div>\n          <span>{capitalizer(state.context.currentRubricSection)}</span>\n          <div\n            onClick={(e: any) => {\n              if (\n                rubricSectionEnum.indexOf(state.context.currentRubricSection) <\n                rubricSectionEnum.length - 1\n              ) {\n                setSectionSelector(sectionSelector + 1)\n              }\n            }}\n          >\n            &gt;\n          </div>\n        </RubricSectionEnumContainer>\n\n        <RubricCheckBoxContainer>\n          {rubricEntries\n            .filter(\n              (entry) =>\n                entry.rubricWritingLevels.includes(WritingLevelEnum.ACADEMIC) &&\n                entry.rubricSection === state.context.currentRubricSection,\n            )\n            .sort(sortByRubricEntryScore)\n            .map((entry) => (\n              // <div key={entry._id!}>\n              // <RubricCheckBoxInput\n              //   type='checkbox'\n              //   checked={state.context.draftToGrade.rubricEntries.some(\n              //     (entries) => entries.entry === entry.entry\n              //   )}\n              //   value={[\n              //     entry.entry,\n              //     entry.score.toString(),\n              //     entry.howToImprove!,\n              //   ]}\n              //   onChange={handleChange}\n              // />\n              // <span>{entry.entry}</span>\n              // </div>\n              <CheckBox\n                key={entry._id}\n                checked={state.context.draftToGrade.rubricEntries.some(\n                  (entries) => entries.entry === entry.entry,\n                )}\n                onChange={handleChange}\n                label={entry.entry}\n                labelWidth={100}\n                leftMargin={5}\n                boxHeight={22}\n                boxWidth={22}\n                fontWeight={300}\n                value={[\n                  entry.entry,\n                  entry.score.toString(),\n                  entry.howToImprove!,\n                  entry.rubricSection,\n                ]}\n              />\n            ))}\n        </RubricCheckBoxContainer>\n      </RubricContainer>\n      <AdditionalComments />\n    </>\n  )\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport { useGradeEssayContextProvider } from '../state-n-styles/GradeEssayContext'\nimport { useEnumContextProvider } from '../../../../../../../../contexts/EnumContext'\nimport { useCheckBox } from '../../../../../../../../hooks/useCheckBox'\nimport {\n  ReturnedRubricEntryInput,\n  WritingLevelEnum,\n  findRubricEntries_findRubricEntries_rubricEntries,\n  RubricSectionEnum,\n} from '../../../../../../../../schemaTypes'\nimport { AdditionalComments } from './AdditionalComments'\nimport {\n  RubricContainer,\n  AdditionalCommentsContainer,\n  RubricCheckBoxContainer,\n  RubricCheckBoxInput,\n  RubricSectionEnumContainer,\n  RubricTypeTitle,\n} from '../state-n-styles/EssaysToGradeStyles'\nimport { sortByRubricEntryScore } from '../../../../../../../../utils'\n\nexport type AdvancedGradingToolProps = {\n  rubricEntries: findRubricEntries_findRubricEntries_rubricEntries[]\n}\n\nexport const AdvancedGradingTool: FC<AdvancedGradingToolProps> = ({\n  rubricEntries,\n}) => {\n  const [state, event] = useGradeEssayContextProvider()\n  const { rubricSectionEnum } = useEnumContextProvider()\n  const [sectionSelector, setSectionSelector] = useState(0)\n  const [rubricList, handleChange] = useCheckBox([])\n  const rubricEntriesList: ReturnedRubricEntryInput[] = []\n\n  rubricList.forEach((entry: string) => {\n    const splitValues = entry.split(',')\n\n    const rubricEntryValues: ReturnedRubricEntryInput = {\n      entry: splitValues[0],\n      rubricSection: splitValues[3] as RubricSectionEnum,\n      score: Number(splitValues[1]),\n      howToImprove: splitValues[2],\n    }\n    rubricEntriesList.push(rubricEntryValues)\n  })\n\n  const totalScore = rubricEntriesList\n    .map((entry) => entry.score)\n    .reduce((a, b) => a + b, 0)\n  const averageScore = totalScore / rubricEntriesList.length\n\n  useEffect(() => {\n    event({ type: 'SET_RUBRIC_ENTRIES', payload: rubricEntriesList })\n    if (averageScore) {\n      event({\n        type: 'SET_SCORE',\n        payload: Number(averageScore.toFixed(2)),\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rubricList])\n\n  useEffect(() => {\n    event({\n      type: 'SET_CURRENT_RUBRIC_SECTION',\n      payload: rubricSectionEnum[sectionSelector],\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionSelector, rubricSectionEnum])\n\n  return (\n    <>\n      <RubricContainer>\n        <RubricTypeTitle>\n          <div>Advanced Rubric</div>\n        </RubricTypeTitle>\n\n        <RubricSectionEnumContainer>\n          <button\n            onClick={(e: any) => {\n              if (\n                rubricSectionEnum.indexOf(state.context.currentRubricSection) >\n                0\n              ) {\n                setSectionSelector(sectionSelector - 1)\n              }\n            }}\n          >\n            &lt;\n          </button>\n          <span>{state.context.currentRubricSection}</span>\n          <button\n            onClick={(e: any) => {\n              if (\n                rubricSectionEnum.indexOf(state.context.currentRubricSection) <\n                rubricSectionEnum.length - 1\n              ) {\n                setSectionSelector(sectionSelector + 1)\n              }\n            }}\n          >\n            &gt;\n          </button>\n        </RubricSectionEnumContainer>\n\n        <RubricCheckBoxContainer>\n          {rubricEntries\n            .filter(\n              (entry) =>\n                entry.rubricWritingLevels.includes(WritingLevelEnum.ACADEMIC) &&\n                entry.rubricSection === state.context.currentRubricSection,\n            )\n            .sort(sortByRubricEntryScore)\n            .map((entry) => (\n              <div key={entry._id!}>\n                <RubricCheckBoxInput\n                  type=\"checkbox\"\n                  value={[\n                    entry.entry,\n                    entry.score.toString(),\n                    entry.howToImprove!,\n                    entry.rubricSection,\n                  ]}\n                  onChange={handleChange}\n                />\n                <span>{entry.entry}</span>\n              </div>\n            ))}\n        </RubricCheckBoxContainer>\n      </RubricContainer>\n      <AdditionalComments />\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  WritingLevelEnum,\n  RubricSectionEnum,\n  findRubricEntries_findRubricEntries_rubricEntries,\n  UpdateRubricEntryInput,\n} from '../../../../../schemaTypes'\n\nexport type rubricEditorMachineSchema = {\n  states: {\n    selectEntry: {}\n    edit: {}\n    delete: {}\n  }\n}\nexport type rubricEditorMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'DELETE' }\n  | { type: 'DELETED' }\n  | { type: 'SET_WRITING_LEVEL'; payload: WritingLevelEnum }\n  | { type: 'SET_WRITING_LEVEL_SELECTOR'; payload: number }\n  | { type: 'SET_RUBRIC_SECTION'; payload: RubricSectionEnum }\n  | { type: 'SET_HOW_TO_IMPROVE'; payload: string }\n  | { type: 'SET_RUBRIC_SECTION_SELECTOR'; payload: number }\n  | {\n      type: 'SET_RUBRIC_ENTRIES'\n      payload: findRubricEntries_findRubricEntries_rubricEntries[]\n    }\n  | {\n      type: 'SET_RUBRIC_ENTRY'\n      payload: findRubricEntries_findRubricEntries_rubricEntries\n    }\n  | {\n      type: 'SET_EDITABLE_ENTRY'\n      payload: UpdateRubricEntryInput\n    }\n  | {\n      type: 'SET_EDITABLE_ENTRY_WRITING_LEVEL_LIST'\n      payload: WritingLevelEnum[]\n    }\n\nexport type rubricEditorMachineContext = {\n  writingLevelSelector: number\n  writingLevel: WritingLevelEnum\n  rubricSection: RubricSectionEnum\n  rubricSectionSelector: number\n  rubricEntries: findRubricEntries_findRubricEntries_rubricEntries[]\n  selectedRubricEntry: findRubricEntries_findRubricEntries_rubricEntries\n  editableRubricEntry: UpdateRubricEntryInput\n}\n\nexport const rubricEditorMachine = Machine<\n  rubricEditorMachineContext,\n  rubricEditorMachineSchema,\n  rubricEditorMachineEvent\n>({\n  id: 'rubricEditor',\n  initial: 'selectEntry',\n  context: {\n    writingLevelSelector: 0,\n    writingLevel: WritingLevelEnum.DEVELOPING,\n    rubricSection: RubricSectionEnum.OVERALL,\n    rubricSectionSelector: 0,\n    rubricEntries: [],\n    selectedRubricEntry: {\n      __typename: 'RubricEntry',\n      _id: '',\n      entry: '',\n      rubricWritingLevels: [],\n      rubricSection: RubricSectionEnum.ANSWER,\n      howToImprove: '',\n      score: 0,\n    },\n    editableRubricEntry: {\n      rubricEntryId: '',\n      entry: '',\n      rubricWritingLevels: [],\n      rubricSection: RubricSectionEnum.ANSWER,\n      score: 0,\n      howToImprove: '',\n    },\n  },\n  states: {\n    selectEntry: {\n      on: {\n        NEXT: 'edit',\n        SET_WRITING_LEVEL_SELECTOR: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              writingLevelSelector: evt.payload,\n            }\n          }),\n        },\n        SET_WRITING_LEVEL: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              writingLevel: evt.payload,\n            }\n          }),\n        },\n        SET_RUBRIC_SECTION: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              rubricSection: evt.payload,\n            }\n          }),\n        },\n        SET_RUBRIC_SECTION_SELECTOR: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              rubricSectionSelector: evt.payload,\n            }\n          }),\n        },\n        SET_RUBRIC_ENTRIES: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              rubricEntries: evt.payload,\n            }\n          }),\n        },\n        SET_RUBRIC_ENTRY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedRubricEntry: evt.payload,\n              // editableRubricEntry: evt.payload,\n            }\n          }),\n        },\n        SET_EDITABLE_ENTRY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              editableRubricEntry: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    edit: {\n      on: {\n        PREVIOUS: 'selectEntry',\n        DELETE: 'delete',\n        SET_EDITABLE_ENTRY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              editableRubricEntry: evt.payload,\n            }\n          }),\n        },\n        SET_EDITABLE_ENTRY_WRITING_LEVEL_LIST: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              editableRubricWritingLevelList: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    delete: {\n      on: {\n        PREVIOUS: 'edit',\n        DELETED: 'selectEntry',\n      },\n    },\n  },\n})\n","import React, { FC, createContext, ReactNode, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  rubricEditorMachineContext,\n  rubricEditorMachineEvent,\n  rubricEditorMachine,\n} from './rubricEditorMachine'\n\nexport type RubricEditorContextProps = {\n  children: ReactNode\n}\n\nconst RubricEditorContext = createContext<any>(undefined)\n\nexport const RubricEditorContextProvider: FC<RubricEditorContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(rubricEditorMachine)\n  return (\n    <RubricEditorContext.Provider value={[state, event]}>\n      {children}\n    </RubricEditorContext.Provider>\n  )\n}\n\nexport function useRubricEditorContextProvider() {\n  const context = useContext(RubricEditorContext)\n  if (context === undefined) {\n    throw new Error(\n      'useRubricEditorContextProvider must be used within a RubricEditorContextProvider',\n    )\n  }\n  return context as [\n    State<rubricEditorMachineContext, rubricEditorMachineEvent, any, any>,\n    (event: rubricEditorMachineEvent) => void,\n  ]\n}\n","import React, { FC, useEffect } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\n\nexport type SelectWritingLevelProps = {}\n\nexport const SelectWritingLevel: FC<SelectWritingLevelProps> = () => {\n  const { writingLevelEnum } = useEnumContextProvider()\n  const [state, event] = useRubricEditorContextProvider()\n\n  useEffect(() => {\n    event({\n      type: 'SET_WRITING_LEVEL',\n      payload: writingLevelEnum[state.context.writingLevelSelector],\n    })\n  }, [event, state.context.writingLevelSelector, writingLevelEnum])\n\n  return (\n    <>\n      <span>\n        <button\n          onClick={() => {\n            if (state.context.writingLevelSelector > 0) {\n              event({\n                type: 'SET_WRITING_LEVEL_SELECTOR',\n                payload: state.context.writingLevelSelector - 1,\n              })\n            }\n          }}\n        >\n          &lt;\n        </button>\n      </span>{' '}\n      <span>{writingLevelEnum[state.context.writingLevelSelector]}</span>{' '}\n      <span>\n        <button\n          onClick={() => {\n            if (\n              state.context.writingLevelSelector <\n              writingLevelEnum.length - 1\n            ) {\n              event({\n                type: 'SET_WRITING_LEVEL_SELECTOR',\n                payload: state.context.writingLevelSelector + 1,\n              })\n            }\n          }}\n        >\n          &gt;\n        </button>\n      </span>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\n\nexport type SelectRubricSectionProps = {}\n\nexport const SelectRubricSection: FC<SelectRubricSectionProps> = () => {\n  const { rubricSectionEnum } = useEnumContextProvider()\n\n  const [state, event] = useRubricEditorContextProvider()\n  const { rubricSectionSelector } = state.context\n\n  useEffect(() => {\n    event({\n      type: 'SET_RUBRIC_SECTION',\n      payload: rubricSectionEnum[rubricSectionSelector],\n    })\n  }, [event, rubricSectionEnum, rubricSectionSelector])\n\n  return (\n    <div>\n      <span>\n        <button\n          onClick={() => {\n            if (rubricSectionSelector > 0) {\n              event({\n                type: 'SET_RUBRIC_SECTION_SELECTOR',\n                payload: rubricSectionSelector - 1,\n              })\n            }\n          }}\n        >\n          &lt;\n        </button>\n      </span>{' '}\n      <span>{rubricSectionEnum[rubricSectionSelector]}</span>{' '}\n      <span>\n        <button\n          onClick={() => {\n            if (rubricSectionSelector < rubricSectionEnum.length - 1) {\n              event({\n                type: 'SET_RUBRIC_SECTION_SELECTOR',\n                payload: rubricSectionSelector + 1,\n              })\n            }\n          }}\n        >\n          &gt;\n        </button>\n      </span>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\nimport { findRubricEntries_findRubricEntries_rubricEntries } from '../../../../../../schemaTypes'\n\nexport type RubricEntryDisplayProps = {\n  rubricEntries: findRubricEntries_findRubricEntries_rubricEntries[]\n}\n\nexport const RubricEntries: FC<RubricEntryDisplayProps> = ({\n  rubricEntries,\n}) => {\n  const [state, event] = useRubricEditorContextProvider()\n\n  const filteredEntryList = rubricEntries.filter(\n    (entry) =>\n      entry.rubricWritingLevels.includes(state.context.writingLevel) &&\n      entry.rubricSection === state.context.rubricSection,\n  )\n\n  return (\n    <>\n      {filteredEntryList.map((entry) => (\n        <div\n          onClick={() => {\n            event({ type: 'SET_RUBRIC_ENTRY', payload: entry })\n            event({\n              type: 'SET_EDITABLE_ENTRY',\n              payload: {\n                rubricEntryId: entry._id!,\n                entry: entry.entry,\n                rubricSection: entry.rubricSection,\n                rubricWritingLevels: entry.rubricWritingLevels,\n                score: entry.score,\n                howToImprove: entry.howToImprove,\n              },\n            })\n            event({ type: 'NEXT' })\n          }}\n          key={entry._id!}\n        >\n          {entry.entry}\n        </div>\n      ))}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { SelectWritingLevel } from './SelectWritingLevel'\nimport { SelectRubricSection } from './SelectRubricSection'\nimport { RubricEntries } from './RubricEntries'\nimport { gql, useQuery } from '@apollo/client'\nimport { findRubricEntries } from '../../../../../../schemaTypes'\n\nexport type SelectEntryProps = {}\n\nexport const FIND_RUBRIC_ENTRIES = gql`\n  query findRubricEntries {\n    findRubricEntries {\n      rubricEntries {\n        _id\n        entry\n        score\n        rubricSection\n        rubricWritingLevels\n        howToImprove\n      }\n    }\n  }\n`\n\nexport const SelectEntry: FC<SelectEntryProps> = () => {\n  const { loading, data } = useQuery<findRubricEntries>(FIND_RUBRIC_ENTRIES, {\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return null\n\n  return (\n    <>\n      <SelectWritingLevel />\n      <SelectRubricSection />\n      <RubricEntries rubricEntries={data?.findRubricEntries.rubricEntries!} />\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useGradeEssayContextProvider } from '../state-n-styles/GradeEssayContext'\nimport { DevelopingGradingTool } from './DevelopingGradingTool'\nimport { AcademicGradingTool } from './AcademicGradingTool'\nimport { AdvancedGradingTool } from './AdvancedGradingTool'\nimport { useQuery } from '@apollo/client'\nimport { FIND_RUBRIC_ENTRIES } from '../../../../../rubrics/rubric-editor/select-entry/SelectEntry'\nimport {\n  findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer,\n  findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer,\n  findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer,\n  findRubricEntries,\n} from '../../../../../../../../schemaTypes'\nimport { GradingToolContainer } from '../state-n-styles/EssaysToGradeStyles'\n\nexport type GradingToolProps = {\n  organizer:\n    | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_DevelopingOrganizer\n    | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AcademicOrganizer\n    | findEssayToGradeById_findEssayById_essay_workingDraft_organizer_AdvancedOrganizer\n}\n\nexport const GradingTool = ({ organizer }: GradingToolProps) => {\n  const [state] = useGradeEssayContextProvider()\n\n  const { loading, data } = useQuery<findRubricEntries>(FIND_RUBRIC_ENTRIES, {\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const rubric = data?.findRubricEntries.rubricEntries!\n  // const developingOrganizer =\n  //   organizer.__typename === 'DevelopingOrganizer' && organizer\n  return (\n    <GradingToolContainer>\n      {state.context.writingLevel === 'DEVELOPING' && (\n        <DevelopingGradingTool\n          rubricEntries={rubric}\n          // organizer={organizer}\n        />\n      )}\n      {state.context.writingLevel === 'ACADEMIC' && (\n        <AcademicGradingTool rubricEntries={rubric} />\n      )}\n      {state.context.writingLevel === 'ADVANCED' && (\n        <AdvancedGradingTool rubricEntries={rubric} />\n      )}\n    </GradingToolContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  returnGradedEssay,\n  returnGradedEssayVariables,\n  findEssayToGradeById_findEssayById_essay,\n} from '../../../../../../../schemaTypes'\nimport { useGradeEssayContextProvider } from './state-n-styles/GradeEssayContext'\nimport { useNavigate } from 'react-router'\nimport { ReturnEssayButton } from './state-n-styles/EssaysToGradeStyles'\n\nexport type ReturnEssayProps = {\n  essay: findEssayToGradeById_findEssayById_essay\n}\n\nexport const RETURN_GRADED_ESSAY_MUTATION = gql`\n  mutation returnGradedEssay($input: ReturnGradedEssayInput!) {\n    returnGradedEssay(input: $input) {\n      essay {\n        _id\n        assigned\n      }\n    }\n  }\n`\nexport const ReturnEssay: FC<ReturnEssayProps> = ({ essay }) => {\n  const navigate = useNavigate()\n  const [state] = useGradeEssayContextProvider()\n\n  const [returnGradedEssay] = useMutation<\n    returnGradedEssay,\n    returnGradedEssayVariables\n  >(RETURN_GRADED_ESSAY_MUTATION, {\n    variables: { input: state.context.draftToGrade },\n    // {\n    // input: {\n    //   _id: state.context.essayId,\n    //   gradingDraft: state.context.draftToGrade.gradingDraft,\n    //   rubricEntries: state.context.draftToGrade.rubricEntries,\n    //   draftNumber: state.context.draftToGrade.draftNumber,\n    //   additionalComments: state.context.draftToGrade.additionalComments,\n    //   score: state.context.draftToGrade.score,\n    // },\n\n    // },\n    onError: (error) => console.error(error),\n    onCompleted: () => navigate('/dashboard/assignments/grade'),\n    refetchQueries: ['findEssaysToGradeById'],\n  })\n  // console.log(state.context.draftToGrade)\n  return (\n    <>\n      <ReturnEssayButton\n        onClick={() => {\n          if (\n            essay.finalDraft?.submittedFinalDraft.length! - 1 ===\n            state.context.draftToGrade.draftNumber\n          ) {\n            if (state.context.draftToGrade.rubricEntries.length !== 0) {\n              returnGradedEssay()\n            } else console.log('You are required to check rubric entries')\n          } else console.log('You cannot return a graded draft!')\n        }}\n      >\n        Return\n      </ReturnEssayButton>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useGradeEssayContextProvider } from './state-n-styles/GradeEssayContext'\nimport { findEssayToGradeById_findEssayById_essay } from '../../../../../../../schemaTypes'\nimport {\n  DraftSelectorLeft,\n  DraftSelectorRight,\n} from './state-n-styles/EssaysToGradeStyles'\n\nexport type DraftSelectorProps = {\n  essay: findEssayToGradeById_findEssayById_essay\n}\n\nexport const DraftSelector: FC<DraftSelectorProps> = ({ essay }) => {\n  const [state, event] = useGradeEssayContextProvider()\n\n  useEffect(() => {\n    const [currentDraft] = essay.finalDraft?.submittedFinalDraft.filter(\n      (draft) => draft.draftNumber === state.context.draftSelector,\n    ) as any\n\n    event({\n      type: 'SET_DRAFT',\n      payload: {\n        _id: essay._id!,\n        draftNumber: currentDraft.draftNumber,\n        gradingDraft: currentDraft.gradingDraft,\n        rubricEntries: currentDraft.rubricEntries,\n        score: currentDraft.score,\n        additionalComments: currentDraft.additionalComments,\n      },\n    })\n  }, [essay._id, essay.finalDraft, event, state.context.draftSelector])\n\n  return (\n    <>\n      <DraftSelectorLeft\n        onClick={() => {\n          if (state.context.draftSelector > 0) {\n            event({\n              type: 'SET_DRAFT_SELECTOR',\n              payload: state.context.draftSelector - 1,\n            })\n          } else {\n            event({ type: 'TOGGLE_ORGANIZER', payload: true })\n          }\n        }}\n      >\n        <div> &lt;</div>\n      </DraftSelectorLeft>{' '}\n      <DraftSelectorRight\n        onClick={() => {\n          if (state.context.draftSelector === 0) {\n            event({ type: 'TOGGLE_ORGANIZER', payload: false })\n          }\n          if (\n            state.context.draftSelector <\n            essay.finalDraft?.submittedFinalDraft.length! - 2\n          ) {\n            event({\n              type: 'SET_DRAFT_SELECTOR',\n              payload: state.context.draftSelector + 1,\n            })\n          }\n        }}\n      >\n        &gt;\n      </DraftSelectorRight>\n    </>\n  )\n}\n","import React, { useMemo, useState, useCallback, FC, useEffect } from 'react'\nimport { createEditor, Transforms, Editor, Node } from 'slate'\nimport { Slate, Editable, withReact } from 'slate-react'\nimport { CustomEditor } from '../../../../../../editor/CustomEditor'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateGradingDraft,\n  updateGradingDraftVariables,\n} from '../../../../../../../schemaTypes'\nimport { gql, useMutation } from '@apollo/client'\nimport { useGradeEssayContextProvider } from './state-n-styles/GradeEssayContext'\nimport {\n  DraftName,\n  EssayToGradeContainer,\n  PreviousEssayContainer,\n} from './state-n-styles/EssaysToGradeStyles'\n\nexport type PreviousEssayViewerProps = {}\n\n// export const UPDATE_GRADING_DRAFT_MUTATION = gql`\n//   mutation updateGradingDraft($input: UpdateGradingDraftInput!) {\n//     updateGradingDraft(input: $input) {\n//       essay {\n//         _id\n//       }\n//     }\n//   }\n// `\n\nexport const PreviousEssayViewer: FC<PreviousEssayViewerProps> = () => {\n  const [state] = useGradeEssayContextProvider()\n\n  const editor = useMemo(() => withReact(createEditor()), [])\n  // const parsedGradingDraft = JSON.parse(\n  //   essay.finalDraft?.submittedFinalDraft[\n  //     state.context.draftToGrade.draftNumber\n  //   ].gradingDraft\n  // )\n  console.log(state.context.previousDraft.gradingDraft)\n  const parsedGradingDraft = JSON.parse(\n    state.context.previousDraft.gradingDraft,\n  )\n  const [value, setValue] = useState(parsedGradingDraft)\n  useEffect(() => {\n    setValue(parsedGradingDraft)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.previousDraft.gradingDraft])\n  const content = JSON.stringify(value)\n\n  // useEffect(() => {\n  //   event({ type: 'SET_DRAFT_TO_RETURN', payload: content })\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [content])\n\n  //   const [updateGradingDraft] = useMutation<\n  //     updateGradingDraft,\n  //     updateGradingDraftVariables\n  //   >(UPDATE_GRADING_DRAFT_MUTATION, {\n  //     variables: {\n  //       input: {\n  //         essayId: state.context.essayId!,\n  //         gradingDraft: content,\n  //         draftNumber:\n  //           // essay.finalDraft?.submittedFinalDraft[\n  //           //   state.context.draftToGrade.draftNumber\n  //           // ].draftNumber,\n  //           state.context.draftToGrade.draftNumber,\n  //       },\n  //     },\n  //     onCompleted: (data) => console.log(data),\n  //     refetchQueries: ['findEssayToGradeById'],\n  //   })\n\n  //   useEffect(() => {\n  //     // updateGradingDraft()\n  //   }, [updateGradingDraft, content])\n\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case 'code':\n        return <CodeElement {...props} />\n      default:\n        return <DefaultElement {...props} />\n    }\n  }, [])\n\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} />\n  }, [])\n\n  return (\n    <PreviousEssayContainer>\n      <DraftName>\n        Draft {Number(state.context.previousDraft.draftNumber) + 1}\n      </DraftName>\n      <Slate\n        editor={editor}\n        value={value as Node[]}\n        onChange={(value) => {\n          setValue(value as Node[])\n        }}\n      >\n        <Editable\n          renderElement={renderElement}\n          spellCheck\n          onCopy={() => false}\n          renderLeaf={renderLeaf}\n          autoFocus\n          placeholder=\"Start by indenting the topic statement....\"\n          onKeyDown={(e) => {\n            // updateWorkingDraft()\n\n            if (!e.ctrlKey) {\n              return\n            }\n            switch (e.key) {\n              case '`': {\n                e.preventDefault()\n                const [match] = Editor.nodes(editor, {\n                  match: (n) => n.type === 'code',\n                })\n                Transforms.setNodes(\n                  editor,\n                  { type: match ? 'paragraph' : 'code' },\n                  { match: (n) => Editor.isBlock(editor, n) },\n                )\n                break\n              }\n              case 'b': {\n                e.preventDefault()\n                CustomEditor.toggleBoldMark(editor)\n                break\n              }\n              case 's': {\n                e.preventDefault()\n                CustomEditor.toggleStrikeThrough(editor)\n                break\n              }\n              case 'u': {\n                e.preventDefault()\n                CustomEditor.toggleUnderline(editor)\n                break\n              }\n            }\n          }}\n        />\n      </Slate>\n    </PreviousEssayContainer>\n  )\n}\nconst CodeElement = (props: any) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  )\n}\nconst DefaultElement = (props: any) => {\n  return <p {...props.attributes}>{props.children}</p>\n}\n\nexport const Leaf = (props: any) => {\n  return (\n    <span\n      {...props.attributes}\n      style={{\n        fontWeight: props.leaf.bold ? 'bold' : 'normal',\n        textDecoration: props.leaf.strikeThrough\n          ? 'line-through'\n          : props.leaf.underline\n            ? 'underline'\n            : 'none',\n      }}\n    >\n      {props.children}\n    </span>\n  )\n}\n","import { useState } from 'react'\nimport { useParams, useNavigate } from 'react-router'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findEssayToGradeByIdVariables,\n  findEssayToGradeById,\n} from '../../../../../../../schemaTypes'\nimport { useGradeEssayContextProvider } from './state-n-styles/GradeEssayContext'\nimport { TeacherEssayEditor } from './TeacherEssayEditor'\nimport { GradingTool } from './grading-tool/GradingTool'\nimport { ReturnEssay } from './ReturnEssay'\nimport { DraftSelector } from './DraftSelector'\nimport {\n  EditorToolBar,\n  EditorToolBarTitle,\n  EssayGraderContainer,\n  EssayScreen,\n  GoBackButton,\n  NameAndAssignmentContainer,\n  NameContainer,\n  OrganizerForEssayToGradeContainer,\n  ReturnEssayContainer,\n  GradeDetailsContainer,\n  GradeDetailsSelectorContainer,\n  GradeDetailsSelector,\n} from './state-n-styles/EssaysToGradeStyles'\nimport { PreviousEssayViewer } from './PreviousEssayViewer'\nimport { EssayToGradeOrganizer } from './EssayToGradeOrganizer'\n\nexport type GradeEssayProps = {}\n\nexport const FIND_ESSAY_TO_GRADE_QUERY = gql`\n  query findEssayToGradeById($input: FindEssayByIdInput!) {\n    findEssayById(input: $input) {\n      essay {\n        _id\n        assigned\n        hasOwner {\n          _id\n          firstName\n          lastName\n        }\n        topic {\n          question\n          writingLevel\n        }\n        dueDate\n        dueTime\n        readings {\n          readingPages\n          readingSections\n        }\n        workingDraft {\n          organizer {\n            ... on DevelopingOrganizer {\n              restatement\n              developingSentenceStructure {\n                subject\n                verb\n              }\n              basicQuestionType\n              answer\n              conclusion\n            }\n            ... on AcademicOrganizer {\n              academicSentenceStructure {\n                subject\n                verb\n                object\n              }\n              questionType\n              answerType {\n                ... on HowCauseEffectAnswerType {\n                  before\n                  cause\n                  after\n                }\n                ... on ProblemSolutionAnswerType {\n                  problem\n                  reasonForProblem\n                  solvedBy\n                  whySolutionSolved\n                }\n                ... on WhyCauseEffectAnswerType {\n                  ultimateCause\n                  proximateCause\n                }\n              }\n              restatement\n              conclusion\n            }\n            ... on AdvancedOrganizer {\n              advancedSentenceStructure {\n                subject\n                verb\n                object\n              }\n              questionType\n              answerType {\n                ... on HowCauseEffectAnswerType {\n                  before\n                  cause\n                  after\n                }\n                ... on ProblemSolutionAnswerType {\n                  problem\n                  reasonForProblem\n                  solvedBy\n                  whySolutionSolved\n                }\n                ... on WhyCauseEffectAnswerType {\n                  ultimateCause\n                  proximateCause\n                }\n              }\n              restatement\n              conclusion\n            }\n          }\n        }\n        finalDraft {\n          submitTime\n          submitted\n          submitTime\n          returned\n          submittedFinalDraft {\n            draft\n            gradingDraft\n            draftNumber\n            score\n            additionalComments\n            rubricEntries {\n              entry\n              score\n              rubricSection\n              howToImprove\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GradeEssay = ({}: GradeEssayProps) => {\n  const { essayId } = useParams()\n  const navigate = useNavigate()\n  const [state, event] = useGradeEssayContextProvider()\n  const [loadingDraft, setloadingDraft] = useState(false)\n  const [gradeDetailState, setGradeDetailState] = useState<\n    'score' | 'rubric' | 'comments'\n  >('score')\n\n  const { loading, data } = useQuery<\n    findEssayToGradeById,\n    findEssayToGradeByIdVariables\n  >(FIND_ESSAY_TO_GRADE_QUERY, {\n    variables: {\n      input: { _id: essayId! },\n    },\n    // fetchPolicy: 'network-only',\n    onCompleted: (data) => {\n      const lastSubmittedDraft =\n        data.findEssayById.essay.finalDraft?.submittedFinalDraft[\n          data.findEssayById.essay.finalDraft.submittedFinalDraft.length - 1\n        ]\n\n      event({\n        type: 'SET_INTITIAL_DRAFT',\n        payload: {\n          writingLevel: data.findEssayById.essay.topic.writingLevel,\n          draftToGrade: {\n            _id: data.findEssayById.essay._id!,\n            draftNumber: lastSubmittedDraft?.draftNumber!,\n            gradingDraft: lastSubmittedDraft?.gradingDraft,\n            rubricEntries: lastSubmittedDraft?.rubricEntries!,\n            score: lastSubmittedDraft?.score!,\n            additionalComments: lastSubmittedDraft?.additionalComments,\n          },\n        },\n      })\n\n      if (\n        data.findEssayById.essay.finalDraft?.submittedFinalDraft[\n          data.findEssayById.essay.finalDraft.submittedFinalDraft.length - 2\n        ]\n      ) {\n        const previousDraft =\n          data.findEssayById.essay.finalDraft?.submittedFinalDraft[\n            data.findEssayById.essay.finalDraft.submittedFinalDraft.length - 2\n          ]\n\n        event({\n          type: 'SET_PREVIOUS_DRAFT',\n          payload: {\n            _id: data.findEssayById.essay._id!,\n            draftNumber: previousDraft?.draftNumber!,\n            gradingDraft: previousDraft?.gradingDraft,\n            rubricEntries: previousDraft?.rubricEntries!,\n            score: previousDraft?.score!,\n            additionalComments: previousDraft?.additionalComments,\n          },\n        })\n      }\n\n      event({ type: 'SET_ESSAY_ID', payload: data.findEssayById.essay._id! })\n\n      if (\n        data.findEssayById.essay.finalDraft?.submittedFinalDraft.length! > 1\n      ) {\n        event({\n          type: 'SET_DRAFT_SELECTOR',\n          payload:\n            data.findEssayById.essay.finalDraft?.submittedFinalDraft.length! -\n            2,\n        })\n      } else {\n        event({\n          type: 'SET_DRAFT_SELECTOR',\n          payload:\n            data.findEssayById.essay.finalDraft?.submittedFinalDraft.length! -\n            1,\n        })\n      }\n\n      data.findEssayById.essay.finalDraft?.submittedFinalDraft !== undefined &&\n        data.findEssayById.essay.finalDraft?.submittedFinalDraft.length > 1 &&\n        event({\n          type: 'SET_PREVIOUS_RUBRIC_ENTRIES',\n          payload:\n            data.findEssayById.essay.finalDraft?.submittedFinalDraft[\n              data.findEssayById.essay.finalDraft.submittedFinalDraft.length - 2\n            ].rubricEntries!,\n        })\n\n      const previousComments =\n        data.findEssayById.essay.finalDraft?.submittedFinalDraft.map(\n          (draft) => draft.additionalComments,\n        )\n\n      setloadingDraft(true)\n    },\n    onError: (error) => console.error(error),\n  })\n\n  if (loading) return <div>Loading </div>\n  // console.log(state.context.previousDraft.additionalComments)\n  return (\n    <EssayGraderContainer>\n      {loadingDraft && (\n        <>\n          <EssayScreen>\n            <GoBackButton\n              onClick={() => navigate('/dashboard/assignments/grade')}\n            >\n              &larr; Back\n            </GoBackButton>\n\n            <DraftSelector essay={data?.findEssayById.essay!} />\n\n            {data?.findEssayById.essay.finalDraft?.submittedFinalDraft[\n              data?.findEssayById.essay.finalDraft.submittedFinalDraft.length -\n                2\n            ] ? (\n              <>\n                {state.context.organizerToggle ? (\n                  <OrganizerForEssayToGradeContainer>\n                    <EssayToGradeOrganizer\n                      organizer={\n                        data?.findEssayById.essay.workingDraft.organizer!\n                      }\n                    />\n                  </OrganizerForEssayToGradeContainer>\n                ) : (\n                  <PreviousEssayViewer />\n                )}\n              </>\n            ) : (\n              <OrganizerForEssayToGradeContainer>\n                <EssayToGradeOrganizer\n                  organizer={data?.findEssayById.essay.workingDraft.organizer!}\n                />\n              </OrganizerForEssayToGradeContainer>\n            )}\n            <TeacherEssayEditor />\n            <EditorToolBar>\n              <EditorToolBarTitle>Editor Tools</EditorToolBarTitle>\n              <button\n                onClick={() =>\n                  event({ type: 'CHANGE_EDIT_COLOR', payload: 'red' })\n                }\n              >\n                Edit\n              </button>\n            </EditorToolBar>\n          </EssayScreen>\n          <NameContainer>\n            <NameAndAssignmentContainer>\n              <div>\n                {data?.findEssayById.essay.hasOwner.lastName},{' '}\n                {data?.findEssayById.essay.hasOwner.firstName}\n              </div>\n              <div>{data?.findEssayById.essay.topic.question}</div>\n              <div>\n                <span>\n                  Pages {data?.findEssayById.essay.readings.readingPages}:\n                </span>{' '}\n                <span>\n                  {data?.findEssayById.essay.readings.readingSections}\n                </span>\n              </div>\n            </NameAndAssignmentContainer>\n            <ReturnEssayContainer>\n              <ReturnEssay essay={data?.findEssayById.essay!} />\n            </ReturnEssayContainer>\n            <GradeDetailsContainer>\n              <GradeDetailsSelectorContainer>\n                <GradeDetailsSelector\n                  selected={gradeDetailState === 'score'}\n                  onClick={() => setGradeDetailState('score')}\n                >\n                  Score\n                </GradeDetailsSelector>\n                <GradeDetailsSelector\n                  selected={gradeDetailState === 'rubric'}\n                  onClick={() => setGradeDetailState('rubric')}\n                >\n                  Rubric\n                </GradeDetailsSelector>\n                <GradeDetailsSelector\n                  selected={gradeDetailState === 'comments'}\n                  onClick={() => setGradeDetailState('comments')}\n                >\n                  Comments\n                </GradeDetailsSelector>\n              </GradeDetailsSelectorContainer>\n              {gradeDetailState === 'score' && (\n                <div>{state.context.draftToGrade.score}</div>\n              )}\n              {gradeDetailState === 'rubric' && (\n                <div>\n                  {state.context.previousRubricEntries.map(\n                    (entry, i: number) => (\n                      <div key={i}>{entry.entry}</div>\n                    ),\n                  )}\n                </div>\n              )}\n              {gradeDetailState === 'comments' && (\n                <div>\n                  {state.context.previousDraft.additionalComments?.map(\n                    (comment, i: number) => <span key={i}>{comment}</span>,\n                  )}\n                </div>\n              )}\n            </GradeDetailsContainer>\n          </NameContainer>\n          <GradingTool\n            organizer={data?.findEssayById.essay.workingDraft.organizer!}\n          />\n        </>\n      )}\n    </EssayGraderContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { LessonSelect } from './LessonSelect'\nimport { useParams } from 'react-router-dom'\n\nexport type AssignEssaysByLessonProps = {}\n\nexport const AssignEssaysByLesson: FC<AssignEssaysByLessonProps> = () => {\n  const { course } = useParams()\n\n  return (\n    <>\n      <div>Assign Essay by Lesson</div>\n      {course && <LessonSelect course={course} />}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { AssignEssaysByLesson } from './assign-by-course/AssignEssaysByLesson'\nimport { AssignEssayByCourseContextProvider } from './assign-by-course/AssignEssayByCourseContext'\n\nexport type AssignEssaysProps = {}\n\nexport const AssignEssays: FC<AssignEssaysProps> = () => {\n  return (\n    <>\n      <div>Assign Essays</div>\n      <AssignEssayByCourseContextProvider>\n        <AssignEssaysByLesson />\n      </AssignEssayByCourseContextProvider>\n    </>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findLessonsByUnit,\n  findLessonsByUnitVariables,\n} from '../../../../../../../schemaTypes'\nimport { FIND_LESSONS_BY_UNIT_QUERY } from '../../../create-assignments/create-essay/EssayLessonSelect'\n\nexport type LessonSelectProps = {\n  course: string\n  unitId: string\n  setLessonId: Dispatch<SetStateAction<string>>\n}\n\nexport const LessonSelect: FC<LessonSelectProps> = ({\n  course,\n  unitId,\n  setLessonId,\n}) => {\n  const { loading, data } = useQuery<\n    findLessonsByUnit,\n    findLessonsByUnitVariables\n  >(FIND_LESSONS_BY_UNIT_QUERY, {\n    variables: {\n      input: { courseId: course, unitId: unitId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setLessonId(e.target.value)\n          }\n        }}\n      >\n        <option value={'none'}>Select a Lesson</option>\n        {data?.findLessonsByUnit.lessons.map((lesson) => (\n          <option key={lesson._id!} value={lesson._id!}>\n            {lesson.lessonName}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\nimport { FIND_UNITS_QUERY } from '../../../../lessons/lesson-planner/UnitAssigner'\nimport { findUnits } from '../../../../../../../schemaTypes'\nimport { useQuery } from '@apollo/client'\n\nexport type UnitSelectProps = {\n  setUnitId: Dispatch<SetStateAction<string>>\n}\n\nexport const UnitSelect: FC<UnitSelectProps> = ({ setUnitId }) => {\n  const { loading, data } = useQuery<findUnits>(FIND_UNITS_QUERY, {\n    variables: {\n      input: {},\n    },\n    onCompleted: (data) => console.log(data.findUnits.units),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setUnitId(e.target.value)\n          }\n        }}\n      >\n        <option value={'none'}>Pick a Unit</option>\n        {data?.findUnits.units.map((unit) => (\n          <option key={unit._id!} value={unit._id!}>\n            {unit.unitName}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\n\nexport type assignReadingGuideByCourseMachineSchema = {\n  states: {\n    readingGuideInfo: {}\n  }\n}\nexport type assignReadingGuideByCourseMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_STUDENT_IDS'; payload: string[] }\n  | { type: 'SET_LESSON_ID'; payload: string }\n  | { type: 'SET_ASSIGNED_DATE'; payload: string }\n  | { type: 'SET_DUE_DATE'; payload: string }\n\nexport type assignReadingGuideByCourseMachineContext = {\n  studentIds: string[]\n  associatedLessonId: string\n  assignedDate: string\n  dueDate: string\n}\n\nexport const assignReadingGuideByCourseMachine = Machine<\n  assignReadingGuideByCourseMachineContext,\n  assignReadingGuideByCourseMachineSchema,\n  assignReadingGuideByCourseMachineEvent\n>({\n  id: 'assignReadingGuideByCourse',\n  initial: 'readingGuideInfo',\n  context: {\n    studentIds: [],\n    associatedLessonId: '',\n    assignedDate: '',\n    dueDate: '',\n  },\n  states: {\n    readingGuideInfo: {\n      on: {\n        SET_STUDENT_IDS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentIds: evt.payload,\n            }\n          }),\n        },\n        SET_LESSON_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              associatedLessonId: evt.payload,\n            }\n          }),\n        },\n        SET_ASSIGNED_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              assignedDate: evt.payload,\n            }\n          }),\n        },\n        SET_DUE_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              dueDate: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  assignReadingGuideByCourseMachine,\n  assignReadingGuideByCourseMachineContext,\n  assignReadingGuideByCourseMachineEvent,\n} from './assignReadingGuideByCourseMachine'\n\nconst AssignReadingGuideByCourseContext = createContext<any>(undefined)\n\ntype AssignReadingGuideByCourseContextProps = {\n  children: ReactNode\n}\n\nexport const AssignReadingGuideByCourseContextProvider: FC<\n  AssignReadingGuideByCourseContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(assignReadingGuideByCourseMachine)\n  return (\n    <AssignReadingGuideByCourseContext.Provider value={[state, event]}>\n      {children}\n    </AssignReadingGuideByCourseContext.Provider>\n  )\n}\n\nexport function useAssignReadingGuideByCourseContextProvider() {\n  const context = useContext(AssignReadingGuideByCourseContext)\n  if (context === undefined) {\n    throw new Error(\n      'useAssignReadingGuideByCourseContextProvider must be used within a AssignReadingGuideByCourseContextProvider',\n    )\n  }\n  return context as [\n    State<\n      assignReadingGuideByCourseMachineContext,\n      assignReadingGuideByCourseMachineEvent,\n      any,\n      any\n    >,\n    (event: assignReadingGuideByCourseMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { useAssignReadingGuideByCourseContextProvider } from './state/AssignReadingGuideByCourseContext'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  assignReadingGuidesVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  assignReadingGuides,\n} from '../../../../../../../schemaTypes'\n\nexport type AssignReadingGuideProps = {}\n\nexport const ASSIGN_READING_GUIDE_MUTATION = gql`\n  mutation assignReadingGuides($input: AssignReadingGuidesInput!) {\n    assignReadingGuides(input: $input) {\n      readingGuides {\n        _id\n      }\n    }\n  }\n`\n\nexport const AssignReadingGuide: FC<AssignReadingGuideProps> = () => {\n  const [state] = useAssignReadingGuideByCourseContextProvider()\n  const [assignReadingGuides, { data, called }] = useMutation<\n    assignReadingGuides,\n    assignReadingGuidesVariables\n  >(ASSIGN_READING_GUIDE_MUTATION, {\n    variables: {\n      input: {\n        assignedDate: state.context.assignedDate,\n        dueDate: state.context.dueDate,\n        associatedLessonId: state.context.associatedLessonId,\n        studentIds: state.context.studentIds,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n  return (\n    <>\n      {data ? (\n        <div>Finished</div>\n      ) : (\n        <button\n          style={\n            !called\n              ? { backgroundColor: 'var(--blue)', color: 'var(--white)' }\n              : { backgroundColor: 'var(--grey)', color: 'var(--blue)' }\n          }\n          onClick={() => {\n            if (!called) assignReadingGuides()\n          }}\n        >\n          Assign\n        </button>\n      )}\n    </>\n  )\n}\n","import { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport { useAssignReadingGuideByCourseContextProvider } from './state/AssignReadingGuideByCourseContext'\nimport {\n  findReadingGuidesByAssociatedLessonAndCourseId,\n  findReadingGuidesByAssociatedLessonAndCourseIdVariables,\n} from '../../../../../../../schemaTypes'\nimport { AssignReadingGuide } from './AssignReadingGuide'\n\nexport type AssignLessonProps = {\n  lessonId: string\n  courseId: string\n}\n\nexport const FIND_READING_GUIDE_BY_LESSON_AND_COURSE_QUERY = gql`\n  query findReadingGuidesByAssociatedLessonAndCourseId(\n    $input: FindReadingGuidesByAssociatedLessonAndCourseIdInput!\n  ) {\n    findReadingGuidesByAssociatedLessonAndCourseId(input: $input) {\n      readingGuides {\n        assigned\n        hasOwner {\n          _id\n          firstName\n          lastName\n        }\n        readings {\n          readingSections\n        }\n        dueDate\n        assignedDate\n      }\n    }\n  }\n`\n\nexport const AssignLesson: FC<AssignLessonProps> = ({ lessonId, courseId }) => {\n  const [state, event] = useAssignReadingGuideByCourseContextProvider()\n\n  const todaysDate: string = new Date().toLocaleString().substring(0, 9)\n  const { loading, data } = useQuery<\n    findReadingGuidesByAssociatedLessonAndCourseId,\n    findReadingGuidesByAssociatedLessonAndCourseIdVariables\n  >(FIND_READING_GUIDE_BY_LESSON_AND_COURSE_QUERY, {\n    variables: {\n      input: { courseId, lessonId },\n    },\n    onCompleted: (data) => {\n      if (\n        data.findReadingGuidesByAssociatedLessonAndCourseId.readingGuides\n          .length > 0\n      ) {\n        const studentIds: string[] =\n          data.findReadingGuidesByAssociatedLessonAndCourseId.readingGuides.map(\n            (readingGuide) => readingGuide.hasOwner._id!,\n          )\n        const assignedDate: string =\n          data.findReadingGuidesByAssociatedLessonAndCourseId.readingGuides[0]\n            .assignedDate\n        const dueDate: string =\n          data.findReadingGuidesByAssociatedLessonAndCourseId.readingGuides[0]\n            .dueDate\n        event({ type: 'SET_STUDENT_IDS', payload: studentIds })\n        event({ type: 'SET_LESSON_ID', payload: lessonId })\n        event({ type: 'SET_DUE_DATE', payload: dueDate })\n        event({ type: 'SET_ASSIGNED_DATE', payload: assignedDate })\n      }\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      {data?.findReadingGuidesByAssociatedLessonAndCourseId.readingGuides\n        .length! > 0 && (\n        <>\n          <div>AssignedDate: {state.context.assignedDate}</div>\n          {state.context.assignedDate !== todaysDate && (\n            <button\n              onClick={() =>\n                event({ type: 'SET_ASSIGNED_DATE', payload: todaysDate })\n              }\n            >\n              Use Today's Date\n            </button>\n          )}\n          <div>DueDate: {state.context.dueDate}</div>\n          <div>\n            Reading Sections:{' '}\n            {\n              data?.findReadingGuidesByAssociatedLessonAndCourseId\n                .readingGuides[0].readings.readingSections\n            }\n          </div>\n          {data?.findReadingGuidesByAssociatedLessonAndCourseId.readingGuides.some(\n            (readingGuide) => readingGuide.assigned === false,\n          ) ? (\n            <AssignReadingGuide />\n          ) : (\n            <div>Already Assigned</div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { LessonSelect } from './LessonSelect'\nimport { UnitSelect } from './UnitSelect'\nimport { AssignLesson } from './AssignLesson'\n\nexport type AssignReadingGuideByCourseProps = {}\n\nexport const AssignReadingGuideByCourse: FC<\n  AssignReadingGuideByCourseProps\n> = () => {\n  const { course } = useParams()\n  const [lessonId, setLessonId] = useState('')\n  const [unitId, setUnitId] = useState('')\n\n  return (\n    <>\n      <div>Assign Reading Guides By Lesson</div>\n      <UnitSelect setUnitId={setUnitId} />\n      {course && unitId && (\n        <LessonSelect\n          course={course}\n          unitId={unitId}\n          setLessonId={setLessonId}\n        />\n      )}\n      {lessonId && <AssignLesson courseId={course!} lessonId={lessonId} />}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { AssignReadingGuideByCourse } from './assing-by-course/AssignReadingGuideByCourse'\nimport { AssignReadingGuideByCourseContextProvider } from './assing-by-course/state/AssignReadingGuideByCourseContext'\n\nexport type AssignReadingGuidesProps = {}\n\nexport const AssignReadingGuides: FC<AssignReadingGuidesProps> = () => {\n  return (\n    <>\n      <div>Assign Reading Guides</div>\n      <AssignReadingGuideByCourseContextProvider>\n        <AssignReadingGuideByCourse />\n      </AssignReadingGuideByCourseContextProvider>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { AssignEssays } from './assign-essays/AssignEssays'\nimport { AssignReadingGuides } from './assign-readingGuides/AssignReadingGuides'\n\nexport type AssignAssignmentsProps = {}\n\nexport const AssignAssignments: FC<AssignAssignmentsProps> = () => {\n  return (\n    <>\n      <div>Assign</div>\n      <AssignEssays />\n      <AssignReadingGuides />\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  RubricSectionEnum,\n  RubricEntryInput,\n  WritingLevelEnum,\n  ReturnGradedEssayInput,\n  ReturnedRubricEntryInput,\n  SubmitReadingGuideInput,\n} from '../../../../../../../schemaTypes'\n\nexport type paperBasedMachineSchema = {\n  states: {\n    loadAssignment: {}\n    assignmentSelect: {\n      states: {\n        transition: {}\n        essay: {}\n        readingGuide: {}\n      }\n    }\n  }\n}\nexport type paperBasedMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_ASSIGNMENT_ID'; payload: string }\n  | {\n      type: 'SET_ASSIGNMENT_TYPE'\n      payload:\n        | 'ArticleReview'\n        | 'Quiz'\n        | 'Essay'\n        | 'ReadingGuide'\n        | 'SpecialAssignment'\n        | 'TextAnalysis'\n    }\n  | {\n      type: 'SET_ASSIGNMENT_INFO'\n      payload: {\n        student: { firstName: string; lastName: string }\n        readings: { readingPages: number; readingSections: string }\n      }\n    }\n  | { type: 'SET_LATE'; payload: boolean }\n  // For Essays\n  | {\n      type: 'SET_INTITIAL_DRAFT'\n      payload: ReturnGradedEssayInput\n    }\n  | { type: 'SET_DRAFT'; payload: ReturnGradedEssayInput }\n  | { type: 'SET_DRAFT_SELECTOR'; payload: number }\n  | { type: 'SET_DRAFT_NUMBER_TO_GRADE'; payload: number }\n  | { type: 'SET_DRAFT_TO_RETURN'; payload: string }\n  | { type: 'SET_CURRENT_RUBRIC_SECTION'; payload: RubricSectionEnum }\n  | { type: 'SET_RUBRIC_ENTRY'; payload: RubricEntryInput }\n  | { type: 'SET_RUBRIC_ENTRIES'; payload: ReturnedRubricEntryInput[] }\n  | { type: 'SET_SCORE'; payload: number }\n  | { type: 'SET_COMMENT'; payload: string }\n  | { type: 'RESET_COMMENT' }\n  | { type: 'ADD_ADDITIONAL_COMMENT'; payload: string }\n  | { type: 'REMOVE_COMMENT'; payload: number }\n  | { type: 'SET_READING_GUIDE_LATENESS'; payload: boolean }\n  | { type: 'SET_READING_GUIDE_COMPLETION'; payload: boolean }\n\nexport type paperBasedMachineContext = {\n  assignmentId: string\n  assignmentType:\n    | 'ArticleReview'\n    | 'Quiz'\n    | 'Essay'\n    | 'ReadingGuide'\n    | 'SpecialAssignment'\n    | 'TextAnalysis'\n\n  student: { firstName: string; lastName: string }\n  readings: { readingPages: number; readingSections: string }\n  isLate: boolean\n  essay: {\n    currentRubricSection: RubricSectionEnum\n    rubricEntry: RubricEntryInput\n    writingLevel: WritingLevelEnum\n    draftSelector: number\n    comment: string\n    draftToGrade: ReturnGradedEssayInput\n  }\n  readingGuide: SubmitReadingGuideInput\n}\n\nexport const paperBasedMachine = Machine<\n  paperBasedMachineContext,\n  paperBasedMachineSchema,\n  paperBasedMachineEvent\n>({\n  id: 'paperBased',\n  initial: 'loadAssignment',\n  context: {\n    assignmentId: '',\n    assignmentType: 'Essay',\n    student: {\n      firstName: '',\n      lastName: '',\n    },\n    readings: {\n      readingPages: 0,\n      readingSections: '',\n    },\n    isLate: false,\n    essay: {\n      draftToGrade: {\n        _id: '',\n        draftNumber: 0,\n        gradingDraft: '',\n        rubricEntries: [],\n        additionalComments: [],\n        score: 0,\n      },\n      draftSelector: 0,\n      rubricEntry: {\n        entry: '',\n        rubricSection: RubricSectionEnum.OVERALL,\n        rubricWritingLevels: [WritingLevelEnum.DEVELOPING],\n        score: 0,\n      },\n      currentRubricSection: RubricSectionEnum.OVERALL,\n      writingLevel: WritingLevelEnum.DEVELOPING,\n      comment: '',\n    },\n    readingGuide: {\n      late: true,\n      paperBased: true,\n      submitTime: new Date().toLocaleString(),\n      readingGuideId: '',\n      completeReadingGuide: true,\n      responsibilityPoints: 10,\n    },\n  },\n  states: {\n    loadAssignment: {\n      on: {\n        NEXT: 'assignmentSelect',\n        SET_ASSIGNMENT_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              assignmentId: evt.payload,\n              readingGuide: {\n                ...ctx.readingGuide,\n                readingGuideId: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_ASSIGNMENT_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              assignmentType: evt.payload,\n            }\n          }),\n        },\n        SET_LATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              isLate: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    assignmentSelect: {\n      initial: 'transition',\n      states: {\n        transition: {\n          always: [\n            {\n              target: 'essay',\n              cond: (ctx) => {\n                return ctx.assignmentType === 'Essay'\n              },\n            },\n            {\n              target: 'readingGuide',\n              cond: (ctx) => {\n                return ctx.assignmentType === 'ReadingGuide'\n              },\n            },\n          ],\n        },\n        essay: {\n          on: {\n            SET_LATE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  isLate: evt.payload,\n                }\n              }),\n            },\n            SET_INTITIAL_DRAFT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essay: {\n                    ...ctx.essay,\n                    draftToGrade: evt.payload,\n                  },\n                }\n              }),\n            },\n          },\n        },\n        readingGuide: {\n          on: {\n            SET_LATE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  isLate: evt.payload,\n                }\n              }),\n            },\n            SET_READING_GUIDE_LATENESS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: {\n                    ...ctx.readingGuide,\n                    late: evt.payload,\n                  },\n                }\n              }),\n            },\n            SET_READING_GUIDE_COMPLETION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  readingGuide: {\n                    ...ctx.readingGuide,\n                    completeReadingGuide: evt.payload,\n                  },\n                }\n              }),\n            },\n          },\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  paperBasedMachine,\n  paperBasedMachineContext,\n  paperBasedMachineEvent,\n} from './paperBasedMachine'\n\nconst PaperBasedContext = createContext<any>(undefined)\n\ntype PaperBasedContextProps = {\n  children: ReactNode\n}\n\nexport const PaperBasedContextProvider: FC<PaperBasedContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(paperBasedMachine)\n  return (\n    <PaperBasedContext.Provider value={[state, event]}>\n      {children}\n    </PaperBasedContext.Provider>\n  )\n}\n\nexport function usePaperBasedContextProvider() {\n  const context = useContext(PaperBasedContext)\n  if (context === undefined) {\n    throw new Error(\n      'usePaperBasedContextProvider must be used within a PaperBasedContextProvider',\n    )\n  }\n  return context as [\n    State<paperBasedMachineContext, paperBasedMachineEvent, any, any>,\n    (event: paperBasedMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { SUBMIT_FINAL_DRAFT_MUTATION } from '../../../../../student/assignments/essays/assigned-essays/SubmitEssay'\nimport {\n  submitEssayFinalDraft,\n  submitEssayFinalDraftVariables,\n  SubmittedFinalDraftsInput,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  resubmitEssayFinalDraft,\n  resubmitEssayFinalDraftVariables,\n  findAssignmentById_findAssignmentById_assignment_Essay,\n} from '../../../../../../../schemaTypes'\nimport { useMutation } from '@apollo/client'\nimport { usePaperBasedContextProvider } from '../state/PaperBasedContext'\nimport { useNavigate, Navigate } from 'react-router'\nimport { RESUBMIT_ESSAY_FINAL_DRAFT_MUTATION } from '../../../../../student/assignments/essays/completed-essays/SubmitRedoneEssay'\n\nexport type SubmitEssayProps = {\n  essay: findAssignmentById_findAssignmentById_assignment_Essay\n}\n\nexport const SubmitEssay = ({ essay }: SubmitEssayProps) => {\n  const [state] = usePaperBasedContextProvider()\n\n  const navigate = useNavigate()\n  const paperBasedValue = [\n    {\n      type: 'paragraph',\n      children: [{ text: 'PaperBased' }],\n    },\n  ]\n\n  const submittedFinalDraft: SubmittedFinalDraftsInput = {\n    draftNumber: 0, //Because this component will always be the first draft\n    draft: JSON.stringify(paperBasedValue),\n    gradingDraft: JSON.stringify(paperBasedValue),\n    rubricEntries: [],\n    additionalComments: [],\n    score: 0,\n    graded: false,\n  }\n\n  const currentDraftNumber =\n    essay.finalDraft?.submittedFinalDraft[\n      essay.finalDraft.submittedFinalDraft.length - 1\n    ].draftNumber! + 1\n\n  const resubmittedFinalDraft: SubmittedFinalDraftsInput = {\n    draftNumber: currentDraftNumber, //Because this component will always be the first draft\n    draft: JSON.stringify(paperBasedValue),\n    gradingDraft: JSON.stringify(paperBasedValue),\n    rubricEntries: [],\n    additionalComments: [],\n    score: 0,\n    graded: false,\n  }\n\n  const [submitPaperBasedEssay] = useMutation<\n    submitEssayFinalDraft,\n    submitEssayFinalDraftVariables\n  >(SUBMIT_FINAL_DRAFT_MUTATION, {\n    variables: {\n      input: {\n        _id: essay._id!,\n        late: state.context.isLate,\n        submitTime: new Date().toLocaleString(),\n        submittedFinalDraft: submittedFinalDraft,\n        paperBased: true,\n        responsibilityPoints: 5,\n      },\n    },\n    onCompleted: () => navigate(`/dashboard/assignments/grade/${essay._id}`),\n    refetchQueries: ['findAssignmentById', 'findEssayToGradeById'],\n  })\n\n  const [resubmitEssayFinalDraft] = useMutation<\n    resubmitEssayFinalDraft,\n    resubmitEssayFinalDraftVariables\n  >(RESUBMIT_ESSAY_FINAL_DRAFT_MUTATION, {\n    variables: {\n      input: {\n        essayId: state.context.assignmentId,\n        submittedFinalDraft: resubmittedFinalDraft,\n      },\n    },\n    onCompleted: () => navigate(`/dashboard/assignments/grade/${essay._id}`),\n    refetchQueries: ['findAssignmentById', 'findEssayToGradeById'],\n  })\n\n  const isGraded =\n    essay.finalDraft?.submittedFinalDraft[\n      essay.finalDraft.submittedFinalDraft.length - 1\n    ].graded === false\n\n  return (\n    <>\n      {essay.finalDraft ? (\n        <>\n          {!isGraded ? (\n            <button\n              onClick={() => {\n                resubmitEssayFinalDraft()\n              }}\n            >\n              Resubmission\n            </button>\n          ) : (\n            <Navigate to={`/dashboard/assignments/grade/${essay._id}`} />\n          )}\n        </>\n      ) : (\n        <button\n          onClick={() => {\n            submitPaperBasedEssay()\n          }}\n        >\n          Grade\n        </button>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { findAssignmentById_findAssignmentById_assignment } from '../../../../../../schemaTypes'\nimport { usePaperBasedContextProvider } from './state/PaperBasedContext'\n\nexport type SetLatenessProps = {\n  essay: findAssignmentById_findAssignmentById_assignment\n}\n\nexport const SetLateness: FC<SetLatenessProps> = () => {\n  const [state, event] = usePaperBasedContextProvider()\n  return (\n    <>\n      <button\n        onClick={() =>\n          event({ type: 'SET_LATE', payload: !state.context.isLate })\n        }\n      >\n        {state.context.isLate ? 'Assignment is Late' : 'Assignment is not late'}\n      </button>\n    </>\n  )\n}\n","import React, { FC } from 'react'\n\nimport {\n  startReadingGuide,\n  startReadingGuideVariables,\n  findAssignmentById_findAssignmentById_assignment_ReadingGuide,\n  submitReadingGuide,\n  submitReadingGuideVariables,\n} from '../../../../../../../schemaTypes'\nimport { useMutation } from '@apollo/client'\n// import { SUBMIT_READING_GUIDE_MUTATION } from '../../../../../../student/assignments/readingGuides/SubmitReadingGuide'\nimport { usePaperBasedContextProvider } from '../state/PaperBasedContext'\nimport { START_READING_GUIDE_MUTATION } from '../../../../../student/assignments/readingGuides/assigned-reading-guides/ReadingGuideToComplete'\nimport { SUBMIT_READING_GUIDE_MUTATION } from '../../../../../student/assignments/readingGuides/assigned-reading-guides/SubmitReadingGuide'\n// import { START_READING_GUIDE_MUTATION } from '../../../../../../student/assignments/readingGuides/ReadingGuideToComplete'\n\nexport type SubmitReadingGuideProps = {\n  readingGuideId: string\n  readingGuide: findAssignmentById_findAssignmentById_assignment_ReadingGuide\n}\n\nexport const SubmitReadingGuide = ({\n  readingGuideId,\n  readingGuide,\n}: SubmitReadingGuideProps) => {\n  const [state, event] = usePaperBasedContextProvider()\n\n  const [startPaperBasedReadingGuide] = useMutation<\n    startReadingGuide,\n    startReadingGuideVariables\n  >(START_READING_GUIDE_MUTATION, {\n    variables: {\n      input: { paperBased: true, readingGuideId },\n    },\n    refetchQueries: ['findAssignmentById'],\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const [submitPaperBasedReadingGuide] = useMutation<\n    submitReadingGuide,\n    submitReadingGuideVariables\n  >(SUBMIT_READING_GUIDE_MUTATION, {\n    variables: {\n      input: state.context.readingGuide,\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findAssignmentById'],\n  })\n\n  return (\n    <>\n      {!readingGuide.paperBased ? (\n        <button onClick={() => startPaperBasedReadingGuide()}>\n          Start Reading Guide\n        </button>\n      ) : (\n        <>\n          <div>Is the Reading Guide complete?</div>\n          <select\n            onChange={(e: any) => {\n              event({\n                type: 'SET_READING_GUIDE_COMPLETION',\n                payload: e.target.value === 'true' ? true : false,\n              })\n            }}\n          >\n            <option value={'true'}>Yes</option>\n            <option value={'false'}>No</option>\n          </select>\n          <div>Is the Reading Guide late?</div>\n          <select\n            onChange={(e: any) => {\n              event({\n                type: 'SET_READING_GUIDE_LATENESS',\n                payload: e.target.value === 'true' ? true : false,\n              })\n            }}\n          >\n            <option value={'true'}>Yes</option>\n            <option value={'false'}>No</option>\n          </select>\n\n          <button onClick={() => submitPaperBasedReadingGuide()}>\n            Submit Reading Guide\n          </button>\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useParams } from 'react-router'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findAssignmentByIdVariables,\n  findAssignmentById,\n  findAssignmentById_findAssignmentById_assignment,\n} from '../../../../../../schemaTypes'\nimport { usePaperBasedContextProvider } from './state/PaperBasedContext'\nimport { SubmitEssay } from './essay/SubmitEssay'\nimport { SetLateness } from './SetLateness'\nimport { SubmitReadingGuide } from './reading-guide/SubmitReadingGuide'\n\nexport type GradePaperBasedAssignmentProps = {}\n\nexport const FIND_ASSIGNMENT_BY_ID_QUERY = gql`\n  query findAssignmentById($input: FindAssignmentByIdInput!) {\n    findAssignmentById(input: $input) {\n      assignment {\n        _id\n        hasOwner {\n          firstName\n          lastName\n        }\n        late\n        readings {\n          readingPages\n          readingSections\n        }\n        ... on Essay {\n          workingDraft {\n            draft\n          }\n          topic {\n            writingLevel\n            question\n          }\n          finalDraft {\n            submitTime\n            submitted\n            returned\n            submittedFinalDraft {\n              draft\n              gradingDraft\n              draftNumber\n              graded\n              score\n              additionalComments\n              rubricEntries {\n                _id\n                entry\n                score\n                rubricSection\n              }\n            }\n          }\n        }\n        ... on ReadingGuide {\n          paperBased\n          graded\n          completed\n          readingGuideFinal {\n            submitted\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GradePaperBasedAssignment: FC<\n  GradePaperBasedAssignmentProps\n> = () => {\n  const [state, event] = usePaperBasedContextProvider()\n\n  const { assignmentId } = useParams()\n  const { loading, data } = useQuery<\n    findAssignmentById,\n    findAssignmentByIdVariables\n  >(FIND_ASSIGNMENT_BY_ID_QUERY, {\n    variables: {\n      input: { assignmentId: assignmentId! },\n    },\n    onCompleted: (data) => {\n      event({ type: 'SET_ASSIGNMENT_ID', payload: assignmentId! })\n      event({\n        type: 'SET_ASSIGNMENT_TYPE',\n        payload: data.findAssignmentById.assignment.__typename!,\n      })\n      event({\n        type: 'SET_LATE',\n        payload: data.findAssignmentById.assignment.late,\n      })\n      event({ type: 'NEXT' })\n      if (data.findAssignmentById.assignment.__typename === 'ReadingGuide') {\n        // event({type: SET_, payload: })\n      }\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const assignment: findAssignmentById_findAssignmentById_assignment =\n    data?.findAssignmentById.assignment!\n\n  return (\n    <>\n      <>\n        <span>{data?.findAssignmentById.assignment.hasOwner.firstName} </span>\n        <span>{data?.findAssignmentById.assignment.hasOwner.lastName}</span>\n      </>\n      <>\n        <div>\n          Pages: {data?.findAssignmentById.assignment.readings.readingPages}:{' '}\n          {data?.findAssignmentById.assignment.readings.readingSections}\n        </div>\n      </>\n      {assignment.__typename === 'Essay' &&\n        data?.findAssignmentById.assignment.late && (\n          <SetLateness essay={assignment} />\n        )}\n      {assignment.__typename === 'Essay' &&\n        state.matches('assignmentSelect.essay') && (\n          <>\n            <div>{assignment.topic.question}</div>\n            <SubmitEssay essay={assignment} />\n          </>\n        )}\n      {assignment.__typename === 'ReadingGuide' &&\n      state.matches('assignmentSelect.readingGuide') &&\n      !assignment.graded ? (\n        <SubmitReadingGuide\n          readingGuideId={assignmentId!}\n          readingGuide={assignment}\n        />\n      ) : (\n        <>\n          {assignment.__typename === 'ReadingGuide' && (\n            <div>{assignment.completed ? 'Complete' : 'Incomplete'}</div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\n// export type ReadingGuideCom[let]\n\n// export const ReadingGuideComplete\n","import { Machine, assign } from 'xstate'\nimport {\n  CreateArticleReviewsInput,\n  MarkingPeriodEnum,\n  me_me_Teacher_teachesCourses,\n  TimeOfDay,\n} from '../../../../../../schemaTypes'\n\nexport type articleReviewMachineSchema = {\n  states: {\n    idle: {}\n    create: {}\n    review: {}\n  }\n}\nexport type articleReviewMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'CREATE' }\n  | { type: 'REVIEW' }\n  | { type: 'IDLE' }\n  | { type: 'SET_ASSIGNED_DATE'; payload: string }\n  | { type: 'SET_DUE_DATE'; payload: string }\n  | { type: 'SET_DUE_TIME'; payload: TimeOfDay }\n  | { type: 'SET_ASSIGNED_COURSE_ID'; payload: string[] }\n  | { type: 'SET_ASSIGNER_ID'; payload: string }\n  | { type: 'SET_MARKING_PERIOD'; payload: MarkingPeriodEnum }\n  | { type: 'SET_COURSE_TO_REVIEW'; payload: string }\n  | { type: 'SET_SELECTED_DATE'; payload: string }\n\nexport type articleReviewMachineContext = {\n  articleReviewToCreate: CreateArticleReviewsInput\n  courseToReview: string\n  selectedDate: string\n}\n\nexport const articleReviewMachine = Machine<\n  articleReviewMachineContext,\n  articleReviewMachineSchema,\n  articleReviewMachineEvent\n>({\n  id: 'articleReview',\n  initial: 'idle',\n  context: {\n    articleReviewToCreate: {\n      assignedCourseId: [],\n      assignedDate: new Date().toLocaleDateString(),\n      dueDate: '',\n      dueTime: TimeOfDay.BEFORE_CLASS,\n      hasAssignerId: '',\n      markingPeriod: MarkingPeriodEnum.FIRST,\n    },\n    courseToReview: '',\n    selectedDate: '',\n  },\n  states: {\n    idle: { on: { CREATE: 'create', REVIEW: 'review' } },\n    create: {\n      on: {\n        REVIEW: 'review',\n        IDLE: 'idle',\n        SET_ASSIGNED_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToCreate: {\n                ...ctx.articleReviewToCreate,\n                assignedDate: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_DUE_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToCreate: {\n                ...ctx.articleReviewToCreate,\n                dueDate: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_DUE_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToCreate: {\n                ...ctx.articleReviewToCreate,\n                dueTime: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_ASSIGNED_COURSE_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToCreate: {\n                ...ctx.articleReviewToCreate,\n                assignedCourseId: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_ASSIGNER_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToCreate: {\n                ...ctx.articleReviewToCreate,\n                hasAssignerId: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_MARKING_PERIOD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              articleReviewToCreate: {\n                ...ctx.articleReviewToCreate,\n                markingPeriod: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n    review: {\n      on: {\n        CREATE: 'create',\n        SET_COURSE_TO_REVIEW: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseToReview: evt.payload,\n            }\n          }),\n        },\n        IDLE: 'idle',\n        SET_SELECTED_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              selectedDate: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  articleReviewMachine,\n  articleReviewMachineContext,\n  articleReviewMachineEvent,\n} from './articleReviewMachine'\n\nconst ArticleReviewContext = createContext<any>(undefined)\n\ntype ArticleReviewContextProps = {\n  children: ReactNode\n}\n\nexport const ArticleReviewContextProvider: FC<ArticleReviewContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(articleReviewMachine)\n  return (\n    <ArticleReviewContext.Provider value={[state, event]}>\n      {children}\n    </ArticleReviewContext.Provider>\n  )\n}\n\nexport function useArticleReviewContextProvider() {\n  const context = useContext(ArticleReviewContext)\n  if (context === undefined) {\n    throw new Error(\n      'useArticleReviewContextProvider must be used within a ArticleReviewContextProvider',\n    )\n  }\n  return context as [\n    State<articleReviewMachineContext, articleReviewMachineEvent, any, any>,\n    (event: articleReviewMachineEvent) => void,\n  ]\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC } from 'react'\nimport { useEffect } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport {\n  createArticleReviews,\n  createArticleReviewsVariables,\n  MarkingPeriodEnum,\n  me_me_Teacher,\n  me_me_Teacher_teachesCourses,\n  TimeOfDay,\n} from '../../../../../../schemaTypes'\nimport { dateConverter } from '../../../../../../utils'\n\nimport { useArticleReviewContextProvider } from '../state-styles/ArticleReviewContext'\n\nexport type CreateArticleReviewsProps = {}\n\nexport const CREATE_ARTICLE_REVIEWS_MUTATION = gql`\n  mutation createArticleReviews($input: CreateArticleReviewsInput!) {\n    createArticleReviews(input: $input) {\n      articleReviews {\n        _id\n      }\n    }\n  }\n`\n\nexport const CreateArticleReviews: FC<CreateArticleReviewsProps> = () => {\n  const [state, event] = useArticleReviewContextProvider()\n  const me: me_me_Teacher = useUserContextProvider()\n  const { markingPeriodEnum, timeOfDayEnum } = useEnumContextProvider()\n\n  const courses = me.teachesCourses\n    .filter((course) => course.name !== 'Cohort Class')\n    .map((course) => course._id!)\n\n  const fakeCourse = me.teachesCourses\n    .filter((course) => course.name === 'Cohort Class')\n    .map((course) => course._id!)\n\n  useEffect(() => {\n    event({ type: 'SET_ASSIGNER_ID', payload: me._id! })\n    event({\n      type: 'SET_ASSIGNED_COURSE_ID',\n      payload: courses,\n    })\n  }, [me])\n\n  const [createArticleReviews] = useMutation<\n    createArticleReviews,\n    createArticleReviewsVariables\n  >(CREATE_ARTICLE_REVIEWS_MUTATION, {\n    variables: { input: state.context.articleReviewToCreate },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n\n  const readyToCreate =\n    state.context.articleReviewToCreate.assignedDate !== '' &&\n    state.context.articleReviewToCreate.dueDate !== '' &&\n    state.context.articleReviewToCreate.assignedCourseId\n  return (\n    <>\n      <div onClick={() => event({ type: 'PREVIOUS' })}>Back</div>\n      <div>Create Article Reviews</div>\n      <div>Assigned Date: </div>\n      <input\n        type=\"date\"\n        onChange={(e: any) =>\n          event({\n            type: 'SET_ASSIGNED_DATE',\n            payload: dateConverter(e.target.value),\n          })\n        }\n      />\n      <div>Due Date: </div>\n      <input\n        type=\"date\"\n        onChange={(e: any) =>\n          event({\n            type: 'SET_DUE_DATE',\n            payload: dateConverter(e.target.value),\n          })\n        }\n      />\n      <span>Time: </span>\n      <select\n        value={state.context.articleReviewToCreate.dueTime}\n        onChange={(e: any) => {\n          event({ type: 'SET_DUE_TIME', payload: e.target.value })\n        }}\n      >\n        {timeOfDayEnum.map((time: TimeOfDay) => (\n          <option key={time!} value={time!}>\n            {time === 'BEFORE_SCHOOL'\n              ? 'Before School'\n              : time === 'BEFORE_CLASS'\n                ? 'Before Class'\n                : time === 'END_OF_CLASS'\n                  ? 'After Class'\n                  : 'After School'}\n          </option>\n        ))}\n      </select>\n      <div>Marking Period: </div>\n      <select\n        onChange={(e: any) =>\n          event({ type: 'SET_MARKING_PERIOD', payload: e.target.value })\n        }\n      >\n        {markingPeriodEnum.map((mp: MarkingPeriodEnum) => (\n          <option key={mp} value={mp}>\n            {mp}\n          </option>\n        ))}\n      </select>\n      {readyToCreate && (\n        <button onClick={() => createArticleReviews()}>Create</button>\n      )}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  returnArticleReview,\n  returnArticleReviewVariables,\n} from '../../../../../../schemaTypes'\nimport { useArticleReviewContextProvider } from '../state-styles/ArticleReviewContext'\nimport {\n  ReturnedStatus,\n  ReturnReview,\n} from '../state-styles/articleReviewStyles'\n\nexport type ArticleReviewReturnProps = {\n  reviewId: string\n}\n\nexport const RETURN_ARTICLE_REVIEW_MUTATION = gql`\n  mutation returnArticleReview($input: ReturnArticleReviewInput!) {\n    returnArticleReview(input: $input) {\n      articleReview {\n        _id\n      }\n    }\n  }\n`\n\nexport const ArticleReviewReturn: FC<ArticleReviewReturnProps> = ({\n  reviewId,\n}) => {\n  // const [state, event] = useArticleReviewContextProvider()\n  const [returnArticleReview, { called }] = useMutation<\n    returnArticleReview,\n    returnArticleReviewVariables\n  >(RETURN_ARTICLE_REVIEW_MUTATION, {\n    variables: { input: { articleReviewId: reviewId } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findArticleReviewsByCourse'],\n  })\n\n  return (\n    <ReturnReview onClick={() => returnArticleReview()}>\n      {called ? <div>...</div> : <div>Return</div>}\n    </ReturnReview>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, {\n  Dispatch,\n  FC,\n  Fragment,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport {\n  findArticleReviewsByCourse,\n  findArticleReviewsByCourseVariables,\n  MarkingPeriodEnum,\n  me_me_Teacher,\n} from '../../../../../../schemaTypes'\nimport { phraseCapitalizer } from '../../../../../../utils'\nimport { useArticleReviewContextProvider } from '../state-styles/ArticleReviewContext'\nimport {\n  CurrentMarkingPeriodContainer,\n  DatesToReviewContainer,\n  DateToReview,\n  MarkingPeriodSelectorBack,\n  MarkingPeriodSelectorContainer,\n  MarkingPeriodSelectorForward,\n  ReturnedStatus,\n  ReturnReview,\n  ReviewList,\n  ReviewListContainer,\n  ReviewMainDisplay,\n  ReviewName,\n  Title,\n  TitleContainer,\n} from '../state-styles/articleReviewStyles'\nimport { ArticleReviewReturn } from './ArticleReviewReturn'\n\nexport type ReviewDisplayProps = {\n  // mp: MarkingPeriodEnum\n  // setMp: Dispatch<SetStateAction<MarkingPeriodEnum>>\n}\n\nexport const FIND_ARTICLE_REVIEWS_BY_COURSE_QUERY = gql`\n  query findArticleReviewsByCourse($input: FindArticleReviewsByCourseInput!) {\n    findArticleReviewsByCourse(input: $input) {\n      articleReviews {\n        _id\n        score {\n          earnedPoints\n        }\n        hasOwner {\n          firstName\n          lastName\n          schoolId\n          _id\n        }\n        assignedDate\n        dueDate\n        completed\n        late\n        returned\n      }\n    }\n  }\n`\nexport const ReviewDisplay: FC<ReviewDisplayProps> = () => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const [state, event] = useArticleReviewContextProvider()\n  const [gradingNeededIndicator, setGradingNeededIndicator] = useState(false)\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [mp, setMp] = useState(markingPeriodState.context.currentMarkingPeriod)\n\n  const { loading, data } = useQuery<\n    findArticleReviewsByCourse,\n    findArticleReviewsByCourseVariables\n  >(FIND_ARTICLE_REVIEWS_BY_COURSE_QUERY, {\n    variables: {\n      input: {\n        courseId: state.context.courseToReview,\n        markingPeriod: mp,\n      },\n    },\n    pollInterval: 10000,\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  useEffect(() => {\n    if (\n      data?.findArticleReviewsByCourse.articleReviews\n        .filter((article) => article.completed)\n        .some((article) => !article.returned)\n    ) {\n      setGradingNeededIndicator(true)\n    } else setGradingNeededIndicator(false)\n  }, [data?.findArticleReviewsByCourse.articleReviews])\n\n  // const markingPeriodIndex = markingPeriodEnum.findIndex(index=> )\n\n  const assignedDateList = data?.findArticleReviewsByCourse.articleReviews\n    .map((review) => review.assignedDate)\n    .reduce(\n      (accum: string[], cValue) =>\n        accum.includes(cValue) ? [...accum] : [...accum, cValue],\n      [],\n    )\n  const dateToReview = data?.findArticleReviewsByCourse.articleReviews.filter(\n    (review) => {\n      return review.assignedDate === state.context.selectedDate\n    },\n  )\n  const reviewNeedsGrading = data?.findArticleReviewsByCourse.articleReviews\n    .filter((review) => review.completed && !review.returned)\n    .map((review) => review.assignedDate)\n    .reduce(\n      (accum: string[], cValue) =>\n        accum.includes(cValue) ? [...accum] : [...accum, cValue],\n      [],\n    )\n  const [courseName] = me.teachesCourses\n    .filter((courseName) => courseName._id === state.context.courseToReview)\n    .map((course) => course.name)\n\n  const index = markingPeriodEnum.findIndex((c: MarkingPeriodEnum) => c === mp)\n\n  return (\n    <ReviewMainDisplay>\n      <TitleContainer>\n        <Title needsGrading={gradingNeededIndicator}>\n          {gradingNeededIndicator ? '*' : ' '}Article Reviews\n        </Title>\n      </TitleContainer>\n      <MarkingPeriodSelectorContainer>\n        {index > 0 && (\n          <MarkingPeriodSelectorBack\n            onClick={() => {\n              setMp(markingPeriodEnum[index - 1])\n            }}\n          >\n            &lt;\n          </MarkingPeriodSelectorBack>\n        )}\n        <CurrentMarkingPeriodContainer>\n          <div>{phraseCapitalizer(mp)} Marking Period</div>\n        </CurrentMarkingPeriodContainer>\n        {index < 3 && (\n          <MarkingPeriodSelectorForward\n            onClick={() => setMp(markingPeriodEnum[index + 1])}\n          >\n            &gt;\n          </MarkingPeriodSelectorForward>\n        )}\n      </MarkingPeriodSelectorContainer>\n      <DatesToReviewContainer>\n        {assignedDateList?.map((date) => {\n          console.log(reviewNeedsGrading?.includes(date))\n          return (\n            <DateToReview\n              key={date}\n              selected={state.context.selectedDate === date}\n              needsGradingIndicator={reviewNeedsGrading?.includes(date)!}\n              onClick={(e: any) =>\n                event({ type: 'SET_SELECTED_DATE', payload: date })\n              }\n            >\n              {date}\n            </DateToReview>\n          )\n        })}\n      </DatesToReviewContainer>\n      <ReviewListContainer\n        style={\n          state.context.selectedDate\n            ? { borderTop: ' 1px solid var(--blue)' }\n            : { borderTop: 'none' }\n        }\n      >\n        {dateToReview?.map((reviews, i: number) => (\n          <ReviewList\n            key={reviews._id!}\n            style={\n              i % 2\n                ? { background: 'var(--grey' }\n                : { background: 'var(--white)' }\n            }\n          >\n            <ReviewName key={reviews._id!} returned={reviews.returned}>\n              {reviews.hasOwner.firstName}:{' '}\n              {Number(reviews.score.earnedPoints) > 0\n                ? reviews.score.earnedPoints\n                : 'Missing'}\n              {reviews.late &&\n                Number(reviews.score.earnedPoints) > 0 &&\n                ' late'}\n            </ReviewName>\n            {!reviews.returned && reviews.completed && (\n              <ArticleReviewReturn reviewId={reviews._id!} />\n            )}\n          </ReviewList>\n        ))}\n      </ReviewListContainer>\n    </ReviewMainDisplay>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\nimport { useToggle } from '../../../../../../hooks'\nimport { MarkingPeriodEnum, me_me_Teacher } from '../../../../../../schemaTypes'\nimport { sortByLetter } from '../../../../../../utils'\nimport {\n  CourseSelect,\n  CourseToSelect,\n} from '../../grade-assignments/state-n-styles/GradeEssayContainerStyles'\nimport { useArticleReviewContextProvider } from '../state-styles/ArticleReviewContext'\nimport {\n  NoCourseDisplay,\n  ReviewerContainer,\n  ReviewerCourseSelect,\n  ReviewerCourseSelectBack,\n  ReviewerCourseSelectContainer,\n} from '../state-styles/articleReviewStyles'\nimport { ReviewDisplay } from './ReviewDisplay'\n\nexport type ReviewArticleReviewsProps = {}\n\nexport const ReviewArticleReviews: FC<ReviewArticleReviewsProps> = () => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const [state, event] = useArticleReviewContextProvider()\n\n  const courses = me.teachesCourses.filter(\n    (course) => course.name !== 'Cohort Class',\n  )\n  const fakeCourse = me.teachesCourses.filter(\n    (course) => course.name === 'Cohort Class',\n  )\n\n  return (\n    <ReviewerContainer>\n      <ReviewerCourseSelectContainer>\n        <CourseSelect>\n          <div>Select Course</div>\n          {courses.sort(sortByLetter).map((course) => {\n            return (\n              <CourseToSelect\n                key={course._id!}\n                selected={course._id === state.context.courseToReview}\n                onClick={() => {\n                  event({ type: 'SET_COURSE_TO_REVIEW', payload: course._id! })\n                }}\n              >\n                {course.name}\n              </CourseToSelect>\n            )\n          })}\n        </CourseSelect>\n        <ReviewerCourseSelectBack>\n          <div onClick={() => event({ type: 'IDLE' })}>Back</div>\n        </ReviewerCourseSelectBack>\n      </ReviewerCourseSelectContainer>\n      {state.context.courseToReview ? (\n        <ReviewDisplay />\n      ) : (\n        <NoCourseDisplay>\n          <div>Select a Course to Review</div>\n        </NoCourseDisplay>\n      )}\n    </ReviewerContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { CreateArticleReviews } from './create-articleReviews/CreateArticleReviews'\nimport { ReviewArticleReviews } from './review-articleReviews/ReviewArticleReviews'\nimport { useArticleReviewContextProvider } from './state-styles/ArticleReviewContext'\nimport {\n  ArticleReviewFunctionSelect,\n  ArticleReviewMainMenuDisplay,\n  ArticleReviewManagerContainer,\n  ArticleReviewManagerMenu,\n} from './state-styles/articleReviewStyles'\n\nexport type ArticleReviewManagerProps = {}\n\nexport const ArticleReviewManager: FC<ArticleReviewManagerProps> = () => {\n  const [state, event] = useArticleReviewContextProvider()\n\n  return (\n    <ArticleReviewManagerContainer>\n      {state.matches('idle') && (\n        <ArticleReviewManagerMenu>\n          <ArticleReviewFunctionSelect>\n            <div\n              onClick={() => {\n                console.log('create')\n                event({ type: 'CREATE' })\n              }}\n            >\n              Create\n            </div>\n            <div\n              onClick={() => {\n                console.log('review')\n                event({ type: 'REVIEW' })\n              }}\n            >\n              Review\n            </div>\n          </ArticleReviewFunctionSelect>\n          <ArticleReviewMainMenuDisplay>\n            <div>Article Reviews</div>\n          </ArticleReviewMainMenuDisplay>\n        </ArticleReviewManagerMenu>\n      )}\n      {state.matches('create') && <CreateArticleReviews />}\n      {state.matches('review') && <ReviewArticleReviews />}\n    </ArticleReviewManagerContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport {\n  findEssaysByTopic,\n  findEssaysByTopicVariables,\n} from '../../../../../../schemaTypes'\n\nexport type CheckEssaysProps = {}\n\nexport const FIND_ESSAYS_BY_TOPIC_QUERY = gql`\n  query findEssaysByTopic($input: FindEssaysByTopicInput!) {\n    findEssaysByTopic(input: $input) {\n      essays {\n        _id\n\n        hasOwner {\n          firstName\n          lastName\n        }\n        finalDraft {\n          submittedFinalDraft {\n            gradingDraft\n          }\n        }\n      }\n    }\n  }\n`\nexport const CheckEssays = ({}: CheckEssaysProps) => {\n  const [question, setQuestion] = useState('')\n  const { loading, data } = useQuery<\n    findEssaysByTopic,\n    findEssaysByTopicVariables\n  >(FIND_ESSAYS_BY_TOPIC_QUERY, {\n    variables: {\n      input: { question },\n    },\n    onCompleted: (data) => console.log(data.findEssaysByTopic.essays),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      <div>Check Essays</div>\n      Input Question: <input onChange={(e) => setQuestion(e.target.value)} />\n      <br />\n      {data?.findEssaysByTopic.essays && (\n        <div>\n          {data?.findEssaysByTopic.essays\n            .filter((essay) => essay.finalDraft)\n            .map((essay) => (\n              <div key={essay._id}>\n                <div>\n                  {essay.hasOwner.firstName}, {essay.hasOwner.lastName}\n                </div>\n                <div>\n                  {essay.finalDraft?.submittedFinalDraft.map((draft) => (\n                    <div key={draft.gradingDraft}>{draft.gradingDraft}</div>\n                  ))}\n                </div>\n                <br />\n              </div>\n            ))}\n        </div>\n      )}\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ReadingGuideCheckContainer = styled.div``\n\nexport const ReadingGuidesToCheckContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\n\nexport type ReadingGuideToSelectContainerProps = {\n  alternatingLine: boolean\n}\nexport const ReadingGuideToSelectContainer = styled.div<ReadingGuideToSelectContainerProps>`\n  display: grid;\n  grid-template-columns: 2fr 3fr;\n\n  background-color: ${({ alternatingLine }) =>\n    alternatingLine ? 'var(--grey)' : 'var(--white)'};\n`\n\nexport const ReadingGuides = styled.div`\n  height: 80vh;\n  overflow: scroll;\n`\nexport const ReadingGuideToSelectNameContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n`\n\nexport const ReadingGuideToReviewContainer = styled.div`\n  border: 1px solid var(--blue);\n  height: 100%;\n`\n","import { gql, useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides,\n  ReadingGuideReviewOptionsEnum,\n  reviewReadingGuides,\n  reviewReadingGuidesVariables,\n} from '../../../../../../schemaTypes'\nimport {\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../../utils'\n\nexport type IndividualReadingGuideReviewDisplayProps = {\n  readingGuide: findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides\n}\n\nexport const REVIEW_READING_GUIDE_MUTATION = gql`\n  mutation reviewReadingGuides($input: ReviewReadingGuidesInput!) {\n    reviewReadingGuides(input: $input) {\n      reviewed\n    }\n  }\n`\n\nexport const IndividualReadingGuideReviewDisplay = ({\n  readingGuide,\n}: IndividualReadingGuideReviewDisplayProps) => {\n  const { readingGuideReviewOptionsEnum } = useEnumContextProvider()\n  // const [effort, setEffort] = useState<ReadingGuideReviewOptionsEnum>(\n  //   readingGuideReviewOptionsEnum.GOOD_EFFORT\n  // )\n  // const {\n  //   biggestProblem,\n  //   problems,\n  //   howArePeopleInvolvedInProblems,\n  //   importantPeople,\n  //   reasonForBiggestProblem,\n  //   sectionConsequences,\n  // } = readingGuide.readingGuideFinal!\n  const [reviewReadingGuides] = useMutation<\n    reviewReadingGuides,\n    reviewReadingGuidesVariables\n  >(REVIEW_READING_GUIDE_MUTATION, {\n    // variables: {\n    //   input: { effort, readingGuideId: readingGuide._id! },\n    // },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findReadingGuidesByCourseIdAndAssignedDate'],\n  })\n  // return (\n  //   <div>\n  //     <div>\n  //       {readingGuide.hasOwner.firstName} {readingGuide.hasOwner.lastName}\n  //     </div>\n  //     <div>\n  //       <div>Problems</div>\n  //       <div>\n  //         {problems.map((p, i: number) => (\n  //           <div key={i}>{p}</div>\n  //         ))}\n  //       </div>\n  //     </div>\n  //     <div>\n  //       <div>Biggest Problem</div>\n  //       <div>{biggestProblem}</div>\n  //     </div>\n  //     <div>\n  //       <div>Why is this the biggest problem?</div>\n  //       <div>{reasonForBiggestProblem}</div>\n  //     </div>\n  //     <div>\n  //       <div>Important People</div>\n  //       <div>\n  //         {importantPeople.map((p, i: number) => (\n  //           <div key={i}>{p}</div>\n  //         ))}\n  //       </div>\n  //     </div>\n  //     <div>\n  //       <div>How are these people involved?</div>\n  //       <div>{howArePeopleInvolvedInProblems}</div>\n  //     </div>\n  //     <div>\n  //       <div>Consequences</div>\n  //       <div>{sectionConsequences}</div>\n  //     </div>\n  //     <div>\n  //       {readingGuideReviewOptionsEnum.map(\n  //         (review: ReadingGuideReviewOptionsEnum) => (\n  //           <button\n  //             key={review}\n  //             onClick={() =>\n  //               reviewReadingGuides({\n  //                 variables: {\n  //                   input: {\n  //                     effort: review,\n  //                     readingGuideId: readingGuide._id!,\n  //                   },\n  //                 },\n  //               })\n  //             }\n  //           >\n  //             {phraseCapitalizer(underscoreEliminator(review))}\n  //           </button>\n  //         )\n  //       )}\n  //     </div>\n  //   </div>\n  // )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { Dispatch, SetStateAction, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides,\n  ReadingGuideReviewOptionsEnum,\n  reviewReadingGuidesVariables,\n  reviewReadingGuides,\n} from '../../../../../../schemaTypes'\nimport {\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../../utils'\nimport { REVIEW_READING_GUIDE_MUTATION } from '../../../teachers-aid/main-screen/readingGuideViewer/IndividualReadingGuideReviewDisplay'\n\nexport type IndividualReadingGuideProps = {\n  readingGuide: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides\n  setReadingGuideToReview: Dispatch<\n    SetStateAction<findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides | null>\n  >\n  readingGuidesToCheck: findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides[]\n}\n\nexport const IndividualReadingGuide = ({\n  readingGuide,\n  setReadingGuideToReview,\n  readingGuidesToCheck,\n}: IndividualReadingGuideProps) => {\n  const { readingGuideReviewOptionsEnum } = useEnumContextProvider()\n\n  const [effort, setEffort] = useState<ReadingGuideReviewOptionsEnum>(\n    readingGuideReviewOptionsEnum.GOOD_EFFORT,\n  )\n\n  const [reviewReadingGuides] = useMutation<\n    reviewReadingGuides,\n    reviewReadingGuidesVariables\n  >(REVIEW_READING_GUIDE_MUTATION, {\n    onCompleted: () =>\n      setReadingGuideToReview(\n        readingGuidesToCheck[readingGuidesToCheck.length - 2],\n      ),\n    refetchQueries: ['findReadingGuidesByMarkingPeriod'],\n  })\n\n  const { readingGuideQuestions } = readingGuide.readingGuideFinal!\n\n  return (\n    <>\n      <div>\n        <div>\n          {readingGuide.hasOwner.firstName} {readingGuide.hasOwner.lastName}\n        </div>\n        <div>Reading Guide: {readingGuide.readings.readingSections}</div>\n        <div>\n          {readingGuideQuestions?.map((q, i: number) => (\n            <div key={i}>\n              <div>{q.questionType}</div>\n              <br />\n              <div>{q.answer}</div>\n            </div>\n          ))}\n        </div>\n        <div>Effort: {readingGuide.effort}</div>\n        <div>\n          {readingGuideReviewOptionsEnum.map(\n            (review: ReadingGuideReviewOptionsEnum) => (\n              <button\n                key={review}\n                onClick={() =>\n                  reviewReadingGuides({\n                    variables: {\n                      input: {\n                        effort: review,\n                        readingGuideId: readingGuide._id!,\n                      },\n                    },\n                  })\n                }\n              >\n                {phraseCapitalizer(underscoreEliminator(review))}\n              </button>\n            ),\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport {\n  findReadingGuidesByMarkingPeriod,\n  findReadingGuidesByMarkingPeriodVariables,\n  findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides,\n  MarkingPeriodEnum,\n} from '../../../../../../schemaTypes'\nimport { phraseCapitalizer } from '../../../../../../utils'\nimport {\n  MarkingPeriodSelectorContainer,\n  MarkingPeriodSelectorBack,\n  CurrentMarkingPeriodContainer,\n  MarkingPeriodSelectorForward,\n} from '../../article-reviews/state-styles/articleReviewStyles'\nimport { MarkingPeriodSelector } from '../../grade-assignments/state-n-styles/GradeEssayContainerStyles'\nimport {\n  ReadingGuideCheckContainer,\n  ReadingGuides,\n  ReadingGuidesToCheckContainer,\n  ReadingGuideToReviewContainer,\n  ReadingGuideToSelectContainer,\n  ReadingGuideToSelectNameContainer,\n} from '../state-n-styles/CheckAssignmentsStyles'\nimport { IndividualReadingGuide } from './IndividualReadingGuide'\nimport { ReadingGuideQuestionReview } from '../../../../student/assignments/readingGuides/state-and-styles/readingGuideStyles'\n\nexport type CheckReadingGuidesProps = {}\n\nexport const FIND_READING_GUIDES_BY_MARKING_PERIOD_QUERY = gql`\n  query findReadingGuidesByMarkingPeriod(\n    $input: FindReadingGuidesByMarkingPeriodInput!\n  ) {\n    findReadingGuidesByMarkingPeriod(input: $input) {\n      readingGuides {\n        _id\n        hasOwner {\n          firstName\n          lastName\n        }\n        reviewed\n        completed\n        exempt\n        effort\n        readings {\n          readingSections\n        }\n        dueDate\n        readingGuideFinal {\n          readingGuideQuestions {\n            answer\n            questionType\n          }\n          submitted\n        }\n      }\n    }\n  }\n`\n\nexport const CheckReadingGuides = ({}: CheckReadingGuidesProps) => {\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [readingGuideToReview, setReadingGuideToReview] =\n    useState<null | findReadingGuidesByMarkingPeriod_findReadingGuidesByMarkingPeriod_readingGuides>(\n      null,\n    )\n  const [markingPeriodToGrade, setMarkingPeriodToGrade] = useState(\n    markingPeriodState.context.currentMarkingPeriod,\n  )\n  const index = markingPeriodEnum.findIndex(\n    (c: MarkingPeriodEnum) => c === markingPeriodToGrade,\n  )\n  const { loading, data } = useQuery<\n    findReadingGuidesByMarkingPeriod,\n    findReadingGuidesByMarkingPeriodVariables\n  >(FIND_READING_GUIDES_BY_MARKING_PERIOD_QUERY, {\n    variables: {\n      input: { markingPeriod: markingPeriodToGrade },\n    },\n    onCompleted: (data) =>\n      console.log(\n        data.findReadingGuidesByMarkingPeriod.readingGuides.filter(\n          (rg) => !rg.exempt && !rg.reviewed && rg.completed,\n        ),\n      ),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const readingGuidesToCheck =\n    data?.findReadingGuidesByMarkingPeriod.readingGuides.filter(\n      (rg) => !rg.exempt && !rg.reviewed && rg.completed,\n    )!\n  console.log(readingGuideToReview)\n  return (\n    <ReadingGuideCheckContainer>\n      <div>Reading Guides</div>\n      <MarkingPeriodSelector>\n        <MarkingPeriodSelectorContainer>\n          {index > 0 && (\n            <MarkingPeriodSelectorBack\n              onClick={() => {\n                setMarkingPeriodToGrade(markingPeriodEnum[index - 1])\n              }}\n            >\n              &lt;\n            </MarkingPeriodSelectorBack>\n          )}\n          <CurrentMarkingPeriodContainer>\n            <div>{phraseCapitalizer(markingPeriodToGrade)} Marking Period</div>\n          </CurrentMarkingPeriodContainer>\n          {index < 3 && (\n            <MarkingPeriodSelectorForward\n              onClick={() =>\n                setMarkingPeriodToGrade(markingPeriodEnum[index + 1])\n              }\n            >\n              &gt;\n            </MarkingPeriodSelectorForward>\n          )}\n        </MarkingPeriodSelectorContainer>\n      </MarkingPeriodSelector>\n      <ReadingGuidesToCheckContainer>\n        <ReadingGuides>\n          {readingGuidesToCheck.map((rg, i) => (\n            <ReadingGuideToSelectContainer\n              key={rg._id}\n              alternatingLine={i % 2 === 0}\n              onClick={() => setReadingGuideToReview(rg)}\n            >\n              <ReadingGuideToSelectNameContainer>\n                <div>{rg.hasOwner.firstName}</div>\n                <div>{rg.hasOwner.lastName}</div>\n              </ReadingGuideToSelectNameContainer>\n              <div>{rg.readings.readingSections}</div>\n            </ReadingGuideToSelectContainer>\n          ))}\n        </ReadingGuides>\n        <div>\n          {readingGuideToReview ? (\n            <ReadingGuideToReviewContainer>\n              <IndividualReadingGuide\n                readingGuide={readingGuideToReview!}\n                setReadingGuideToReview={setReadingGuideToReview}\n                readingGuidesToCheck={\n                  data?.findReadingGuidesByMarkingPeriod.readingGuides.filter(\n                    (rg) => !rg.exempt && !rg.reviewed && rg.completed,\n                  )!\n                }\n              />\n            </ReadingGuideToReviewContainer>\n          ) : (\n            <ReadingGuideToReviewContainer>\n              No Reading Guide Selected\n            </ReadingGuideToReviewContainer>\n          )}\n        </div>\n      </ReadingGuidesToCheckContainer>\n    </ReadingGuideCheckContainer>\n  )\n}\n","import React from 'react'\nimport { Route, Routes } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { CheckEssays } from './essays/CheckEssays'\nimport { CheckReadingGuides } from './reading-guides/CheckReadingGuides'\n\nexport type CheckAssignmentsProps = {}\n\nexport const CheckAssignments = ({}: CheckAssignmentsProps) => {\n  return (\n    <>\n      <div>Check Assignments</div>\n      <div>\n        <Link to=\"essays\">Essays</Link>\n        <br />\n        <Link to=\"readingGuides\">Reading Guides</Link>\n      </div>\n      <Routes>\n        <Route path=\"essays\" element={<CheckEssays />} />\n        <Route path=\"readingGuides\" element={<CheckReadingGuides />} />\n      </Routes>\n    </>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const AssignmentDashboardDisplayContainer = styled.div`\n  display: grid;\n  height: 95vh;\n  grid-template-rows: 1fr 2fr;\n`\nexport const AssignmentTitle = styled.div`\n  font-size: 5vh;\n  font-weight: 200;\n  align-self: center;\n  justify-self: center;\n`\nexport const AssignmentDisplayOptionsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: 1fr;\n  grid-auto-flow: row;\n  grid-gap: 1vh;\n  padding: 2vh;\n`\nexport const AssignmentsDisplayOptions = styled.div`\n  display: grid;\n  /* grid-template-rows: 1fr 1fr; */\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  font-size: 3vh;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\nexport const AssignmentsDisplayOptionsLink = styled(Link)`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  font-size: 3vh;\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\n","import {\n  AssignmentDashboardDisplayContainer,\n  AssignmentDisplayOptionsContainer,\n  AssignmentsDisplayOptionsLink,\n  AssignmentTitle,\n} from './assignmentDashboardStyles'\n\nexport type AssignmentDashboardDisplayProps = {}\n\nexport const AssignmentDashboardDisplay =\n  ({}: AssignmentDashboardDisplayProps) => {\n    return (\n      <AssignmentDashboardDisplayContainer>\n        <AssignmentTitle>Assignments</AssignmentTitle>\n        <AssignmentDisplayOptionsContainer>\n          <AssignmentsDisplayOptionsLink to=\"create\">\n            Create\n          </AssignmentsDisplayOptionsLink>\n          <AssignmentsDisplayOptionsLink to=\"grade\">\n            Grade\n          </AssignmentsDisplayOptionsLink>\n          <AssignmentsDisplayOptionsLink to=\"check\">\n            Check\n          </AssignmentsDisplayOptionsLink>\n        </AssignmentDisplayOptionsContainer>\n      </AssignmentDashboardDisplayContainer>\n    )\n  }\n","import React, { FC } from 'react'\nimport { Routes, Route, useLocation } from 'react-router'\nimport { CreateAssignment } from './create-assignments/CreateAssignment'\nimport { CreateAssignmentContextProvider } from './create-assignments/state-and-styles/CreateAssignmentContext'\nimport { EditAssignments } from './edit-assignments/EditAssignments'\n\nimport { AssignmentsToGrade } from './grade-assignments/AssignmentsToGrade'\nimport { GradeEssay } from './grade-assignments/essays/essay-grader/GradeEssay'\nimport { GradeEssayContextProvider } from './grade-assignments/essays/essay-grader/state-n-styles/GradeEssayContext'\nimport { AssignAssignments } from './assign-assignments/AssignAssignments'\nimport { GradePaperBasedAssignment } from './grade-assignments/paper-based/GradePaperBasedAssignment'\nimport { PaperBasedContextProvider } from './grade-assignments/paper-based/state/PaperBasedContext'\n\nimport { ArticleReviewManager } from './article-reviews/ArticleReviewManager'\nimport { ArticleReviewContextProvider } from './article-reviews/state-styles/ArticleReviewContext'\nimport { GradeEssayContainerContextProvider } from './grade-assignments/state-n-styles/GradeEssayContainerContext'\nimport { GrammarPractice } from '../development/grammar/GrammarPractice'\nimport { CheckAssignments } from './check-assignments/CheckAssignments'\nimport { useNavSync } from '../../../../hooks/useNavSync'\nimport { AssignmentDashboardDisplay } from './AssignmentDashboardDisplay'\n\nexport type AssignmentDashboardProps = {}\n\nexport const AssignmentDashboard: FC<AssignmentDashboardProps> = () => {\n  const location = useLocation()\n  useNavSync(location, 'ASSIGNMENTS')\n  return (\n    <Routes>\n      <Route path=\"\" element={<AssignmentDashboardDisplay />} />\n      <Route\n        path=\"create\"\n        element={\n          <CreateAssignmentContextProvider>\n            <CreateAssignment />\n          </CreateAssignmentContextProvider>\n        }\n      />\n      <Route\n        path=\"article-reviews\"\n        element={\n          <ArticleReviewContextProvider>\n            <ArticleReviewManager />\n          </ArticleReviewContextProvider>\n        }\n      />\n      <Route path=\"edit\" element={<EditAssignments />} />\n      <Route path=\"check/*\" element={<CheckAssignments />} />\n      {/* <GradeEssayContextProvider> */}\n      <Route\n        path=\"grade/*\"\n        element={\n          <GradeEssayContainerContextProvider>\n            <AssignmentsToGrade />\n          </GradeEssayContainerContextProvider>\n        }\n      />\n      <Route\n        path=\"grade/:essayId\"\n        element={\n          <GradeEssayContextProvider>\n            <GradeEssay />\n          </GradeEssayContextProvider>\n        }\n      />\n      {/* </GradeEssayContextProvider> */}\n      <Route\n        path=\"grade/paper-based/:assignmentId\"\n        element={\n          <PaperBasedContextProvider>\n            <GradePaperBasedAssignment />\n          </PaperBasedContextProvider>\n        }\n      />\n      <Route path=\"assign/*\" element={<AssignAssignments />} />\n    </Routes>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const CourseDirectoryContainer = styled.div`\n  display: grid;\n  height: 95vh;\n  grid-template-rows: 1fr 6fr;\n`\nexport const CourseDirectoryTitleContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 8fr 1fr;\n  justify-items: center;\n  align-items: center;\n  font-size: 4vh;\n`\nexport const IndividualCourseDirectContainer = styled.div`\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-flow: row;\n  padding: 2vh;\n  grid-gap: 1vh;\n`\n\nexport type IndividualCourseBlockContainerProps = {\n  highlighted: boolean\n}\n\nexport const IndividualCourseBlockContainer = styled(\n  Link,\n)<IndividualCourseBlockContainerProps>`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: ${({ highlighted }) => (highlighted ? 'var(--white)' : 'var(--blue)')};\n  background-color: ${({ highlighted }) =>\n    highlighted ? 'var(--blue)' : 'var(--white)'};\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n    /* color: var(--white); */\n    /* background-color: var(--blue); */\n  }\n`\n\nexport const CourseManagerHomeContainer = styled.div`\n  height: 95vh;\n  display: grid;\n  grid-template-rows: 1fr 6fr;\n`\nexport const CourseManagerHomeTitle = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 8fr 1fr;\n  justify-items: center;\n  align-items: center;\n  font-size: 4vh;\n`\nexport const CourseManagerHomeTitleBackLink = styled.div`\n  cursor: pointer;\n`\nexport const CourseMenuContainer = styled.div`\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-flow: row;\n  padding: 2vh;\n  grid-gap: 1vh;\n`\nexport const CourseMenuItemBlock = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\nexport const CourseMenuItemBlockLink = styled(Link)`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  border: 1px solid var(--blue);\n  border-radius: 10px;\n  justify-items: center;\n  align-items: center;\n  text-decoration: none;\n  color: var(--blue);\n  :hover {\n    box-shadow: 2px 2px 2px var(--blue);\n  }\n`\nexport const AssignmentControlDisplayContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  height: 100%;\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useUserContextProvider } from '../../../../contexts/UserContext'\nimport { useToggle } from '../../../../hooks'\nimport { useGetCurrentCourse } from '../../../../hooks/useGetCurrentCourse'\nimport { useTeacherNavContextProvider } from '../../../../navigation/teacher-nav/TeacherNavContext'\nimport { me_me_Teacher } from '../../../../schemaTypes'\nimport { capitalizer } from '../../../../utils'\nimport {\n  CourseDirectoryContainer,\n  CourseDirectoryTitleContainer,\n  IndividualCourseBlockContainer,\n  IndividualCourseDirectContainer,\n} from './coursesStyles'\n\nexport type CourseDirectoryProps = {}\n\nexport const CourseDirectory = ({}: CourseDirectoryProps) => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const courseToLoad = useGetCurrentCourse()\n  const [navState, event] = useTeacherNavContextProvider()\n  const [hiddenSwitch, toggleHiddenSwitch] = useToggle(false)\n\n  const courseList = me.teachesCourses.filter(\n    (course) => course.hasCourseInfo.isHidden === hiddenSwitch,\n  )\n\n  return (\n    <CourseDirectoryContainer>\n      <CourseDirectoryTitleContainer>\n        <div></div>\n        <div>\n          {capitalizer(me.title)}. {me.lastName}'s Courses\n        </div>\n        <div>\n          <button onClick={toggleHiddenSwitch}>Show Hidden</button>\n        </div>\n      </CourseDirectoryTitleContainer>\n\n      <IndividualCourseDirectContainer>\n        {courseList.map((course) => (\n          <IndividualCourseBlockContainer\n            to={course._id!}\n            onClick={() => {\n              event({ type: 'SET_COURSE', payload: course._id! })\n              event({ type: 'COURSE_SELECT' })\n            }}\n            highlighted={courseToLoad ? course._id === courseToLoad._id : false}\n          >\n            <div>{course.name}</div>\n          </IndividualCourseBlockContainer>\n        ))}\n      </IndividualCourseDirectContainer>\n    </CourseDirectoryContainer>\n  )\n}\n","import { useQuery, useLazyQuery } from '@apollo/client'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from '../components/dashboard/school-day/SchoolDay'\nimport { FIND_LESSON_QUERY } from '../components/lesson/LessonMainMenu'\nimport { useDailyAgendaContextProvider } from '../components/lesson/state-n-styles/DailyAgendaContext'\nimport { useUserContextProvider } from '../contexts/UserContext'\nimport {\n  me_me,\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  SchoolDayLengthEnum,\n  findLessonByCourseAndDate,\n  findLessonByCourseAndDateVariables,\n  me_me_Student,\n  me_me_Teacher,\n} from '../schemaTypes'\nimport { date, timeFinder } from '../utils'\nimport { useTime } from './useTime'\n\nexport const useGetCurrentCourse = () => {\n  const me: me_me_Student | me_me_Teacher = useUserContextProvider()\n  const { dateTime } = useTime()\n\n  const { data: schoolDayData } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: date },\n    },\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const schoolDayType =\n    schoolDayData?.findSchoolDayByDate.schoolDay?.currentSchoolDayType!\n\n  const schoolDayLength =\n    schoolDayData?.findSchoolDayByDate.schoolDay?.schoolDayLength!\n\n  const [courseToLoad] =\n    me.__typename === 'Teacher'\n      ? me.teachesCourses.filter(\n          (course) =>\n            Date.parse(dateTime) >\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayStartsAt!\n                    : course.hasCourseInfo?.startsAt!,\n                ),\n              ) &&\n            Date.parse(dateTime) <\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayEndsAt!\n                    : course.hasCourseInfo?.endsAt!,\n                ),\n              ) &&\n            course.hasCourseInfo?.schoolDayType === schoolDayType,\n        )\n      : me.inCourses.filter(\n          (course) =>\n            Date.parse(dateTime) >\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayStartsAt!\n                    : course.hasCourseInfo?.startsAt!,\n                ),\n              ) &&\n            Date.parse(dateTime) <\n              Date.parse(\n                timeFinder(\n                  schoolDayLength === SchoolDayLengthEnum.HALF\n                    ? course.hasCourseInfo?.halfDayEndsAt!\n                    : course.hasCourseInfo?.endsAt!,\n                ),\n              ),\n        )\n  if (courseToLoad) {\n    return courseToLoad\n  } else return null\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  MarkingPeriodEnum,\n  TextSectionVocabInput,\n  TextSectionProtocolsInput,\n  AcademicOutcomeTypes,\n  ProtocolActivityTypes,\n  TextSectionQuestionsInput,\n} from '../../../../../schemaTypes'\n// import { LessonEditor } from './LessonEditor'\n\nexport type lessonEditorMachineSchema = {\n  states: {\n    lesson: {\n      states: {\n        unit: {}\n        lessonSelect: {}\n      }\n    }\n    editor: {\n      states: {\n        info: {}\n        sectionSelect: {\n          states: {\n            setSections: {}\n          }\n        }\n      }\n    }\n  }\n}\nexport type lessonEditorMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SECTION_SELECT' }\n  | { type: 'SET_COURSE_ID'; payload: string }\n  | { type: 'SET_LESSON_ID'; payload: string }\n  | { type: 'SET_UNIT'; payload: string }\n  | { type: 'SET_ASSIGNED_DATE'; payload: string }\n  | { type: 'SET_MARKING_PERIOD'; payload: MarkingPeriodEnum }\n  | { type: 'SET_SECTION_ID_LIST'; payload: string[] }\n  | { type: 'SET_TEMPORARY_SECTION_ID_LIST'; payload: string }\n  | { type: 'SET_STARTING_SECTION'; payload: string }\n  | { type: 'SET_ENDING_SECTION'; payload: string }\n  | { type: 'SET_STARTING_PAGE'; payload: number }\n  | { type: 'SET_ENDING_PAGE'; payload: number }\n  | { type: 'ASSIGN_TO_COURSES'; payload: string[] }\n  | { type: 'SET_VOCAB_LIST'; payload: TextSectionVocabInput[] }\n  | { type: 'SET_PROTOCOL_LIST'; payload: TextSectionProtocolsInput[] }\n  | { type: 'SET_BEFORE_ACTIVITY'; payload: TextSectionProtocolsInput }\n  | { type: 'SET_DURING_ACTIVITY'; payload: TextSectionProtocolsInput[] }\n  | { type: 'SET_AFTER_ACTIVITY'; payload: TextSectionProtocolsInput }\n  | { type: 'SET_QUESTION_LIST'; payload: TextSectionQuestionsInput[] }\n  | { type: 'SET_ESSENTIAL_QUESTION'; payload: string }\n  | { type: 'SET_LESSON_NAME'; payload: string }\n  | { type: 'SET_TEXT'; payload: string }\n  | { type: 'SET_CHAPTER'; payload: string }\n\nexport type lessonEditorMachineContext = {\n  courseId: string\n  lessonId: string\n  assignedDate: string\n  inUnit: string\n  assignedMarkingPeriod: MarkingPeriodEnum\n  assignedSectionIdList: string[]\n  textSectionList: string[]\n  texSectionListHeaders: string[]\n  chapter: string\n  text: string\n  startingSection: string\n  endingSection: string\n  startingPage: number\n  endingPage: number\n  courses: string[]\n  vocabList: TextSectionVocabInput[]\n  protocolList: TextSectionProtocolsInput[]\n  beforeActivity: TextSectionProtocolsInput\n  duringActivity: TextSectionProtocolsInput[]\n  afterActivity: TextSectionProtocolsInput\n  questionList: TextSectionQuestionsInput[]\n  essentialQuestion: string\n  lessonName: string\n}\n\nexport const lessonEditorMachine = Machine<\n  lessonEditorMachineContext,\n  lessonEditorMachineSchema,\n  lessonEditorMachineEvent\n>({\n  id: 'lessonEditor',\n  initial: 'lesson',\n  context: {\n    // this will change when you select a course from nav menu\n    courseId: '',\n    lessonName: '',\n    lessonId: '',\n    assignedDate: '',\n    inUnit: '',\n    assignedMarkingPeriod: MarkingPeriodEnum.FIRST,\n    text: '',\n    chapter: '',\n    startingSection: '',\n    endingSection: '',\n    assignedSectionIdList: [],\n    textSectionList: [],\n    texSectionListHeaders: [],\n    startingPage: 0,\n    endingPage: 0,\n    courses: [],\n    vocabList: [],\n    beforeActivity: {\n      academicOutcomeTypes: AcademicOutcomeTypes.LOGIC_BUILDING,\n      activityType: ProtocolActivityTypes.INDIVIDUAL,\n      task: '',\n      isActive: false,\n      completed: false,\n    },\n    duringActivity: [],\n    afterActivity: {\n      academicOutcomeTypes: AcademicOutcomeTypes.LOGIC_BUILDING,\n      activityType: ProtocolActivityTypes.INDIVIDUAL,\n      task: '',\n      isActive: false,\n      completed: false,\n    },\n    protocolList: [],\n    questionList: [],\n    essentialQuestion: '',\n  },\n  states: {\n    lesson: {\n      initial: 'unit',\n      states: {\n        unit: {\n          on: {\n            SET_COURSE_ID: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  courseId: evt.payload,\n                }\n              }),\n            },\n            NEXT: 'lessonSelect',\n          },\n        },\n        lessonSelect: {\n          on: {\n            NEXT: '#lessonEditor.editor',\n            PREVIOUS: 'unit',\n            SET_LESSON_ID: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  lessonId: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n      },\n    },\n    editor: {\n      initial: 'info',\n      states: {\n        info: {\n          on: {\n            PREVIOUS: '#lessonEditor.lesson.lessonSelect',\n            SECTION_SELECT: 'sectionSelect',\n            SET_LESSON_NAME: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  lessonName: evt.payload,\n                }\n              }),\n            },\n            SET_ASSIGNED_DATE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  assignedDate: evt.payload,\n                }\n              }),\n            },\n            SET_UNIT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  inUnit: evt.payload,\n                }\n              }),\n            },\n            SET_MARKING_PERIOD: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  assignedMarkingPeriod: evt.payload,\n                }\n              }),\n            },\n            SET_SECTION_ID_LIST: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  assignedSectionIdList: evt.payload,\n                }\n              }),\n            },\n            SET_STARTING_SECTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  startingSection: evt.payload,\n                }\n              }),\n            },\n            SET_ENDING_SECTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  endingSection: evt.payload,\n                }\n              }),\n            },\n            SET_STARTING_PAGE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  startingPage: evt.payload,\n                }\n              }),\n            },\n            SET_ENDING_PAGE: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  endingPage: evt.payload,\n                }\n              }),\n            },\n            ASSIGN_TO_COURSES: {\n              actions: assign((ctx, evt) => {\n                console.log('assigned')\n                return {\n                  ...ctx,\n                  courses: evt.payload,\n                }\n              }),\n            },\n            SET_VOCAB_LIST: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  vocabList: evt.payload,\n                }\n              }),\n            },\n            SET_BEFORE_ACTIVITY: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  beforeActivity: evt.payload,\n                }\n              }),\n            },\n            SET_DURING_ACTIVITY: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  duringActivity: evt.payload,\n                }\n              }),\n            },\n            SET_AFTER_ACTIVITY: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  afterActivity: evt.payload,\n                }\n              }),\n            },\n            SET_QUESTION_LIST: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  questionList: evt.payload,\n                }\n              }),\n            },\n            SET_ESSENTIAL_QUESTION: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  essentialQuestion: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        sectionSelect: {\n          initial: 'setSections',\n          states: {\n            setSections: {\n              on: {\n                PREVIOUS: '#lessonEditor.editor.info',\n                SET_TEXT: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      text: evt.payload,\n                    }\n                  }),\n                },\n                SET_CHAPTER: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      chapter: evt.payload,\n                    }\n                  }),\n                },\n                SET_TEMPORARY_SECTION_ID_LIST: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      textSectionList: [...ctx.textSectionList, evt.payload],\n                    }\n                  }),\n                },\n                SET_SECTION_ID_LIST: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      assignedSectionIdList: evt.payload,\n                    }\n                  }),\n                },\n                SET_STARTING_PAGE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      startingPage: evt.payload,\n                    }\n                  }),\n                },\n                SET_ENDING_PAGE: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      endingPage: evt.payload,\n                    }\n                  }),\n                },\n                SET_VOCAB_LIST: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      vocabList: evt.payload,\n                    }\n                  }),\n                },\n                SET_QUESTION_LIST: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      questionList: evt.payload,\n                    }\n                  }),\n                },\n                SET_PROTOCOL_LIST: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      protocolList: evt.payload,\n                    }\n                  }),\n                },\n                SET_STARTING_SECTION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      startingSection: evt.payload,\n                    }\n                  }),\n                },\n                SET_ENDING_SECTION: {\n                  actions: assign((ctx, evt) => {\n                    return {\n                      ...ctx,\n                      endingSection: evt.payload,\n                    }\n                  }),\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  lessonEditorMachine,\n  lessonEditorMachineContext,\n  lessonEditorMachineEvent,\n} from './lessonEditorMachine'\n\nconst LessonEditorContext = createContext<any>(undefined)\n\ntype LessonEditorContextProps = {\n  children: ReactNode\n}\n\nexport const LessonEditorContextProvider: FC<LessonEditorContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(lessonEditorMachine)\n  return (\n    <LessonEditorContext.Provider value={[state, event]}>\n      {children}\n    </LessonEditorContext.Provider>\n  )\n}\n\nexport function useLessonEditorContextProvider() {\n  const context = useContext(LessonEditorContext)\n  if (context === undefined) {\n    throw new Error(\n      'useLessonEditorContextProvider must be used within a LessonEditorContextProvider',\n    )\n  }\n  return context as [\n    State<lessonEditorMachineContext, lessonEditorMachineEvent, any, any>,\n    (event: lessonEditorMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findLessonsByUnit,\n  findLessonsByUnitVariables,\n} from '../../../../../schemaTypes'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { FIND_LESSONS_BY_UNIT_QUERY } from '../../assignments/create-assignments/create-essay/EssayLessonSelect'\n\nexport type LessonSelectProps = {\n  unit: string\n}\n\nexport const LessonSelect: FC<LessonSelectProps> = ({ unit }) => {\n  const [state, event] = useLessonEditorContextProvider()\n  console.log(state.context.courseId, unit)\n  const { loading, error, data } = useQuery<\n    findLessonsByUnit,\n    findLessonsByUnitVariables\n  >(FIND_LESSONS_BY_UNIT_QUERY, {\n    variables: {\n      input: { unitId: unit, courseId: state.context.courseId },\n    },\n    onCompleted: (data) => console.log(data),\n  })\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n\n  return (\n    <>\n      <button onClick={() => event({ type: 'PREVIOUS' })}>Previous</button>\n      <div>Select Lesson</div>\n      <select\n        onChange={(e: any) =>\n          event({ type: 'SET_LESSON_ID', payload: e.target.value })\n        }\n      >\n        <option value={undefined}>Pick a Lesson</option>\n        {data?.findLessonsByUnit.lessons.map((lesson) => (\n          <option key={lesson._id!} value={lesson._id!}>\n            {lesson.lessonName}\n          </option>\n        ))}\n      </select>\n      <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n    </>\n  )\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport { FIND_UNITS_QUERY } from '../../lessons/lesson-planner/UnitAssigner'\nimport { findUnits } from '../../../../../schemaTypes'\nimport { useQuery } from '@apollo/client'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { LessonSelect } from './LessonSelect'\n\nexport type UnitSelectProps = {\n  course: string\n}\n\nexport const UnitSelect: FC<UnitSelectProps> = ({ course }) => {\n  const [unit, setUnit] = useState('')\n  const [state, event] = useLessonEditorContextProvider()\n\n  useEffect(() => {\n    event({ type: 'SET_COURSE_ID', payload: course })\n  }, [course, event])\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { loading, error, data } = useQuery<findUnits>(FIND_UNITS_QUERY, {\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      <div>Select Lesson</div>\n      {state.matches('lesson.unit') && (\n        <>\n          <div>From Unit: </div>\n          <select onChange={(e: any) => setUnit(e.target.value)}>\n            <option value={undefined}>Select a Unit</option>\n            {data?.findUnits.units.map((unit) => (\n              <option key={unit._id!} value={unit._id!}>\n                {unit.unitName}\n              </option>\n            ))}\n          </select>\n          <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n        </>\n      )}\n      {state.matches('lesson.lessonSelect') && <LessonSelect unit={unit} />}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { dateConverter } from '../../../../../utils'\nimport { updateLessonType } from './LessonEditor'\n\nexport type AssignedDateProps = {\n  date: any\n  updateLesson: updateLessonType\n}\n\nexport const AssignedDate: FC<AssignedDateProps> = ({ date }) => {\n  const [, event] = useLessonEditorContextProvider()\n\n  return (\n    <>\n      <div>Change Assigned Date</div>\n      <div>Assigned Date: {date}</div>\n      <input\n        type=\"date\"\n        onChange={(e: any) =>\n          event({\n            type: 'SET_ASSIGNED_DATE',\n            payload: dateConverter(e.target.value),\n          })\n        }\n      />\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { useQuery } from '@apollo/client'\nimport {\n  findUnits,\n  findLessonByIdForLessonEditor_findLessonById_lesson_inUnit,\n} from '../../../../../schemaTypes'\nimport { FIND_UNITS_QUERY } from '../lesson-planner/UnitAssigner'\nimport { updateLessonType } from './LessonEditor'\n\nexport type InUnitProps = {\n  unit: findLessonByIdForLessonEditor_findLessonById_lesson_inUnit\n  updateLesson: updateLessonType\n}\n\nexport const InUnit: FC<InUnitProps> = ({ unit }) => {\n  const [, event] = useLessonEditorContextProvider()\n\n  const { loading, error, data } = useQuery<findUnits>(FIND_UNITS_QUERY)\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n\n  return (\n    <>\n      <div>In Unit: {unit.unitName}</div>\n      <div>Change Unit:</div>\n      <select\n        onChange={(e: any) =>\n          event({ type: 'SET_UNIT', payload: e.target.value })\n        }\n      >\n        <option value={undefined}>Select a Unit</option>\n        {data?.findUnits.units.map((unit) => (\n          <option key={unit._id!} value={unit._id!}>\n            {unit.unitName}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n\n// return (\n//   <>\n//     <div>Select Lesson</div>\n//     {state.matches('lesson.unit') && (\n//       <>\n//         <div>From Unit: </div>\n//         <select onChange={(e: any) => setUnit(e.target.value)}>\n//           <option value={undefined}>Select a Unit</option>\n//           {data?.findUnits.units.map((unit) => (\n//             <option key={unit._id!} value={unit._id!}>\n//               {unit.unitName}\n//             </option>\n//           ))}\n//         </select>\n//         <button onClick={() => event({ type: 'NEXT' })}>Next</button>\n//       </>\n//     )}\n//     {state.matches('lesson.lessonSelect') && <LessonSelect unit={unit} />}\n//   </>\n// )\n// }\n","import React, { FC } from 'react'\nimport { MarkingPeriodEnum } from '../../../../../schemaTypes'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\n\nexport type MarkingPeriodProps = {\n  markingPeriodList: MarkingPeriodEnum[]\n}\n\nexport const MarkingPeriod: FC<MarkingPeriodProps> = ({\n  markingPeriodList,\n}) => {\n  const [state, event] = useLessonEditorContextProvider()\n  // const mpList = markingPeriodList as MarkingPeriodEnum[]\n\n  return (\n    <>\n      <div>Change Marking Period</div>\n      <select\n        value={state.context.assignedMarkingPeriod}\n        onChange={(e: any) =>\n          event({\n            type: 'SET_MARKING_PERIOD',\n            payload: e.target.value as MarkingPeriodEnum,\n          })\n        }\n      >\n        {markingPeriodList.map((mp) => (\n          <option key={mp} value={mp!}>\n            {mp}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { FIND_TEXTS_QUERY } from '../section-builder/TextListLoader'\nimport { findTexts } from '../../../../../schemaTypes'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\n\nexport type TextSelectProps = {}\n\nexport const TextSelect: FC<TextSelectProps> = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [state, event] = useLessonEditorContextProvider()\n  const { loading, error, data } = useQuery<findTexts>(FIND_TEXTS_QUERY, {\n    onError: (error) => console.error(error),\n  })\n\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'Choose Text') {\n            event({ type: 'SET_TEXT', payload: e.target.value })\n          }\n        }}\n      >\n        <option value={undefined}>Choose Text</option>\n        {data?.findTexts.texts.map((text) => (\n          <option key={text._id!} value={text.textTitle!}>\n            {text.textTitle}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findChaptersInText,\n  findChaptersInTextVariables,\n} from '../../../../../schemaTypes'\nimport { FIND_CHAPTERS_IN_TEXT_QUERY } from '../section-builder/ChapterSelect'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\n\nexport type ChapterSelectProps = {}\n\nexport const ChapterSelect: FC<ChapterSelectProps> = () => {\n  const [state, event] = useLessonEditorContextProvider()\n  const { loading, error, data } = useQuery<\n    findChaptersInText,\n    findChaptersInTextVariables\n  >(FIND_CHAPTERS_IN_TEXT_QUERY, {\n    variables: { input: { textTitle: state.context.text } },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  if (error) console.error(error)\n\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'Choose a Chapter') {\n            event({ type: 'SET_CHAPTER', payload: e.target.value })\n          }\n        }}\n      >\n        <option value={undefined}>Choose a Chapter</option>\n        {data?.findChaptersInText.chapters.map((chapter) => (\n          <option key={chapter._id!} value={chapter._id!}>\n            {chapter.chapterTitle}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findTextSectionsByChapter,\n  findTextSectionsByChapterVariables,\n} from '../../../../../schemaTypes'\nimport { FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY } from '../section-editor/TextSectionList'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\n\nexport type SectionSelectProps = {}\n\nexport const SectionSelect: FC<SectionSelectProps> = () => {\n  const [state, event] = useLessonEditorContextProvider()\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { loading, error, data } = useQuery<\n    findTextSectionsByChapter,\n    findTextSectionsByChapterVariables\n  >(FIND_TEXT_SECTIONS_BY_CHAPTER_QUERY, {\n    variables: {\n      input: { fromChapterId: state.context.chapter },\n    },\n    onError: (error) => console.error(error),\n    onCompleted: (data) => console.log(data),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (\n            e.target.value === 'Pick a Section' ||\n            state.context.textSectionList.includes(e.target.value)\n          ) {\n            console.log('not selectable')\n          } else\n            event({\n              type: 'SET_TEMPORARY_SECTION_ID_LIST',\n              payload: e.target.value,\n            })\n        }}\n      >\n        <option value={undefined}>Pick a Section</option>\n        {data?.findTextSectionsByChapter.textSections.map((section) => (\n          <option key={section._id!} value={[section._id!]}>\n            {section.header}\n          </option>\n        ))}\n      </select>\n      <button\n        onClick={() => {\n          event({\n            type: 'SET_SECTION_ID_LIST',\n            payload: state.context.textSectionList,\n          })\n        }}\n      >\n        Set New Sections\n      </button>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { TextSelect } from './TextSelect'\nimport { ChapterSelect } from './ChapterSelect'\nimport {\n  TextSectionVocabInput,\n  TextSectionQuestionsInput,\n  TextSectionProtocolsInput,\n} from '../../../../../schemaTypes'\nimport { SectionSelect } from './SectionSelect'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\n\nexport type SectionListProps = {\n  vocab: TextSectionVocabInput[]\n  questions: TextSectionQuestionsInput[]\n  protocols: TextSectionProtocolsInput[]\n  firstSection: string\n  lastSection: string\n  newStartingPage: number\n  newEndingPage: number\n}\n\nexport const SectionList: FC<SectionListProps> = ({\n  vocab,\n  questions,\n  protocols,\n  firstSection,\n  lastSection,\n  newStartingPage,\n  newEndingPage,\n}) => {\n  const [state, event] = useLessonEditorContextProvider()\n  useEffect(() => {\n    event({ type: 'SET_VOCAB_LIST', payload: vocab })\n    event({ type: 'SET_QUESTION_LIST', payload: questions })\n    event({ type: 'SET_PROTOCOL_LIST', payload: protocols })\n    event({ type: 'SET_STARTING_SECTION', payload: firstSection })\n    event({ type: 'SET_ENDING_SECTION', payload: lastSection })\n    event({ type: 'SET_STARTING_PAGE', payload: newStartingPage })\n    event({ type: 'SET_ENDING_PAGE', payload: newEndingPage })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.context.textSectionList])\n\n  return (\n    <>\n      <div>\n        <div>Select Text</div>\n        <TextSelect />\n        {state.context.text && (\n          <>\n            <div>Find Chapter</div>\n            <ChapterSelect />\n          </>\n        )}\n        {state.context.chapter && (\n          <>\n            <div>Select Sections</div>\n            <SectionSelect />\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { FIND_TEXT_SECTIONS_BY_ID_QUERY } from '../lesson-planner/LessonPlanInfo'\nimport { useQuery } from '@apollo/client'\nimport {\n  findTextSectionsById,\n  findTextSectionsByIdVariables,\n  TextSectionVocabInput,\n  TextSectionQuestionsInput,\n  TextSectionProtocolsInput,\n} from '../../../../../schemaTypes'\nimport { SectionList } from './SectionList'\nimport { updateLessonType } from './LessonEditor'\n\nexport type SectionsProps = {\n  updateLesson: updateLessonType\n}\n\nexport const SetSections: FC<SectionsProps> = ({ updateLesson }) => {\n  const [state, event] = useLessonEditorContextProvider()\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { loading, error, data } = useQuery<\n    findTextSectionsById,\n    findTextSectionsByIdVariables\n  >(FIND_TEXT_SECTIONS_BY_ID_QUERY, {\n    variables: {\n      input: { _ids: state.context.assignedSectionIdList },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const vocab: TextSectionVocabInput[] = []\n  const questions: TextSectionQuestionsInput[] = []\n  const protocols: TextSectionProtocolsInput[] = []\n\n  data?.findTextSectionsById.textSections.forEach((section) => {\n    section.hasVocab?.forEach((word) => {\n      vocab.push({ word: word.word, definition: word.definition })\n    })\n    section.hasQuestions?.forEach((question) => {\n      questions.push({\n        question: question.question,\n        questionType: question.questionType,\n      })\n    })\n    section.hasProtocols?.forEach((protocol) => {\n      protocols.push({\n        academicOutcomeTypes: protocol.academicOutcomeTypes,\n        activityType: protocol.activityType,\n        task: protocol.task,\n        isActive: false,\n        completed: false,\n      })\n    })\n  })\n  const firstSection = data?.findTextSectionsById.textSections[0]\n  const lastSection =\n    data?.findTextSectionsById.textSections[\n      data.findTextSectionsById.textSections.length - 1\n    ]\n\n  const newStartingPage = firstSection?.pageNumbers.startingPage\n  const newEndingPage = lastSection?.pageNumbers.endingPage\n\n  return (\n    <>\n      <div>Sections</div>\n      <div>\n        {data?.findTextSectionsById.textSections.map((section) => (\n          <div key={section._id!}>{section.header}</div>\n        ))}\n      </div>\n      <SectionList\n        vocab={vocab}\n        questions={questions}\n        protocols={protocols}\n        firstSection={firstSection?.header!}\n        lastSection={lastSection?.header!}\n        newStartingPage={newStartingPage!}\n        newEndingPage={newEndingPage!}\n      />\n      <button onClick={() => event({ type: 'PREVIOUS' })}>Previous</button>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { TextSectionProtocolsInput } from '../../../../../schemaTypes'\n\nexport type BeforeActivityProps = {\n  protocols: TextSectionProtocolsInput[]\n}\n\nexport const BeforeActivity: FC<BeforeActivityProps> = ({ protocols }) => {\n  const [state, event] = useLessonEditorContextProvider()\n\n  return (\n    <>\n      <div>Original Before Activity</div>\n      <div>{state.context.beforeActivity.task}</div>\n      <div>Set Before Activity</div>\n      <div>\n        {protocols.map((protocol) => (\n          <div\n            key={protocol.task}\n            onClick={(e: any) => {\n              event({\n                type: 'SET_BEFORE_ACTIVITY',\n                payload: {\n                  academicOutcomeTypes: protocol.academicOutcomeTypes,\n                  activityType: protocol.activityType,\n                  task: protocol.task,\n                  isActive: false,\n                  completed: false,\n                },\n              })\n            }}\n          >\n            {protocol.task}\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { TextSectionProtocolsInput } from '../../../../../schemaTypes'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\n\nexport type DuringActivitiesProps = {\n  protocols: TextSectionProtocolsInput[]\n}\n\nexport const DuringActivities: FC<DuringActivitiesProps> = ({ protocols }) => {\n  const [state, event] = useLessonEditorContextProvider()\n  const [protocolList, setprotocolList] = useState<TextSectionProtocolsInput[]>(\n    [],\n  )\n\n  return (\n    <>\n      <div>Current During Activities</div>\n      <div>\n        {state.context.duringActivity.map((activity) => (\n          <span key={activity.task}>{activity.task} </span>\n        ))}\n      </div>\n      <div>Set During Activities</div>\n      <div>\n        {protocols.map((protocol) => (\n          <div\n            key={protocol.task}\n            onClick={(e: any) =>\n              setprotocolList([\n                ...protocolList,\n                {\n                  academicOutcomeTypes: protocol.academicOutcomeTypes,\n                  activityType: protocol.activityType,\n                  task: protocol.task,\n                  isActive: false,\n                  completed: false,\n                },\n              ])\n            }\n          >\n            {protocol.task}\n          </div>\n        ))}\n      </div>\n      <button\n        onClick={() =>\n          event({ type: 'SET_DURING_ACTIVITY', payload: protocolList })\n        }\n      >\n        Set During Activities\n      </button>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { TextSectionProtocolsInput } from '../../../../../schemaTypes'\n\nexport type AfterActivityProps = {\n  protocols: TextSectionProtocolsInput[]\n}\n\nexport const AfterActivity: FC<AfterActivityProps> = ({ protocols }) => {\n  const [state, event] = useLessonEditorContextProvider()\n\n  return (\n    <>\n      <div>Original Before Activity</div>\n      <div>{state.context.afterActivity.task}</div>\n      <div>Set Before Activity</div>\n      <div>\n        {protocols.map((protocol) => (\n          <div\n            key={protocol.task}\n            onClick={(e: any) => {\n              event({\n                type: 'SET_AFTER_ACTIVITY',\n                payload: {\n                  academicOutcomeTypes: protocol.academicOutcomeTypes,\n                  activityType: protocol.activityType,\n                  task: protocol.task,\n                  isActive: false,\n                  completed: false,\n                },\n              })\n            }}\n          >\n            {protocol.task}\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { TextSectionQuestionsInput } from '../../../../../schemaTypes'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\n\nexport type EssentialQuestionProps = {\n  questions: TextSectionQuestionsInput[]\n}\n\nexport const EssentialQuestion: FC<EssentialQuestionProps> = ({\n  questions,\n}) => {\n  const [state, event] = useLessonEditorContextProvider()\n  return (\n    <>\n      <div>Current Essential Question</div>\n      <div>{state.context.essentialQuestion}</div>\n      <div>Set Essential Question</div>\n      <div>\n        {questions.map((question) => (\n          <div\n            key={question.question}\n            onClick={() =>\n              event({\n                type: 'SET_ESSENTIAL_QUESTION',\n                payload: question.question,\n              })\n            }\n          >\n            {question.question}\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findTextSectionsById,\n  findTextSectionsByIdVariables,\n  TextSectionProtocolsInput,\n  TextSectionQuestionsInput,\n} from '../../../../../schemaTypes'\nimport { FIND_TEXT_SECTIONS_BY_ID_QUERY } from '../lesson-planner/LessonPlanInfo'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { BeforeActivity } from './BeforeActivity'\nimport { DuringActivities } from './DuringActivities'\nimport { AfterActivity } from './AfterActivity'\nimport { EssentialQuestion } from './EssentialQuestion'\n\nexport type ActivitiesEditorProps = {}\n\nexport const ActivitiesEditor: FC<ActivitiesEditorProps> = () => {\n  const [state] = useLessonEditorContextProvider()\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { loading, error, data } = useQuery<\n    findTextSectionsById,\n    findTextSectionsByIdVariables\n  >(FIND_TEXT_SECTIONS_BY_ID_QUERY, {\n    variables: {\n      input: { _ids: state.context.assignedSectionIdList },\n    },\n    // onCompleted: (data) => {\n    //   console.log(data)\n    // },\n\n    onError: (error) => console.error(error),\n  })\n  const protocols: TextSectionProtocolsInput[] = []\n  const questions: TextSectionQuestionsInput[] = []\n\n  data?.findTextSectionsById.textSections.forEach((section) => {\n    section.hasProtocols?.forEach((protocol) => {\n      protocols.push({\n        academicOutcomeTypes: protocol.academicOutcomeTypes,\n        activityType: protocol.activityType,\n        task: protocol.task,\n        isActive: false,\n        completed: false,\n      })\n    })\n\n    section.hasQuestions?.forEach((question) => {\n      questions.push({\n        question: question.question,\n        questionType: question.questionType,\n      })\n    })\n  })\n\n  return (\n    <>\n      {loading ? (\n        <div>Loading</div>\n      ) : (\n        <>\n          <BeforeActivity protocols={protocols} />\n          <DuringActivities protocols={protocols} />\n          <AfterActivity protocols={protocols} />\n          <EssentialQuestion questions={questions} />\n        </>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findCoursesById,\n  findCoursesByIdVariables,\n  // me_me_Teacher,\n} from '../../../../../schemaTypes'\n// import { useUserContextProvider } from '../../../../../contexts/UserContext'\n// import { useCheckBox } from '../../../../../hooks/useCheckBox'\n// import { CourseLinkSelect } from './CourseLinkSelect'\n\nexport type CourseLinkProps = {}\n\nexport const FIND_COURSES_BY_ID_QUERY = gql`\n  query findCoursesById($input: FindCoursesByIdInput!) {\n    findCoursesById(input: $input) {\n      courses {\n        _id\n        name\n      }\n    }\n  }\n`\n\nexport const CourseLink: FC<CourseLinkProps> = () => {\n  const [state] = useLessonEditorContextProvider()\n\n  const { loading, data: courseData } = useQuery<\n    findCoursesById,\n    findCoursesByIdVariables\n  >(FIND_COURSES_BY_ID_QUERY, {\n    variables: {\n      input: { _ids: state.context.courses },\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      <div>Linked Courses</div>\n      <div>\n        {courseData?.findCoursesById.courses.map((course) => (\n          <span key={course._id!}>{course.name} </span>\n        ))}\n      </div>\n      {/* <div>Choose from These Courses</div> */}\n      {/* <CourseLinkSelect linkedCourses={state.context.courses} /> */}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findLessonByIdForLessonEditor,\n  findLessonByIdForLessonEditorVariables,\n} from '../../../../../schemaTypes'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { updateLessonType } from './LessonEditor'\nimport { AssignedDate } from './AssignedDate'\nimport { InUnit } from './InUnit'\nimport { MarkingPeriod } from './MarkingPeriod'\nimport { SetSections } from './SetSections'\nimport { ActivitiesEditor } from './ActivitiesEditor'\nimport { CourseLink } from './CourseLink'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\n\nexport type LessonEditorInfoProps = {\n  updateLesson: updateLessonType\n}\n\nexport const FIND_LESSON_FOR_LESSON_EDITOR_QUERY = gql`\n  query findLessonByIdForLessonEditor($input: FindLessonByIdInput!) {\n    findLessonById(input: $input) {\n      lesson {\n        _id\n        assignedDate\n        inUnit {\n          _id\n          unitName\n        }\n        assignedMarkingPeriod\n        assignedCourses {\n          _id\n          name\n        }\n        assignedSections {\n          startingSection\n          endingSection\n        }\n        pageNumbers {\n          startingPage\n          endingPage\n        }\n        assignedSectionIdList\n        vocabList {\n          word\n          definition\n        }\n        beforeActivity {\n          academicOutcomeTypes\n          activityType\n          task\n        }\n        duringActivities {\n          academicOutcomeTypes\n          activityType\n          task\n        }\n        afterActivity {\n          academicOutcomeTypes\n          activityType\n          task\n        }\n        questionList {\n          question\n          questionType\n        }\n        essentialQuestion\n        lessonName\n      }\n    }\n  }\n`\n\nexport const LessonEditorInfo: FC<LessonEditorInfoProps> = ({\n  updateLesson,\n}) => {\n  const [state, event] = useLessonEditorContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n\n  useEffect(() => {\n    updateLesson()\n  }, [state.context, updateLesson])\n\n  const { loading, data } = useQuery<\n    findLessonByIdForLessonEditor,\n    findLessonByIdForLessonEditorVariables\n  >(FIND_LESSON_FOR_LESSON_EDITOR_QUERY, {\n    variables: {\n      input: { _id: state.context.lessonId },\n    },\n    onCompleted: (data) => {\n      const {\n        assignedDate,\n        lessonName,\n        inUnit,\n        assignedMarkingPeriod,\n        assignedSectionIdList,\n        assignedSections,\n        vocabList,\n        beforeActivity,\n        duringActivities,\n        afterActivity,\n        questionList,\n        essentialQuestion,\n        pageNumbers,\n      } = data.findLessonById.lesson\n\n      event({ type: 'SET_ASSIGNED_DATE', payload: assignedDate })\n      event({ type: 'SET_LESSON_NAME', payload: lessonName })\n      event({ type: 'SET_UNIT', payload: inUnit._id! })\n      event({ type: 'SET_MARKING_PERIOD', payload: assignedMarkingPeriod })\n      event({ type: 'SET_SECTION_ID_LIST', payload: assignedSectionIdList })\n      event({\n        type: 'SET_STARTING_SECTION',\n        payload: assignedSections.startingSection,\n      })\n      event({\n        type: 'SET_ENDING_SECTION',\n        payload: assignedSections.endingSection,\n      })\n      event({ type: 'SET_STARTING_PAGE', payload: pageNumbers.startingPage })\n      event({ type: 'SET_ENDING_PAGE', payload: pageNumbers.endingPage })\n      const modifiedVocabList = vocabList.map((word) => ({\n        word: word.word,\n        definition: word.definition,\n      }))\n      event({ type: 'SET_VOCAB_LIST', payload: modifiedVocabList })\n\n      const modifiedBeforeActivity = {\n        academicOutcomeTypes: beforeActivity.academicOutcomeTypes,\n        activityType: beforeActivity.activityType,\n        task: beforeActivity.task,\n        isActive: false,\n        completed: false,\n      }\n      event({ type: 'SET_BEFORE_ACTIVITY', payload: modifiedBeforeActivity })\n      const modifiedDuringActivity = duringActivities.map((activity) => ({\n        academicOutcomeTypes: activity.academicOutcomeTypes,\n        activityType: activity.activityType,\n        task: activity.task,\n        isActive: false,\n        completed: false,\n      }))\n      event({ type: 'SET_DURING_ACTIVITY', payload: modifiedDuringActivity })\n      const modifiedAfterActivity = {\n        academicOutcomeTypes: afterActivity.academicOutcomeTypes,\n        activityType: afterActivity.activityType,\n        task: afterActivity.task,\n        isActive: false,\n        completed: false,\n      }\n      event({ type: 'SET_AFTER_ACTIVITY', payload: modifiedAfterActivity })\n      const modifiedQuestionList = questionList.map((question) => ({\n        question: question.question,\n        questionType: question.questionType,\n      }))\n      event({ type: 'SET_QUESTION_LIST', payload: modifiedQuestionList })\n      event({ type: 'SET_ESSENTIAL_QUESTION', payload: essentialQuestion })\n    },\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      <button onClick={() => event({ type: 'PREVIOUS' })}>Previous</button>\n      {state.matches('editor.info') && (\n        <>\n          <div>Lesson Plan</div>\n          <AssignedDate\n            date={data?.findLessonById.lesson.assignedDate}\n            updateLesson={updateLesson}\n          />\n          <InUnit\n            unit={data?.findLessonById.lesson.inUnit!}\n            updateLesson={updateLesson}\n          />\n          <MarkingPeriod markingPeriodList={markingPeriodEnum} />\n        </>\n      )}\n      <button onClick={() => event({ type: 'SECTION_SELECT' })}>\n        Add/Delete Sections\n      </button>\n      {state.matches('editor.sectionSelect') && (\n        <SetSections updateLesson={updateLesson} />\n      )}\n      <ActivitiesEditor />\n      <CourseLink />\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useLessonEditorContextProvider } from './LessonEditorContext'\nimport { UnitSelect } from './UnitSelect'\nimport { LessonEditorInfo } from './LessonEditorInfo'\nimport { gql, useMutation, MutationFunctionOptions } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateLesson,\n  updateLessonVariables,\n  // me_me_Teacher,\n} from '../../../../../schemaTypes'\nimport { BackContainer } from '../../assignments/create-assignments/state-and-styles/createAssignmentsStyles'\nimport { Navigate, useNavigate } from 'react-router'\n// import { useUserContextProvider } from '../../../../../contexts/UserContext'\nexport type LessonEditorProps = {\n  course: string\n}\n\nexport const UPDATE_LESSON_MUTATION = gql`\n  mutation updateLesson($input: UpdateLessonInput!) {\n    updateLesson(input: $input) {\n      lessons {\n        _id\n      }\n    }\n  }\n`\n\nexport type updateLessonType = (\n  options?:\n    | MutationFunctionOptions<updateLesson, updateLessonVariables>\n    | undefined,\n) => void\n\nexport const LessonEditor = ({ course }: LessonEditorProps) => {\n  const navigate = useNavigate()\n  // const me: me_me_Teacher = useUserContextProvider()\n  const [state] = useLessonEditorContextProvider()\n\n  // console.log(state.value)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [updateLesson, { data, error }] = useMutation<\n    updateLesson,\n    updateLessonVariables\n  >(UPDATE_LESSON_MUTATION, {\n    variables: {\n      input: {\n        assignedDate: state.context.assignedDate,\n        assignedMarkingPeriod: state.context.assignedMarkingPeriod,\n        assignedSectionIdList: state.context.assignedSectionIdList,\n        assignedSections: {\n          startingSection: state.context.startingSection,\n          endingSection: state.context.endingSection,\n        },\n        pageNumbers: {\n          startingPage: state.context.startingPage,\n          endingPage: state.context.endingPage,\n        },\n        linkedCourseIds: state.context.courses,\n        inUnit: state.context.inUnit,\n        vocabList: state.context.vocabList,\n        beforeActivity: state.context.beforeActivity,\n        duringActivities: state.context.duringActivity,\n        afterActivity: state.context.afterActivity,\n        questionList: state.context.questionList,\n        essentialQuestion: state.context.essentialQuestion,\n        lessonName: state.context.lessonName,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.log(error),\n    refetchQueries: ['findLessonByIdForLessonEditor', 'findLessonsByUnit'],\n  })\n  return (\n    <>\n      <BackContainer>\n        <div onClick={() => navigate('/dashboard/lessons')}>Back</div>\n      </BackContainer>\n      <div>Lesson Editor</div>\n      <UnitSelect course={course} />\n      {state.matches('editor') && (\n        <LessonEditorInfo updateLesson={updateLesson} />\n      )}\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  RegisterStudentInput,\n  AddStudentsToCourseInput,\n  StudentCohortEnum,\n} from '../../../../../../../schemaTypes'\n\nexport type addStudentsMachineSchema = {\n  states: {\n    idle: {}\n    register: {}\n    addToCourse: {}\n  }\n}\nexport type addStudentsMachineEvent =\n  | { type: 'IDLE' }\n  | { type: 'REGISTER' }\n  | { type: 'ADD_TO_COURSE' }\n  | { type: 'ADD_FIRST_NAME'; payload: string }\n  | { type: 'ADD_LAST_NAME'; payload: string }\n  | { type: 'ADD_EMAIL'; payload: string }\n  | { type: 'ADD_PASSWORD'; payload: string }\n  | { type: 'ADD_USERNAME'; payload: string }\n  | { type: 'ADD_MIDDLE_NAME'; payload: string }\n  | { type: 'ADD_SCHOOL_ID'; payload: string }\n  | { type: 'ADD_COHORT'; payload: StudentCohortEnum }\n  | { type: 'RESET_REGISTER_INPUTS'; payload: RegisterStudentInput }\n  | { type: 'SET_COURSE_ID'; payload: string }\n  | { type: 'ADD_STUDENT_IDS'; payload: string }\n  | { type: 'REMOVE_STUDENT_IDS'; payload: number }\n  | { type: 'SET_IEP_STATUS'; payload: boolean }\n\nexport type addStudentsMachineContext = {\n  studentToRegister: RegisterStudentInput\n  addStudentToCourse: AddStudentsToCourseInput\n}\n\nexport const addStudentsMachine = Machine<\n  addStudentsMachineContext,\n  addStudentsMachineSchema,\n  addStudentsMachineEvent\n>({\n  id: 'addStudents',\n  initial: 'idle',\n  context: {\n    studentToRegister: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      middleName: '',\n      schoolId: '',\n      cohort: StudentCohortEnum.RED,\n      virtual: false,\n      password: 'password',\n      userName: '',\n      hasIEP: false,\n    },\n    addStudentToCourse: {\n      courseId: '',\n      studentIds: [],\n    },\n  },\n  states: {\n    idle: {\n      on: { REGISTER: 'register', ADD_TO_COURSE: 'addToCourse' },\n    },\n    register: {\n      on: {\n        IDLE: 'idle',\n        ADD_TO_COURSE: 'addToCourse',\n        ADD_FIRST_NAME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                firstName: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_MIDDLE_NAME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                middleName: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_LAST_NAME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                lastName: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_SCHOOL_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                schoolId: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_EMAIL: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                email: evt.payload,\n                userName: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_COHORT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                cohort: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_PASSWORD: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                password: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_USERNAME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                userName: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_IEP_STATUS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentToRegister: {\n                ...ctx.studentToRegister,\n                hasIEP: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_STUDENT_IDS: {\n          actions: assign((ctx, evt) => {\n            console.log('adding Id')\n            return {\n              ...ctx,\n              addStudentToCourse: {\n                ...ctx.addStudentToCourse,\n                studentIds: [...ctx.addStudentToCourse.studentIds, evt.payload],\n              },\n            }\n          }),\n        },\n        RESET_REGISTER_INPUTS: {\n          actions: assign((ctx, evt) => {\n            console.log(evt.payload)\n            return {\n              ...ctx,\n              studentToRegister: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    addToCourse: {\n      on: {\n        IDLE: 'idle',\n        SET_COURSE_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              addStudentToCourse: {\n                ...ctx.addStudentToCourse,\n                courseId: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_STUDENT_IDS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              addStudentToCourse: {\n                ...ctx.addStudentToCourse,\n                studentIds: [...ctx.addStudentToCourse.studentIds, evt.payload],\n              },\n            }\n          }),\n        },\n        REMOVE_STUDENT_IDS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              addStudentToCourse: {\n                ...ctx.addStudentToCourse,\n                studentIds: [\n                  ...ctx.addStudentToCourse.studentIds.slice(0, evt.payload),\n                  ...ctx.addStudentToCourse.studentIds.slice(evt.payload + 1),\n                ],\n              },\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  addStudentsMachine,\n  addStudentsMachineContext,\n  addStudentsMachineEvent,\n} from './addStudentsMachine'\n\nconst AddStudentsContext = createContext<any>(undefined)\n\ntype AddStudentsContextProps = {\n  children: ReactNode\n}\n\nexport const AddStudentsContextProvider: FC<AddStudentsContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(addStudentsMachine)\n  return (\n    <AddStudentsContext.Provider value={[state, event]}>\n      {children}\n    </AddStudentsContext.Provider>\n  )\n}\n\nexport function useAddStudentsContextProvider() {\n  const context = useContext(AddStudentsContext)\n  if (context === undefined) {\n    throw new Error(\n      'useAddStudentsContextProvider must be used within a AddStudentsContextProvider',\n    )\n  }\n  return context as [\n    State<addStudentsMachineContext, addStudentsMachineEvent, any, any>,\n    (event: addStudentsMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\n\nexport const RegisterStudentContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  height: 100%;\n`\nexport const AddStudentContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 3fr 2fr 1fr;\n  height: 95vh;\n`\nexport const PageTitle = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 5vh;\n  text-decoration: underline;\n`\n\nexport const FormContainer = styled.form`\n  display: grid;\n  grid-template-rows: 5fr 1fr;\n`\nexport const InformationContainer = styled.div`\n  display: grid;\n  padding-right: 5%;\n`\nexport const InformationDetailInputContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 3fr;\n  align-items: center;\n  /* justify-items: center; */\n  font-size: 3vh;\n  margin-left: 5%;\n`\n\nexport const YesNoContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n`\nexport type YesNoSelectProps = { selected: boolean }\n\nexport const YesNoSelect = styled.div<YesNoSelectProps>`\n  color: ${({ selected }) => (selected ? 'var(--red)' : 'var(--blue)')};\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\n  cursor: pointer;\n`\nexport const InformationInput = styled.input`\n  width: 80vh;\n  height: 5vh;\n  background-color: transparent;\n  font-size: 3vh;\n  padding-left: 2%;\n  color: var(--blue);\n  border: 1px solid var(--blue);\n  border-radius: 5px;\n`\nexport const BottomButtonContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const FullScreenButtonContainer = styled(BottomButtonContainer)`\n  height: 100%;\n`\n\nexport const BottomButton = styled.button`\n  width: 45vh;\n  height: 5vh;\n  background-color: var(--blue);\n  color: var(--white);\n  font-size: 3vh;\n`\n\nexport const AdditionalStudentSelect = styled.select`\n  width: 80vh;\n  height: 5vh;\n  background-color: transparent;\n  font-size: 3vh;\n  padding-left: 2%;\n  color: var(--blue);\n  border: 1px solid var(--blue);\n  border-radius: 5px;\n`\n","import React, { FC, useState, useEffect } from 'react'\nimport { gql, useQuery, useMutation } from '@apollo/client'\nimport { useAddStudentsContextProvider } from '../state-n-styles/AddStudentsContext'\nimport {\n  findAllUsers,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  registerStudent,\n  registerStudentVariables,\n  StudentCohortEnum,\n} from '../../../../../../../schemaTypes'\nimport { RegisterUserNameAndPassword } from './RegisterUserNameAndPassword'\nimport { Modal } from '../../../../../../../animations'\nimport { AddToCourseModal } from './AddToCourseModal'\nimport { redCohort } from '../../../../../../../utils'\nimport {\n  BottomButton,\n  BottomButtonContainer,\n  FormContainer,\n  InformationContainer,\n  InformationDetailInputContainer,\n  InformationInput,\n  PageTitle,\n  RegisterStudentContainer,\n  YesNoContainer,\n  YesNoSelect,\n} from '../state-n-styles/addStudentsStyles'\n\nexport type RegisterStudentProps = {}\n\nexport const REGISTER_STUDENT_MUTATION = gql`\n  mutation registerStudent($input: RegisterStudentInput!) {\n    registerStudent(input: $input) {\n      student {\n        _id\n        firstName\n        lastName\n        userName\n        email\n      }\n    }\n  }\n`\nexport const FIND_USERS_QUERY = gql`\n  query findAllUsers {\n    findAllUsers {\n      users {\n        ... on Student {\n          userName\n        }\n        ... on Teacher {\n          userName\n        }\n      }\n    }\n  }\n`\n\nexport const RegisterStudent = ({}: RegisterStudentProps) => {\n  const [state, event] = useAddStudentsContextProvider()\n  console.log(state.context.studentToRegister.hasIEP)\n  const [addToCourseToggle, setAddToCourseToggle] = useState(false)\n  const [addIdFinished, setAddIdFinished] = useState(false)\n\n  const { loading, data } = useQuery<findAllUsers>(FIND_USERS_QUERY, {\n    // onCompleted: (data) =>\n    // console.log(\n    //   data.findAllUsers.users.map(\n    //     (u) => u.__typename === 'Student' && u.userName\n    //   )\n    // ),\n    onError: (error) => console.error(error),\n  })\n\n  const userNamesInUse = data?.findAllUsers.users.map(\n    (user) => user.__typename === 'Student' && user.userName,\n  )!\n\n  const [registerStudent] = useMutation<\n    registerStudent,\n    registerStudentVariables\n  >(REGISTER_STUDENT_MUTATION, {\n    variables: { input: state.context.studentToRegister },\n    onCompleted: (data) => {\n      event({\n        type: 'ADD_STUDENT_IDS',\n        payload: data.registerStudent.student._id!,\n      })\n      setAddIdFinished(true)\n    },\n    refetchQueries: ['findAllUsers', 'findAllStudents'],\n  })\n  useEffect(() => {\n    if (\n      redCohort.includes(state.context.studentToRegister.lastName.charAt(0))\n    ) {\n      event({ type: 'ADD_COHORT', payload: StudentCohortEnum.RED })\n    } else event({ type: 'ADD_COHORT', payload: StudentCohortEnum.WHITE })\n  }, [state.context.studentToRegister.lastName])\n\n  const handleAddToCourse = () => {\n    registerStudent()\n    event({\n      type: 'RESET_REGISTER_INPUTS',\n      payload: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        middleName: '',\n        schoolId: '',\n        cohort: StudentCohortEnum.RED,\n        virtual: false,\n        password: 'password',\n        userName: '',\n        hasIEP: false,\n      },\n    })\n    event({ type: 'ADD_TO_COURSE' })\n    setAddToCourseToggle(false)\n  }\n  const handleAnotherStudent = () => {\n    registerStudent()\n    event({\n      type: 'RESET_REGISTER_INPUTS',\n      payload: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        middleName: '',\n        schoolId: '',\n        cohort: StudentCohortEnum.RED,\n        virtual: false,\n        password: 'password',\n        userName: '',\n      },\n    })\n    setAddToCourseToggle(false)\n  }\n\n  if (loading) return <div>Loading </div>\n  return (\n    <RegisterStudentContainer>\n      <PageTitle>\n        <div>Register New Student</div>\n      </PageTitle>\n      <FormContainer onSubmit={(e: any) => e.preventDefault()}>\n        <InformationContainer>\n          <InformationDetailInputContainer>\n            <div>First Name: </div>\n            <InformationInput\n              onChange={(e: any) =>\n                event({\n                  type: 'ADD_FIRST_NAME',\n                  payload: e.target.value.trim(),\n                })\n              }\n            />\n          </InformationDetailInputContainer>\n          <InformationDetailInputContainer>\n            <div>Middle Name: </div>\n            <InformationInput\n              onChange={(e: any) =>\n                event({\n                  type: 'ADD_MIDDLE_NAME',\n                  payload: e.target.value.trim(),\n                })\n              }\n            />\n          </InformationDetailInputContainer>\n          <InformationDetailInputContainer>\n            <div>Last Name: </div>\n            <InformationInput\n              onChange={(e: any) =>\n                event({ type: 'ADD_LAST_NAME', payload: e.target.value.trim() })\n              }\n            />\n          </InformationDetailInputContainer>\n          <InformationDetailInputContainer>\n            <div>Email:</div>\n            <InformationInput\n              onChange={(e: any) =>\n                event({ type: 'ADD_EMAIL', payload: e.target.value.trim() })\n              }\n            />\n          </InformationDetailInputContainer>\n          <InformationDetailInputContainer>\n            <div>School Id:</div>\n            <InformationInput\n              onChange={(e: any) =>\n                event({ type: 'ADD_SCHOOL_ID', payload: e.target.value.trim() })\n              }\n            />\n          </InformationDetailInputContainer>\n          <InformationDetailInputContainer>\n            <div>IEP Student</div>\n            <YesNoContainer>\n              <YesNoSelect\n                selected={state.context.studentToRegister.hasIEP!}\n                onClick={() => event({ type: 'SET_IEP_STATUS', payload: true })}\n              >\n                Yes\n              </YesNoSelect>\n              <YesNoSelect\n                selected={!state.context.studentToRegister.hasIEP!}\n                onClick={() =>\n                  event({ type: 'SET_IEP_STATUS', payload: false })\n                }\n              >\n                No\n              </YesNoSelect>\n            </YesNoContainer>\n          </InformationDetailInputContainer>\n        </InformationContainer>\n        {/* <div>Change Cohort:</div>\n        <select\n          value={state.context.studentToRegister.cohort}\n          onChange={(e: any) =>\n            event({ type: 'ADD_COHORT', payload: e.target.value })\n          }\n        >\n          <option value={StudentCohortEnum.RED}>Red</option>\n          <option value={StudentCohortEnum.WHITE}>White</option>\n        </select> */}\n        {/* <RegisterUserNameAndPassword userNamesInUse={userNamesInUse!} /> */}\n        {!addToCourseToggle &&\n          userNamesInUse?.includes(\n            state.context.studentToRegister.userName,\n          ) && (\n            <>\n              <div>Username is already in use, please use another username</div>\n              <div>UserName:</div>\n              <input\n                onChange={(e: any) =>\n                  event({\n                    type: 'ADD_USERNAME',\n                    payload: e.target.value.trim(),\n                  })\n                }\n              />\n            </>\n          )}\n        <>\n          {addToCourseToggle ? (\n            <BottomButtonContainer>\n              {/* <AddToCourseModal\n                addToCourseToggle={addToCourseToggle}\n                setAddToCourseToggle={setAddToCourseToggle}\n                registerStudent={registerStudent}\n                addIdFinished={addIdFinished}\n              /> */}\n              <>\n                <BottomButton type=\"button\" onClick={handleAddToCourse}>\n                  Add to Course?\n                </BottomButton>\n                <BottomButton type=\"reset\" onClick={handleAnotherStudent}>\n                  Add Another Student\n                </BottomButton>\n              </>\n            </BottomButtonContainer>\n          ) : (\n            <BottomButtonContainer>\n              <BottomButton\n                type=\"button\"\n                onClick={() => event({ type: 'IDLE' })}\n              >\n                Back\n              </BottomButton>\n              {state.context.studentToRegister.firstName &&\n                state.context.studentToRegister.lastName && (\n                  <BottomButton\n                    type=\"button\"\n                    onClick={() => {\n                      setAddToCourseToggle(true)\n                    }}\n                  >\n                    Register\n                  </BottomButton>\n                )}\n            </BottomButtonContainer>\n          )}\n        </>\n      </FormContainer>\n    </RegisterStudentContainer>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  addStudentsToCourse,\n  addStudentsToCourseVariables,\n  findAllStudents,\n  findCourseByIdForStudentRegistration_findCourseById_course,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  initializeStudent,\n  initializeStudentVariables,\n} from '../../../../../../../schemaTypes'\nimport { useAddStudentsContextProvider } from '../state-n-styles/AddStudentsContext'\nimport {\n  AdditionalStudentSelect,\n  AddStudentContainer,\n  BottomButton,\n  BottomButtonContainer,\n  InformationDetailInputContainer,\n  PageTitle,\n  RegisterStudentContainer,\n} from '../state-n-styles/addStudentsStyles'\nimport { useNavigate } from 'react-router'\n\nexport type AddToCourseProps = {\n  course: findCourseByIdForStudentRegistration_findCourseById_course\n}\n\nexport const ADD_STUDENTS_TO_COURSE_MUTATION = gql`\n  mutation addStudentsToCourse($input: AddStudentsToCourseInput!) {\n    addStudentsToCourse(input: $input) {\n      students {\n        _id\n        userName\n        #   inCourses {\n        #     name\n        #     hasLessons {\n        #       lessonName\n        #     }\n        #   }\n      }\n    }\n  }\n`\n\nexport const FIND_ALL_STUDENTS_QUERY = gql`\n  query findAllStudents {\n    findAllStudents {\n      students {\n        _id\n        firstName\n        lastName\n        inCourses {\n          _id\n          hasCourseInfo {\n            courseType\n          }\n        }\n      }\n    }\n  }\n`\nexport const INITIALIZE_STUDENT_MUTATION = gql`\n  mutation initializeStudent($input: InitializeStudentsInput!) {\n    initializeStudents(input: $input) {\n      students {\n        _id\n      }\n    }\n  }\n`\n\nexport const AddToCourse = ({ course }: AddToCourseProps) => {\n  const [state, event] = useAddStudentsContextProvider()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    event({ type: 'SET_COURSE_ID', payload: course._id! })\n  }, [course, event])\n\n  const [initializeStudent] = useMutation<\n    initializeStudent,\n    initializeStudentVariables\n  >(INITIALIZE_STUDENT_MUTATION, {\n    variables: {\n      input: {\n        courseId: state.context.addStudentToCourse.courseId,\n        studentIds: state.context.addStudentToCourse.studentIds,\n      },\n    },\n    onCompleted: (data) => {\n      console.log(data.initializeStudents.students.length)\n      navigate(`/dashboard/courses/${course._id}/roster/add-students`)\n      for (const student of state.context.addStudentToCourse.studentIds) {\n        const studentIndex =\n          state.context.addStudentToCourse.studentIds.findIndex(\n            (i) => i === student,\n          )\n        console.log(studentIndex)\n        event({ type: 'REMOVE_STUDENT_IDS', payload: studentIndex })\n      }\n      event({ type: 'IDLE' })\n    },\n    refetchQueries: ['findAllStudents'],\n  })\n  console.log(state.context.addStudentToCourse.studentIds)\n  const [addStudentsToCourse] = useMutation<\n    addStudentsToCourse,\n    addStudentsToCourseVariables\n  >(ADD_STUDENTS_TO_COURSE_MUTATION, {\n    variables: { input: state.context.addStudentToCourse },\n    onCompleted: () => {\n      initializeStudent()\n    },\n    refetchQueries: ['findAllUsers'],\n  })\n\n  const { loading, data } = useQuery<findAllStudents>(FIND_ALL_STUDENTS_QUERY, {\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const studentsNotInCourse = data?.findAllStudents.students.filter(\n    (student) => student.inCourses.length === 0,\n  )!\n\n  const studentsToAdd = data?.findAllStudents.students.filter((student) =>\n    state.context.addStudentToCourse.studentIds.includes(student._id!),\n  )\n\n  // console.log(studentsToAdd)\n  return (\n    <AddStudentContainer>\n      <PageTitle>Add To Course</PageTitle>\n      <div style={{ overflow: 'scroll' }}>\n        {studentsToAdd?.map((student, i: number) => (\n          <InformationDetailInputContainer key={i}>\n            <div>\n              {i + 1}. {student.lastName}, {student.firstName}\n            </div>\n            <div\n              onClick={() => event({ type: 'REMOVE_STUDENT_IDS', payload: i })}\n            >\n              Delete\n            </div>\n          </InformationDetailInputContainer>\n        ))}\n      </div>\n      <div>\n        <PageTitle>Add Additional Students</PageTitle>\n        <br />\n        <AdditionalStudentSelect\n          onChange={(e: any) =>\n            event({ type: 'ADD_STUDENT_IDS', payload: e.target.value })\n          }\n        >\n          <option value=\"none\">Select a Student</option>\n          {studentsNotInCourse?.map((student) => (\n            <option key={student._id!} value={student._id!}>\n              {student.lastName}, {student.firstName}\n            </option>\n          ))}\n        </AdditionalStudentSelect>\n      </div>\n\n      <BottomButtonContainer>\n        <BottomButton onClick={() => event({ type: 'IDLE' })}>\n          Back\n        </BottomButton>\n        <BottomButton onClick={() => addStudentsToCourse()}>\n          Add to Course\n        </BottomButton>\n      </BottomButtonContainer>\n    </AddStudentContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { RegisterStudent } from './register-student/RegisterStudent'\nimport { useParams } from 'react-router'\nimport { useAddStudentsContextProvider } from './state-n-styles/AddStudentsContext'\nimport { AddToCourse } from './add-to-course/AddToCourse'\nimport {\n  findCourseByIdForStudentRegistration,\n  findCourseByIdForStudentRegistrationVariables,\n} from '../../../../../../schemaTypes'\nimport { useQuery, gql } from '@apollo/client'\nimport {\n  BottomButton,\n  FullScreenButtonContainer,\n} from './state-n-styles/addStudentsStyles'\n\nexport type AddStudentsProps = {}\n\nexport const FIND_COURSE_BY_ID_QUERY = gql`\n  query findCourseByIdForStudentRegistration($input: FindCourseByIdInput!) {\n    findCourseById(input: $input) {\n      course {\n        _id\n        hasStudents {\n          _id\n          firstName\n          lastName\n          virtual\n          cohort\n        }\n        hasCourseInfo {\n          _id\n          courseType\n          cohortBasedSeating\n          assignedSeats {\n            deskNumber\n            student {\n              _id\n              firstName\n              lastName\n            }\n            deskNumber\n            redCohortStudent {\n              _id\n              firstName\n              lastName\n            }\n            whiteCohortStudent {\n              _id\n              firstName\n              lastName\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const AddStudents: FC<AddStudentsProps> = () => {\n  const { course } = useParams()\n  const [state, event] = useAddStudentsContextProvider()\n  const { loading, data } = useQuery<\n    findCourseByIdForStudentRegistration,\n    findCourseByIdForStudentRegistrationVariables\n  >(FIND_COURSE_BY_ID_QUERY, {\n    variables: {\n      input: { courseId: course! },\n    },\n    // onCompleted: (data) => console.log(data.findCourseById.course),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <div>\n      {state.matches('idle') && (\n        <FullScreenButtonContainer>\n          <BottomButton onClick={() => event({ type: 'REGISTER' })}>\n            Register First\n          </BottomButton>\n          <BottomButton onClick={() => event({ type: 'ADD_TO_COURSE' })}>\n            Add Students To Course\n          </BottomButton>\n        </FullScreenButtonContainer>\n      )}\n      {state.matches('register') && <RegisterStudent />}\n      {state.matches('addToCourse') && (\n        <AddToCourse course={data?.findCourseById.course!} />\n      )}\n    </div>\n  )\n}\n","import styled from 'styled-components'\n\nexport const SeatingChartContainer = styled.div`\n  background-color: var(--white);\n  border: 1px solid var(--blue);\n  grid-area: SeatingChart;\n  height: 100%;\n`\n\nexport const StartingDisplay = styled.div`\n  font-size: 5vw;\n  height: 100%;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const ThirtySeatFloorPlan = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n`\nexport const ThirtySixSeatFloorPlan = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  grid-column-gap: 5%;\n`\n\nexport const TwentySixIndividualSeatFloorPlan = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(3, 1fr);\n`\n\nexport const TwentyFourSeatFloorPlan = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n`\n\nexport const ThirtySeatPairsFloorPlan = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n`\nexport const TwelveSeatFloorPlan = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n`\n\nexport const PairSeatingGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  height: 100%;\n  grid-column-gap: 2px;\n`\nexport const TripleSeatingGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  height: 100%;\n  grid-column-gap: 2px;\n`\nexport const FiveRowColumn = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;\n`\n\n// export const CenterColumn = styled.div`\n// \tdisplay: grid;\n// `\n// export const RightSideColumn = styled.div`\n// \tdisplay: grid;\n// `\n\nexport const LeftSide = styled.div`\n  height: 100%;\n  display: grid;\n  align-items: center;\n  justify-items: right;\n`\nexport const RightSide = styled.div`\n  height: 100%;\n  display: grid;\n  align-items: center;\n`\nexport const CenterSide = styled.div`\n  height: 100%;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const DeskContainer = styled.div`\n  width: 80%;\n  height: 65%;\n  border-radius: 5px;\n  box-shadow: 2px 2px 2px var(--grey);\n`\n\nexport const IndividualDeskContainer = styled.div`\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`\n\nexport const TripleSeatDeskContainer = styled(DeskContainer)`\n  width: 100%;\n`\n// export const IndividualDeskContainer = styled.div`\n// \twidth: 40%;\n// \theight: 65%;\n// \tborder-radius: 5px;\n// \tbox-shadow: 2px 2px 2px var(--grey);\n// `\n\nexport type DeskDisplayProps = {\n  absent: boolean\n  assigned: boolean\n  picked: boolean\n  active: boolean\n}\n\nexport const DeskDisplay = styled.div<DeskDisplayProps>`\n  height: 100%;\n  border-radius: 5px;\n  background-color: ${({ absent, assigned, active }) =>\n    !assigned\n      ? 'var(--grey)'\n      : absent\n        ? 'var(--red)'\n        : active\n          ? 'var(--white)'\n          : 'var(--blue)'};\n\n  text-decoration: ${({ picked }) => (picked ? 'underline' : 'none')};\n\n  border: ${({ picked }) =>\n    picked ? '5px solid var(--red)' : '1px solid var(--white)'};\n  color: ${({ active }) => (active ? 'var(--blue)' : 'var(--white)')};\n  text-shadow: ${({ active }) => (active ? 'none' : '2px 2px 2px black')};\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.2rem;\n`\n","import styled from 'styled-components'\n\nexport const AssignedSeat = styled.div`\n  background: var(--blue);\n  color: var(--white);\n  height: 100%;\n  display: grid;\n  align-items: center;\n  border-radius: 5%;\n`\nexport const UnassignedSeat = styled.div`\n  background: var(--grey);\n  color: var(--blue);\n  height: 100%;\n  display: grid;\n  align-items: center;\n  border-radius: 5%;\n`\nexport const NameContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  font-size: 2vh;\n`\nexport const AssignedDeskNumber = styled.div`\n  justify-self: center;\n  font-size: 1vh;\n`\nexport const UnassignedDeskNumber = styled.div`\n  justify-self: center;\n  align-self: center;\n  font-size: 1vh;\n`\nexport const DeleteSelector = styled.div`\n  justify-self: center;\n  font-size: 1.2vh;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nexport const StudentSelector = styled.select`\n  width: 80%;\n  font-size: 1.5vh;\n  justify-self: center;\n`\n// export const CenteredDeskItem = styled.div`\n//   justify-self: center;\n//   font-size: 2vh;\n// `\n","import { MutationFunctionOptions } from '@apollo/client'\nimport React from 'react'\nimport {\n  assignRegularSeats,\n  assignRegularSeatsVariables,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n} from '../../../../../../schemaTypes'\nimport {\n  AssignedDeskNumber,\n  AssignedSeat,\n  DeleteSelector,\n  NameContainer,\n  StudentSelector,\n  UnassignedDeskNumber,\n  UnassignedSeat,\n} from './state/assignedSeatStyles'\n\nexport type AssignedDeskProps = {\n  course: string\n  desk: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats\n  assignSeats: (\n    options?:\n      | MutationFunctionOptions<assignRegularSeats, assignRegularSeatsVariables>\n      | undefined,\n  ) => void\n  studentsInCourse: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents[]\n  assignedSeats: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats[]\n}\n\nexport const AssignedDesk = ({\n  desk,\n  assignSeats,\n  studentsInCourse,\n  assignedSeats,\n  course,\n}: AssignedDeskProps) => {\n  const unAssignSeat = (deskNumber: number) =>\n    assignSeats({\n      variables: {\n        input: {\n          cohortBasedSeating: false,\n          courseId: course,\n          seat: {\n            studentId: null,\n            deskNumber: deskNumber,\n          },\n        },\n      },\n    })\n\n  const assign = (deskNumber: number, studentId: string) =>\n    assignSeats({\n      variables: {\n        input: {\n          cohortBasedSeating: false,\n          courseId: course,\n          seat: {\n            studentId,\n            deskNumber,\n          },\n        },\n      },\n    })\n  return (\n    <>\n      {desk.student ? (\n        <AssignedSeat>\n          <AssignedDeskNumber>{desk.deskNumber}</AssignedDeskNumber>\n          <NameContainer>\n            <div>{desk.student?.firstName}</div>\n            <div> {desk.student.lastName}</div>\n          </NameContainer>\n          <DeleteSelector>\n            {desk.student && (\n              <div onClick={() => unAssignSeat(desk.deskNumber)}>Delete</div>\n            )}\n          </DeleteSelector>\n        </AssignedSeat>\n      ) : (\n        <UnassignedSeat>\n          <UnassignedDeskNumber>{desk.deskNumber}</UnassignedDeskNumber>\n          <StudentSelector\n            onChange={(e: any) => {\n              if (e.target.value !== 'none') {\n                assign(desk.deskNumber, e.target.value)\n              }\n            }}\n          >\n            <option value={'none'}>Select</option>\n            {studentsInCourse\n              .filter((student) => {\n                return !assignedSeats\n                  .map((assignedStudent) => assignedStudent.student?._id)\n                  .includes(student._id)\n              })\n              .map((student) => (\n                <option key={student._id!} value={student._id!}>\n                  {student.lastName}, {student.firstName}\n                </option>\n              ))}\n          </StudentSelector>\n        </UnassignedSeat>\n      )}\n    </>\n  )\n}\n","import { MutationFunctionOptions } from '@apollo/client'\nimport React from 'react'\nimport {\n  assignRegularSeats,\n  assignRegularSeatsVariables,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n} from '../../../../../../schemaTypes'\n\nimport {\n  ThirtySixSeatFloorPlan,\n  TripleSeatingGroup,\n  CenterSide,\n  TripleSeatDeskContainer,\n} from '../../../teachers-aid/styles/seatingChartStyles'\nimport { AssignedDesk } from './AssignedDesk'\n\nexport type ThirtySixSeatingChartProps = {\n  course: string\n  assignedSeats: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats[]\n  assignSeats: (\n    options?:\n      | MutationFunctionOptions<assignRegularSeats, assignRegularSeatsVariables>\n      | undefined,\n  ) => void\n  studentsInCourse: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents[]\n\n  // deskNumber: (\n  //   student: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents\n  // ) => number\n}\n\nexport const ThirtySixSeatingChart = ({\n  course,\n  assignedSeats,\n  assignSeats,\n  studentsInCourse,\n}: ThirtySixSeatingChartProps) => {\n  // key={desk.deskNumber}\n  // console.log(assignedSeats.filter(desk=>desk.deskNumber === ))\n  return (\n    <>\n      <ThirtySixSeatFloorPlan>\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 1)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 2)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 3)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 4)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 5)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 6)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 7)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 8)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 9)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 10)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 11)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 12)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 13)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 14)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 15)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 16)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 17)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 18)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 19)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 20)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 21)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 22)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 23)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 24)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 25)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 26)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 27)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 28)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 29)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 30)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 31)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 32)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 33)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n\n        <TripleSeatingGroup>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 34)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 35)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n          <CenterSide>\n            <TripleSeatDeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 36)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </TripleSeatDeskContainer>\n          </CenterSide>\n        </TripleSeatingGroup>\n      </ThirtySixSeatFloorPlan>\n    </>\n  )\n}\n","import { MutationFunctionOptions } from '@apollo/client'\nimport React from 'react'\nimport {\n  assignRegularSeats,\n  assignRegularSeatsVariables,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n} from '../../../../../../schemaTypes'\n\nimport {\n  TwentySixIndividualSeatFloorPlan,\n  FiveRowColumn,\n  IndividualDeskContainer,\n  DeskContainer,\n  ThirtySeatPairsFloorPlan,\n  PairSeatingGroup,\n  LeftSide,\n  RightSide,\n} from '../../../teachers-aid/styles/seatingChartStyles'\nimport { AssignedDesk } from './AssignedDesk'\n\nexport type ThirtySeatPairSeatingChartProps = {\n  course: string\n  assignedSeats: findCourseByIdForStudentRegistration_findCourseById_course_hasCourseInfo_assignedSeats[]\n  assignSeats: (\n    options?:\n      | MutationFunctionOptions<assignRegularSeats, assignRegularSeatsVariables>\n      | undefined,\n  ) => void\n  studentsInCourse: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents[]\n}\n\nexport const ThirtySeatPairSeatingChart = ({\n  course,\n  assignedSeats,\n  assignSeats,\n  studentsInCourse,\n}: ThirtySeatPairSeatingChartProps) => {\n  return (\n    <>\n      {/* <TwentySixIndividualSeatFloorPlan> */}\n      <ThirtySeatPairsFloorPlan>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 1)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 2)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 3)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 4)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 5)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 6)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 7)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 8)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 9)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 10)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 11)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 12)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 13)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 14)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 15)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 16)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 17)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 18)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 19)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 20)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 21)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 22)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 23)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 24)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 25)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 26)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 27)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 28)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide>\n        </PairSeatingGroup>\n        <PairSeatingGroup>\n          <LeftSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 29)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </LeftSide>\n          {/* <RightSide>\n            <DeskContainer>\n              <AssignedDesk\n                assignedSeats={assignedSeats}\n                course={course}\n                assignSeats={assignSeats}\n                desk={assignedSeats.filter((desk) => desk.deskNumber === 30)[0]}\n                studentsInCourse={studentsInCourse}\n              />\n            </DeskContainer>\n          </RightSide> */}\n        </PairSeatingGroup>\n      </ThirtySeatPairsFloorPlan>\n      {/* </TwentySixIndividualSeatFloorPlan> */}\n    </>\n  )\n}\n","import React, { FC, Fragment } from 'react'\nimport { useParams } from 'react-router'\nimport { useMutation, useQuery, gql } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  findCourseByIdForStudentRegistration,\n  findCourseByIdForStudentRegistrationVariables,\n  StudentSeatInput,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n  assignRegularSeats,\n  assignRegularSeatsVariables,\n} from '../../../../../../schemaTypes'\n\nimport { FIND_COURSE_BY_ID_QUERY } from '../add-students/AddStudents'\nimport { ThirtySixSeatingChart } from './ThirtySixSeatingChart'\nimport { TwentySixIndividualSeatingChart } from './TwentySixIndividualSeatingChart'\nimport { ThirtySeatPairSeatingChart } from './ThirtySeatPairSeatingChart'\n\nexport type RegularSeatingProps = {}\n\nexport const ASSIGN_REGULAR_SEATS_MUTATION = gql`\n  mutation assignRegularSeats($input: AssignSeatsInput!) {\n    assignSeats(input: $input) {\n      courseInfo {\n        _id\n        assignedSeats {\n          deskNumber\n          student {\n            _id\n            firstName\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const RegularSeating: FC<RegularSeatingProps> = () => {\n  const { course } = useParams()\n\n  const [assignSeats] = useMutation<\n    assignRegularSeats,\n    assignRegularSeatsVariables\n  >(ASSIGN_REGULAR_SEATS_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findCourseByIdForStudentRegistration'],\n  })\n\n  const { loading, data } = useQuery<\n    findCourseByIdForStudentRegistration,\n    findCourseByIdForStudentRegistrationVariables\n  >(FIND_COURSE_BY_ID_QUERY, {\n    variables: {\n      input: { courseId: course! },\n    },\n    onCompleted: (data) => {\n      const assignedSeats: StudentSeatInput[] = []\n\n      for (const seat of data?.findCourseById.course.hasCourseInfo\n        ?.assignedSeats!) {\n        const formattedSeat: StudentSeatInput = {\n          deskNumber: seat.deskNumber,\n          studentId: seat.student ? seat.student?._id : null,\n        }\n        assignedSeats.push(formattedSeat)\n      }\n    },\n\n    onError: (error) => console.error(error),\n  })\n\n  if (loading) return <div>Loading </div>\n\n  const assignedSeats =\n    data?.findCourseById.course.hasCourseInfo?.assignedSeats.filter(\n      (seat) => seat.student,\n    )\n\n  const unAssignSeat = (deskNumber: number) =>\n    assignSeats({\n      variables: {\n        input: {\n          cohortBasedSeating: false,\n          courseId: course!,\n          seat: {\n            studentId: null,\n            deskNumber: deskNumber,\n          },\n        },\n      },\n    })\n\n  const assign = (deskNumber: number, studentId: string) =>\n    assignSeats({\n      variables: {\n        input: {\n          cohortBasedSeating: false,\n          courseId: course!,\n          seat: {\n            studentId,\n            deskNumber,\n          },\n        },\n      },\n    })\n\n  const deskNumber = (\n    student: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n  ) => {\n    const [deskNumber] =\n      data?.findCourseById.course.hasCourseInfo?.assignedSeats\n        .filter((seat) => seat.student?._id === student._id)\n        .map((seat) => seat.deskNumber)!\n    return deskNumber\n  }\n  const courseSize =\n    data?.findCourseById.course.hasCourseInfo?.assignedSeats.length\n\n  return (\n    <>\n      <div>Assign Seats</div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: '2fr 10fr',\n          height: '95vh',\n        }}\n      >\n        <div>\n          {data?.findCourseById.course.hasStudents.map((student) => {\n            return (\n              <div key={student._id!}>\n                <span\n                  style={\n                    assignedSeats\n                      ?.map((seat) => seat.student?._id)\n                      .includes(student._id)\n                      ? { color: 'var(--blue)' }\n                      : { color: 'var(--grey)' }\n                  }\n                  onClick={() => {\n                    if (deskNumber(student)) {\n                      unAssignSeat(deskNumber(student))\n                    }\n                  }}\n                >\n                  {student.lastName}, {student.firstName} {deskNumber(student)}\n                </span>\n              </div>\n            )\n          })}\n        </div>\n        {courseSize === 36 ? (\n          <ThirtySixSeatingChart\n            assignedSeats={\n              data?.findCourseById.course.hasCourseInfo?.assignedSeats!\n            }\n            course={course!}\n            assignSeats={assignSeats}\n            studentsInCourse={data?.findCourseById.course.hasStudents!}\n          />\n        ) : courseSize! > 26 && courseSize! < 30 ? (\n          // <TwentySixIndividualSeatingChart\n          // \tassignedSeats={data?.findCourseById.course.hasCourseInfo?.assignedSeats!}\n          // \tcourse={course}\n          // \tassignSeats={assignSeats}\n          // \tstudentsInCourse={data?.findCourseById.course.hasStudents!}\n          // />\n          <ThirtySeatPairSeatingChart\n            assignedSeats={\n              data?.findCourseById.course.hasCourseInfo?.assignedSeats!\n            }\n            course={course!}\n            assignSeats={assignSeats}\n            studentsInCourse={data?.findCourseById.course.hasStudents!}\n          />\n        ) : (\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(6, 1fr)',\n              gridTemplateRows: 'repeat(5, 1fr)',\n            }}\n          >\n            {data?.findCourseById.course.hasCourseInfo?.assignedSeats!.map(\n              (desk) => (\n                <Fragment key={desk.deskNumber}>\n                  {desk.student ? (\n                    <div\n                      style={{\n                        width: '100px',\n                        height: '100px',\n                        border: '1px solid var(--blue)',\n                      }}\n                    >\n                      {desk.deskNumber}\n                      {desk.student?.firstName}\n                      {desk.student && (\n                        <div onClick={() => unAssignSeat(desk.deskNumber)}>\n                          Delete\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        width: '100px',\n                        height: '100px',\n                        border: '1px solid var(--blue)',\n                      }}\n                    >\n                      {desk.deskNumber}\n                      <select\n                        style={{ width: '60%' }}\n                        onChange={(e: any) => {\n                          if (e.target.value !== 'none') {\n                            assign(desk.deskNumber, e.target.value)\n                          }\n                        }}\n                      >\n                        <option value={'none'}>Select</option>\n                        {data.findCourseById.course.hasStudents\n                          .filter((student) => {\n                            return !data.findCourseById.course.hasCourseInfo?.assignedSeats\n                              .map(\n                                (assignedStudent) =>\n                                  assignedStudent.student?._id,\n                              )\n                              .includes(student._id)\n                          })\n                          .map((student) => (\n                            <option key={student._id!} value={student._id!}>\n                              {student.lastName}, {student.firstName}\n                            </option>\n                          ))}\n                      </select>\n                    </div>\n                  )}\n                </Fragment>\n              ),\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { FC, Fragment } from 'react'\nimport {\n  findCourseByIdForStudentRegistration_findCourseById_course,\n  StudentCohortEnum,\n  assignCohortBasedSeats,\n  assignCohortBasedSeatsVariables,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n} from '../../../../../../schemaTypes'\nimport { MutationFunctionOptions } from '@apollo/client'\nimport {\n  AssignSeatType,\n  RemoveAssignedSeatType,\n} from './AssignCohortBasedSeating'\n\nexport type AssignWhiteCohortProps = {\n  course: findCourseByIdForStudentRegistration_findCourseById_course\n  assignSeats: AssignSeatType\n  removeAssignedSeat: RemoveAssignedSeatType\n}\n\nexport const AssignWhiteCohort: FC<AssignWhiteCohortProps> = ({\n  course,\n  assignSeats,\n  removeAssignedSeat,\n}) => {\n  const assignedSeats = course.hasCourseInfo?.assignedSeats.filter(\n    (seat) => seat.whiteCohortStudent?._id,\n  )\n  console.log(assignedSeats)\n\n  const assign = (deskNumber: number, studentId: string) =>\n    assignSeats({\n      variables: {\n        input: {\n          cohortBasedSeating: true,\n          courseId: course._id!,\n          seat: {\n            whiteCohortStudentId: studentId,\n            deskNumber,\n          },\n        },\n      },\n    })\n\n  const unAssignSeat = (deskNumber: number) =>\n    removeAssignedSeat({\n      variables: {\n        input: {\n          // cohortBasedSeating: true,\n          cohortBased: true,\n          courseId: course._id!,\n          // seat: {\n          //   whiteCohortStudentId: null,\n          //   deskNumber,\n          // },\n          deskNumber,\n          cohortType: StudentCohortEnum.WHITE,\n        },\n      },\n    })\n\n  const deskNumber = (\n    student: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n  ) => {\n    const [deskNumber] = course.hasCourseInfo?.assignedSeats\n      .filter(\n        (seat) =>\n          seat.whiteCohortStudent?._id === student._id &&\n          seat.whiteCohortStudent?._id,\n      )\n      .map((seat) => seat.deskNumber)!\n    return deskNumber\n  }\n\n  return (\n    <>\n      <div>Assign Cohort Two Seats</div>\n      {course.hasStudents\n        .filter((student) => student.cohort === StudentCohortEnum.WHITE)\n        .map((student) => {\n          return (\n            <div key={student._id!}>\n              <span\n                style={\n                  assignedSeats\n                    ?.map((seat) => seat.whiteCohortStudent?._id)\n                    .includes(student._id)\n                    ? { color: 'var(--blue)' }\n                    : { color: 'var(--grey)' }\n                }\n                onClick={() => {\n                  if (deskNumber(student)) {\n                    unAssignSeat(deskNumber(student))\n                  }\n                }}\n              >\n                {student.lastName}, {student.firstName} {deskNumber(student)}\n              </span>\n            </div>\n          )\n        })}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(6, 1fr)',\n          gridTemplateRows: 'repeat(5, 1fr)',\n        }}\n      >\n        {course.hasCourseInfo?.assignedSeats.map((desk) => (\n          <Fragment key={desk.deskNumber}>\n            {desk.whiteCohortStudent ? (\n              <div\n                style={{\n                  width: '100px',\n                  height: '100px',\n                  border: '1px solid var(--blue)',\n                }}\n              >\n                {desk.deskNumber}\n                {desk.whiteCohortStudent?.firstName}\n                {desk.whiteCohortStudent && (\n                  <div onClick={() => unAssignSeat(desk.deskNumber)}>\n                    Delete\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div\n                style={{\n                  width: '100px',\n                  height: '100px',\n                  border: '1px solid var(--blue)',\n                }}\n              >\n                {desk.deskNumber}\n                <select\n                  style={{ width: '60%' }}\n                  onChange={(e: any) => {\n                    if (e.target.value !== 'none') {\n                      assign(desk.deskNumber, e.target.value)\n                    }\n                  }}\n                >\n                  <option value={'none'}>Select</option>\n                  {course.hasStudents\n                    .filter((student) => {\n                      return (\n                        !course.hasCourseInfo?.assignedSeats\n                          .map((assignedStudent) => {\n                            return assignedStudent.whiteCohortStudent?._id\n                          })\n                          .includes(student._id) &&\n                        student.cohort === StudentCohortEnum.WHITE\n                      )\n                    })\n                    .map((student) => (\n                      <option key={student._id!} value={student._id!}>\n                        {student.lastName}, {student.firstName}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n          </Fragment>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React, { FC, Fragment } from 'react'\nimport {\n  findCourseByIdForStudentRegistration_findCourseById_course,\n  StudentCohortEnum,\n  assignCohortBasedSeatsVariables,\n  assignCohortBasedSeats,\n  findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n} from '../../../../../../schemaTypes'\nimport { MutationFunctionOptions } from '@apollo/client'\nimport {\n  AssignSeatType,\n  RemoveAssignedSeatType,\n} from './AssignCohortBasedSeating'\n\nexport type AssignRedCohortProps = {\n  course: findCourseByIdForStudentRegistration_findCourseById_course\n  assignSeats: AssignSeatType\n  removeAssignedSeat: RemoveAssignedSeatType\n}\n\nexport const AssignRedCohort: FC<AssignRedCohortProps> = ({\n  course,\n  assignSeats,\n  removeAssignedSeat,\n}) => {\n  const assignedSeats = course.hasCourseInfo?.assignedSeats.filter(\n    (seat) => seat.redCohortStudent?._id,\n  )\n\n  const assign = (deskNumber: number, studentId: string) =>\n    assignSeats({\n      variables: {\n        input: {\n          cohortBasedSeating: true,\n          courseId: course._id!,\n          seat: {\n            redCohortStudentId: studentId,\n            deskNumber,\n          },\n        },\n      },\n    })\n\n  const unAssignSeat = (deskNumber: number) =>\n    removeAssignedSeat({\n      variables: {\n        input: {\n          cohortBased: true,\n          courseId: course._id!,\n          deskNumber,\n          cohortType: StudentCohortEnum.RED,\n        },\n      },\n    })\n\n  const deskNumber = (\n    student: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents,\n  ) => {\n    const [deskNumber] = course.hasCourseInfo?.assignedSeats\n      .filter(\n        (seat) =>\n          seat.redCohortStudent?._id === student._id &&\n          seat.redCohortStudent?._id,\n      )\n      .map((seat) => seat.deskNumber)!\n    return deskNumber\n  }\n\n  return (\n    <>\n      <div>Assign Cohort One Seats</div>\n      {course.hasStudents\n        .filter((student) => student.cohort === StudentCohortEnum.RED)\n        .map((student) => {\n          return (\n            <div key={student._id!}>\n              <span\n                style={\n                  assignedSeats\n                    ?.map((seat) => seat.redCohortStudent?._id)\n                    .includes(student._id)\n                    ? { color: 'var(--blue)' }\n                    : { color: 'var(--grey)' }\n                }\n                onClick={() => {\n                  if (deskNumber(student)) {\n                    unAssignSeat(deskNumber(student))\n                  }\n                }}\n              >\n                {student.lastName}, {student.firstName} {deskNumber(student)}\n              </span>\n            </div>\n          )\n        })}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(6, 1fr)',\n          gridTemplateRows: 'repeat(5, 1fr)',\n        }}\n      >\n        {course.hasCourseInfo?.assignedSeats.map((desk) => (\n          <Fragment key={desk.deskNumber}>\n            {desk.redCohortStudent ? (\n              <div\n                style={{\n                  width: '100px',\n                  height: '100px',\n                  border: '1px solid var(--blue)',\n                }}\n              >\n                {desk.deskNumber}\n                {desk.redCohortStudent?.firstName}\n                {desk.redCohortStudent && (\n                  <div onClick={() => unAssignSeat(desk.deskNumber)}>\n                    Delete\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div\n                style={{\n                  width: '100px',\n                  height: '100px',\n                  border: '1px solid var(--blue)',\n                }}\n              >\n                {desk.deskNumber}\n                <select\n                  style={{ width: '60%' }}\n                  onChange={(e: any) => {\n                    if (e.target.value !== 'none') {\n                      assign(desk.deskNumber, e.target.value)\n                    }\n                  }}\n                >\n                  <option value={'none'}>Select</option>\n                  {course.hasStudents\n                    .filter((student) => {\n                      return (\n                        !course.hasCourseInfo?.assignedSeats\n                          .map(\n                            (assignedStudent) =>\n                              assignedStudent.redCohortStudent?._id,\n                          )\n                          .includes(student._id) &&\n                        student.cohort === StudentCohortEnum.RED\n                      )\n                    })\n                    .map((student) => (\n                      <option key={student._id!} value={student._id!}>\n                        {student.lastName}, {student.firstName}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n          </Fragment>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { gql, useMutation, MutationFunctionOptions } from '@apollo/client'\nimport {\n  assignCohortBasedSeats,\n  assignCohortBasedSeatsVariables,\n  findCourseByIdForStudentRegistration_findCourseById_course,\n  StudentCohortEnum,\n  removeCohortBasedSeat,\n  removeCohortBasedSeatVariables,\n} from '../../../../../../schemaTypes'\nimport { AssignWhiteCohort } from './AssignWhiteCohort'\nimport { AssignRedCohort } from './AssignRedCohort'\n\nexport type AssignCohortBasedSeatingProps = {\n  course: findCourseByIdForStudentRegistration_findCourseById_course\n}\n\nexport const ASSIGN_COHORT_BASED_SEATS_MUTATION = gql`\n  mutation assignCohortBasedSeats($input: AssignSeatsInput!) {\n    assignSeats(input: $input) {\n      courseInfo {\n        _id\n        assignedSeats {\n          deskNumber\n          student {\n            _id\n            firstName\n          }\n          redCohortStudent {\n            _id\n            firstName\n          }\n          whiteCohortStudent {\n            _id\n            firstName\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const REMOVE_COHORT_BASED_SEAT_MUTATION = gql`\n  mutation removeCohortBasedSeat($input: RemoveAssignedSeatInput!) {\n    removeAssignedSeat(input: $input) {\n      courseInfo {\n        _id\n      }\n    }\n  }\n`\n\nexport type RemoveAssignedSeatType = (\n  options?:\n    | MutationFunctionOptions<\n        removeCohortBasedSeat,\n        removeCohortBasedSeatVariables\n      >\n    | undefined,\n) => void\n\nexport type AssignSeatType = (\n  options?:\n    | MutationFunctionOptions<\n        assignCohortBasedSeats,\n        assignCohortBasedSeatsVariables\n      >\n    | undefined,\n) => void\n\nexport const AssignCohortBasedSeating: FC<AssignCohortBasedSeatingProps> = ({\n  course,\n}) => {\n  const [cohortSelect, setCohortSelect] = useState<StudentCohortEnum>(\n    StudentCohortEnum.RED,\n  )\n  const [assignSeats] = useMutation<\n    assignCohortBasedSeats,\n    assignCohortBasedSeatsVariables\n  >(ASSIGN_COHORT_BASED_SEATS_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findCourseByIdForStudentRegistration'],\n  })\n\n  const [removeAssignedSeat] = useMutation<\n    removeCohortBasedSeat,\n    removeCohortBasedSeatVariables\n  >(REMOVE_COHORT_BASED_SEAT_MUTATION, {\n    // variables: { input: {  } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findCourseByIdForStudentRegistration'],\n  })\n\n  console.log(course.hasStudents.map((student) => student.cohort))\n\n  return (\n    <>\n      <div>Select Cohort</div>\n      <button onClick={() => setCohortSelect(StudentCohortEnum.RED)}>\n        Red\n      </button>\n      <button onClick={() => setCohortSelect(StudentCohortEnum.WHITE)}>\n        White\n      </button>\n      {cohortSelect === StudentCohortEnum.RED ? (\n        <AssignRedCohort\n          course={course}\n          assignSeats={assignSeats}\n          removeAssignedSeat={removeAssignedSeat}\n        />\n      ) : (\n        <AssignWhiteCohort\n          course={course}\n          assignSeats={assignSeats}\n          removeAssignedSeat={removeAssignedSeat}\n        />\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  findCourseByIdForStudentRegistration,\n  findCourseByIdForStudentRegistrationVariables,\n} from '../../../../../../schemaTypes'\nimport { useParams } from 'react-router'\nimport { FIND_COURSE_BY_ID_QUERY } from '../add-students/AddStudents'\nimport { RegularSeating } from './RegularSeating'\nimport { AssignCohortBasedSeating } from './AssignCohortBasedSeating'\n\nexport type AssignSeatsProps = {}\n\nexport const AssignSeats = ({}: AssignSeatsProps) => {\n  const { course } = useParams()\n\n  const { loading, data } = useQuery<\n    findCourseByIdForStudentRegistration,\n    findCourseByIdForStudentRegistrationVariables\n  >(FIND_COURSE_BY_ID_QUERY, {\n    variables: {\n      input: { courseId: course! },\n    },\n    onCompleted: (data) => {\n      console.log(data.findCourseById.course)\n    },\n    onError: (error) => console.error(error),\n  })\n\n  if (loading) return <div>Loading </div>\n\n  // const assignedSeats = data?.findCourseById.course.hasCourseInfo?.assignedSeats.filter(\n  //   (seat) => seat.student\n  // )\n  // console.log(data?.findCourseById.course.hasCourseInfo?.cohortBasedSeating)\n  // const unAssignSeat = (deskNumber: number) =>\n  //   assignSeats({\n  //     variables: {\n  //       input: {\n  //         cohortBasedSeating: false,\n  //         courseId: course,\n  //         seat: {\n  //           studentId: null,\n  //           deskNumber: deskNumber,\n  //         },\n  //       },\n  //     },\n  //   })\n\n  // const assign = (deskNumber: number, studentId: string) =>\n  //   assignSeats({\n  //     variables: {\n  //       input: {\n  //         cohortBasedSeating: false,\n  //         courseId: course,\n  //         seat: {\n  //           studentId,\n  //           deskNumber,\n  //         },\n  //       },\n  //     },\n  //   })\n\n  // const deskNumber = (\n  //   student: findCourseByIdForStudentRegistration_findCourseById_course_hasStudents\n  // ) => {\n  //   const [\n  //     deskNumber,\n  //   ] = data?.findCourseById.course.hasCourseInfo?.assignedSeats\n  //     .filter((seat) => seat.student?._id === student._id)\n  //     .map((seat) => seat.deskNumber)\n  //   return deskNumber\n  // }\n\n  return (\n    <div>\n      {data?.findCourseById.course.hasCourseInfo?.cohortBasedSeating ? (\n        <AssignCohortBasedSeating course={data.findCourseById.course} />\n      ) : (\n        <RegularSeating />\n      )}\n    </div>\n  )\n}\n","import { Machine } from 'xstate'\nimport { StudentSeatInput } from '../../../../../../../schemaTypes'\n\nexport type assignSeatsMachineSchema = {\n  states: {\n    assignSeats: {}\n  }\n}\nexport type assignSeatsMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_COURSE_ID'; payload: string }\n  | { type: 'LOAD_SEATS'; payload: StudentSeatInput[] }\n  | {\n      type: 'ASSIGN_SEAT'\n      payload: { seat: StudentSeatInput; location: number }\n    }\n  | { type: 'ADD_SEATS'; payload: StudentSeatInput }\n\nexport type assignSeatsMachineContext = {\n  seat: StudentSeatInput\n}\n\nexport const assignSeatsMachine = Machine<\n  assignSeatsMachineContext,\n  assignSeatsMachineSchema,\n  assignSeatsMachineEvent\n>({\n  id: 'assignSeats',\n  initial: 'assignSeats',\n  context: {\n    seat: {\n      deskNumber: 0,\n      studentId: null,\n    },\n  },\n  states: {\n    assignSeats: {\n      on: {\n        // SET_COURSE_ID: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       seatToAssign: { ...ctx.seatsToAssign, courseId: evt.payload },\n        //     }\n        //   }),\n        // },\n        // LOAD_SEATS: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       seatsToAssign: {\n        //         ...ctx.seatsToAssign,\n        //         assignedSeats: evt.payload,\n        //       },\n        //     }\n        //   }),\n        // },\n        // ASSIGN_SEAT: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       seat: {\n        //         deskNumber: evt.payload,\n        //         studentId: evt.payload,\n        //       },\n        //     }\n        //   }),\n        // },\n        // ADD_SEATS: {\n        //   actions: assign((ctx, evt) => {\n        //     return {\n        //       ...ctx,\n        //       seatsToAssign: {\n        //         ...ctx.seatsToAssign,\n        //         assignedSeats: [\n        //           ...ctx.seatsToAssign.assignedSeats,\n        //           evt.payload,\n        //         ],\n        //       },\n        //     }\n        //   }),\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  assignSeatsMachine,\n  assignSeatsMachineContext,\n  assignSeatsMachineEvent,\n} from './assignSeatsMachine'\n\nconst AssignSeatsContext = createContext<any>(undefined)\n\ntype AssignSeatsContextProps = {\n  children: ReactNode\n}\n\nexport const AssignSeatsContextProvider: FC<AssignSeatsContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(assignSeatsMachine)\n  return (\n    <AssignSeatsContext.Provider value={[state, event]}>\n      {children}\n    </AssignSeatsContext.Provider>\n  )\n}\n\nexport function useAssignSeatsContextProvider() {\n  const context = useContext(AssignSeatsContext)\n  if (context === undefined) {\n    throw new Error(\n      'useAssignSeatsContextProvider must be used within a AssignSeatsContextProvider',\n    )\n  }\n  return context as [\n    State<assignSeatsMachineContext, assignSeatsMachineEvent, any, any>,\n    (event: assignSeatsMachineEvent) => void,\n  ]\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const RosterDashboardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  height: 95vh;\n`\n\nexport const RosterNavigationContainer = styled.div`\n  background-color: var(--blue);\n  border-top: 3px solid var(--white);\n  display: grid;\n  grid-auto-flow: row;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const RosterNavLink = styled(Link)`\n  color: var(--white);\n  text-decoration: none;\n  font-size: 2.5vh;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nexport const CourseName = styled.div`\n  color: var(--white);\n  text-decoration: none;\n  font-size: 2.5vh;\n`\n\nexport const ViewRosterContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n`\nexport const ViewRosterTitle = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3vh;\n`\n\nexport const RosterItemsContainer = styled.div`\n  font-size: 2vh;\n  height: 85vh;\n  overflow: scroll;\n`\n\nexport type RosterItemsProps = {\n  highlighted: boolean\n}\n\nexport const RosterItems = styled.div<RosterItemsProps>`\n  background-color: ${({ highlighted }) =>\n    highlighted ? 'var(--grey)' : 'var(--white)'};\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  padding-left: 5%;\n  padding-right: 5%;\n`\n","import React, { FC } from 'react'\nimport { useParams } from 'react-router'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findRosterByCourse,\n  findRosterByCourseVariables,\n  findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats,\n} from '../../../../../../schemaTypes'\nimport {\n  RosterItems,\n  RosterItemsContainer,\n  ViewRosterContainer,\n  ViewRosterTitle,\n} from '../RosterDashboardStyles'\n\nexport type ViewRosterProps = {}\n\nexport const FIND_ROSTER_BY_COURSE_QUERY = gql`\n  query findRosterByCourse($input: FindCourseByIdInput!) {\n    findCourseById(input: $input) {\n      course {\n        hasCourseInfo {\n          assignedSeats {\n            deskNumber\n            student {\n              _id\n              userName\n              lastName\n              firstName\n              # hasWritingMetrics {\n              #   overallWritingMetric {\n              #     overallWritingLevel\n              #     levelPoints\n              #   }\n              # }\n              hasProtocols {\n                completed\n                assessment\n                discussionLevel\n              }\n              hasUnExcusedLatenesses {\n                markingPeriod\n                dayLate\n              }\n              hasExcusedLatenesses {\n                markingPeriod\n                dayLate\n              }\n              hasAbsences {\n                markingPeriod\n                dayAbsent\n              }\n              # hasContactInformation {\n              #   contactInfo {\n              #     guardianEmail\n              #     guardianFirstName\n              #     guardianLastName\n              #     guardianPhone\n              #   }\n              # }\n              hasAssignments {\n                __typename\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ViewRoster: FC<ViewRosterProps> = () => {\n  const { course } = useParams()\n  const { loading, data } = useQuery<\n    findRosterByCourse,\n    findRosterByCourseVariables\n  >(FIND_ROSTER_BY_COURSE_QUERY, {\n    variables: {\n      input: { courseId: course! },\n    },\n    onCompleted: (data) =>\n      console.log(\n        data.findCourseById.course.hasCourseInfo?.assignedSeats.filter(\n          (seat) => seat.student,\n        ),\n      ),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const students =\n    data?.findCourseById.course.hasCourseInfo?.assignedSeats.filter(\n      (seat) => seat.student!,\n    )\n\n  const sortByLetter = (\n    a: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats,\n    b: findRosterByCourse_findCourseById_course_hasCourseInfo_assignedSeats,\n  ) => {\n    let nameA = a.student?.lastName.toUpperCase()\n    let nameB = b.student?.lastName.toUpperCase()\n    if (nameA! < nameB!) {\n      return -1\n    }\n    if (nameA! > nameB!) {\n      return 1\n    }\n\n    // names must be equal\n    return 0\n  }\n  console.log(students?.sort(sortByLetter))\n  return (\n    <ViewRosterContainer>\n      <ViewRosterTitle>Assigned Seats</ViewRosterTitle>\n      <RosterItemsContainer>\n        {students?.sort(sortByLetter).map((student, i: number) => (\n          <RosterItems highlighted={i % 2 === 0} key={student.student?._id!}>\n            <div>\n              {student.student?.lastName}, {student.student?.firstName}\n            </div>\n            <div>{student.deskNumber}</div>\n          </RosterItems>\n        ))}\n      </RosterItemsContainer>\n    </ViewRosterContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { Link, Routes, Route } from 'react-router-dom'\nimport { me_me_Teacher_teachesCourses } from '../../../../../schemaTypes'\nimport { AddStudents } from './add-students/AddStudents'\nimport { AddStudentsContextProvider } from './add-students/state-n-styles/AddStudentsContext'\nimport { AssignSeats } from './assign-seats/AssignSeats'\nimport { AssignSeatsContextProvider } from './assign-seats/state/AssignSeatsContext'\nimport {\n  CourseName,\n  RosterDashboardContainer,\n  RosterNavigationContainer,\n  RosterNavLink,\n} from './RosterDashboardStyles'\nimport { ViewRoster } from './view-roster/ViewRoster'\n\nexport type RosterDashboardProps = {\n  courseName: string\n  courseId: string\n}\n\nexport const RosterDashboard = ({\n  courseName,\n  courseId,\n}: RosterDashboardProps) => {\n  console.log(courseName)\n  return (\n    <RosterDashboardContainer>\n      <RosterNavigationContainer>\n        <RosterNavLink to={'/dashboard/courses/' + courseId}>\n          Back to Menu\n        </RosterNavLink>\n        <CourseName>{courseName}</CourseName>\n        <RosterNavLink to=\"add-students\">Add Students to Course</RosterNavLink>\n        <RosterNavLink to=\"assign-seats\">Assign Seats</RosterNavLink>\n        <RosterNavLink to=\"view-roster\">View Roster</RosterNavLink>\n      </RosterNavigationContainer>\n      <Routes>\n        <Route\n          path=\"add-students\"\n          element={\n            <AddStudentsContextProvider>\n              <AddStudents />\n            </AddStudentsContextProvider>\n          }\n        />\n        <Route\n          path=\"assign-seats\"\n          element={\n            <AssignSeatsContextProvider>\n              <AssignSeats />\n            </AssignSeatsContextProvider>\n          }\n        />\n        <Route path=\"view-roster\" element={<ViewRoster />} />\n      </Routes>\n    </RosterDashboardContainer>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\nimport { useQuery } from '@apollo/client'\nimport {\n  findLessonsByUnit,\n  findLessonsByUnitVariables,\n} from '../../../../../schemaTypes'\nimport { FIND_LESSONS_BY_UNIT_QUERY } from '../create-assignments/create-essay/EssayLessonSelect'\n\nexport type ReadingGuideLessonSelectProps = {\n  course: string\n  unitId: string\n  setLessonId: Dispatch<SetStateAction<string>>\n}\n\nexport const ReadingGuideLessonSelect: FC<ReadingGuideLessonSelectProps> = ({\n  course,\n  unitId,\n  setLessonId,\n}) => {\n  const { loading, data } = useQuery<\n    findLessonsByUnit,\n    findLessonsByUnitVariables\n  >(FIND_LESSONS_BY_UNIT_QUERY, {\n    variables: {\n      input: { courseId: course, unitId: unitId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading</div>\n\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            setLessonId(e.target.value)\n          }\n        }}\n      >\n        <option value={'none'}>Select a Lesson</option>\n        {data?.findLessonsByUnit.lessons.map((lesson) => (\n          <option key={lesson._id!} value={lesson._id!}>\n            {lesson.lessonName}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findReadingGuideDataForCourseAndLessonVariables,\n  findReadingGuideDataForCourseAndLesson,\n  // InformationStructureEnum,\n} from '../../../../../schemaTypes'\n\nexport type DataViewerProps = { lessonId: string; course: string }\n\nexport const FIND_READING_GUIDE_DATA_FOR_COURSE_AND_LESSON_QUERY = gql`\n  query findReadingGuideDataForCourseAndLesson(\n    $input: FindReadingGuidesByAssociatedLessonAndCourseIdInput!\n  ) {\n    findReadingGuidesByAssociatedLessonAndCourseId(input: $input) {\n      readingGuides {\n        assigned\n        hasOwner {\n          _id\n          firstName\n          lastName\n        }\n        readings {\n          readingSections\n        }\n        completed\n        graded\n        readingGuideFinal {\n          # clarifyingQuestions\n          submitted\n          # howIsSectionOrganized\n          # whyWasSectionOrganized\n          # majorIssue\n          # majorSolution\n          # majorIssueSolved\n        }\n      }\n    }\n  }\n`\nexport const ReadingGuideDataViewer: FC<DataViewerProps> = ({\n  lessonId,\n  course,\n}) => {\n  const { loading, data } = useQuery<\n    findReadingGuideDataForCourseAndLesson,\n    findReadingGuideDataForCourseAndLessonVariables\n  >(FIND_READING_GUIDE_DATA_FOR_COURSE_AND_LESSON_QUERY, {\n    variables: {\n      input: { courseId: course, lessonId: lessonId },\n    },\n    // onCompleted: (data) => data,\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const readingGuides =\n    data?.findReadingGuidesByAssociatedLessonAndCourseId.readingGuides\n\n  let clarifyingQuestionsList: { student: string; questions: string[] }[] = []\n\n  let completedReadingGuidesNumber: number = 0\n\n  let problemSolutionTypes = 0\n  let problemSolutionReasons: string[] = []\n  let causeEffectTypes = 0\n  let causeEffectReasons: string[] = []\n  let compareContrastTypes = 0\n  let compareContrastReasons: string[] = []\n  let sequenceTypes = 0\n  let sequenceReasons: string[] = []\n\n  let majorIssuesList: string[] = []\n  let majorUnsolvedIssueList: string[] = []\n  let majorSolutionsList: string[] = []\n\n  let majorIssueSolved: number = 0\n  let majorIssueUnsolved: number = 0\n\n  // readingGuides?.forEach((guide) => {\n  //   if (guide.readingGuideFinal) {\n  //     const clarifyingQuestions: string[] =\n  //       guide.readingGuideFinal.clarifyingQuestions\n\n  //     const obj = {\n  //       student: guide.hasOwner.firstName,\n  //       questions: [...clarifyingQuestions],\n  //     }\n  //     completedReadingGuidesNumber = completedReadingGuidesNumber + 1\n  //     clarifyingQuestionsList = [...clarifyingQuestionsList, obj]\n  //     majorIssuesList = [...majorIssuesList, guide.readingGuideFinal.majorIssue]\n\n  //     if (guide.readingGuideFinal.majorIssueSolved) {\n  //       majorIssueSolved = majorIssueSolved + 1\n  //       majorSolutionsList = [\n  //         ...majorSolutionsList,\n  //         guide.readingGuideFinal.majorSolution,\n  //       ]\n  //     }\n  //     if (!guide.readingGuideFinal.majorIssueSolved) {\n  //       majorIssueUnsolved = majorIssueUnsolved + 1\n  //       majorUnsolvedIssueList = [\n  //         ...majorUnsolvedIssueList,\n  //         guide.readingGuideFinal.majorSolution,\n  //       ]\n  //     }\n  //     if (\n  //       guide.readingGuideFinal.howIsSectionOrganized!.includes(\n  //         InformationStructureEnum.PROBLEM_SOLUTION\n  //       )\n  //     ) {\n  //       problemSolutionTypes = problemSolutionTypes + 1\n  //       problemSolutionReasons = [\n  //         ...problemSolutionReasons,\n  //         guide.readingGuideFinal.whyWasSectionOrganized!,\n  //       ]\n  //     }\n  //     if (\n  //       guide.readingGuideFinal.howIsSectionOrganized!.includes(\n  //         InformationStructureEnum.CAUSE_EFFECT\n  //       )\n  //     ) {\n  //       causeEffectTypes = causeEffectTypes + 1\n  //       causeEffectReasons = [\n  //         ...causeEffectReasons,\n  //         guide.readingGuideFinal.whyWasSectionOrganized!,\n  //       ]\n  //     }\n  //     if (\n  //       guide.readingGuideFinal.howIsSectionOrganized!.includes(\n  //         InformationStructureEnum.COMPARE_CONTRAST\n  //       )\n  //     ) {\n  //       compareContrastTypes = compareContrastTypes + 1\n  //       compareContrastReasons = [\n  //         ...compareContrastReasons,\n  //         guide.readingGuideFinal.whyWasSectionOrganized!,\n  //       ]\n  //     }\n  //     if (\n  //       guide.readingGuideFinal.howIsSectionOrganized!.includes(\n  //         InformationStructureEnum.SEQUENCE\n  //       )\n  //     ) {\n  //       sequenceTypes = sequenceTypes + 1\n  //       sequenceReasons = [\n  //         ...sequenceReasons,\n  //         guide.readingGuideFinal.whyWasSectionOrganized!,\n  //       ]\n  //     }\n  //   }\n  // })\n\n  let completionFraction =\n    completedReadingGuidesNumber + '/' + readingGuides?.length\n\n  return (\n    <>\n      <div>How many were completed online: {completionFraction}</div>\n      <div>\n        <div>Section Structure</div>\n        {problemSolutionTypes > 0 && (\n          <>\n            <div>Problem and Solution: {problemSolutionTypes}</div>\n            {problemSolutionReasons.map((reason, i: number) => (\n              <div key={i}>\n                {i + 1}: {reason}\n              </div>\n            ))}\n          </>\n        )}\n        {causeEffectTypes > 0 && (\n          <>\n            <div>Cause and Effect: {causeEffectTypes}</div>\n            {causeEffectReasons.map((reason, i: number) => (\n              <div key={i}>\n                {i + 1}: {reason}\n              </div>\n            ))}\n          </>\n        )}\n        {compareContrastTypes > 0 && (\n          <>\n            <div>Compare and Contrast: {compareContrastTypes}</div>\n            {compareContrastReasons.map((reason, i: number) => (\n              <div key={i}>\n                {i + 1}: {reason}\n              </div>\n            ))}\n          </>\n        )}\n        {sequenceTypes > 0 && (\n          <>\n            <div>Sequence:{sequenceTypes}</div>\n            {sequenceReasons.map((reason, i: number) => (\n              <div key={i}>\n                {i + 1}: {reason}\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n      <div>Major Issues</div>\n      {majorIssuesList.map((issue, i: number) => (\n        <div key={i}>\n          {i + 1}: {issue}\n        </div>\n      ))}\n      {majorIssueSolved > 0 && (\n        <>\n          <div>How was it solved?</div>\n          {majorSolutionsList.map((solution, i: number) => (\n            <div key={i}>\n              {i + 1}: {solution}\n            </div>\n          ))}\n        </>\n      )}\n      {majorIssueUnsolved > 0 && (\n        <>\n          <div>Why wasn't it solved?</div>\n          {majorUnsolvedIssueList.map((reason, i: number) => (\n            <div key={i}>\n              {i + 1}: {reason}\n            </div>\n          ))}\n        </>\n      )}\n      <div>Clarifying Questions</div>\n      {clarifyingQuestionsList.map((question, i: number) => {\n        return (\n          <div key={i}>\n            {question.student}: {question.questions}\n          </div>\n        )\n      })}\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\n\nimport { useParams } from 'react-router'\nimport { ReadingGuideLessonSelect } from './ReadingGuideLessonSelect'\nimport { ReadingGuideDataViewer } from './ReadingGuideDataViewer'\nimport { UnitSelect } from '../assign-assignments/assign-readingGuides/assing-by-course/UnitSelect'\n\nexport type ReadingGuideDataProps = {}\n\nexport const ReadingGuideData: FC<ReadingGuideDataProps> = () => {\n  const { course } = useParams()\n  const [unitId, setUnitId] = useState('')\n  const [lessonId, setLessonId] = useState('')\n\n  return (\n    <>\n      <UnitSelect setUnitId={setUnitId} />\n      {unitId && (\n        <ReadingGuideLessonSelect\n          course={course!}\n          unitId={unitId}\n          setLessonId={setLessonId}\n        />\n      )}\n      {lessonId && (\n        <ReadingGuideDataViewer lessonId={lessonId} course={course!} />\n      )}\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  CourseMaxSizeEnum,\n  CourseTypeEnum,\n  SchoolDayType,\n  updateCourseInfo,\n  UpdateCourseInfoInput,\n  updateCourseInfoVariables,\n} from '../../../../../../schemaTypes'\n\nexport type editCourseMachineSchema = {\n  states: {\n    editCourse: {}\n  }\n}\nexport type editCourseMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'LOAD_COURSE_DATA'; payload: UpdateCourseInfoInput }\n  | { type: 'UPDATE_COURSE_NAME'; payload: string }\n  | { type: 'UPDATE_COURSE_TYPE'; payload: CourseTypeEnum }\n  | { type: 'UPDATE_END_TIME'; payload: string }\n  | { type: 'UPDATE_START_TIME'; payload: string }\n  | { type: 'UPDATE_HALF_DAY_END_TIME'; payload: string }\n  | { type: 'UPDATE_HALF_DAY_START_TIME'; payload: string }\n  | { type: 'UPDATE_SCHOOL_DAY_TYPE'; payload: SchoolDayType }\n  | { type: 'UPDATE_COURSE_BASED_SEATING'; payload: boolean }\n  | { type: 'UPDATE_COURSE_SIZE'; payload: CourseMaxSizeEnum }\n\nexport type editCourseMachineContext = {\n  updateCourseInfo: UpdateCourseInfoInput\n}\n\nexport const editCourseMachine = Machine<\n  editCourseMachineContext,\n  editCourseMachineSchema,\n  editCourseMachineEvent\n>({\n  id: 'editCourse',\n  initial: 'editCourse',\n  context: {\n    updateCourseInfo: {\n      courseId: '',\n      name: '',\n      courseType: CourseTypeEnum.SOCIAL_STUDIES,\n      endsAt: '',\n      halfDayEndsAt: '',\n      halfDayStartsAt: '',\n      schoolDayType: SchoolDayType.A,\n      startsAt: '',\n      cohortBasedSeating: true,\n      courseMaxSize: CourseMaxSizeEnum.TWENTY_FOUR,\n    },\n  },\n  states: {\n    editCourse: {\n      on: {\n        LOAD_COURSE_DATA: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: evt.payload,\n            }\n          }),\n        },\n        UPDATE_COURSE_NAME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: { ...ctx.updateCourseInfo, name: evt.payload },\n            }\n          }),\n        },\n        UPDATE_COURSE_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                courseType: evt.payload,\n              },\n            }\n          }),\n        },\n        UPDATE_END_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                endsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        UPDATE_START_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                startsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        UPDATE_HALF_DAY_END_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                halfDayEndsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        UPDATE_HALF_DAY_START_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                halfDayStartsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        UPDATE_SCHOOL_DAY_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                schoolDayType: evt.payload,\n              },\n            }\n          }),\n        },\n        UPDATE_COURSE_BASED_SEATING: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                cohortBasedSeating: evt.payload,\n              },\n            }\n          }),\n        },\n        UPDATE_COURSE_SIZE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              updateCourseInfo: {\n                ...ctx.updateCourseInfo,\n                courseMaxSize: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  editCourseMachine,\n  editCourseMachineContext,\n  editCourseMachineEvent,\n} from './editCourseMachine'\n\nconst EditCourseContext = createContext<any>(undefined)\n\ntype EditCourseContextProps = {\n  children: ReactNode\n}\n\nexport const EditCourseContextProvider: FC<EditCourseContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(editCourseMachine)\n  return (\n    <EditCourseContext.Provider value={[state, event]}>\n      {children}\n    </EditCourseContext.Provider>\n  )\n}\n\nexport function useEditCourseContextProvider() {\n  const context = useContext(EditCourseContext)\n  if (context === undefined) {\n    throw new Error(\n      'useEditCourseContextProvider must be used within a EditCourseContextProvider',\n    )\n  }\n  return context as [\n    State<editCourseMachineContext, editCourseMachineEvent, any, any>,\n    (event: editCourseMachineEvent) => void,\n  ]\n}\n","import React, { FC } from 'react'\nimport { useParams } from 'react-router'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport {\n  updateCourseInfoVariables,\n  updateCourseInfo,\n  findCourseByIdForCourseEditor,\n  findCourseByIdForCourseEditorVariables,\n  CourseMaxSizeEnum,\n} from '../../../../../schemaTypes'\nimport { useEditCourseContextProvider } from './state-n-styles/EditCourseContext'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport { Link } from 'react-router-dom'\n\nexport type EditCourseProps = {}\n\nexport const UPDATE_COURSE_INFO_MUTATION = gql`\n  mutation updateCourseInfo($input: UpdateCourseInfoInput!) {\n    updateCourseInfo(input: $input) {\n      courseInfo {\n        course {\n          _id\n          hasCourseInfo {\n            _id\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const FIND_COURSE_INFO_FOR_COURSE_EDITOR_QUERY = gql`\n  query findCourseByIdForCourseEditor($input: FindCourseByIdInput!) {\n    findCourseById(input: $input) {\n      course {\n        _id\n        name\n        hasCourseInfo {\n          courseType\n          endsAt\n          halfDayEndsAt\n          halfDayStartsAt\n          schoolDayType\n          startsAt\n          assignedSeats {\n            student {\n              _id\n            }\n          }\n          cohortBasedSeating\n        }\n      }\n    }\n  }\n`\n\nexport const EditCourse = ({}: EditCourseProps) => {\n  const { course } = useParams()\n  const [state, event] = useEditCourseContextProvider()\n\n  const { courseMaxSizeEnum, courseTypeEnum, schoolDayType } =\n    useEnumContextProvider()\n\n  const { loading, data } = useQuery<\n    findCourseByIdForCourseEditor,\n    findCourseByIdForCourseEditorVariables\n  >(FIND_COURSE_INFO_FOR_COURSE_EDITOR_QUERY, {\n    variables: {\n      input: { courseId: course! },\n    },\n    onCompleted: (data) => {\n      const { name, hasCourseInfo } = data.findCourseById.course\n      const {\n        courseType,\n        endsAt,\n        startsAt,\n        halfDayEndsAt,\n        halfDayStartsAt,\n        schoolDayType,\n        assignedSeats,\n        cohortBasedSeating,\n      } = hasCourseInfo!\n\n      event({\n        type: 'LOAD_COURSE_DATA',\n        payload: {\n          courseId: course!,\n          name,\n          courseType,\n          endsAt,\n          halfDayEndsAt,\n          halfDayStartsAt,\n          schoolDayType,\n          startsAt,\n          cohortBasedSeating,\n          courseMaxSize:\n            assignedSeats.length === 12\n              ? CourseMaxSizeEnum.TWELVE\n              : assignedSeats.length === 24\n                ? CourseMaxSizeEnum.TWENTY_FOUR\n                : assignedSeats.length === 30\n                  ? CourseMaxSizeEnum.THIRTY\n                  : CourseMaxSizeEnum.THIRTY_SIX,\n        },\n      })\n    },\n    onError: (error) => console.error(error),\n  })\n\n  const [updateCourseInfo] = useMutation<\n    updateCourseInfo,\n    updateCourseInfoVariables\n  >(UPDATE_COURSE_INFO_MUTATION, {\n    variables: { input: state.context.updateCourseInfo },\n\n    refetchQueries: [],\n  })\n\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      <Link to={'/dashboard/courses/' + course}>Back to Menu</Link>\n      <div>Edit Course</div>\n\n      <div>\n        Name:{' '}\n        <span>\n          <input\n            value={state.context.updateCourseInfo.name}\n            onChange={(e: any) =>\n              event({ type: 'UPDATE_COURSE_NAME', payload: e.target.value })\n            }\n          />\n          <>\n            <div>Course's Max Size</div>\n            <select\n              onChange={(e: any) => {\n                if (e.target.value !== 'none') {\n                  event({\n                    type: 'UPDATE_COURSE_SIZE',\n                    payload: e.target.value,\n                  })\n                }\n              }}\n            >\n              <option value={'none'}>Select a Class Size</option>\n              {courseMaxSizeEnum.map((courseSize: CourseMaxSizeEnum) => (\n                <option key={courseSize!} value={courseSize}>\n                  {courseSize}\n                </option>\n              ))}\n            </select>\n          </>\n        </span>\n      </div>\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\n\nexport type AssignmentManagerMachineSchema = {\n  states: {\n    idle: {}\n    responsibilityPoints: {}\n    essays: {}\n    articleReviews: {}\n    secondaryGrades: {}\n  }\n}\nexport type AssignmentManagerMachineEvent =\n  | { type: 'IDLE' }\n  | { type: 'RESPONSIBILITY_POINTS' }\n  | { type: 'ESSAYS' }\n  | { type: 'ARTICLE_REVIEW' }\n  | { type: 'SECONDARY_GRADES' }\n  | { type: 'SET_UNIT_ID'; payload: string }\n  | { type: 'SET_LESSON_ID'; payload: string }\n  | { type: 'RESET_ESSAYS' }\n\nexport type AssignmentManagerMachineContext = {\n  unitId: string\n  lessonId: string\n}\n\nexport const AssignmentManagerMachine = Machine<\n  AssignmentManagerMachineContext,\n  AssignmentManagerMachineSchema,\n  AssignmentManagerMachineEvent\n>({\n  id: 'AssignmentManager',\n  initial: 'responsibilityPoints',\n  context: {\n    unitId: '',\n    lessonId: '',\n  },\n  //   type: 'parallel',\n  states: {\n    idle: {\n      on: {\n        RESPONSIBILITY_POINTS: 'responsibilityPoints',\n        ESSAYS: 'essays',\n        ARTICLE_REVIEW: 'articleReviews',\n        SECONDARY_GRADES: 'secondaryGrades',\n      },\n    },\n    responsibilityPoints: {\n      on: {\n        ESSAYS: 'essays',\n        ARTICLE_REVIEW: 'articleReviews',\n        SECONDARY_GRADES: 'secondaryGrades',\n        IDLE: 'idle',\n      },\n    },\n    essays: {\n      on: {\n        RESPONSIBILITY_POINTS: 'responsibilityPoints',\n        SECONDARY_GRADES: 'secondaryGrades',\n        IDLE: 'idle',\n        ARTICLE_REVIEW: 'articleReviews',\n        SET_UNIT_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              unitId: evt.payload,\n            }\n          }),\n        },\n        SET_LESSON_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              lessonId: evt.payload,\n            }\n          }),\n        },\n        RESET_ESSAYS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              unitId: '',\n              lessonId: '',\n            }\n          }),\n        },\n      },\n    },\n    articleReviews: {\n      on: {\n        RESPONSIBILITY_POINTS: 'responsibilityPoints',\n        ESSAYS: 'essays',\n        IDLE: 'idle',\n        SECONDARY_GRADES: 'secondaryGrades',\n      },\n    },\n    secondaryGrades: {\n      on: {\n        RESPONSIBILITY_POINTS: 'responsibilityPoints',\n        ESSAYS: 'essays',\n        ARTICLE_REVIEW: 'articleReviews',\n        IDLE: 'idle',\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  AssignmentManagerMachine,\n  AssignmentManagerMachineContext,\n  AssignmentManagerMachineEvent,\n} from './AssignmentManagerMachine'\n\nconst AssignmentManagerContext = createContext<any>(undefined)\n\ntype AssignmentManagerContextProps = {\n  children: ReactNode\n}\n\nexport const AssignmentManagerContextProvider: FC<\n  AssignmentManagerContextProps\n> = ({ children }) => {\n  const [state, event] = useMachine(AssignmentManagerMachine)\n  return (\n    <AssignmentManagerContext.Provider value={[state, event]}>\n      {children}\n    </AssignmentManagerContext.Provider>\n  )\n}\n\nexport function useAssignmentManagerContextProvider() {\n  const context = useContext(AssignmentManagerContext)\n  if (context === undefined) {\n    throw new Error(\n      'useAssignmentManagerContextProvider must be used within a AssignmentManagerContextProvider',\n    )\n  }\n  return context as [\n    State<\n      AssignmentManagerMachineContext,\n      AssignmentManagerMachineEvent,\n      any,\n      any\n    >,\n    (event: AssignmentManagerMachineEvent) => void,\n  ]\n}\n","import React, { Dispatch, FC, SetStateAction, useEffect, useState } from 'react'\nimport { findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews } from '../../../../../../../schemaTypes'\n\nexport type ArticleReviewRowsProps = {\n  articleReview: findArticleReviewsByCourse_findArticleReviewsByCourse_articleReviews\n  setAssignmentList: Dispatch<SetStateAction<any[]>>\n  createCSVToggle: boolean\n}\n\nexport const ArticleReviewRows: FC<ArticleReviewRowsProps> = ({\n  articleReview,\n  setAssignmentList,\n  createCSVToggle,\n}) => {\n  const [assignmentValues, setAssignmentValues] = useState({\n    NAME:\n      articleReview.hasOwner.lastName + ', ' + articleReview.hasOwner.firstName,\n    STUDENTID: articleReview.hasOwner.schoolId,\n    GRADE: articleReview.score.earnedPoints,\n    ABSENT: '',\n    EXEMPT: '',\n    INCOMPLETE: '',\n    MISSING: articleReview.score.earnedPoints < 5 ? 'Y' : '',\n  })\n\n  useEffect(() => {\n    // if (createCSVToggle) {\n    if (articleReview.hasOwner.schoolId !== null) {\n      setAssignmentList((list) => [...list, assignmentValues])\n    }\n    // }\n  }, [articleReview])\n\n  return (\n    <>\n      <div>\n        <span>{articleReview.hasOwner.lastName}, </span>\n        <span>{articleReview.hasOwner.firstName}: </span>\n        {articleReview.score.earnedPoints > 5 ? (\n          <span>{articleReview.score.earnedPoints}</span>\n        ) : (\n          <span>Missing</span>\n        )}\n      </div>\n    </>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React, { FC, useState } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { useParams } from 'react-router'\nimport { useEnumContextProvider } from '../../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useUserContextProvider } from '../../../../../../../contexts/UserContext'\nimport {\n  findArticleReviewsByCourse,\n  findArticleReviewsByCourseVariables,\n  MarkingPeriodEnum,\n  me_me_Teacher,\n} from '../../../../../../../schemaTypes'\nimport { FIND_ARTICLE_REVIEWS_BY_COURSE_QUERY } from '../../../../assignments/article-reviews/review-articleReviews/ReviewDisplay'\nimport { useAssignmentManagerContextProvider } from '../../state-styles/AssignmentManagerContext'\nimport { ArticleReviewRows } from './ArticleReviewRows'\n\nexport type ArticleReviewsProps = {}\n\nexport const ArticleReviews: FC<ArticleReviewsProps> = () => {\n  const { course } = useParams()\n  const me: me_me_Teacher = useUserContextProvider()\n  const [currentMarkingPeriod] = useMarkingPeriodContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [markingPeriod, setMarkingPeriod] = useState(\n    currentMarkingPeriod.context.currentMarkingPeriod,\n  )\n  const [dateFilter, setDateFilter] = useState('')\n\n  const [courseName] = me.teachesCourses.filter(\n    (courseToFind) => courseToFind._id === course,\n  )\n  const [assignmentList, setAssignmentList] = useState<any[]>([])\n  const [createCSVToggle, setCreateCSVToggle] = useState(false)\n  const headers = [\n    { label: 'NAME', key: 'NAME' },\n    { label: 'STUDENTID', key: 'STUDENTID' },\n    { label: 'GRADE', key: 'GRADE' },\n    { label: 'ABSENT', key: 'ABSENT' },\n    { label: 'EXEMPT', key: 'EXEMPT' },\n    { label: 'INCOMPLETE', key: 'INCOMPLETE' },\n    { label: 'MISSING', key: 'MISSING' },\n  ]\n  const [state, event] = useAssignmentManagerContextProvider()\n  const { loading, data } = useQuery<\n    findArticleReviewsByCourse,\n    findArticleReviewsByCourseVariables\n  >(FIND_ARTICLE_REVIEWS_BY_COURSE_QUERY, {\n    variables: {\n      input: { courseId: course!, markingPeriod },\n    },\n    pollInterval: 1000,\n    onCompleted: (data) =>\n      console.log(data.findArticleReviewsByCourse.articleReviews),\n    onError: (error) => console.error(error),\n  })\n\n  const assignedDateList = data?.findArticleReviewsByCourse.articleReviews\n    .map((review) => review.assignedDate)\n    .reduce(\n      (accum: string[], cValue) =>\n        accum.includes(cValue) ? [...accum] : [...accum, cValue],\n      [],\n    )\n\n  const articleReviews = data?.findArticleReviewsByCourse.articleReviews.filter(\n    (review) => review.assignedDate === dateFilter,\n  )!\n\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      <div>Article Reviews</div>\n      <select\n        value={markingPeriod}\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') setMarkingPeriod(e.target.value)\n        }}\n      >\n        {/* <option value='none'>Select a Marking Period</option> */}\n        {markingPeriodEnum.map((mp: MarkingPeriodEnum) => (\n          <option key={mp} value={mp}>\n            {mp}\n          </option>\n        ))}\n      </select>\n      <div>Assigned Date</div>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') setDateFilter(e.target.value)\n        }}\n      >\n        <option value={'none'}>Select Date</option>\n        {assignedDateList?.map((date) => (\n          <option key={date} value={date}>\n            {date}\n          </option>\n        ))}\n      </select>\n      {!createCSVToggle && assignmentList.length > 0 && (\n        <button\n          style={{\n            backgroundColor: 'var(--blue)',\n            color: 'var(--white)',\n            fontSize: '130%',\n          }}\n          onClick={() => setCreateCSVToggle(true)}\n        >\n          Load Import Grade Document\n        </button>\n      )}\n      {createCSVToggle && assignmentList.length > 0 && (\n        <CSVLink\n          data={assignmentList}\n          headers={headers}\n          filename={dateFilter! + '_' + courseName.name}\n          style={{\n            backgroundColor: 'var(--red)',\n            color: 'var(--white)',\n            fontSize: '140%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            textDecoration: 'none',\n          }}\n          target=\"_blank\"\n          onClick={() => {\n            setCreateCSVToggle(false)\n            setAssignmentList([])\n          }}\n        >\n          Download\n        </CSVLink>\n      )}\n      {articleReviews.length > 0 &&\n        articleReviews.map((review) => (\n          <ArticleReviewRows\n            key={review._id}\n            articleReview={review}\n            setAssignmentList={setAssignmentList}\n            createCSVToggle={createCSVToggle}\n          />\n        ))}\n    </>\n  )\n}\n","import React, { Dispatch, FC, SetStateAction, useEffect, useState } from 'react'\nimport { findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays } from '../../../../../../../schemaTypes'\n// import { findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays } from '../../../../../../../schemaTypes'\n\nexport type EssayRowsProps = {\n  essay: findEssaysByAssociatedLessonId_findEssaysByAssociatedLessonId_essays\n  setAssignmentList: Dispatch<SetStateAction<any[]>>\n  createCSVToggle: boolean\n}\n\nexport const EssayRows: FC<EssayRowsProps> = ({\n  essay,\n  setAssignmentList,\n  createCSVToggle,\n}) => {\n  const [assignmentValues, setAssignmentValues] = useState({\n    NAME: essay.hasOwner.lastName + ', ' + essay.hasOwner.firstName,\n    STUDENTID: essay.hasOwner.schoolId,\n    GRADE: essay.score.earnedPoints,\n    ABSENT: '',\n    EXEMPT: essay.exempt ? 'Y' : '',\n    INCOMPLETE: '',\n    MISSING: !essay.finalDraft?.returned ? 'Y' : '',\n  })\n  //   useEffect(() => {\n  //     if (!essay.finalDraft?.returned) {\n  //       setAssignmentValues({ ...assignmentValues, MISSING: 'Y' })\n  //     }\n  //     if (essay.exempt) {\n  //       setAssignmentValues({ ...assignmentValues, EXEMPT: 'Y' })\n  //     }\n  //   }, [assignmentValues, essay])\n  useEffect(() => {\n    // if (createCSVToggle) {\n    if (essay.hasOwner.schoolId !== null) {\n      setAssignmentList((list) => [...list, assignmentValues])\n    }\n    // }\n  }, [essay])\n  return (\n    <>\n      <div>\n        <span>{essay.hasOwner.lastName}, </span>\n        <span>{essay.hasOwner.firstName}: </span>\n        {essay.finalDraft?.submitted && !essay.finalDraft.returned ? (\n          <span>Pending</span>\n        ) : essay.finalDraft?.returned ? (\n          <span>{essay.score.earnedPoints}</span>\n        ) : (\n          <span>Missing</span>\n        )}\n      </div>\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC, useState } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { useParams } from 'react-router'\nimport { useUserContextProvider } from '../../../../../../../contexts/UserContext'\nimport {\n  findEssaysByAssociatedLessonId,\n  findEssaysByAssociatedLessonIdVariables,\n  findEssaysByCourseIdAndTitle,\n  findEssaysByCourseIdAndTitleVariables,\n  findLessonsByUnit,\n  findLessonsByUnitVariables,\n  findUnits,\n  me_me_Teacher,\n} from '../../../../../../../schemaTypes'\nimport { FIND_LESSONS_BY_UNIT_QUERY } from '../../../../assignments/create-assignments/create-essay/EssayLessonSelect'\nimport { FIND_UNITS_QUERY } from '../../../../lessons/lesson-planner/UnitAssigner'\nimport { useAssignmentManagerContextProvider } from '../../state-styles/AssignmentManagerContext'\nimport { EssayRows } from './EssayRows'\n\nexport type EssaysProps = {}\n\nexport const FIND_ESSAYS_BY_LESSON_ID_QUERY = gql`\n  query findEssaysByAssociatedLessonId(\n    $input: FindEssaysByAssociatedLessonIdInput!\n  ) {\n    findEssaysByAssociatedLessonId(input: $input) {\n      essays {\n        _id\n        readings {\n          readingSections\n        }\n        hasOwner {\n          _id\n          firstName\n          lastName\n          schoolId\n        }\n        score {\n          earnedPoints\n        }\n        finalDraft {\n          returned\n          submitted\n        }\n        exempt\n      }\n    }\n  }\n`\nexport const FIND_ESSAYS_BY_COURSE_ID_AND_TITLE_QUERY = gql`\n  query findEssaysByCourseIdAndTitle(\n    $input: FindEssaysByCourseIdAndTitleInput!\n  ) {\n    findEssaysByCourseIdAndTitle(input: $input) {\n      essays {\n        _id\n        readings {\n          readingSections\n        }\n        hasOwner {\n          _id\n          firstName\n          lastName\n          schoolId\n        }\n        score {\n          earnedPoints\n        }\n        finalDraft {\n          returned\n          submitted\n        }\n        exempt\n      }\n    }\n  }\n`\n\nexport const Essays = ({}: EssaysProps) => {\n  const { course } = useParams()\n  const me: me_me_Teacher = useUserContextProvider()\n  const [courseName] = me.teachesCourses.filter(\n    (courseToFind) => courseToFind._id === course,\n  )\n  const [essayName, setEssayName] = useState<string>('')\n  const [assignmentList, setAssignmentList] = useState<any[]>([])\n  const [createCSVToggle, setCreateCSVToggle] = useState(false)\n  const headers = [\n    { label: 'NAME', key: 'NAME' },\n    { label: 'STUDENTID', key: 'STUDENTID' },\n    { label: 'GRADE', key: 'GRADE' },\n    { label: 'ABSENT', key: 'ABSENT' },\n    { label: 'EXEMPT', key: 'EXEMPT' },\n    { label: 'INCOMPLETE', key: 'INCOMPLETE' },\n    { label: 'MISSING', key: 'MISSING' },\n  ]\n  const [state, event] = useAssignmentManagerContextProvider()\n  const { data: units } = useQuery<findUnits, findUnits>(FIND_UNITS_QUERY, {\n    onCompleted: (data) => console.log(data.findUnits.units),\n    onError: (error) => console.error(error),\n  })\n\n  const { data: lessons } = useQuery<\n    findLessonsByUnit,\n    findLessonsByUnitVariables\n  >(FIND_LESSONS_BY_UNIT_QUERY, {\n    variables: {\n      input: { unitId: state.context.unitId, courseId: course! },\n    },\n    onCompleted: (lessons) => console.log(lessons),\n    onError: (error) => console.error(error),\n  })\n\n  const { loading, data: essays } = useQuery<\n    findEssaysByAssociatedLessonId,\n    findEssaysByAssociatedLessonIdVariables\n  >(FIND_ESSAYS_BY_LESSON_ID_QUERY, {\n    variables: {\n      input: { associatedLessonId: state.context.lessonId },\n    },\n    pollInterval: 1000,\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const essayTitle = essays?.findEssaysByAssociatedLessonId.essays.map(\n    (essay) => essay.readings.readingSections,\n  )\n\n  const { data: essayNameData } = useQuery<\n    findEssaysByCourseIdAndTitle,\n    findEssaysByCourseIdAndTitleVariables\n  >(FIND_ESSAYS_BY_COURSE_ID_AND_TITLE_QUERY, {\n    variables: {\n      input: { courseId: course!, essayTitle: essayName },\n    },\n    onCompleted: (data) =>\n      console.log(data.findEssaysByCourseIdAndTitle.essays),\n    onError: (error) => console.error(error),\n  })\n  console.log(course!, essayName)\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            event({ type: 'SET_UNIT_ID', payload: e.target.value })\n          }\n        }}\n      >\n        <option value=\"none\">Select a Unit</option>\n        {units?.findUnits.units.map((unit) => (\n          <option key={unit._id!} value={unit._id!}>\n            {unit.unitName}\n          </option>\n        ))}\n      </select>\n      {state.context.unitId && (\n        <select\n          onChange={(e: any) => {\n            if (e.target.value !== 'none')\n              event({\n                type: 'SET_LESSON_ID',\n                payload: e.target.value.split(',')[0],\n              })\n            setEssayName(e.target.value.split(',')[1])\n          }}\n        >\n          <option value=\"none\">Select a Lesson</option>\n          {lessons?.findLessonsByUnit.lessons\n            .filter((l) => l.lessonType === 'REINFORCEMENT')\n            .map((lesson) => (\n              <option\n                key={lesson._id!}\n                value={[lesson._id!, lesson.lessonName]}\n              >\n                {lesson.lessonName}\n              </option>\n            ))}\n        </select>\n      )}\n      {!createCSVToggle && assignmentList.length > 0 && (\n        <button\n          style={{\n            backgroundColor: 'var(--blue)',\n            color: 'var(--white)',\n            fontSize: '130%',\n          }}\n          onClick={() => setCreateCSVToggle(true)}\n        >\n          Load Import Grade Document\n        </button>\n      )}\n      {createCSVToggle && assignmentList.length > 0 && (\n        <CSVLink\n          data={assignmentList}\n          headers={headers}\n          filename={\n            essayTitle![0].split('-').join(' ').split(' ').join('_') +\n            '_' +\n            courseName.name\n          }\n          style={{\n            backgroundColor: 'var(--red)',\n            color: 'var(--white)',\n            fontSize: '140%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            textDecoration: 'none',\n          }}\n          target=\"_blank\"\n          onClick={() => {\n            event({ type: 'IDLE' })\n            event({ type: 'RESET_ESSAYS' })\n          }}\n        >\n          Download\n        </CSVLink>\n      )}\n      {essayNameData?.findEssaysByCourseIdAndTitle.essays && (\n        <>\n          {loading ? (\n            <div>loading</div>\n          ) : (\n            <div>\n              {essayNameData?.findEssaysByCourseIdAndTitle.essays.map(\n                (essay) => (\n                  <EssayRows\n                    key={essay._id}\n                    essay={essay}\n                    setAssignmentList={setAssignmentList}\n                    createCSVToggle={createCSVToggle}\n                  />\n                ),\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { Dispatch, FC, SetStateAction, useEffect, useState } from 'react'\nimport { findResponsibilityPointsByCourse_findResponsibilityPointsByCourse_responsibilityPointList } from '../../../../../../../schemaTypes'\n\nexport type ResponsibilityPointRowsProps = {\n  student: findResponsibilityPointsByCourse_findResponsibilityPointsByCourse_responsibilityPointList\n  setRosterList: Dispatch<SetStateAction<any[]>>\n}\n\nexport const ResponsibilityPointRows: FC<ResponsibilityPointRowsProps> = ({\n  student,\n  setRosterList,\n}) => {\n  const [studentResponsibilityPoints, setStudentResponsibilityPoints] =\n    useState({\n      NAME: student.student.lastName + ', ' + student.student.firstName,\n      STUDENTID: student.student.schoolId,\n      GRADE: student.responsibilityPoints,\n      ABSENT: '',\n      EXEMPT: '',\n      INCOMPLETE: '',\n      MISSING: '',\n    })\n  useEffect(() => {\n    setRosterList((list) => [...list, studentResponsibilityPoints])\n  }, [studentResponsibilityPoints])\n  return (\n    <>\n      <div>\n        <span>{student.student.lastName}, </span>\n        <span>{student.student.firstName}: </span>\n        <span>{student.responsibilityPoints}</span>\n      </div>\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC, Fragment, useState } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { useParams } from 'react-router'\nimport { useEnumContextProvider } from '../../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useUserContextProvider } from '../../../../../../../contexts/UserContext'\nimport {\n  me_me_Teacher,\n  findResponsibilityPointsByCourse,\n  findResponsibilityPointsByCourseVariables,\n  MarkingPeriodEnum,\n} from '../../../../../../../schemaTypes'\n\nimport { ResponsibilityPointRows } from './ResponsibilityPointRows'\n\nexport type ResponsibilityPointsProps = {}\n\nexport const FIND_RESPONSIBILITY_POINTS_BY_COURSE_QUERY = gql`\n  query findResponsibilityPointsByCourse(\n    $input: FindResponsibilityPointsByCourseInput!\n  ) {\n    findResponsibilityPointsByCourse(input: $input) {\n      responsibilityPointList {\n        student {\n          _id\n          firstName\n          lastName\n          schoolId\n        }\n        responsibilityPoints\n        markingPeriod\n      }\n    }\n  }\n`\n\nexport const ResponsibilityPoints: FC<ResponsibilityPointsProps> = () => {\n  const { course } = useParams()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [markingPeriod] = useMarkingPeriodContextProvider()\n  const me: me_me_Teacher = useUserContextProvider()\n\n  const [courseName] = me.teachesCourses.filter(\n    (courseToFind) => courseToFind._id === course,\n  )\n\n  const [markingPeriodSelect, setMarkingPeriodSelect] = useState<\n    MarkingPeriodEnum | ''\n  >('')\n  const [rosterList, setRosterList] = useState<any[]>([])\n  const [csvToggle, setCsvToggle] = useState(false)\n\n  const { loading, data } = useQuery<\n    findResponsibilityPointsByCourse,\n    findResponsibilityPointsByCourseVariables\n  >(FIND_RESPONSIBILITY_POINTS_BY_COURSE_QUERY, {\n    variables: {\n      input: { courseId: course! },\n    },\n    pollInterval: 1000,\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  const responsibilityPointList =\n    data?.findResponsibilityPointsByCourse.responsibilityPointList.filter(\n      (rp) => rp.markingPeriod === markingPeriodSelect,\n    )\n  const title = 'responsibility_points'\n  const headers = [\n    { label: 'NAME', key: 'NAME' },\n    { label: 'STUDENTID', key: 'STUDENTID' },\n    { label: 'GRADE', key: 'GRADE' },\n    { label: 'ABSENT', key: 'ABSENT' },\n    { label: 'EXEMPT', key: 'EXEMPT' },\n    { label: 'INCOMPLETE', key: 'INCOMPLETE' },\n    { label: 'MISSING', key: 'MISSING' },\n  ]\n  return (\n    <>\n      <div>Responsibility Points</div>\n      <select\n        value={markingPeriodSelect}\n        onChange={(e: any) => setMarkingPeriodSelect(e.target.value)}\n      >\n        <option value={''}>Select</option>\n        {markingPeriodEnum.map((mp: MarkingPeriodEnum) => (\n          <option key={mp} value={mp}>\n            {mp}\n          </option>\n        ))}\n      </select>\n      {csvToggle && rosterList.length > 0 ? (\n        <CSVLink\n          data={rosterList}\n          headers={headers}\n          filename={title + '_' + courseName.name}\n          target=\"_blank\"\n          style={{\n            marginRight: '2%',\n            textDecoration: 'none',\n            color: 'var(--blue)',\n          }}\n        >\n          Download\n        </CSVLink>\n      ) : (\n        <div\n          onClick={() => setCsvToggle(true)}\n          style={{\n            marginRight: '2%',\n            textDecoration: 'none',\n            color: 'var(--blue)',\n            cursor: 'pointer',\n          }}\n        >\n          Load CSV\n        </div>\n      )}\n      {responsibilityPointList?.map((student) => (\n        <Fragment key={student.student._id}>\n          <ResponsibilityPointRows\n            student={student}\n            setRosterList={setRosterList}\n          />\n        </Fragment>\n      ))}\n    </>\n  )\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse_students } from '../../../../../../../schemaTypes'\nimport { AssignmentTypeProps } from './SecondaryGrades'\n\nexport type SecondaryGradeRowInfoProps = {\n  student: findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse_students\n  secondaryGradeScore: number\n  setAssignmentList: Dispatch<SetStateAction<AssignmentTypeProps[]>>\n  createCSVToggle: boolean\n  assignmentList: AssignmentTypeProps[]\n  classSize: number\n}\n\nexport const SecondaryGradeRowInfo = ({\n  student,\n  secondaryGradeScore,\n  setAssignmentList,\n  createCSVToggle,\n  assignmentList,\n  classSize,\n}: SecondaryGradeRowInfoProps) => {\n  const [assignmentValues, setAssignmentValues] = useState({\n    NAME: student.lastName + ', ' + student.firstName,\n    STUDENTID: student.schoolId,\n    GRADE: isNaN(secondaryGradeScore) ? '' : secondaryGradeScore,\n    ABSENT: '',\n    EXEMPT: secondaryGradeScore === 0 ? '' : secondaryGradeScore ? '' : 'Y',\n    INCOMPLETE: '',\n    MISSING: '',\n  })\n\n  useEffect(() => {\n    // setAssignmentValues({\n    //   NAME: student.lastName + ', ' + student.firstName,\n    //   STUDENTID: student.schoolId,\n    //   GRADE: isNaN(secondaryGradeScore) ? '' : secondaryGradeScore,\n    //   ABSENT: '',\n    //   EXEMPT: secondaryGradeScore === 0 ? '' : secondaryGradeScore ? '' : 'Y',\n    //   INCOMPLETE: '',\n    //   MISSING: '',\n    // })\n    if (student.schoolId !== null) {\n      // const studentToFindIndex = assignmentList.findIndex(\n      //   (assignment) => assignment.STUDENTID === student.schoolId\n      // )\n      // console.log(studentToFindIndex, student.firstName)\n      // if (studentToFindIndex > -1) {\n      // Object.assign([], setAssignmentList, {\n      //   [studentToFindIndex]: {\n      //     NAME: student.lastName + ', ' + student.firstName,\n      //     STUDENTID: student.schoolId,\n      //     GRADE: isNaN(secondaryGradeScore) ? '' : secondaryGradeScore,\n      //     ABSENT: '',\n      //     EXEMPT:\n      //       secondaryGradeScore === 0 ? '' : secondaryGradeScore ? '' : 'Y',\n      //     INCOMPLETE: '',\n      //     MISSING: '',\n      //   },\n      // })\n      // replaceAt(assignmentList, studentToFindIndex, {\n      //   NAME: student.lastName + ', ' + student.firstName,\n      //   STUDENTID: student.schoolId,\n      //   GRADE: isNaN(secondaryGradeScore) ? '' : secondaryGradeScore,\n      //   ABSENT: '',\n      //   EXEMPT:\n      //     secondaryGradeScore === 0 ? '' : secondaryGradeScore ? '' : 'Y',\n      //   INCOMPLETE: '',\n      //   MISSING: '',\n      // // })\n      // setAssignmentList((list) => [\n      //   ...list.slice(0, studentToFindIndex),\n      //   ...list.slice(studentToFindIndex + 1),\n      // ])\n      // setAssignmentList([\n      //   ...assignmentList,\n      //   {\n      //     NAME: student.lastName + ', ' + student.firstName,\n      //     STUDENTID: student.schoolId,\n      //     GRADE: isNaN(secondaryGradeScore) ? '' : secondaryGradeScore,\n      //     ABSENT: '',\n      //     EXEMPT:\n      //       secondaryGradeScore === 0 ? '' : secondaryGradeScore ? '' : 'Y',\n      //     INCOMPLETE: '',\n      //     MISSING: '',\n      //   },\n      // ])\n      // } else\n      setAssignmentList((list) => [\n        ...list,\n        {\n          NAME: student.lastName + ', ' + student.firstName,\n          STUDENTID: student.schoolId,\n          GRADE: isNaN(secondaryGradeScore) ? '' : secondaryGradeScore,\n          ABSENT: '',\n          EXEMPT:\n            secondaryGradeScore === 0 ? '' : secondaryGradeScore ? '' : 'Y',\n          INCOMPLETE: '',\n          MISSING: '',\n        },\n      ])\n    }\n  }, [secondaryGradeScore])\n\n  return (\n    <>\n      <div>\n        {student.lastName}, {student.firstName}:{' '}\n        {isNaN(secondaryGradeScore) ? 'No Grade Yet' : secondaryGradeScore}\n      </div>\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport {\n  findAssignmentByStudentIdForSecondary,\n  findAssignmentByStudentIdForSecondaryVariables,\n  findAssignmentByStudentIdForSecondary_findAssignmentByStudentId_assignments,\n  findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse_students,\n  MarkingPeriodEnum,\n} from '../../../../../../../schemaTypes'\nimport { SecondaryGradeRowInfo } from './SecondaryGradeRowInfo'\nimport { AssignmentTypeProps } from './SecondaryGrades'\n\nexport type SecondaryGradeRowsProps = {\n  student: findStudentsByCourseForSecondaryGradeFinder_findStudentsByCourse_students\n  markingPeriodSelect: MarkingPeriodEnum | ''\n  setAssignmentList: Dispatch<SetStateAction<AssignmentTypeProps[]>>\n  assignmentList: AssignmentTypeProps[]\n  createCSVToggle: boolean\n  classSize: number\n}\n\nexport const FIND_ASSIGNMENTS_FOR_SECONDARY_QUERY = gql`\n  query findAssignmentByStudentIdForSecondary(\n    $input: FindAssignmentByStudentIdInput!\n  ) {\n    findAssignmentByStudentId(input: $input) {\n      assignments {\n        _id\n        assigned\n        missing\n        score {\n          earnedPoints\n          maxPoints\n        }\n        gradeType\n        dueDate\n        dueTime\n        exempt\n        markingPeriod\n      }\n    }\n  }\n`\n\nexport const SecondaryGradeRows = ({\n  student,\n  markingPeriodSelect,\n  setAssignmentList,\n  assignmentList,\n  createCSVToggle,\n  classSize,\n}: SecondaryGradeRowsProps) => {\n  const { loading, data } = useQuery<\n    findAssignmentByStudentIdForSecondary,\n    findAssignmentByStudentIdForSecondaryVariables\n  >(FIND_ASSIGNMENTS_FOR_SECONDARY_QUERY, {\n    variables: {\n      input: { studentId: student._id! },\n    },\n    onCompleted: (data) => console.log(),\n    onError: (error) => console.error(error),\n  })\n  console.log(markingPeriodSelect)\n  const secondaryGrades = data?.findAssignmentByStudentId.assignments\n    .filter((a) => a.gradeType === 'SECONDARY')\n    .filter(\n      (grade) =>\n        Date.parse(new Date().toLocaleString()) >\n        Date.parse(grade.dueDate + ', ' + grade.dueTime),\n    )\n    .filter((a) => !a.exempt)\n    .filter((a) => a.markingPeriod === markingPeriodSelect)!\n\n  const totalMaxPoints = secondaryGrades?.reduce(\n    (\n      arr: number,\n      i: findAssignmentByStudentIdForSecondary_findAssignmentByStudentId_assignments,\n    ) => i.score.maxPoints + arr,\n    0,\n  )\n  const totalEarnedPoints = secondaryGrades?.reduce(\n    (\n      arr: number,\n      i: findAssignmentByStudentIdForSecondary_findAssignmentByStudentId_assignments,\n    ) => i.score.earnedPoints + arr,\n    0,\n  )\n  const secondaryGradeScore = (totalEarnedPoints / totalMaxPoints) * 100\n\n  if (loading) return <div>Loading </div>\n  return (\n    <SecondaryGradeRowInfo\n      student={student}\n      classSize={classSize}\n      secondaryGradeScore={secondaryGradeScore}\n      setAssignmentList={setAssignmentList}\n      createCSVToggle={createCSVToggle}\n      assignmentList={assignmentList}\n    />\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { useParams } from 'react-router'\nimport { useEnumContextProvider } from '../../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useUserContextProvider } from '../../../../../../../contexts/UserContext'\nimport {\n  findAssignmentsByCourseId_findAssignmentsByCourseId_assignments,\n  findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments,\n  findStudentsByCourseForSecondaryGradeFinder,\n  findStudentsByCourseForSecondaryGradeFinderVariables,\n  MarkingPeriodEnum,\n  me_me_Teacher,\n} from '../../../../../../../schemaTypes'\nimport { MarkingPeriodSelectorSwitch } from '../../../../../../reusable-components/MarkingPeriodSelectorSwitch'\nimport { useAssignmentManagerContextProvider } from '../../state-styles/AssignmentManagerContext'\nimport { SecondaryGradeRows } from './SecondaryGradeRows'\n\nexport const FIND_STUDENTS_BY_COURSE_FOR_SECONDARY_GRADE_FINDER_QUERY = gql`\n  query findStudentsByCourseForSecondaryGradeFinder(\n    $input: FindStudentsByCourseInput!\n  ) {\n    findStudentsByCourse(input: $input) {\n      students {\n        _id\n        firstName\n        lastName\n        schoolId\n      }\n    }\n  }\n`\n\nexport type SecondaryGradesProps = {\n  // assignments: findAssignmentsByCourseId_findAssignmentsByCourseId_assignments_hasOwner_hasAssignments[]\n}\nexport type AssignmentTypeProps = {\n  NAME: string\n  STUDENTID: string | null\n  GRADE: string | number\n  ABSENT: string\n  EXEMPT: string\n  INCOMPLETE: string\n  MISSING: string\n}\n\nexport const SecondaryGrades = ({}: SecondaryGradesProps) => {\n  const [state, event] = useAssignmentManagerContextProvider()\n  const { course } = useParams()\n\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [markingPeriod] = useMarkingPeriodContextProvider()\n\n  const me: me_me_Teacher = useUserContextProvider()\n\n  const { loading, data } = useQuery<\n    findStudentsByCourseForSecondaryGradeFinder,\n    findStudentsByCourseForSecondaryGradeFinderVariables\n  >(FIND_STUDENTS_BY_COURSE_FOR_SECONDARY_GRADE_FINDER_QUERY, {\n    variables: {\n      input: { courseId: course! },\n    },\n    // onCompleted: (data) =>\n    //   console.log(data.findStudentsByCourse.students.map((student) => student)),\n    onError: (error) => console.error(error),\n  })\n\n  const [assignmentList, setAssignmentList] = useState<AssignmentTypeProps[]>(\n    [],\n  )\n\n  const [courseName] = me.teachesCourses.filter(\n    (courseToFind) => courseToFind._id === course,\n  )\n\n  const [markingPeriodSelect, setMarkingPeriodSelect] = useState<\n    MarkingPeriodEnum | ''\n  >('')\n  // const [rosterList, setRosterList] = useState<any[]>([])\n  const [createCSVToggle, setCreateCSVToggle] = useState(false)\n  const headers = [\n    { label: 'NAME', key: 'NAME' },\n    { label: 'STUDENTID', key: 'STUDENTID' },\n    { label: 'GRADE', key: 'GRADE' },\n    { label: 'ABSENT', key: 'ABSENT' },\n    { label: 'EXEMPT', key: 'EXEMPT' },\n    { label: 'INCOMPLETE', key: 'INCOMPLETE' },\n    { label: 'MISSING', key: 'MISSING' },\n  ]\n  // useEffect(() => {\n  //   setAssignmentList([])\n  // }, [markingPeriodSelect])\n\n  if (loading) return <div>Loading </div>\n\n  return (\n    <>\n      {/* <MarkingPeriodSelectorSwitch\n        selectedMarkingPeriod={markingPeriodSelect}\n        setSelectedMarkingPeriod={setMarkingPeriodSelect}\n      /> */}\n      <select onChange={(e: any) => setMarkingPeriodSelect(e.target.value)}>\n        <option value={''}>Select</option>\n        {markingPeriodEnum.map((mp: MarkingPeriodEnum) => (\n          <option key={mp}>{mp}</option>\n        ))}\n      </select>\n      {assignmentList.length > 0 && (\n        <>\n          {!createCSVToggle ? (\n            <div>\n              <button\n                style={{\n                  backgroundColor: 'var(--blue)',\n                  color: 'var(--white)',\n                  fontSize: '130%',\n                }}\n                onClick={() => setCreateCSVToggle(true)}\n              >\n                Load Import Grade Document\n              </button>\n            </div>\n          ) : (\n            <div>\n              <CSVLink\n                data={assignmentList}\n                headers={headers}\n                filename={\n                  courseName.name +\n                  '_' +\n                  'Secondary_Grades' +\n                  '_' +\n                  markingPeriodSelect +\n                  '_Marking_Period'\n                }\n                style={{\n                  backgroundColor: 'var(--red)',\n                  color: 'var(--white)',\n                  fontSize: '140%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  textDecoration: 'none',\n                }}\n                target=\"_blank\"\n                onClick={() => {\n                  event({ type: 'IDLE' })\n                  event({ type: 'RESET_ESSAYS' })\n                }}\n              >\n                Download\n              </CSVLink>\n            </div>\n          )}\n        </>\n      )}\n      {markingPeriodSelect && (\n        <div>\n          {data?.findStudentsByCourse.students.map((student) => (\n            <SecondaryGradeRows\n              key={student._id!}\n              student={student}\n              classSize={data.findStudentsByCourse.students.length}\n              markingPeriodSelect={markingPeriodSelect}\n              setAssignmentList={setAssignmentList}\n              assignmentList={assignmentList}\n              createCSVToggle={createCSVToggle}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport { useNavigate } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { assign } from 'xstate/lib/actionTypes'\nimport {\n  findAssignmentsByCourseId,\n  findAssignmentsByCourseIdVariables,\n} from '../../../../../schemaTypes'\nimport { ArticleReviews } from './downloadables/article-reviews/ArticleReviews'\nimport { Essays } from './downloadables/essays/Essays'\nimport { ResponsibilityPoints } from './downloadables/responsibility-points/ResponsibilityPoints'\nimport { SecondaryGrades } from './downloadables/secondary-grades/SecondaryGrades'\nimport { useAssignmentManagerContextProvider } from './state-styles/AssignmentManagerContext'\n\nexport type AssignmentManagerProps = {\n  courseId: string\n}\n\nexport const FIND_ASSIGNMENTS_QUERY = gql`\n  query findAssignmentsByCourseId($input: FindAssignmentsByCourseIdInput!) {\n    findAssignmentsByCourseId(input: $input) {\n      assignments {\n        hasOwner {\n          lastName\n          firstName\n          schoolId\n          hasAssignments {\n            _id\n            score {\n              earnedPoints\n              maxPoints\n            }\n            readings {\n              readingSections\n              readingPages\n            }\n            missing\n            markingPeriod\n            late\n            gradeType\n            exempt\n            dueTime\n            assigned\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const AssignmentManager = ({ courseId }: AssignmentManagerProps) => {\n  const [state, event] = useAssignmentManagerContextProvider()\n  const navigate = useNavigate()\n  // const { loading, data } = useQuery<\n  //   findAssignmentsByCourseId,\n  //   findAssignmentsByCourseIdVariables\n  // >(FIND_ASSIGNMENTS_QUERY, {\n  //   variables: {\n  //     input: { courseId },\n  //   },\n  //   // onCompleted: (data) => console.log(data),\n  //   onError: (error) => console.error(error),\n  // })\n\n  // if (loading) return <div>Loading </div>\n  return (\n    <>\n      <Link to={'/dashboard/courses/' + courseId}>Back</Link>\n      <div>Assignment Manager</div>\n      <div>Create Grade Download</div>\n      <div>\n        <div onClick={() => event({ type: 'RESPONSIBILITY_POINTS' })}>\n          Responsibility Points\n        </div>\n        <div onClick={() => event({ type: 'ESSAYS' })}>Essays</div>\n        <div onClick={() => event({ type: 'ARTICLE_REVIEW' })}>\n          Article Reviews\n        </div>\n        <div onClick={() => event({ type: 'SECONDARY_GRADES' })}>\n          Secondary Grades\n        </div>\n      </div>\n      {state.matches('responsibilityPoints') && <ResponsibilityPoints />}\n      {state.matches('essays') && <Essays />}\n      {state.matches('articleReviews') && <ArticleReviews />}\n      {state.matches('secondaryGrades') && <SecondaryGrades />}\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport { findTemporaryTasks_findTemporaryTasks_temporaryTasks } from '../../../../../../schemaTypes'\nimport { CREATE_TEXT_SECTION_MUTATION } from '../../../lessons/section-builder/CreateTextSection'\n\nexport type temporaryTasksMachineSchema = {\n  states: {\n    idle: {}\n    create: {}\n    review: {}\n  }\n}\nexport type temporaryTasksMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'IDLE' }\n  | { type: 'CREATE' }\n  | { type: 'REVIEW' }\n  | { type: 'SET_TASK_NUMBER'; payload: number }\n  | { type: 'SET_TASK_TO_GRADE_NUMBER'; payload: number }\n  | { type: 'SET_DATE_TO_REVIEW'; payload: string }\n  | {\n      type: 'ADD_TO_ABSENT_LIST'\n      payload: { taskNumber: number; studentIdToAdd: string }\n    }\n  | {\n      type: 'DELETE_FROM_ABSENT_LIST'\n      payload: { taskNumber: number; studentIdToDelete: string }\n    }\n  | { type: 'ADD_NEW_ABSENT_LIST'; payload: number }\n\nexport type temporaryTasksMachineContext = {\n  taskNumber: number\n  taskToGradeNumber: number\n  dateToReview: string\n  absentList: {\n    taskNumber: number\n    tasks: string[]\n  }[]\n}\n\nexport const temporaryTasksMachine = Machine<\n  temporaryTasksMachineContext,\n  temporaryTasksMachineSchema,\n  temporaryTasksMachineEvent\n>({\n  id: 'temporaryTasks',\n  initial: 'idle',\n  context: {\n    taskNumber: 0,\n    taskToGradeNumber: 0,\n    dateToReview: '',\n    absentList: [{ taskNumber: 0, tasks: [] }],\n  },\n  states: {\n    idle: {\n      on: {\n        CREATE: 'create',\n        REVIEW: 'review',\n      },\n    },\n    create: {\n      on: {\n        IDLE: 'idle',\n        REVIEW: 'review',\n        SET_TASK_NUMBER: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              taskNumber: evt.payload,\n            }\n          }),\n        },\n        SET_TASK_TO_GRADE_NUMBER: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              taskToGradeNumber: evt.payload,\n            }\n          }),\n        },\n        ADD_NEW_ABSENT_LIST: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              absentList: [\n                ...ctx.absentList,\n                { taskNumber: evt.payload, tasks: [] },\n              ],\n            }\n          }),\n        },\n        ADD_TO_ABSENT_LIST: {\n          actions: assign((ctx, evt) => {\n            const listToModify = ctx.absentList.findIndex(\n              (i) => i.taskNumber === evt.payload.taskNumber,\n            )\n            ctx.absentList[listToModify].tasks.push(evt.payload.studentIdToAdd)\n\n            return { ...ctx }\n          }),\n        },\n        DELETE_FROM_ABSENT_LIST: {\n          actions: assign((ctx, evt) => {\n            const listToModify = ctx.absentList.findIndex(\n              (i) => i.taskNumber === evt.payload.taskNumber,\n            )\n\n            const studentToDelete = ctx.absentList[\n              listToModify\n            ].tasks.findIndex(\n              (index) => index === evt.payload.studentIdToDelete,\n            )\n\n            ctx.absentList[listToModify] = {\n              taskNumber: evt.payload.taskNumber,\n              tasks: [\n                ...ctx.absentList[listToModify].tasks.slice(0, studentToDelete),\n                ...ctx.absentList[listToModify].tasks.slice(\n                  studentToDelete + 1,\n                ),\n              ],\n            }\n\n            return { ...ctx }\n          }),\n        },\n      },\n    },\n    review: {\n      on: {\n        IDLE: 'idle',\n        CREATE: 'create',\n        SET_DATE_TO_REVIEW: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              dateToReview: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  temporaryTasksMachine,\n  temporaryTasksMachineContext,\n  temporaryTasksMachineEvent,\n} from './temporaryTasksMachine'\n\nconst TemporaryTasksContext = createContext<any>(undefined)\n\ntype TemporaryTasksContextProps = {\n  children: ReactNode\n}\n\nexport const TemporaryTasksContextProvider: FC<TemporaryTasksContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(temporaryTasksMachine)\n  return (\n    <TemporaryTasksContext.Provider value={[state, event]}>\n      {children}\n    </TemporaryTasksContext.Provider>\n  )\n}\n\nexport function useTemporaryTasksContextProvider() {\n  const context = useContext(TemporaryTasksContext)\n  if (context === undefined) {\n    throw new Error(\n      'useTemporaryTasksContextProvider must be used within a TemporaryTasksContextProvider',\n    )\n  }\n  return context as [\n    State<temporaryTasksMachineContext, temporaryTasksMachineEvent, any, any>,\n    (event: temporaryTasksMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\n\nexport const TemporaryTasksContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  height: 95vh;\n  background-color: var(--white);\n  color: var(--blue);\n`\nexport const TemporaryTasksMenuContainer = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-rows: 2fr;\n  background-color: var(--blue);\n  color: var(--white);\n`\n\nexport const TemporaryTasksMenu = styled.div`\n  border-top: 3px solid var(--white);\n  display: grid;\n  grid-auto-rows: 10%;\n`\n\nexport const MenuItems = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3vh;\n  color: var(--white);\n  cursor: pointer;\n`\nexport const TemporaryTaskDisplay = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 5vh;\n`\n\nexport const TaskCreatorHeader = styled.div`\n  height: 10vh;\n  display: grid;\n  grid-template-columns: 1fr 2fr 1fr;\n  justify-items: center;\n  align-items: center;\n  font-size: 3vh;\n`\n\nexport const TaskToGradeSelectorContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  width: 100%;\n  grid-template-columns: 1fr 2fr 1fr;\n`\n\nexport const TaskToGradeTitle = styled.div`\n  font-size: 4vh;\n  text-decoration: underline;\n`\n\nexport const TaskListContainer = styled.div`\n  border-bottom: 1px solid var(--blue);\n`\nexport const TaskListHeaders = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr 3fr;\n  border-bottom: 1px solid var(--grey);\n`\nexport const EndOfContainer = styled.div`\n  justify-self: end;\n  margin-right: 5%;\n`\nexport const TaskListTaskGraderContainer = styled.div`\n  overflow: scroll;\n  height: 83vh;\n`\n\nexport const TaskCompleteHeader = styled.div`\n  justify-self: end;\n  margin-right: 15%;\n`\n\nexport type TaskListDataProps = {\n  i: number\n}\nexport const TaskListData = styled.div<TaskListDataProps>`\n  display: grid;\n  grid-template-columns: 1fr 2fr 3fr;\n  background-color: ${({ i }) => (i % 2 ? 'var(--white)' : 'var(--grey)')};\n`\nexport type TaskNameContainerProps = {\n  studentPresent: boolean\n}\n\nexport const TaskNameContainer = styled.div<TaskNameContainerProps>`\n  align-self: center;\n  color: ${({ studentPresent }) =>\n    studentPresent ? 'var(--blue)' : 'var(--red)'};\n`\n\nexport const MarkAbsentContainer = styled.div`\n  margin: 5%;\n`\n\nexport const MarkCompleteContainer = styled.div`\n  align-self: center;\n  justify-self: end;\n  margin-right: 10%;\n`\n\nexport type MarkCompleteButtonProps = {\n  answered: boolean\n  studentPresent: boolean\n}\n\nexport const MarkCompleteButton = styled.button<MarkCompleteButtonProps>`\n  background-color: ${({ answered, studentPresent }) =>\n    !studentPresent ? 'var(--red)' : answered ? 'var(--blue)' : 'var(--grey)'};\n  color: ${({ answered, studentPresent }) =>\n    !studentPresent\n      ? 'var(--white)'\n      : answered\n        ? 'var(--white)'\n        : 'var(--blue)'};\n  font-size: 1.6vh;\n  width: 12vh;\n`\n\nexport const CreateTaskButton = styled.button`\n  color: var(--white);\n  background-color: var(--blue);\n  font-size: 3vh;\n  box-shadow: 2px 2px 2px gray;\n`\nexport const ReviewTasksContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`\nexport const TasksToSelectContainer = styled.div``\n\nexport const TaskTimerContainer = styled.div`\n  display: grid;\n`\n\nexport const TaskTimerControlsContainer = styled.div`\n  display: grid;\n  /* height: 100%; */\n  grid-template-rows: 1fr 2fr;\n  width: 100%;\n  justify-items: center;\n  align-items: center;\n`\nexport const TaskTimerPresetContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  cursor: default;\n`\n\nexport const ReduceTaskTimer = styled.div`\n  grid-row: 3/6;\n  grid-column: 1/4;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n`\n\nexport const TaskTimerPresetDisplay = styled.div`\n  grid-row: 2/7;\n  grid-column: 4/8;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 5rem;\n`\n\nexport const IncreaseTaskTimer = styled.div`\n  grid-row: 3/6;\n  grid-column: -1/-4;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n`\n\nexport const StartTaskTimer = styled.button`\n  grid-row: -2/-3;\n  grid-column: 3/-3;\n  font-size: 1.2vw;\n  color: var(--blue);\n`\n\nexport const TaskTimeDisplayFormat = styled.div`\n  font-size: 3rem;\n  width: 10vw;\n  display: grid;\n  /* border-bottom: 1px solid var(--white); */\n  font-family: free-monospace;\n  justify-items: center;\n  align-items: center;\n  height: 90%;\n`\nexport const TaskTimerControlsDisplay = styled.div`\n  display: grid;\n  width: 100%;\n  height: 40%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: 1fr 70%;\n`\nexport const TaskTimerControl = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.2rem;\n`\nexport const TaskTimerResetStyle = styled.div`\n  display: grid;\n  grid-column: span 3;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.2rem;\n`\n","import {\n  gql,\n  MutationFunctionOptions,\n  useMutation,\n  useQuery,\n} from '@apollo/client'\nimport React, { FC } from 'react'\nimport { useParams } from 'react-router'\nimport { useMarkingPeriodContextProvider } from '../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport {\n  createTemporaryTasks,\n  createTemporaryTasksVariables,\n  findTemporaryTasks,\n  findTemporaryTasksVariables,\n} from '../../../../../schemaTypes'\nimport { useTemporaryTasksContextProvider } from './state-n-styles/TemporaryTasksContext'\nimport { CreateTaskButton } from './state-n-styles/temporaryTaskStyles'\n\nexport type CreateTaskProps = {\n  courseId: string\n  warmUp: boolean\n}\n\nexport const CREATE_TEMPORARY_TASKS_MUTATION = gql`\n  mutation createTemporaryTasks($input: CreateTemporaryTasksInput!) {\n    createTemporaryTasks(input: $input) {\n      temporaryTasks {\n        _id\n        dateIssued\n        student {\n          _id\n          firstName\n          lastName\n        }\n        studentPresent\n        taskNumber\n      }\n    }\n  }\n`\n\nexport const CreateTask: FC<CreateTaskProps> = ({ courseId, warmUp }) => {\n  const [state, event] = useTemporaryTasksContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n\n  const [createTask] = useMutation<\n    createTemporaryTasks,\n    createTemporaryTasksVariables\n  >(CREATE_TEMPORARY_TASKS_MUTATION, {\n    variables: {\n      input: {\n        taskNumber: state.context.taskNumber,\n        courseId,\n        dateIssued: new Date().toLocaleDateString(),\n        markingPeriod: markingPeriodState.context.currentMarkingPeriod,\n      },\n    },\n    onCompleted: () => {\n      state.context.taskNumber !== 0 &&\n        event({\n          type: 'ADD_NEW_ABSENT_LIST',\n          payload: state.context.taskNumber,\n        })\n      event({\n        type: 'SET_TASK_NUMBER',\n        payload: state.context.taskNumber + 1,\n      })\n      event({\n        type: 'SET_TASK_TO_GRADE_NUMBER',\n        payload: state.context.taskNumber,\n      })\n    },\n    refetchQueries: ['findTemporaryTasks'],\n  })\n\n  return (\n    <>\n      {warmUp ? (\n        <div\n          style={{ cursor: 'pointer' }}\n          onClick={() => {\n            createTask()\n          }}\n        >\n          Create Warm Up\n        </div>\n      ) : (\n        <CreateTaskButton\n          onClick={() => {\n            createTask()\n          }}\n        >\n          Create Task {state.context.taskNumber}\n        </CreateTaskButton>\n      )}\n    </>\n  )\n}\n","import { gql, MutationFunctionOptions, useMutation } from '@apollo/client'\nimport React, { Dispatch, FC, SetStateAction } from 'react'\nimport {\n  findTemporaryTasks_findTemporaryTasks_temporaryTasks,\n  markTemporaryTaskAbsentVariables,\n  markTemporaryTaskAbsent,\n  // gradeTemporaryTask,\n  // gradeTemporaryTaskVariables,\n} from '../../../../../schemaTypes'\n// import { responsibilityPointConverter } from '../../../../../utils'\nimport { useTemporaryTasksContextProvider } from './state-n-styles/TemporaryTasksContext'\nimport { MarkAbsentContainer } from './state-n-styles/temporaryTaskStyles'\n\nexport type MarkAbsentProps = {\n  setStudentPresent: Dispatch<SetStateAction<boolean>>\n  studentPresent: boolean\n  task: findTemporaryTasks_findTemporaryTasks_temporaryTasks\n}\n\nexport const MARK_TEMPORARY_TASK_ABSENT_MUTATION = gql`\n  mutation markTemporaryTaskAbsent($input: MarkTemporaryTaskAbsentInput!) {\n    markTemporaryTaskAbsent(input: $input) {\n      temporaryTask {\n        _id\n      }\n    }\n  }\n`\n\nexport const MarkAbsent: FC<MarkAbsentProps> = ({\n  setStudentPresent,\n  studentPresent,\n  task,\n}) => {\n  const [, event] = useTemporaryTasksContextProvider()\n  return (\n    <MarkAbsentContainer>\n      <input\n        type=\"checkbox\"\n        disabled={task.answered}\n        checked={!studentPresent}\n        onChange={() => {\n          setStudentPresent((studentPresent) => !studentPresent)\n          studentPresent &&\n            event({\n              type: 'ADD_TO_ABSENT_LIST',\n              payload: {\n                taskNumber: task.taskNumber,\n                studentIdToAdd: task.student._id!,\n              },\n            })\n          !studentPresent &&\n            event({\n              type: 'DELETE_FROM_ABSENT_LIST',\n              payload: {\n                taskNumber: task.taskNumber,\n                studentIdToDelete: task.student._id!,\n              },\n            })\n        }}\n      />\n    </MarkAbsentContainer>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  findTemporaryTasks_findTemporaryTasks_temporaryTasks,\n  gradeTemporaryTask,\n  gradeTemporaryTaskVariables,\n} from '../../../../../schemaTypes'\nimport { responsibilityPointConverter } from '../../../../../utils'\nimport {\n  MarkCompleteButton,\n  MarkCompleteContainer,\n} from './state-n-styles/temporaryTaskStyles'\n\nexport type MarkCompleteProps = {\n  answered: boolean\n  task: findTemporaryTasks_findTemporaryTasks_temporaryTasks\n  studentPresent: boolean\n  grade: number\n}\n\nexport const GRADE_TEMPORARY_TASK_MUTATION = gql`\n  mutation gradeTemporaryTask($input: GradeTemporaryTaskInput!) {\n    gradeTemporaryTask(input: $input) {\n      temporaryTask {\n        _id\n        student {\n          firstName\n        }\n        answered\n      }\n    }\n  }\n`\n\nexport const MarkComplete: FC<MarkCompleteProps> = ({\n  answered,\n  studentPresent,\n  task,\n  grade,\n}) => {\n  const [gradeTask, { called, data }] = useMutation<\n    gradeTemporaryTask,\n    gradeTemporaryTaskVariables\n  >(GRADE_TEMPORARY_TASK_MUTATION, {\n    refetchQueries: ['findTemporaryTasks'],\n  })\n\n  return (\n    <MarkCompleteContainer>\n      <MarkCompleteButton\n        answered={data?.gradeTemporaryTask.temporaryTask.answered || answered}\n        disabled={!studentPresent}\n        studentPresent={studentPresent}\n        onClick={() => {\n          console.log(\n            task.student.firstName,\n            grade,\n            responsibilityPointConverter(grade, 2),\n            new Date().toLocaleTimeString(),\n          )\n\n          studentPresent &&\n            gradeTask({\n              variables: {\n                input: {\n                  _id: task._id!,\n                  answered: !answered,\n                  lastGrade: task.lastGrade,\n                  responsibilityPoints: responsibilityPointConverter(grade, 2),\n                },\n              },\n            })\n        }}\n      >\n        {called && !data\n          ? '...'\n          : answered || data?.gradeTemporaryTask.temporaryTask.answered\n            ? 'Complete'\n            : 'Incomplete'}\n      </MarkCompleteButton>\n    </MarkCompleteContainer>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC, useEffect, useState } from 'react'\n\nimport { useGradeCalculator } from '../../../../../hooks/useGradeCalculator'\nimport {\n  findTemporaryTasks_findTemporaryTasks_temporaryTasks,\n  gradeTemporaryTask,\n  gradeTemporaryTaskVariables,\n  markTemporaryTaskAbsentVariables,\n  markTemporaryTaskAbsent,\n} from '../../../../../schemaTypes'\nimport { responsibilityPointConverter } from '../../../../../utils'\nimport { MarkAbsent, MARK_TEMPORARY_TASK_ABSENT_MUTATION } from './MarkAbsent'\nimport { MarkComplete } from './MarkComplete'\nimport { useTemporaryTasksContextProvider } from './state-n-styles/TemporaryTasksContext'\nimport {\n  TaskListData,\n  TaskNameContainer,\n} from './state-n-styles/temporaryTaskStyles'\n\nexport type TaskGraderProps = {\n  task: findTemporaryTasks_findTemporaryTasks_temporaryTasks\n  i: number\n  absentStudentList?: findTemporaryTasks_findTemporaryTasks_temporaryTasks[]\n}\n\nexport const TaskGrader: FC<TaskGraderProps> = ({ task, i }) => {\n  const [state] = useTemporaryTasksContextProvider()\n  const { grade } = useGradeCalculator({\n    studentId: task.student._id!,\n    markingPeriod: task.markingPeriod,\n    polling: false,\n  })\n  useEffect(() => {\n    console.log(task.student.firstName, grade)\n  }, [])\n\n  const [studentPresent, setStudentPresent] = useState(task.studentPresent)\n\n  // const [gradeTask] = useMutation<gradeTemporaryTask, gradeTemporaryTaskVariables>(\n  // \tGRADE_TEMPORARY_TASK_MUTATION,\n  // \t{\n  // \t\trefetchQueries: ['findTemporaryTasks'],\n  // \t}\n  // )\n\n  const [markTemporaryTaskAbsent] = useMutation<\n    markTemporaryTaskAbsent,\n    markTemporaryTaskAbsentVariables\n  >(MARK_TEMPORARY_TASK_ABSENT_MUTATION, {\n    variables: { input: { taskId: task._id!, studentPresent } },\n    // onCompleted: (data) => console.log(data),\n    refetchQueries: ['findTemporaryTasks'],\n  })\n\n  useEffect(() => {\n    markTemporaryTaskAbsent()\n  }, [studentPresent])\n\n  useEffect(() => {\n    const [absentList] = state.context.absentList.filter(\n      (i) => i.taskNumber === state.context.taskNumber - 1,\n    )\n\n    if (absentList && absentList.tasks.includes(task.student._id!)) {\n      setStudentPresent(false)\n    }\n  }, [state.context.taskNumber])\n\n  return (\n    <TaskListData i={i}>\n      <MarkAbsent\n        setStudentPresent={setStudentPresent}\n        studentPresent={studentPresent}\n        task={task}\n      />\n      <TaskNameContainer studentPresent={studentPresent}>\n        {task.student.lastName}, {task.student.firstName}{' '}\n        {studentPresent ? '' : '(Absent)'}\n      </TaskNameContainer>\n      <MarkComplete\n        answered={task.answered}\n        studentPresent={studentPresent}\n        task={task!}\n        grade={grade}\n      />\n    </TaskListData>\n  )\n}\n","import React, { FC } from 'react'\nimport { findTemporaryTasks_findTemporaryTasks_temporaryTasks } from '../../../../../schemaTypes'\nimport {\n  EndOfContainer,\n  TaskListContainer,\n  TaskListHeaders,\n  TaskListTaskGraderContainer,\n} from './state-n-styles/temporaryTaskStyles'\nimport { TaskGrader } from './TaskGrader'\n\nexport type TaskListProps = {\n  taskList: findTemporaryTasks_findTemporaryTasks_temporaryTasks[]\n  absentStudentList?: findTemporaryTasks_findTemporaryTasks_temporaryTasks[]\n}\n\nexport const TaskList: FC<TaskListProps> = ({\n  taskList,\n  absentStudentList,\n}) => {\n  const sortByLastNameInObject = (\n    a: findTemporaryTasks_findTemporaryTasks_temporaryTasks,\n    b: findTemporaryTasks_findTemporaryTasks_temporaryTasks,\n  ) => {\n    let aName = a.student.lastName.toUpperCase()\n    let bName = b.student.lastName.toUpperCase()\n    if (aName < bName) {\n      return -1\n    }\n    if (aName > bName) {\n      return 1\n    }\n\n    return 0\n  }\n\n  return (\n    <TaskListContainer>\n      <TaskListHeaders>\n        <div>Attendance</div>\n        <div>Student</div>\n        <EndOfContainer>\n          Total Complete: {taskList.filter((task) => task.answered).length}\n        </EndOfContainer>\n      </TaskListHeaders>\n      <TaskListTaskGraderContainer>\n        {taskList.sort(sortByLastNameInObject).map((task, i: number) => (\n          <TaskGrader\n            key={task._id}\n            task={task}\n            i={i}\n            absentStudentList={absentStudentList}\n          />\n        ))}\n      </TaskListTaskGraderContainer>\n    </TaskListContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC, useEffect } from 'react'\nimport {\n  findTemporaryTasks,\n  findTemporaryTasksVariables,\n  findTemporaryTasks_findTemporaryTasks_temporaryTasks,\n} from '../../../../../schemaTypes'\nimport { CreateTask } from './CreateTask'\nimport { useTemporaryTasksContextProvider } from './state-n-styles/TemporaryTasksContext'\nimport {\n  TaskCreatorHeader,\n  TaskToGradeSelectorContainer,\n  TaskToGradeTitle,\n  TemporaryTaskDisplay,\n} from './state-n-styles/temporaryTaskStyles'\nimport { TaskList } from './TaskList'\n\nexport type TaskCreatorProps = {\n  courseId: string\n  dateIssued: string\n  data: findTemporaryTasks | undefined\n  loading: boolean\n}\n\nexport const FIND_TEMPORARY_TASKS_QUERY = gql`\n  query findTemporaryTasks($input: FindTemporaryTasksInput!) {\n    findTemporaryTasks(input: $input) {\n      temporaryTasks {\n        _id\n        dateIssued\n        student {\n          _id\n          firstName\n          lastName\n        }\n        studentPresent\n        taskNumber\n        answered\n        lastGrade\n        markingPeriod\n      }\n    }\n  }\n`\n\nexport const TaskCreator: FC<TaskCreatorProps> = ({\n  courseId,\n  dateIssued,\n  loading,\n  data,\n}) => {\n  const [state, event] = useTemporaryTasksContextProvider()\n\n  const absentStudentList = data?.findTemporaryTasks.temporaryTasks.filter(\n    (task) =>\n      task.taskNumber === state.context.taskNumber - 1 && !task.studentPresent,\n  )!\n\n  const taskNumberList = data?.findTemporaryTasks\n    .temporaryTasks!.map((task) => task.taskNumber)\n    .reduce(\n      (acc: number[], i: number) => (acc.includes(i) ? [...acc] : [...acc, i]),\n      [],\n    )!\n\n  const taskList = data?.findTemporaryTasks!.temporaryTasks!.filter(\n    (task) => task.taskNumber === state.context.taskToGradeNumber,\n  )!\n\n  const disablePlusSelectorSwitch =\n    taskNumberList &&\n    state.context.taskToGradeNumber < taskNumberList.length - 1\n      ? { color: 'var(--blue)', cursor: 'pointer' }\n      : { color: 'var(--grey)', cursor: 'pointer' }\n\n  const disableMinusSelectorSwitch =\n    taskNumberList && state.context.taskToGradeNumber > 0\n      ? { color: 'var(--blue)', cursor: 'pointer' }\n      : { color: 'var(--grey)', cursor: 'pointer' }\n\n  useEffect(() => {\n    const [absentList] = state.context.absentList.filter(\n      (i) => i.taskNumber === state.context.taskNumber - 2,\n    )\n\n    for (const task of taskList)\n      if (absentList && absentList.tasks.includes(task.student._id!)) {\n        // setStudentPresent(false)\n        !task.studentPresent &&\n          event({\n            type: 'ADD_TO_ABSENT_LIST',\n            payload: {\n              taskNumber: state.context.taskNumber - 1,\n              studentIdToAdd: task.student._id!,\n            },\n          })\n      }\n  }, [state.context.taskNumber])\n  return (\n    <>\n      {data?.findTemporaryTasks.temporaryTasks.length! > 0 ? (\n        <div>\n          <TaskCreatorHeader>\n            <div>{new Date().toLocaleDateString()}</div>\n            <TaskToGradeSelectorContainer>\n              <div\n                style={disableMinusSelectorSwitch}\n                onClick={() => {\n                  state.context.taskToGradeNumber > 0 &&\n                    event({\n                      type: 'SET_TASK_TO_GRADE_NUMBER',\n                      payload: state.context.taskToGradeNumber - 1,\n                    })\n                }}\n              >\n                &lt;\n              </div>\n              <TaskToGradeTitle>\n                {loading\n                  ? 'Loading'\n                  : state.context.taskToGradeNumber === 0\n                    ? 'Warm Up'\n                    : 'Task ' + state.context.taskToGradeNumber}\n              </TaskToGradeTitle>\n              <div\n                style={disablePlusSelectorSwitch}\n                onClick={() => {\n                  state.context.taskToGradeNumber < taskNumberList.length - 1 &&\n                    event({\n                      type: 'SET_TASK_TO_GRADE_NUMBER',\n                      payload: state.context.taskToGradeNumber + 1,\n                    })\n                }}\n              >\n                &gt;\n              </div>\n            </TaskToGradeSelectorContainer>\n            <CreateTask courseId={courseId} warmUp={false} />\n          </TaskCreatorHeader>\n\n          <TaskList taskList={taskList} absentStudentList={absentStudentList} />\n        </div>\n      ) : (\n        <TemporaryTaskDisplay>\n          <CreateTask courseId={courseId} warmUp={true} />\n        </TemporaryTaskDisplay>\n      )}\n    </>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  findTemporaryTasks,\n  findTemporaryTasksVariables,\n} from '../../../../../schemaTypes'\nimport { useTemporaryTasksContextProvider } from './state-n-styles/TemporaryTasksContext'\nimport { FIND_TEMPORARY_TASKS_QUERY, TaskCreator } from './TaskCreator'\n\nexport type LoadTasksProps = {\n  courseId: string\n  dateIssued: string\n}\n\nexport const LoadTasks: FC<LoadTasksProps> = ({ courseId, dateIssued }) => {\n  const [, event] = useTemporaryTasksContextProvider()\n\n  const { loading, data } = useQuery<\n    findTemporaryTasks,\n    findTemporaryTasksVariables\n  >(FIND_TEMPORARY_TASKS_QUERY, {\n    variables: {\n      input: {\n        courseId,\n        dateIssued: dateIssued,\n      },\n    },\n    onCompleted: (data) => {\n      const taskNumberList = data?.findTemporaryTasks\n        .temporaryTasks!.map((task) => task.taskNumber)\n        .reduce(\n          (acc: number[], i: number) =>\n            acc.includes(i) ? [...acc] : [...acc, i],\n          [],\n        )!\n\n      event({\n        type: 'SET_TASK_NUMBER',\n        payload:\n          taskNumberList![taskNumberList!.length] !== 0\n            ? taskNumberList.length\n            : 0,\n      })\n\n      event({\n        type: 'SET_TASK_TO_GRADE_NUMBER',\n        payload:\n          taskNumberList![taskNumberList!.length] !== 0\n            ? taskNumberList.length - 1\n            : 0,\n      })\n\n      const taskNumberListArr = data.findTemporaryTasks.temporaryTasks\n        .map((task) => task.taskNumber)\n        .reduce(\n          (acc: number[], i: number) =>\n            acc.includes(i) ? [...acc] : [...acc, i],\n          [],\n        )\n\n      for (const taskNumber of taskNumberListArr) {\n        taskNumber !== 0 &&\n          event({ type: 'ADD_NEW_ABSENT_LIST', payload: taskNumber })\n      }\n\n      for (const task of data.findTemporaryTasks.temporaryTasks) {\n        if (!task.studentPresent) {\n          event({\n            type: 'ADD_TO_ABSENT_LIST',\n            payload: {\n              taskNumber: task.taskNumber,\n              studentIdToAdd: task.student._id!,\n            },\n          })\n        }\n      }\n    },\n\n    onError: (error) => console.error(error),\n  })\n\n  return (\n    <>\n      {data && (\n        <TaskCreator\n          courseId={courseId}\n          dateIssued={dateIssued}\n          data={data}\n          loading={loading}\n        />\n      )}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  findTemporaryTasks,\n  findTemporaryTasksToReview,\n  findTemporaryTasksToReviewVariables,\n  findTemporaryTasksVariables,\n} from '../../../../../../schemaTypes'\nimport { dateConverter } from '../../../../../../utils'\nimport { useTemporaryTasksContextProvider } from '../state-n-styles/TemporaryTasksContext'\nimport {\n  ReviewTasksContainer,\n  TasksToSelectContainer,\n} from '../state-n-styles/temporaryTaskStyles'\nimport { FIND_TEMPORARY_TASKS_QUERY } from '../TaskCreator'\nimport { TaskList } from '../TaskList'\n\nexport type ReviewTasksProps = {\n  courseId: string\n}\n\nexport const FIND_TEMPORARY_TASKS_TO_REVIEW_QUERY = gql`\n  query findTemporaryTasksToReview($input: FindTemporaryTasksInput!) {\n    findTemporaryTasks(input: $input) {\n      temporaryTasks {\n        _id\n        dateIssued\n        student {\n          _id\n          firstName\n          lastName\n        }\n        studentPresent\n        taskNumber\n        answered\n      }\n    }\n  }\n`\n\nexport const ReviewTasks: FC<ReviewTasksProps> = ({ courseId }) => {\n  const [state, event] = useTemporaryTasksContextProvider()\n\n  const { loading, data } = useQuery<\n    findTemporaryTasks,\n    findTemporaryTasksVariables\n  >(FIND_TEMPORARY_TASKS_QUERY, {\n    variables: {\n      input: {\n        courseId,\n        dateIssued: dateConverter(state.context.dateToReview),\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  return (\n    <ReviewTasksContainer>\n      <TasksToSelectContainer>\n        <input\n          type=\"date\"\n          value={state.context.dateToReview}\n          onChange={(e: any) =>\n            event({ type: 'SET_DATE_TO_REVIEW', payload: e.target.value })\n          }\n        />\n      </TasksToSelectContainer>\n      <TaskList taskList={data?.findTemporaryTasks.temporaryTasks!} />\n    </ReviewTasksContainer>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\n\nimport Timer from 'react-compound-timer'\nimport {\n  TaskTimerControlsContainer,\n  TaskTimeDisplayFormat,\n  TaskTimerControlsDisplay,\n  TaskTimerControl,\n  TaskTimerResetStyle,\n} from './state-n-styles/temporaryTaskStyles'\n\nexport type TaskTimerDisplayProps = {\n  presetTime: number\n  setStartTimer: Dispatch<SetStateAction<boolean>>\n}\ntype TimerProps = {\n  start?: any\n  resume: any\n  pause: any\n  stop: any\n  reset: any\n  timerState?: any\n  initialTime?: any\n}\n\nexport const TaskTimerDisplay: FC<TaskTimerDisplayProps> = ({\n  presetTime,\n  setStartTimer,\n}) => {\n  const doubleDigitSeconds = (time: number) =>\n    time.toString().split('').length === 1\n      ? '0' + time.toString()\n      : time.toString()\n\n  return (\n    <Timer\n      initialTime={presetTime}\n      direction=\"backward\"\n      startImmediately={true}\n    >\n      {({ resume, pause, stop, reset, timerState }: TimerProps) => {\n        return (\n          <TaskTimerControlsContainer>\n            <TaskTimeDisplayFormat>\n              <div style={{}}>\n                <Timer.Minutes />:\n                <Timer.Seconds formatValue={doubleDigitSeconds} />\n              </div>\n            </TaskTimeDisplayFormat>\n\n            <TaskTimerControlsDisplay>\n              {/* <button onClick={start}>Start</button> */}\n              <TaskTimerControl>\n                <div onClick={pause}>Pause</div>\n              </TaskTimerControl>\n              <TaskTimerControl>\n                <div onClick={resume}>Resume</div>\n              </TaskTimerControl>\n              <TaskTimerControl onClick={reset}>\n                <div> Reset</div>\n              </TaskTimerControl>\n              <TaskTimerResetStyle>\n                <div\n                  onClick={() => {\n                    stop()\n                    setStartTimer(false)\n                  }}\n                >\n                  New Timer\n                </div>\n              </TaskTimerResetStyle>\n            </TaskTimerControlsDisplay>\n          </TaskTimerControlsContainer>\n        )\n      }}\n    </Timer>\n  )\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { useTemporaryTasksContextProvider } from './state-n-styles/TemporaryTasksContext'\nimport {\n  IncreaseTaskTimer,\n  ReduceTaskTimer,\n  StartTaskTimer,\n  TaskTimerContainer,\n  TaskTimerPresetContainer,\n  TaskTimerPresetDisplay,\n} from './state-n-styles/temporaryTaskStyles'\nimport { TaskTimerDisplay } from './TaskTimerDisplay'\n\nexport type TaskTimerProps = {}\n\nexport const TaskTimer: FC<TaskTimerProps> = () => {\n  const [state] = useTemporaryTasksContextProvider()\n  const [presetMinuteValue, setPresetMinuteValue] = useState(\n    state.context.taskNumber === 0 ? 10 : 5,\n  )\n  const [startTimer, setStartTimer] = useState(false)\n\n  useEffect(() => {\n    if (startTimer) {\n      setPresetMinuteValue(state.context.taskNumber === 0 ? 10 : 5)\n      setStartTimer(false)\n    }\n  }, [state.context.taskNumber])\n\n  return (\n    <>\n      {!startTimer ? (\n        <TaskTimerPresetContainer>\n          <ReduceTaskTimer\n            onClick={() => {\n              if (presetMinuteValue > 0) setPresetMinuteValue((c) => c - 1)\n            }}\n          >\n            <div>-</div>\n          </ReduceTaskTimer>\n          <TaskTimerPresetDisplay>\n            <div>{presetMinuteValue}</div>\n          </TaskTimerPresetDisplay>\n          <IncreaseTaskTimer onClick={() => setPresetMinuteValue((c) => c + 1)}>\n            <div>+</div>\n          </IncreaseTaskTimer>\n\n          <StartTaskTimer onClick={() => setStartTimer(true)}>\n            <div>Start </div>\n          </StartTaskTimer>\n        </TaskTimerPresetContainer>\n      ) : (\n        <TaskTimerDisplay\n          presetTime={presetMinuteValue * 1000 * 60}\n          setStartTimer={setStartTimer}\n        />\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useNavigate, useParams } from 'react-router'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { useToggle } from '../../../../../hooks'\nimport { me_me_Teacher } from '../../../../../schemaTypes'\nimport { sortByLetter } from '../../../../../utils'\n\nimport { LoadTasks } from './LoadTasks'\nimport { ReviewTasks } from './review-tasks/ReviewTasks'\nimport { useTemporaryTasksContextProvider } from './state-n-styles/TemporaryTasksContext'\nimport {\n  MenuItems,\n  TemporaryTaskDisplay,\n  TemporaryTasksContainer,\n  TemporaryTasksMenu,\n  TemporaryTasksMenuContainer,\n} from './state-n-styles/temporaryTaskStyles'\nimport { TaskTimer } from './TaskTimer'\n\nexport type TemporaryTasksProps = {}\n\nexport const TemporaryTasks: FC<TemporaryTasksProps> = () => {\n  const navigate = useNavigate()\n  const me: me_me_Teacher = useUserContextProvider()\n  const [courseSelectorSwitch, toggleCourseSelectorSwitch] = useToggle(false)\n  const [state, event] = useTemporaryTasksContextProvider()\n  const { course } = useParams()\n\n  const [courseName] = me.teachesCourses\n    .filter((courseToFind) => courseToFind._id === course)\n    .map((course) => course.name)\n\n  const coursesToChoose = me.teachesCourses\n    .slice(1)\n    .sort(sortByLetter)\n    .filter((courseToFind) => courseToFind._id !== course)\n  const fakeCourse = me.teachesCourses\n  return (\n    <TemporaryTasksContainer>\n      <TemporaryTasksMenuContainer>\n        <TemporaryTasksMenu>\n          <MenuItems>\n            <div onClick={() => event({ type: 'CREATE' })}>Create</div>\n          </MenuItems>\n          <MenuItems>\n            <div onClick={() => event({ type: 'REVIEW' })}>Review</div>\n          </MenuItems>\n          <MenuItems onClick={() => toggleCourseSelectorSwitch()}>\n            {courseSelectorSwitch ? 'Select Course' : courseName}\n          </MenuItems>\n          {courseSelectorSwitch && (\n            <div>\n              {fakeCourse.map((course) => (\n                <MenuItems\n                  onClick={() => {\n                    navigate(`/dashboard/courses/${course._id}/tasks`)\n                    toggleCourseSelectorSwitch()\n                  }}\n                  key={course._id!}\n                >\n                  {course.name}\n                </MenuItems>\n              ))}\n            </div>\n          )}\n        </TemporaryTasksMenu>\n        {state.matches('create') && <TaskTimer />}\n      </TemporaryTasksMenuContainer>\n      <>\n        {state.matches('idle') && (\n          <TemporaryTaskDisplay>{courseName} Tasks</TemporaryTaskDisplay>\n        )}\n        {state.matches('create') && (\n          <LoadTasks\n            courseId={course!}\n            dateIssued={new Date().toLocaleDateString()}\n          />\n        )}\n      </>\n      {state.matches('review') && <ReviewTasks courseId={course!} />}\n    </TemporaryTasksContainer>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React from 'react'\nimport { useNavigate } from 'react-router'\nimport { useTeacherNavContextProvider } from '../../../../navigation/teacher-nav/TeacherNavContext'\nimport {\n  me_me_Teacher_teachesCourses,\n  toggleAssignmentsAllowedInClass,\n  toggleAssignmentsAllowedInClassVariables,\n  toggleReadingGuideCheck,\n  toggleReadingGuideCheckVariables,\n} from '../../../../schemaTypes'\nimport {\n  AssignmentControlDisplayContainer,\n  CourseManagerHomeContainer,\n  CourseManagerHomeTitle,\n  CourseManagerHomeTitleBackLink,\n  CourseMenuContainer,\n  CourseMenuItemBlock,\n  CourseMenuItemBlockLink,\n} from './coursesStyles'\n\nexport type CourseManagerHomeProps = { course: me_me_Teacher_teachesCourses }\n\nexport const TOGGLE_ALLOW_ASSIGNMENTS_IN_CLASS_MUTATION = gql`\n  mutation toggleAssignmentsAllowedInClass(\n    $input: ToggleAssignmentsAllowedInClassInput!\n  ) {\n    toggleAssignmentsAllowedInClass(input: $input) {\n      toggled\n    }\n  }\n`\n\nexport const TOGGLE_READING_GUIDE_CHECK_MUTATION = gql`\n  mutation toggleReadingGuideCheck($input: ToggleReadingGuideCheckInput!) {\n    toggleReadingGuideCheck(input: $input) {\n      toggled\n    }\n  }\n`\nexport const CourseManagerHome = ({ course }: CourseManagerHomeProps) => {\n  const navigate = useNavigate()\n  const [navState, event] = useTeacherNavContextProvider()\n  const [toggleAssignmentsAllowedInClass] = useMutation<\n    toggleAssignmentsAllowedInClass,\n    toggleAssignmentsAllowedInClassVariables\n  >(TOGGLE_ALLOW_ASSIGNMENTS_IN_CLASS_MUTATION, {\n    variables: { input: { courseId: course._id! } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['me'],\n  })\n\n  const [toggleReadingGuideCheck] = useMutation<\n    toggleReadingGuideCheck,\n    toggleReadingGuideCheckVariables\n  >(TOGGLE_READING_GUIDE_CHECK_MUTATION, {\n    variables: { input: { courseId: course._id! } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['me'],\n  })\n  return (\n    <CourseManagerHomeContainer>\n      <CourseManagerHomeTitle>\n        <div>\n          <CourseManagerHomeTitleBackLink\n            onClick={() => navigate('/dashboard/courses')}\n          >\n            ←Back\n          </CourseManagerHomeTitleBackLink>\n        </div>\n        <div>{course.name} Menu</div>\n        <div></div>\n      </CourseManagerHomeTitle>\n      <CourseMenuContainer>\n        <CourseMenuItemBlock>\n          <AssignmentControlDisplayContainer>\n            <div>\n              Assignments in Class:{' '}\n              {course.hasCourseInfo.assignmentsAllowedInClass\n                ? 'Allowed'\n                : 'Not Allowed'}\n            </div>\n            <button onClick={() => toggleAssignmentsAllowedInClass()}>\n              {course.hasCourseInfo.assignmentsAllowedInClass\n                ? 'Disable '\n                : 'Enable '}{' '}\n              Assignments Allowed\n            </button>\n          </AssignmentControlDisplayContainer>\n          <AssignmentControlDisplayContainer>\n            <div>\n              Reading Guide Check:{' '}\n              {course.hasCourseInfo.checkReadingGuides ? 'Enabled' : 'Disabled'}\n            </div>\n            <button onClick={() => toggleReadingGuideCheck()}>\n              {course.hasCourseInfo.checkReadingGuides ? 'Disable' : 'Enable'}{' '}\n              Reading Guide Check\n            </button>\n          </AssignmentControlDisplayContainer>\n        </CourseMenuItemBlock>\n        <CourseMenuItemBlockLink to=\"assignment-manager\">\n          Grade Download\n        </CourseMenuItemBlockLink>\n        <CourseMenuItemBlockLink to=\"roster\">Roster</CourseMenuItemBlockLink>\n        <CourseMenuItemBlockLink to=\"edit-course\">\n          Edit Course\n        </CourseMenuItemBlockLink>\n        <CourseMenuItemBlockLink to=\"course-info\">\n          Course Information\n        </CourseMenuItemBlockLink>\n        <CourseMenuItemBlock></CourseMenuItemBlock>\n      </CourseMenuContainer>\n    </CourseManagerHomeContainer>\n  )\n}\n","import React from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport {\n  findCourseInfoByCourseIdForCourseInfo,\n  findCourseInfoByCourseIdForCourseInfo_findCourseInfoByCourseId_courseInfo_course_hasStudents_hasAssignments_Essay,\n  findCourseInfoByCourseIdForCourseInfoVariables,\n} from '../../../../../schemaTypes'\n\nexport type CourseInfoHomeProps = {\n  courseId: string\n}\nexport const GET_COURSE_INFO_QUERY_FOR_COURSE_INFO = gql`\n  query findCourseInfoByCourseIdForCourseInfo(\n    $input: FindCourseInfoByCourseIdInput!\n  ) {\n    findCourseInfoByCourseId(input: $input) {\n      courseInfo {\n        course {\n          name\n          hasStudents {\n            _id\n            hasAbsences {\n              dayAbsent\n            }\n            hasAssignments {\n              dueDate\n              missing\n              ... on Essay {\n                _id\n                finalDraft {\n                  submitted\n                  submittedFinalDraft {\n                    graded\n                  }\n                }\n                hasOwner {\n                  _id\n                  firstName\n                  lastName\n                }\n              }\n              ... on ReadingGuide {\n                completed\n                hasOwner {\n                  _id\n                  firstName\n                  lastName\n                }\n              }\n            }\n            hasTodaysAssignments {\n              missing\n              ... on Essay {\n                _id\n                finalDraft {\n                  submitted\n                  submittedFinalDraft {\n                    graded\n                  }\n                }\n                hasOwner {\n                  _id\n                  firstName\n                  lastName\n                }\n              }\n              ... on ReadingGuide {\n                completed\n                hasOwner {\n                  _id\n                  firstName\n                  lastName\n                }\n              }\n            }\n            hasTodaysBehaviors {\n              behavior {\n                behaviorCategory\n                behaviorName\n                behaviorQuality\n              }\n              responsibilityPoints\n              student {\n                _id\n                lastName\n                firstName\n              }\n            }\n            hasBehaviors {\n              behavior {\n                behaviorCategory\n                behaviorName\n                behaviorQuality\n              }\n              responsibilityPoints\n              student {\n                _id\n                lastName\n                firstName\n              }\n            }\n            hasTodaysProtocols {\n              completed\n              student {\n                _id\n                lastName\n                firstName\n              }\n            }\n            hasProtocols {\n              completed\n              student {\n                _id\n                lastName\n                firstName\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport const CourseInfoHome = ({ courseId }: CourseInfoHomeProps) => {\n  const { loading, data } = useQuery<\n    findCourseInfoByCourseIdForCourseInfo,\n    findCourseInfoByCourseIdForCourseInfoVariables\n  >(GET_COURSE_INFO_QUERY_FOR_COURSE_INFO, {\n    variables: {\n      input: { courseId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  const { hasStudents } = data?.findCourseInfoByCourseId.courseInfo.course!\n\n  const studentsWithHomework = hasStudents.filter((student) =>\n    student.hasTodaysAssignments.filter((assignment) => !assignment.missing),\n  )\n\n  const studentsWithHomeworkAnyDay = hasStudents\n    .map((student) => student.hasAssignments)\n    .map((s) =>\n      s.filter((s) => s.__typename === 'Essay' && s.dueDate === '1/5/2024'),\n    )\n  const list: any[] = []\n\n  studentsWithHomeworkAnyDay.forEach((a) => {\n    if (a.filter((a) => !a.missing).length > 0) {\n      const thing = a.filter((a) => !a.missing)\n      list.push(...thing)\n    }\n  })\n  console.log(list.map((assignment) => assignment.hasOwner))\n  return (\n    <div>\n      <div>Course Information</div>\n      <div>\n        {list.map((a) => {\n          console.log(a)\n          return (\n            <div key={a._id}>\n              {a.hasOwner.lastName}, {a.hasOwner.firstName}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useParams, Routes, Route } from 'react-router'\nimport { LessonEditor } from '../lessons/lesson-editor/LessonEditor'\nimport { LessonEditorContextProvider } from '../lessons/lesson-editor/LessonEditorContext'\nimport { AssignAssignments } from '../assignments/assign-assignments/AssignAssignments'\nimport { RosterDashboard } from './roster/RosterDashboard'\nimport { ReadingGuideData } from '../assignments/readingGuideData/ReadingGuideData'\nimport { EditCourseContextProvider } from './edit-course/state-n-styles/EditCourseContext'\nimport { EditCourse } from './edit-course/EditCourse'\nimport { AssignmentManager } from './course-assignments/AssignmentManager'\nimport { AssignmentManagerContextProvider } from './course-assignments/state-styles/AssignmentManagerContext'\nimport { TemporaryTasks } from './temporary-tasks/TemporaryTasks'\nimport { TemporaryTasksContextProvider } from './temporary-tasks/state-n-styles/TemporaryTasksContext'\nimport { useUserContextProvider } from '../../../../contexts/UserContext'\nimport { me_me_Teacher } from '../../../../schemaTypes'\nimport { CourseManagerHome } from './CourseManagerHome'\nimport { CourseInfoHome } from './course-info/CourseInfoHome'\n\nexport type CourseManagerProps = {}\n\nexport const CourseManager = ({}: CourseManagerProps) => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const { course } = useParams()\n  const courseManager = me.teachesCourses.filter(\n    (courses) => courses._id === course,\n  )[0]\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"\" element={<CourseManagerHome course={courseManager} />} />\n        <Route\n          path=\"lesson-editor\"\n          element={\n            <LessonEditorContextProvider>\n              <LessonEditor course={course!} />\n            </LessonEditorContextProvider>\n          }\n        />\n        <Route path=\"assign-assignments\" element={<AssignAssignments />} />\n        <Route\n          path=\"assignment-manager\"\n          element={\n            <AssignmentManagerContextProvider>\n              <AssignmentManager courseId={course!} />\n            </AssignmentManagerContextProvider>\n          }\n        />\n        <Route\n          path=\"tasks/*\"\n          element={\n            <TemporaryTasksContextProvider>\n              <TemporaryTasks />\n            </TemporaryTasksContextProvider>\n          }\n        />\n        <Route\n          path=\"roster/*\"\n          element={\n            <RosterDashboard\n              courseName={courseManager.name}\n              courseId={course!}\n            />\n          }\n        />\n        <Route path=\"view-reading-guide-data\" element={<ReadingGuideData />} />\n\n        <Route\n          path=\"edit-course\"\n          element={\n            <EditCourseContextProvider>\n              <EditCourse />\n            </EditCourseContextProvider>\n          }\n        />\n        <Route\n          path=\"course-info\"\n          element={<CourseInfoHome courseId={course!} />}\n        />\n      </Routes>\n    </>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  CreateCourseInput,\n  CreateCourseInfoInput,\n  CourseMaxSizeEnum,\n  CourseTypeEnum,\n  SchoolDayType,\n} from '../../../../../../schemaTypes'\n\nexport type createCourseMachineSchema = {\n  states: {\n    createCourseTitle: {}\n    createCourseInfo: {}\n    nextSteps: {}\n  }\n}\nexport type createCourseMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'ADD_ANOTHER_COURSE' }\n  | { type: 'NEXT_STEP' }\n  | { type: 'NEXT_STEP_MODAL'; payload: boolean }\n  | { type: 'CREATE_TITLE'; payload: string }\n  | { type: 'ADD_COURSE_ID'; payload: string }\n  | { type: 'ADD_STARTING_TIME'; payload: string }\n  | { type: 'ADD_ENDING_TIME'; payload: string }\n  | { type: 'ADD_STARTING_HALFDAY_TIME'; payload: string }\n  | { type: 'ADD_ENDING_HALFDAY_TIME'; payload: string }\n  | { type: 'ADD_COURSE_MAX_SIZE'; payload: CourseMaxSizeEnum }\n  | { type: 'ADD_COURSE_TYPE'; payload: CourseTypeEnum }\n  | { type: 'ADD_SCHOOL_DAY_TYPE'; payload: SchoolDayType }\n  | { type: 'COHORT_BASED'; payload: boolean }\n  | { type: 'NEXT_STEP' }\n\nexport type createCourseMachineContext = {\n  courseTitle: CreateCourseInput\n  courseId: string\n  courseInfo: CreateCourseInfoInput\n}\n\nexport const createCourseMachine = Machine<\n  createCourseMachineContext,\n  createCourseMachineSchema,\n  createCourseMachineEvent\n>({\n  id: 'createCourse',\n  initial: 'createCourseTitle',\n  context: {\n    courseTitle: {\n      name: '',\n    },\n    courseId: '',\n    courseInfo: {\n      courseId: '',\n      courseMaxSize: CourseMaxSizeEnum.TWENTY_SIX,\n      courseType: CourseTypeEnum.SOCIAL_STUDIES,\n      startsAt: '',\n      endsAt: '',\n      halfDayStartsAt: '',\n      hourDelayEndsAt: '',\n      hourDelayStartsAt: '',\n      cohortBasedSeating: false,\n      halfDayEndsAt: '',\n      schoolDayType: SchoolDayType.AB,\n    },\n  },\n  states: {\n    createCourseTitle: {\n      on: {\n        NEXT: 'createCourseInfo',\n        CREATE_TITLE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseTitle: { ...ctx.courseTitle, name: evt.payload },\n            }\n          }),\n        },\n        ADD_COURSE_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: { ...ctx.courseInfo, courseId: evt.payload },\n            }\n          }),\n        },\n      },\n    },\n    createCourseInfo: {\n      on: {\n        NEXT_STEP: 'nextSteps',\n        ADD_ANOTHER_COURSE: 'createCourseTitle',\n        ADD_COURSE_ID: {\n          actions: assign((ctx, evt) => {\n            console.log(evt)\n            return {\n              ...ctx,\n              courseInfo: { ...ctx.courseInfo, courseId: evt.payload },\n            }\n          }),\n        },\n        ADD_STARTING_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                startsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_ENDING_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                endsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_STARTING_HALFDAY_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                halfDayStartsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        COHORT_BASED: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                cohortBasedSeating: evt.payload,\n                courseMaxSize: CourseMaxSizeEnum.TWELVE,\n              },\n            }\n          }),\n        },\n        ADD_ENDING_HALFDAY_TIME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                halfDayEndsAt: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_SCHOOL_DAY_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                schoolDayType: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_COURSE_MAX_SIZE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                courseMaxSize: evt.payload,\n              },\n            }\n          }),\n        },\n        ADD_COURSE_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: {\n                ...ctx.courseInfo,\n                courseType: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n    nextSteps: {\n      on: {\n        ADD_ANOTHER_COURSE: 'createCourseTitle',\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  createCourseMachine,\n  createCourseMachineContext,\n  createCourseMachineEvent,\n} from './createCourseMachine'\n\nconst CreateCourseContext = createContext<any>(undefined)\n\ntype CreateCourseContextProps = {\n  children: ReactNode\n}\n\nexport const CreateCourseContextProvider = ({\n  children,\n}: CreateCourseContextProps) => {\n  const [state, event] = useMachine(createCourseMachine)\n  return (\n    <CreateCourseContext.Provider value={[state, event]}>\n      {children}\n    </CreateCourseContext.Provider>\n  )\n}\n\nexport function useCreateCourseContextProvider() {\n  const context = useContext(CreateCourseContext)\n  if (context === undefined) {\n    throw new Error(\n      'useCreateCourseContextProvider must be used within a CreateCourseContextProvider',\n    )\n  }\n  return context as [\n    State<createCourseMachineContext, createCourseMachineEvent, any, any>,\n    (event: createCourseMachineEvent) => void,\n  ]\n}\n","import styled from 'styled-components'\n\nexport const CreateCourseContainer = styled.div`\n  display: grid;\n  height: 95vh;\n  grid-template-rows: 1fr 3fr;\n`\nexport const CreateCourseInformationContainer = styled.div`\n  display: grid;\n  height: 95vh;\n  grid-template-rows: 1fr 7fr;\n`\nexport const CreateCourseContainerTitleContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  /* height: ${95 / 4}vh; */\n  font-size: 5vh;\n  text-decoration: underline;\n`\n\nexport const CreateCourseBodyContainer = styled.form`\n  display: grid;\n  grid-template-rows: 1fr 3fr;\n`\nexport const CreateCourseInfoBodyContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr 1fr;\n`\nexport const CourseTitleContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 3fr;\n  align-items: center;\n  justify-items: center;\n  font-size: 3vh;\n`\n\nexport const CourseTitleInput = styled.input`\n  width: 80vh;\n  height: 5vh;\n  background-color: transparent;\n  font-size: 3vh;\n  padding-left: 2%;\n  color: var(--blue);\n`\n\nexport const CourseTitleButtonContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const CourseTitleButton = styled.button`\n  width: 45vh;\n  height: 5vh;\n  background-color: var(--blue);\n  color: var(--white);\n  font-size: 3vh;\n`\nexport const CourseInformationContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\n\nexport const CourseInformationColumnContainer = styled.div`\n  display: grid;\n`\n\nexport const TimeSelectionContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  align-items: center;\n  justify-items: center;\n  font-size: 2vh;\n`\n\nexport const TimeSelectionInput = styled.input`\n  justify-self: left;\n  background-color: transparent;\n  color: var(--blue);\n  border: 1px solid var(--blue);\n  height: 4vh;\n  font-size: 3vh;\n`\n","import React, { useEffect, useState } from 'react'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport {\n  createCourseVariables,\n  createCourse,\n  findAllCourseTitles,\n} from '../../../../../schemaTypes'\nimport { useCreateCourseContextProvider } from './state/CreateCourseContext'\nimport { useNavigate } from 'react-router'\nimport {\n  CourseTitleButton,\n  CourseTitleButtonContainer,\n  CourseTitleContainer,\n  CourseTitleInput,\n  CreateCourseBodyContainer,\n} from './state/createCourseStyles'\n\nexport type CreateTitleProps = {}\n\nexport const CREATE_COURSE_MUTATION = gql`\n  mutation createCourse($input: CreateCourseInput!) {\n    createCourse(input: $input) {\n      course {\n        _id\n      }\n    }\n  }\n`\n\nexport const FIND_ALL_COURSE_TITLES_QUERY = gql`\n  query findAllCourseTitles {\n    findAllCourseTitles {\n      courses {\n        _id\n        name\n      }\n    }\n  }\n`\n\nexport const CreateTitle = ({}: CreateTitleProps) => {\n  const [state, event] = useCreateCourseContextProvider()\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const navigate = useNavigate()\n\n  const { loading, data } = useQuery<findAllCourseTitles>(\n    FIND_ALL_COURSE_TITLES_QUERY,\n    {\n      onCompleted: (data) => console.log(data),\n      onError: (error) => console.error(error),\n    },\n  )\n\n  const [createCourse, { error }] = useMutation<\n    createCourse,\n    createCourseVariables\n  >(CREATE_COURSE_MUTATION, {\n    variables: { input: state.context.courseTitle },\n    onCompleted: (data) => {\n      event({\n        type: 'ADD_COURSE_ID',\n        payload: data.createCourse.course._id!,\n      })\n      event({ type: 'NEXT' })\n    },\n    onError: () => {\n      setErrorMessage('Course name already in use.')\n      handleError()\n    },\n    refetchQueries: [],\n  })\n\n  const handleClick = () => {\n    createCourse()\n  }\n  const handleError = () => {\n    const timer = setTimeout(() => {\n      event({ type: 'CREATE_TITLE', payload: '' })\n      setErrorMessage('')\n    }, 3000)\n    return () => clearTimeout(timer)\n  }\n\n  return (\n    <CreateCourseBodyContainer onChange={(e) => e.preventDefault()}>\n      <CourseTitleContainer>\n        <div>What is the Course's Title?</div>\n        <div>\n          <CourseTitleInput\n            autoFocus={true}\n            onChange={(e: any) => {\n              if (e.target.value !== '') {\n                event({ type: 'CREATE_TITLE', payload: e.target.value })\n              }\n            }}\n          />\n        </div>\n      </CourseTitleContainer>\n      {!errorMessage ? (\n        <CourseTitleButtonContainer>\n          <CourseTitleButton onClick={() => navigate('/dashboard')}>\n            Back\n          </CourseTitleButton>\n          {state.context.courseTitle.name !== '' && (\n            <CourseTitleButton\n              type={state.context.courseTitle.name ? 'reset' : 'button'}\n              onClick={handleClick}\n            >\n              Choose this Title\n            </CourseTitleButton>\n          )}\n        </CourseTitleButtonContainer>\n      ) : (\n        <CourseTitleButtonContainer>{errorMessage}</CourseTitleButtonContainer>\n      )}\n    </CreateCourseBodyContainer>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { useCreateCourseContextProvider } from './state/CreateCourseContext'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  createCourseInfoVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createCourseInfo,\n  SchoolDayType,\n  CourseTypeEnum,\n  addCourseToTeacher,\n  addCourseToTeacherVariables,\n  CourseMaxSizeEnum,\n  me_me_Teacher,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removeCourse,\n  removeCourseVariables,\n} from '../../../../../schemaTypes'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\n\nimport {\n  CourseInformationColumnContainer,\n  CourseInformationContainer,\n  CourseTitleButton,\n  CourseTitleButtonContainer,\n  CreateCourseContainerTitleContainer,\n  CreateCourseInfoBodyContainer,\n  TimeSelectionContainer,\n  TimeSelectionInput,\n} from './state/createCourseStyles'\nimport {\n  phraseCapitalizer,\n  timeChanger,\n  underscoreEliminator,\n} from '../../../../../utils'\n\nexport type CreateCourseInfoProps = {}\n\nexport const CREATE_COURSE_INFO_MUTATION = gql`\n  mutation createCourseInfo($input: CreateCourseInfoInput!) {\n    createCourseInfo(input: $input) {\n      courseInfo {\n        _id\n      }\n    }\n  }\n`\nexport const ADD_COURSE_TO_TEACHER_MUTATION = gql`\n  mutation addCourseToTeacher($input: AddCourseToTeacherInput!) {\n    addCourseToTeacher(input: $input) {\n      teacher {\n        _id\n      }\n    }\n  }\n`\nexport const REMOVE_COURSE_MUTATION = gql`\n  mutation removeCourse($input: RemoveCourseInput!) {\n    removeCourse(input: $input) {\n      removed\n    }\n  }\n`\n\nexport const CreateCourseInfo = ({}: CreateCourseInfoProps) => {\n  const [state, event] = useCreateCourseContextProvider()\n  const me: me_me_Teacher = useUserContextProvider()\n  const [isToggled, setIsToggled] = useState(false)\n  console.log(isToggled)\n  const { courseMaxSizeEnum, courseTypeEnum, schoolDayType } =\n    useEnumContextProvider()\n\n  const [addToTeachersRoster] = useMutation<\n    addCourseToTeacher,\n    addCourseToTeacherVariables\n  >(ADD_COURSE_TO_TEACHER_MUTATION, {\n    variables: {\n      input: {\n        courseId: state.context.courseInfo.courseId,\n        teacherId: me._id!,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['me'],\n  })\n\n  const [createCourseInfo] = useMutation<\n    createCourseInfo,\n    createCourseInfoVariables\n  >(CREATE_COURSE_INFO_MUTATION, {\n    variables: { input: state.context.courseInfo },\n    onCompleted: () => addToTeachersRoster(),\n    refetchQueries: [],\n  })\n\n  const [removeCourse] = useMutation<removeCourse, removeCourseVariables>(\n    REMOVE_COURSE_MUTATION,\n    {\n      variables: { input: { courseId: state.context.courseInfo.courseId } },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [],\n    },\n  )\n  const handleCreate = () => {\n    createCourseInfo()\n    event({ type: 'NEXT_STEP' })\n  }\n  return (\n    <CreateCourseInfoBodyContainer>\n      <CreateCourseContainerTitleContainer>\n        Complete Course Details\n      </CreateCourseContainerTitleContainer>\n      <CourseInformationContainer>\n        <CourseInformationColumnContainer>\n          <TimeSelectionContainer>\n            <div>Add Starting Time</div>\n\n            <TimeSelectionInput\n              type=\"time\"\n              onChange={(e: any) => {\n                event({\n                  type: 'ADD_STARTING_TIME',\n                  payload: timeChanger(e.target.value),\n                })\n              }}\n            />\n          </TimeSelectionContainer>\n          <TimeSelectionContainer>\n            <div>Add Ending Time</div>\n            <TimeSelectionInput\n              type=\"time\"\n              onChange={(e: any) => {\n                event({\n                  type: 'ADD_ENDING_TIME',\n                  payload: timeChanger(e.target.value),\n                })\n              }}\n            />\n          </TimeSelectionContainer>\n          <TimeSelectionContainer>\n            <div>Add Half-Day Starting Time</div>\n            <TimeSelectionInput\n              type=\"time\"\n              onChange={(e: any) => {\n                event({\n                  type: 'ADD_STARTING_HALFDAY_TIME',\n                  payload: timeChanger(e.target.value),\n                })\n              }}\n            />\n          </TimeSelectionContainer>\n          <TimeSelectionContainer>\n            <div>Add Half-Day Ending Time</div>\n            <TimeSelectionInput\n              type=\"time\"\n              onChange={(e: any) => {\n                event({\n                  type: 'ADD_ENDING_HALFDAY_TIME',\n                  payload: timeChanger(e.target.value),\n                })\n              }}\n            />\n          </TimeSelectionContainer>\n        </CourseInformationColumnContainer>\n        <CourseInformationColumnContainer>\n          <TimeSelectionContainer>\n            <div>AB Day Selection</div>\n            <select\n              value={state.context.courseInfo.schoolDayType}\n              onChange={(e: any) => {\n                if (e.target.value !== 'none') {\n                  event({\n                    type: 'ADD_SCHOOL_DAY_TYPE',\n                    payload: e.target.value,\n                  })\n                }\n              }}\n            >\n              <option value={'none'}>Select a Day Type</option>\n              {schoolDayType.map((dayType: SchoolDayType) => (\n                <option key={dayType!} value={dayType}>\n                  {dayType}\n                </option>\n              ))}\n            </select>\n          </TimeSelectionContainer>\n          <TimeSelectionContainer>\n            <div>What type of Course is it?</div>\n            <select\n              value={state.context.courseInfo.courseType}\n              onChange={(e: any) => {\n                if (e.target.value !== 'none') {\n                  event({ type: 'ADD_COURSE_TYPE', payload: e.target.value })\n                }\n              }}\n            >\n              <option value={'none'}>Select a Course Type</option>\n              {courseTypeEnum.map((courseType: CourseTypeEnum) => (\n                <option key={courseType!} value={courseType}>\n                  {phraseCapitalizer(underscoreEliminator(courseType))}\n                </option>\n              ))}\n            </select>\n          </TimeSelectionContainer>\n          <TimeSelectionContainer>\n            <div>Is there Cohort Seating?</div>\n            <div>\n              <button\n                onClick={() => event({ type: 'COHORT_BASED', payload: false })}\n                style={\n                  state.context.courseInfo.cohortBasedSeating\n                    ? { backgroundColor: 'var(--blue)', color: 'var(--white)' }\n                    : { backgroundColor: 'var(--red)', color: 'var(--white)' }\n                }\n              >\n                No\n              </button>\n              <button\n                onClick={() => event({ type: 'COHORT_BASED', payload: true })}\n                style={\n                  state.context.courseInfo.cohortBasedSeating\n                    ? { backgroundColor: 'var(--red)', color: 'var(--white)' }\n                    : { backgroundColor: 'var(--blue)', color: 'var(--white)' }\n                }\n              >\n                Yes\n              </button>\n            </div>\n          </TimeSelectionContainer>\n          <TimeSelectionContainer>\n            <div>Course's Max Size</div>\n            <select\n              value={state.context.courseInfo.courseMaxSize}\n              onChange={(e: any) => {\n                if (e.target.value !== 'none') {\n                  event({\n                    type: 'ADD_COURSE_MAX_SIZE',\n                    payload: e.target.value,\n                  })\n                }\n              }}\n            >\n              <option value={'none'}>Select a Class Size</option>\n              {courseMaxSizeEnum.map((courseSize: CourseMaxSizeEnum) => (\n                <option key={courseSize!} value={courseSize}>\n                  {phraseCapitalizer(underscoreEliminator(courseSize))}\n                </option>\n              ))}\n            </select>\n          </TimeSelectionContainer>\n        </CourseInformationColumnContainer>\n      </CourseInformationContainer>\n      <CourseTitleButtonContainer>\n        <CourseTitleButton\n          onClick={() => {\n            removeCourse()\n            event({ type: 'ADD_ANOTHER_COURSE' })\n          }}\n        >\n          Remove Course\n        </CourseTitleButton>\n        <CourseTitleButton onClick={handleCreate}>\n          Create Course\n        </CourseTitleButton>\n      </CourseTitleButtonContainer>\n    </CreateCourseInfoBodyContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { useCreateCourseContextProvider } from './state/CreateCourseContext'\nimport { useNavigate } from 'react-router'\nimport {\n  CourseTitleButton,\n  CourseTitleButtonContainer,\n} from './state/createCourseStyles'\n\nexport type NextStepsProps = {}\n\nexport const NextSteps = ({}: NextStepsProps) => {\n  const [state, event] = useCreateCourseContextProvider()\n  const navigate = useNavigate()\n  return (\n    <CourseTitleButtonContainer style={{ height: '95vh' }}>\n      <CourseTitleButton\n        onClick={() => {\n          event({ type: 'ADD_ANOTHER_COURSE' })\n        }}\n      >\n        Add Another Course\n      </CourseTitleButton>\n      <CourseTitleButton\n        onClick={() => {\n          navigate(\n            `/dashboard/courses/${state.context.courseInfo.courseId}/roster`,\n          )\n        }}\n      >\n        Add Students\n      </CourseTitleButton>\n    </CourseTitleButtonContainer>\n  )\n}\n","import React from 'react'\nimport { useCreateCourseContextProvider } from './state/CreateCourseContext'\nimport { CreateTitle } from './CreateTitle'\nimport { CreateCourseInfo } from './CreateCourseInfo'\n\nimport {\n  CreateCourseContainer,\n  CreateCourseContainerTitleContainer,\n  CreateCourseInformationContainer,\n} from './state/createCourseStyles'\nimport { NextSteps } from './NextSteps'\n\nexport type CreateCourseProps = {}\n\nexport const CreateCourse = ({}: CreateCourseProps) => {\n  const [state] = useCreateCourseContextProvider()\n\n  return (\n    <>\n      {state.matches('createCourseTitle') && (\n        <CreateCourseContainer>\n          <CreateCourseContainerTitleContainer>\n            <div>Create New Course</div>\n          </CreateCourseContainerTitleContainer>\n          <CreateTitle />\n        </CreateCourseContainer>\n      )}\n      {state.matches('createCourseInfo') && (\n        <CreateCourseInformationContainer>\n          <CreateCourseContainerTitleContainer>\n            <div>Course Information {state.context.courseTitle.name}</div>\n          </CreateCourseContainerTitleContainer>\n          <CreateCourseInfo />\n        </CreateCourseInformationContainer>\n      )}\n      {state.matches('nextSteps') && <NextSteps />}\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Routes, useLocation } from 'react-router'\nimport { useNavSync } from '../../../../hooks/useNavSync'\nimport { CourseDirectory } from './CourseDirectory'\nimport { CourseManager } from './CourseManager'\nimport { CreateCourse } from './create-course/CreateCourse'\nimport { CreateCourseContextProvider } from './create-course/state/CreateCourseContext'\n\nexport type CoursesHomeProps = {}\n\nexport const CoursesHome = ({}: CoursesHomeProps) => {\n  const location = useLocation()\n  useNavSync(location, 'COURSES')\n  return (\n    <Routes>\n      <Route path=\"\" element={<CourseDirectory />} />\n      <Route path=\":course/*\" element={<CourseManager />} />\n      <Route\n        path=\"create-course\"\n        element={\n          <CreateCourseContextProvider>\n            <CreateCourse />\n          </CreateCourseContextProvider>\n        }\n      />\n    </Routes>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport { WritingLevelEnum, RubricSectionEnum } from '../../../../../schemaTypes'\n\nexport type rubricBuilderMachineSchema = {\n  states: {\n    build: {}\n  }\n}\nexport type rubricBuilderMachineEvent =\n  | { type: 'RESET' }\n  | { type: 'SET_WRITING_LEVELS'; payload: WritingLevelEnum[] }\n  | { type: 'SET_SECTION'; payload: RubricSectionEnum }\n  | { type: 'SET_ENTRY'; payload: string }\n  | { type: 'SET_SCORE'; payload: number }\n  | { type: 'SET_HOW_TO_IMPROVE'; payload: string }\n\nexport type rubricBuilderMachineContext = {\n  writingLevels: WritingLevelEnum[]\n  section: RubricSectionEnum\n  entry: string\n  score: number\n  howToImprove: string\n}\n\nexport const rubricBuilderMachine = Machine<\n  rubricBuilderMachineContext,\n  rubricBuilderMachineSchema,\n  rubricBuilderMachineEvent\n>({\n  id: 'rubricBuilder',\n  initial: 'build',\n  context: {\n    writingLevels: [],\n    section: RubricSectionEnum.PROOFREADING,\n    entry: '',\n    score: 0,\n    howToImprove: '',\n  },\n  states: {\n    build: {\n      on: {\n        SET_WRITING_LEVELS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              writingLevels: evt.payload,\n            }\n          }),\n        },\n        SET_SECTION: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              section: evt.payload,\n            }\n          }),\n        },\n        SET_ENTRY: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              entry: evt.payload,\n            }\n          }),\n        },\n        SET_SCORE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              score: evt.payload,\n            }\n          }),\n        },\n        SET_HOW_TO_IMPROVE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              howToImprove: evt.payload,\n            }\n          }),\n        },\n        RESET: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              entry: '',\n              score: 0,\n              writingLevels: [],\n              section: RubricSectionEnum.PROOFREADING,\n              howToImprove: '',\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { FC, useEffect } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  buildRubricEntry,\n  buildRubricEntryVariables,\n  WritingLevelEnum,\n  RubricSectionEnum,\n} from '../../../../../schemaTypes'\nimport { useMachine } from '@xstate/react'\nimport { rubricBuilderMachine } from './rubricBuilderMachine'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport { useCheckBox } from '../../../../../hooks/useCheckBox'\n\nexport type RubricBuilderProps = {}\n\nexport const BUILD_RUBRIC_ENTRY_MUTATION = gql`\n  mutation buildRubricEntry($input: BuildRubricEntryInput!) {\n    buildRubricEntry(input: $input) {\n      rubricEntry {\n        entry\n        score\n        rubricSection\n        rubricWritingLevels\n      }\n    }\n  }\n`\n\nexport const RubricBuilder: FC<RubricBuilderProps> = () => {\n  const [state, event] = useMachine(rubricBuilderMachine)\n  const [writingLevels, handleChange, resetList] = useCheckBox([])\n\n  useEffect(() => {\n    event({\n      type: 'SET_WRITING_LEVELS',\n      payload: writingLevels as WritingLevelEnum[],\n    })\n  }, [event, writingLevels])\n\n  const { rubricSectionEnum, writingLevelEnum } = useEnumContextProvider()\n\n  const [buildRubricEntry] = useMutation<\n    buildRubricEntry,\n    buildRubricEntryVariables\n  >(BUILD_RUBRIC_ENTRY_MUTATION, {\n    variables: {\n      input: {\n        entry: state.context.entry,\n        rubricWritingLevels: state.context.writingLevels,\n        rubricSection: state.context.section,\n        score: state.context.score,\n        howToImprove: state.context.howToImprove,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findRubricEntries'],\n  })\n  return (\n    <form onSubmit={(e: any) => e.preventDefault()}>\n      <div>Rubric Builder</div>\n      <div>Rubric Section: </div>\n      <div>\n        <select\n          onChange={(e: any) => {\n            if (e.target.value !== 'none') {\n              event({ type: 'SET_SECTION', payload: e.target.value })\n            }\n          }}\n        >\n          <option value={'none'}>Pick a Section</option>\n          {rubricSectionEnum.map((section: RubricSectionEnum) => (\n            <option key={section} value={section}>\n              {section}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>Rubric Writing Level</div>\n      {writingLevelEnum.map((level: WritingLevelEnum) => (\n        <div key={level}>\n          <span>\n            <input\n              type=\"checkbox\"\n              checked={writingLevels.includes(level)}\n              value={level}\n              onChange={handleChange}\n            />\n          </span>{' '}\n          <span>{level}</span>\n        </div>\n      ))}\n      <div>Entry</div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          event({ type: 'SET_ENTRY', payload: e.target.value })\n        }\n      />\n      <div>Score</div>\n      <span>\n        <button\n          onClick={() => {\n            if (state.context.score > 0) {\n              event({ type: 'SET_SCORE', payload: state.context.score - 1 })\n            }\n          }}\n        >\n          &lt;\n        </button>{' '}\n      </span>\n      <span>{state.context.score}</span>{' '}\n      <button\n        onClick={() => {\n          if (state.context.score < 5) {\n            event({ type: 'SET_SCORE', payload: state.context.score + 1 })\n          }\n        }}\n      >\n        &gt;\n      </button>\n      <div>How to Improve</div>\n      <input\n        type=\"text\"\n        onChange={(e: any) =>\n          event({ type: 'SET_HOW_TO_IMPROVE', payload: e.target.value })\n        }\n      />\n      <div>\n        <div>Entry</div>\n        <div>{state.context.entry}</div>\n        <div>Score</div>\n        <div>{state.context.score}</div>\n        <div>Section</div>\n        <div>{state.context.section}</div>\n        <div>Writing Levels</div>\n        {state.context.writingLevels.map((level) => (\n          <div key={level}>{level}</div>\n        ))}\n        <button\n          type=\"reset\"\n          onClick={(e: any) => {\n            buildRubricEntry()\n            event({ type: 'RESET' })\n            resetList()\n          }}\n        >\n          Add Entry\n        </button>\n      </div>\n    </form>\n  )\n}\n","import React, { FC } from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\n\nexport type EditEntryProps = {}\n\nexport const EditEntry: FC<EditEntryProps> = () => {\n  const [state, event] = useRubricEditorContextProvider()\n  return (\n    <>\n      <div>Entry: </div>\n      <div>\n        <input\n          value={state.context.editableRubricEntry.entry}\n          onChange={(e: any) =>\n            event({\n              type: 'SET_EDITABLE_ENTRY',\n              payload: {\n                ...state.context.editableRubricEntry,\n                entry: e.target.value,\n              },\n            })\n          }\n        />\n      </div>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\n\nexport type EditScoreProps = {}\n\nexport const EditScore: FC<EditScoreProps> = () => {\n  const [state, event] = useRubricEditorContextProvider()\n  const { score } = state.context.editableRubricEntry\n\n  return (\n    <>\n      <div>Score</div>\n      <span>\n        <button\n          onClick={() => {\n            if (state.context.editableRubricEntry.score > 0) {\n              event({\n                type: 'SET_EDITABLE_ENTRY',\n                payload: {\n                  ...state.context.editableRubricEntry,\n                  score: score - 1,\n                },\n              })\n            }\n          }}\n        >\n          &lt;\n        </button>{' '}\n      </span>\n      <span>{state.context.editableRubricEntry.score}</span>{' '}\n      <button\n        onClick={() => {\n          if (state.context.editableRubricEntry.score < 5) {\n            event({\n              type: 'SET_EDITABLE_ENTRY',\n              payload: {\n                ...state.context.editableRubricEntry,\n                score: score + 1,\n              },\n            })\n          }\n        }}\n      >\n        &gt;\n      </button>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { RubricSectionEnum } from '../../../../../../schemaTypes'\n\nexport type EditSectionProps = {}\n\nexport const EditSection: FC<EditSectionProps> = () => {\n  const [state, event] = useRubricEditorContextProvider()\n  const { rubricSectionEnum } = useEnumContextProvider()\n  return (\n    <>\n      <div>Rubric Section</div>\n      <select\n        value={state.context.editableRubricEntry.rubricSection}\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            event({\n              type: 'SET_EDITABLE_ENTRY',\n              payload: {\n                ...state.context.editableRubricEntry,\n                rubricSection: e.target.value,\n              },\n            })\n          }\n        }}\n      >\n        <option key={'none'}>Pick a Section</option>\n        {rubricSectionEnum.map((section: RubricSectionEnum) => (\n          <option key={section} value={section}>\n            {section}\n          </option>\n        ))}\n      </select>\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\nimport { useCheckBox } from '../../../../../../hooks/useCheckBox'\nimport { WritingLevelEnum } from '../../../../../../schemaTypes'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\n\nexport type EditWritingLevelProps = {}\n\nexport const EditWritingLevel: FC<EditWritingLevelProps> = () => {\n  const [state, event] = useRubricEditorContextProvider()\n\n  const [writingLevelList, handleCheckbox] = useCheckBox(\n    state.context.editableRubricEntry.rubricWritingLevels,\n  )\n\n  const { writingLevelEnum } = useEnumContextProvider()\n\n  useEffect(() => {\n    event({\n      type: 'SET_EDITABLE_ENTRY',\n      payload: {\n        ...state.context.editableRubricEntry,\n        rubricWritingLevels: writingLevelList as WritingLevelEnum[],\n      },\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [writingLevelList])\n  // console.log(state.context.editableRubricEntry.rubricWritingLevels)\n  return (\n    <>\n      <div>Writing Levels</div>\n      {writingLevelEnum.map((level: WritingLevelEnum) => (\n        <div key={level}>\n          <input\n            type=\"checkbox\"\n            value={level}\n            checked={writingLevelList.includes(level)}\n            onChange={handleCheckbox}\n          />\n          <div>{level}</div>\n        </div>\n      ))}\n    </>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removeRubricEntry,\n  removeRubricEntryVariables,\n} from '../../../../../../schemaTypes'\n\nexport type DeleteEntryProps = {\n  setIsToggled: Dispatch<SetStateAction<boolean>>\n}\n\nexport const REMOVE_RUBRIC_ENTRY_MUTATION = gql`\n  mutation removeRubricEntry($input: RemoveRubricEntryInput!) {\n    removeRubricEntry(input: $input) {\n      removed\n    }\n  }\n`\n\nexport const DeleteEntry: FC<DeleteEntryProps> = ({ setIsToggled }) => {\n  const [state, event] = useRubricEditorContextProvider()\n  const [removeRubricEntry] = useMutation<\n    removeRubricEntry,\n    removeRubricEntryVariables\n  >(REMOVE_RUBRIC_ENTRY_MUTATION, {\n    variables: {\n      input: { rubricEntryId: state.context.selectedRubricEntry._id! },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findRubricEntries'],\n  })\n  return (\n    <>\n      <button onClick={() => setIsToggled(false)}>Don't Delete</button>\n      <button\n        onClick={() => {\n          removeRubricEntry()\n          event({ type: 'PREVIOUS' })\n        }}\n      >\n        Delete\n      </button>\n    </>\n  )\n}\n","import React from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\n\nexport type EditHowToImproveProps = {}\n\nexport const EditHowToImprove = ({}: EditHowToImproveProps) => {\n  const [state, event] = useRubricEditorContextProvider()\n  return (\n    <>\n      <div>How To Improve</div>\n      <textarea\n        style={{ width: '25%', color: 'var(--blue)' }}\n        value={state.context.editableRubricEntry.howToImprove!}\n        onChange={(e: any) => {\n          event({\n            type: 'SET_EDITABLE_ENTRY',\n            payload: {\n              ...state.context.editableRubricEntry,\n              howToImprove: e.target.value,\n            },\n          })\n        }}\n      />\n    </>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\nimport { useRubricEditorContextProvider } from '../RubricEditorContext'\nimport { gql, useMutation } from '@apollo/client'\nimport { EditEntry } from './EditEntry'\nimport { EditScore } from './EditScore'\nimport { EditSection } from './EditSection'\nimport { EditWritingLevel } from './EditWritingLevel'\nimport {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateRubricEntry,\n  updateRubricEntryVariables,\n} from '../../../../../../schemaTypes'\nimport { Modal } from '../../../../../../animations'\nimport { DeleteEntry } from '../delete/DeleteEntry'\nimport { EditHowToImprove } from './EditHowToImprove'\n\nexport type RubricEditorDisplayProps = {\n  deleteEntry: boolean\n  setDeleteEntry: Dispatch<SetStateAction<boolean>>\n}\n\nexport const UPDATE_RUBRIC_ENTRY_MUTATION = gql`\n  mutation updateRubricEntry($input: UpdateRubricEntryInput!) {\n    updateRubricEntry(input: $input) {\n      rubricEntry {\n        _id\n        entry\n        score\n        rubricSection\n        rubricWritingLevels\n      }\n    }\n  }\n`\n\nexport const RubricEditorDisplay: FC<RubricEditorDisplayProps> = ({\n  deleteEntry,\n  setDeleteEntry,\n}) => {\n  const [state, event] = useRubricEditorContextProvider()\n\n  const [updateRubricEntry] = useMutation<\n    updateRubricEntry,\n    updateRubricEntryVariables\n  >(UPDATE_RUBRIC_ENTRY_MUTATION, {\n    variables: {\n      input: {\n        rubricEntryId: state.context.editableRubricEntry.rubricEntryId!,\n        entry: state.context.editableRubricEntry.entry,\n        rubricSection: state.context.editableRubricEntry.rubricSection,\n        rubricWritingLevels:\n          state.context.editableRubricEntry.rubricWritingLevels,\n        score: state.context.editableRubricEntry.score,\n        howToImprove: state.context.editableRubricEntry.howToImprove!,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findRubricEntries'],\n  })\n  return (\n    <>\n      <button onClick={() => event({ type: 'PREVIOUS' })}>Back</button>\n      <div>{state.context.selectedRubricEntry.entry}</div>\n      <EditEntry />\n      <EditScore />\n      <EditSection />\n      <EditWritingLevel />\n      <EditHowToImprove />\n      <button\n        onClick={() => {\n          updateRubricEntry()\n          event({ type: 'PREVIOUS' })\n        }}\n      >\n        Edit\n      </button>\n      <button\n        onClick={() => {\n          setDeleteEntry(true)\n        }}\n      >\n        Delete\n      </button>\n\n      <Modal isToggled={deleteEntry} setIsToggled={setDeleteEntry}>\n        <DeleteEntry setIsToggled={setDeleteEntry} />\n      </Modal>\n    </>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { SelectEntry } from './select-entry/SelectEntry'\nimport { useRubricEditorContextProvider } from './RubricEditorContext'\nimport { RubricEditorDisplay } from './edit/RubricEditorDisplay'\n\nexport type RubricEditorProps = {}\n\nexport const RubricEditor: FC<RubricEditorProps> = () => {\n  const [state] = useRubricEditorContextProvider()\n  const [deleteEntry, setDeleteEntry] = useState(false)\n\n  return (\n    <>\n      <div>Edit Rubric Entry</div>\n\n      {state.matches('selectEntry') && <SelectEntry />}\n      {state.matches('edit') && (\n        <RubricEditorDisplay\n          deleteEntry={deleteEntry}\n          setDeleteEntry={setDeleteEntry}\n        />\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { Routes, Route, useLocation } from 'react-router'\nimport { useNavSync } from '../../../../hooks/useNavSync'\nimport { RubricBuilder } from './rubric-builder/RubricBuilder'\nimport { RubricEditor } from './rubric-editor/RubricEditor'\nimport { RubricEditorContextProvider } from './rubric-editor/RubricEditorContext'\n\nexport type RubricsDashboardProps = {}\n\nexport const RubricsDashboard: FC<RubricsDashboardProps> = () => {\n  const location = useLocation()\n  useNavSync(location, 'RUBRICS')\n  return (\n    <Routes>\n      <Route\n        path=\"build\"\n        element={\n          <>\n            <RubricBuilder />\n          </>\n        }\n      />\n      <Route\n        path=\"edit\"\n        element={\n          <RubricEditorContextProvider>\n            <RubricEditor />\n          </RubricEditorContextProvider>\n        }\n      />\n    </Routes>\n  )\n}\n","import styled from 'styled-components'\nimport { media } from '../../../../home/media'\n\nexport type TeachersAideContainerProps = {\n  width: number\n}\n\nexport const TeachersAidContainer = styled.div<TeachersAideContainerProps>`\n  display: grid;\n  border-top: 3px solid var(--white);\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  grid-template-areas:\n    'SeatingChart SeatingChart SeatingChart StudentInfo '\n    'SeatingChart SeatingChart SeatingChart StudentInfo '\n    'SeatingChart SeatingChart SeatingChart StudentInfo '\n    'CommandPanel CommandPanel CommandPanel StudentInfo ';\n  /* height: ${({ width }) => (width === 1024 ? '88vh' : '95vh')}; */\n  height: 95vh;\n`\n","import styled from 'styled-components'\nimport { DynamicLessonButtonProps } from '../class-control-panel/DynamicLesson/DynamicLessonManager'\n\nexport const ClassControlPanelContainer = styled.div`\n  grid-area: CommandPanel;\n  background-color: var(--blue);\n  color: var(--white);\n  border-top: 3px solid var(--white);\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n`\n\nexport const CenterPanelDisplay = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 7fr;\n`\n\nexport const PeriodSelectDisplay = styled.div`\n  font-size: 1.5rem;\n  text-shadow: 2px 2px 2px black;\n  display: grid;\n  justify-items: center;\n  grid-template-columns: repeat(3, 1fr);\n`\nexport const PeriodDisplay = styled.div`\n  cursor: default;\n`\n\nexport const PeriodSelectDisplayContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: 1fr;\n`\n\nexport const CourseSelectButton = styled.button`\n  width: 90%;\n  height: 40%;\n  font-size: 1.5vw;\n  background-color: var(--white);\n  color: var(--blue);\n`\n\n// export const CenterControlPanelDisplay = styled.div`\n//   display: grid;\n//   justify-items: center;\n//   align-items: center;\n// `\n\nexport const RandomStudentGeneratorContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  /* border-right: 1px solid var(--white); */\n`\nexport const RandomStudentGeneratorButton = styled.button`\n  color: var(--blue);\n  background-color: var(--white);\n  font-size: 1.5vw;\n  text-shadow: 3px 3px 3px var(--grey);\n  height: 80%;\n  width: 80%;\n`\n\n// export const ProtocolManagerContainer = styled.div`\n//   display: grid;\n//   justify-items: center;\n//   align-items: center;\n// `\nexport const ProtocolManagerContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(8, 1fr);\n`\nexport const ProtocolHeaderContainer = styled.div`\n  grid-row: 1/3;\n  grid-column: 4/-4;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const ProtocolHeader = styled.div`\n  font-size: 1.4rem;\n`\n\nexport const ProtocolSelectorBackContainer = styled.div`\n  grid-row: 3/-3;\n  grid-column: 1/3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const ProtocolSelectorBack = styled.div`\n  font-size: 1.4rem;\n`\n\nexport const ProtocolSelectorTaskContainer = styled.div`\n  grid-row: 3/-3;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  overflow: scroll;\n  height: 10vh;\n`\nexport const ProtocolSelectorTask = styled.div`\n  font-size: 2vh;\n`\nexport const ProtocolSelectorNoProtocolsDisplay = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3vh;\n`\n\nexport const ProtocolSelectorNextContainer = styled.div`\n  grid-row: 3/-3;\n  grid-column: -1/-3;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const ProtocolSelectorNext = styled.div`\n  font-size: 1.4rem;\n`\n\nexport const ProtocolSelectorContainer = styled.div`\n  grid-row: -3/-1;\n  grid-column: 4/-4;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\nexport const ProtocolSelectorButton = styled.button`\n  font-size: 1.4rem;\n  color: var(--blue);\n  background-color: var(--white);\n  border-radius: 5px;\n`\nexport const ProtocolInfoContainer = styled.div`\n  grid-row: 2/-3;\n  grid-column: 3/-3;\n  display: grid;\n  justify-items: left;\n  align-items: center;\n`\nexport const ProtocolInfo = styled.div`\n  font-size: 1rem;\n`\nexport const ProtocolControllerContainer = styled.div`\n  grid-row: -3/-1;\n  grid-column: 3/-3;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-items: center;\n  align-items: center;\n`\n\nexport const ProtocolControllerButton = styled.button`\n  font-size: 1rem;\n  color: var(--blue);\n  background-color: var(--white);\n  border-radius: 5px;\n  width: 90%;\n`\n\nexport const DynamicLessonContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: 1fr 1fr 3fr 1fr;\n  /* justify-items: center;\n  align-items: center; */\n`\n\nexport const DynamicLessonOnOffContainer = styled.div`\n  grid-column: 1/-1;\n  grid-row: 3/4;\n  justify-self: center;\n  align-self: center;\n`\nexport const MainScreenManagerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-auto-rows: 1fr;\n  justify-items: center;\n  align-items: center;\n`\nexport const MainScreenControlButton = styled.button`\n  font-size: 1.4rem;\n  color: var(--blue);\n  background-color: var(--white);\n  border-radius: 5px;\n  height: 40%;\n  width: 90%;\n`\n\nexport const DynamicLessonHeader = styled.div`\n  grid-column: 1 / -1;\n  font-size: 1.4vh;\n  align-self: center;\n  justify-self: center;\n`\nexport const CenteredDiv = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`\n\nexport const DynamicLessonButtonContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  background-color: inherit;\n`\n\nexport const DynamicLessonButton = styled.button<DynamicLessonButtonProps>`\n  color: var(--blue);\n  height: 40%;\n  width: 70%;\n  font-size: 1.5vh;\n  border-radius: 5px;\n  background-color: ${({ currentLessonSetting }) =>\n    currentLessonSetting ? 'var(--red)' : 'var(--white)'};\n  color: ${({ currentLessonSetting }) =>\n    currentLessonSetting ? 'var(--white)' : 'var(--blue)'};\n  align-self: center;\n  justify-self: center;\n`\nexport const DynamicLessonOnButton = styled(DynamicLessonButton)`\n  grid-row: 3/4;\n  grid-column: 1/-1;\n`\n\nexport const DynamicLessonOffButtonContainer = styled.div`\n  grid-row: 4/-1;\n  grid-column: 1/-1;\n  display: grid;\n  justify-items: center;\n  align-items: start;\n  /* height: 50%; */\n`\nexport const DynamicLessonOffButton = styled.button`\n  color: var(--white);\n  background-color: var(--red);\n  height: 80%;\n  width: 70%;\n  border-radius: 5px;\n`\nexport const StudentInfoSelectorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  width: 80%;\n  grid-column-gap: 5%;\n`\nexport const StudentInfoSelectorButton = styled.button`\n  background-color: var(--white);\n  color: var(--blue);\n  font-size: 2vh;\n`\n","import { Machine, assign } from 'xstate'\nimport {\n  findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo,\n  SchoolDayType,\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities,\n  AcademicOutcomeTypes,\n  ProtocolActivityTypes,\n  CreateProtocolInput,\n  MarkingPeriodEnum,\n  AssessStudentProtocolInput,\n  ProtocolAssessmentEnum,\n  DiscussionTypesEnum,\n  ActivityTimeEnum,\n} from '../../../../../schemaTypes'\nimport { StudentInfoSelectorTypes } from '../class-control-panel/center-console/StudentInfoSelector'\n\nexport type teachersAidMachineSchema = {\n  states: {\n    teachersAid: {}\n    controlPanelActions: {\n      states: {\n        mainScreenManager: {}\n        dynamicLesson: {}\n        protocolManager: {}\n      }\n    }\n    studentControlPanel: {\n      states: {\n        studentBehavior: {}\n        studentAttendance: {}\n        studentProtocol: {}\n      }\n    }\n  }\n}\nexport type teachersAidMachineEvent =\n  | { type: 'SEATING_CHART' }\n  | {\n      type: 'SET_COURSE'\n      payload: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo\n    }\n  | { type: 'SET_LESSON_ID'; payload: string }\n  | { type: 'SET_STUDENT_ID'; payload: string }\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'COURSE_SELECT' }\n  | { type: 'START_LIVE_PERIOD' }\n  | {\n      type: 'LOAD_PROTOCOLS'\n      payload: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities[]\n    }\n  | { type: 'SELECT_PROTOCOL'; payload: number }\n  | { type: 'SET_PRESENT_STUDENTS'; payload: string[] }\n  | {\n      type: 'UPDATE_LESSON_PROTOCOL'\n      payload: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities\n    }\n  | { type: 'ASSESS_PROTOCOL_DISPLAY' }\n  | { type: 'UPDATE_STUDENT_PROTOCOL'; payload: AssessStudentProtocolInput }\n  | { type: 'ADD_PARTNERS'; payload: string }\n  | { type: 'REMOVE_PARTNERS'; payload: number }\n  | { type: 'DISCUSSION_ASSESSMENT'; payload: DiscussionTypesEnum }\n  | { type: 'PROTOCOL_ASSESSMENT'; payload: ProtocolAssessmentEnum }\n  | { type: 'CHANGE_MAIN_SCREEN_SEATING_CHART' }\n  | { type: 'CHANGE_MAIN_SCREEN_STUDENT_STATUS' }\n  | { type: 'CHANGE_MAIN_SCREEN_VIRTUAL_PROTOCOL_RESPONSES' }\n  | { type: 'CHANGE_MAIN_SCREEN_WARMUP_EXIT_TICKET_VIEWER' }\n  | { type: 'CHANGE_MAIN_SCREEN_HOMEWORK_ASSIGNER' }\n  | {\n      type: 'UPDATE_COURSE_INFO'\n      payload: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo\n    }\n  | { type: 'SET_ATTENDANCE_TOGGLE' }\n  | {\n      type: 'SET_STUDENT_INFO_SELECTOR'\n      payload: StudentInfoSelectorTypes\n    }\n  | { type: 'SET_CURRENT_READING_GUIDE_INDEX'; payload: number }\n\nexport type teachersAidMachineContext = {\n  // courseSelectCurrentId: string\n  courseInfo: findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo | null\n  associatedLessonId: string\n  studentId: string\n  courseSelectVisible: boolean\n  protocols: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities[]\n  protocolSelect: number\n  selectedProtocol: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities\n  protocolToCreate: CreateProtocolInput\n  presentStudentsIds: string[]\n  activeProtocol: boolean\n  studentProtocolAssessment: AssessStudentProtocolInput\n  mainScreenSeatingChart: boolean\n  mainScreenStudentStatus: boolean\n  mainScreenVirtualProtocolResponses: boolean\n  mainScreenWarmUpExitTicketViewer: boolean\n  mainScreenHomeworkAssigner: boolean\n  currentMainScreenView:\n    | 'SEATING_CHART'\n    | 'WARMUP_EXIT_TICKET_RESPONSES'\n    | 'PROTOCOL_RESPONSES'\n    | 'STUDENT_STATUS'\n    | 'HOMEWORK'\n  attendanceToggle: boolean\n  studentInfoSelector: StudentInfoSelectorTypes\n  currentReadingGuideIndex: number\n}\n\nexport const teachersAidMachine = Machine<\n  teachersAidMachineContext,\n  teachersAidMachineSchema,\n  teachersAidMachineEvent\n>({\n  id: 'teachersAid',\n  initial: 'teachersAid',\n  type: 'parallel',\n  context: {\n    // courseSelectCurrentId: '',\n    attendanceToggle: true,\n    studentInfoSelector: 'ATTENDANCE',\n    courseSelectVisible: true,\n    associatedLessonId: '',\n    courseInfo: {\n      __typename: 'CourseInfo',\n      _id: '',\n      assignedSeats: [],\n      cohortBasedSeating: false,\n      endsAt: '',\n      course: {\n        __typename: 'Course',\n        _id: '',\n        name: '',\n        hasStudents: [],\n      },\n      schoolDayType: SchoolDayType.A,\n      startsAt: '',\n    },\n    activeProtocol: false,\n    presentStudentsIds: [],\n    studentId: '',\n    protocols: [],\n    protocolSelect: 0,\n    selectedProtocol: {\n      __typename: 'TextSectionProtocols',\n      academicOutcomeTypes: AcademicOutcomeTypes.LOGIC_BUILDING,\n      activityType: ProtocolActivityTypes.INDIVIDUAL,\n      task: '',\n      directions: '',\n      isActive: false,\n      completed: false,\n    },\n    protocolToCreate: {\n      academicOutcomeType: AcademicOutcomeTypes.LOGIC_BUILDING,\n      markingPeriod: MarkingPeriodEnum.FIRST,\n      protocolActivityType: ProtocolActivityTypes.INDIVIDUAL,\n      studentIds: [],\n      task: '',\n      lessonId: '',\n      activityTime: ActivityTimeEnum.DURING,\n    },\n    studentProtocolAssessment: {\n      studentId: '',\n      assessment: ProtocolAssessmentEnum.REFUSED_TO_WORK,\n      task: '',\n      assignedDate: '',\n      discussionLevel: DiscussionTypesEnum.NOT_REQUIRED,\n      partnerIds: null,\n      protocolActivityType: ProtocolActivityTypes.INDIVIDUAL,\n      markingPeriod: MarkingPeriodEnum.FIRST,\n      responsibilityPoints: 2,\n    },\n    mainScreenSeatingChart: true,\n    mainScreenStudentStatus: false,\n    mainScreenVirtualProtocolResponses: false,\n    mainScreenWarmUpExitTicketViewer: false,\n    mainScreenHomeworkAssigner: false,\n    currentMainScreenView: 'SEATING_CHART',\n    currentReadingGuideIndex: 0,\n  },\n  states: {\n    teachersAid: {\n      on: {\n        SET_COURSE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseInfo: evt.payload,\n              courseSelectVisible: false,\n            }\n          }),\n        },\n        SET_STUDENT_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentId: evt.payload,\n            }\n          }),\n        },\n        SET_LESSON_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              associatedLessonId: evt.payload,\n            }\n          }),\n        },\n        SET_CURRENT_READING_GUIDE_INDEX: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              currentReadingGuideIndex: evt.payload,\n            }\n          }),\n        },\n        COURSE_SELECT: {\n          actions: assign((ctx) => {\n            return {\n              ...ctx,\n              courseSelectVisible: !ctx.courseSelectVisible,\n            }\n          }),\n        },\n        LOAD_PROTOCOLS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              protocols: evt.payload,\n            }\n          }),\n        },\n        SET_PRESENT_STUDENTS: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              presentStudentsIds: evt.payload,\n            }\n          }),\n        },\n      },\n    },\n    controlPanelActions: {\n      initial: 'dynamicLesson',\n      states: {\n        mainScreenManager: {\n          on: {\n            PREVIOUS: 'protocolManager',\n            NEXT: 'dynamicLesson',\n            SET_LESSON_ID: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  associatedLessonId: evt.payload,\n                }\n              }),\n            },\n            CHANGE_MAIN_SCREEN_SEATING_CHART: {\n              actions: assign((ctx) => {\n                console.log('activated')\n                return {\n                  ...ctx,\n                  mainScreenSeatingChart: true,\n                  mainScreenStudentStatus: false,\n                  mainScreenVirtualProtocolResponses: false,\n                  mainScreenWarmUpExitTicketViewer: false,\n                  mainScreenHomeworkAssigner: false,\n                  currentMainScreenView: 'SEATING_CHART',\n                }\n              }),\n            },\n            CHANGE_MAIN_SCREEN_STUDENT_STATUS: {\n              actions: assign((ctx) => {\n                return {\n                  ...ctx,\n                  mainScreenSeatingChart: false,\n                  mainScreenStudentStatus: true,\n                  mainScreenVirtualProtocolResponses: false,\n                  mainScreenWarmUpExitTicketViewer: false,\n                  mainScreenHomeworkAssigner: false,\n                  currentMainScreenView: 'STUDENT_STATUS',\n                }\n              }),\n            },\n            CHANGE_MAIN_SCREEN_VIRTUAL_PROTOCOL_RESPONSES: {\n              actions: assign((ctx) => {\n                return {\n                  ...ctx,\n                  mainScreenSeatingChart: false,\n                  mainScreenStudentStatus: false,\n                  mainScreenVirtualProtocolResponses: true,\n                  mainScreenWarmUpExitTicketViewer: false,\n                  mainScreenHomeworkAssigner: false,\n                  currentMainScreenView: 'PROTOCOL_RESPONSES',\n                }\n              }),\n            },\n            CHANGE_MAIN_SCREEN_WARMUP_EXIT_TICKET_VIEWER: {\n              actions: assign((ctx) => {\n                return {\n                  ...ctx,\n                  mainScreenSeatingChart: false,\n                  mainScreenStudentStatus: false,\n                  mainScreenVirtualProtocolResponses: false,\n                  mainScreenWarmUpExitTicketViewer: true,\n                  mainScreenHomeworkAssigner: false,\n                  currentMainScreenView: 'WARMUP_EXIT_TICKET_RESPONSES',\n                }\n              }),\n            },\n            CHANGE_MAIN_SCREEN_HOMEWORK_ASSIGNER: {\n              actions: assign((ctx) => {\n                return {\n                  ...ctx,\n                  mainScreenSeatingChart: false,\n                  mainScreenStudentStatus: false,\n                  mainScreenVirtualProtocolResponses: false,\n                  mainScreenWarmUpExitTicketViewer: false,\n                  mainScreenHomeworkAssigner: true,\n                  currentMainScreenView: 'HOMEWORK',\n                }\n              }),\n            },\n            SET_ATTENDANCE_TOGGLE: {\n              actions: assign((ctx) => {\n                return {\n                  ...ctx,\n                  attendanceToggle: !ctx.attendanceToggle,\n                }\n              }),\n            },\n            SET_STUDENT_INFO_SELECTOR: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  studentInfoSelector: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        dynamicLesson: {\n          on: {\n            PREVIOUS: 'mainScreenManager',\n            NEXT: 'protocolManager',\n            SET_STUDENT_INFO_SELECTOR: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  studentInfoSelector: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        protocolManager: {\n          on: {\n            PREVIOUS: 'dynamicLesson',\n            NEXT: 'mainScreenManager',\n            LOAD_PROTOCOLS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  protocols: evt.payload,\n                }\n              }),\n            },\n            SELECT_PROTOCOL: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  protocolSelect: evt.payload,\n                  selectedProtocol: ctx.protocols[evt.payload],\n                }\n              }),\n            },\n            CHANGE_MAIN_SCREEN_SEATING_CHART: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  mainScreenSeatingChart: true,\n                  mainScreenStudentStatus: false,\n                  mainScreenVirtualProtocolResponses: false,\n                  mainScreenWarmUpExitTicketViewer: false,\n                  currentMainScreenView: 'SEATING_CHART',\n                }\n              }),\n            },\n            CHANGE_MAIN_SCREEN_VIRTUAL_PROTOCOL_RESPONSES: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  mainScreenSeatingChart: false,\n                  mainScreenStudentStatus: false,\n                  mainScreenVirtualProtocolResponses: true,\n                  mainScreenWarmUpExitTicketViewer: false,\n                  currentMainScreenView: 'PROTOCOL_RESPONSES',\n                }\n              }),\n            },\n            UPDATE_LESSON_PROTOCOL: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  selectedProtocol: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n      },\n    },\n    studentControlPanel: {\n      initial: 'studentBehavior',\n      states: {\n        studentBehavior: {\n          on: {\n            ASSESS_PROTOCOL_DISPLAY: 'studentProtocol',\n            UPDATE_STUDENT_PROTOCOL: {\n              actions: assign((ctx, evt) => {\n                console.log(evt.payload)\n                return {\n                  ...ctx,\n                  studentProtocolAssessment: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        studentAttendance: {\n          on: {\n            ASSESS_PROTOCOL_DISPLAY: 'studentProtocol',\n            UPDATE_COURSE_INFO: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  courseInfo: evt.payload,\n                }\n              }),\n            },\n          },\n        },\n        studentProtocol: {\n          on: {\n            ASSESS_PROTOCOL_DISPLAY: 'studentProtocol',\n            UPDATE_STUDENT_PROTOCOL: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  studentProtocolAssessment: evt.payload,\n                }\n              }),\n            },\n            ADD_PARTNERS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  studentProtocolAssessment: {\n                    ...ctx.studentProtocolAssessment,\n                    partnerIds: [\n                      ...ctx.studentProtocolAssessment.partnerIds!,\n                      evt.payload,\n                    ],\n                  },\n                }\n              }),\n            },\n            REMOVE_PARTNERS: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  studentProtocolAssessment: {\n                    ...ctx.studentProtocolAssessment,\n                    partnerIds: [\n                      ...ctx.studentProtocolAssessment.partnerIds?.slice(\n                        0,\n                        evt.payload,\n                      )!,\n                      ...ctx.studentProtocolAssessment.partnerIds?.slice(\n                        evt.payload + 1,\n                      )!,\n                    ],\n                  },\n                }\n              }),\n            },\n            DISCUSSION_ASSESSMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  studentProtocolAssessment: {\n                    ...ctx.studentProtocolAssessment,\n                    discussionLevel: evt.payload,\n                  },\n                }\n              }),\n            },\n            PROTOCOL_ASSESSMENT: {\n              actions: assign((ctx, evt) => {\n                return {\n                  ...ctx,\n                  studentProtocolAssessment: {\n                    ...ctx.studentProtocolAssessment,\n                    assessment: evt.payload,\n                  },\n                }\n              }),\n            },\n          },\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  teachersAidMachine,\n  teachersAidMachineContext,\n  teachersAidMachineEvent,\n} from './teachersAidMachine'\n\nconst TeachersAidContext = createContext<any>(undefined)\n\ntype TeachersAidContextProps = {\n  children: ReactNode\n}\n\nexport const TeachersAidContextProvider = ({\n  children,\n}: TeachersAidContextProps) => {\n  const [state, event] = useMachine(teachersAidMachine)\n  return (\n    <TeachersAidContext.Provider value={[state, event]}>\n      {children}\n    </TeachersAidContext.Provider>\n  )\n}\n\nexport function useTeachersAidContextProvider() {\n  const context = useContext(TeachersAidContext)\n  if (context === undefined) {\n    throw new Error(\n      'useTeachersAidContextProvider must be used within a TeachersAidContextProvider',\n    )\n  }\n  return context as [\n    State<teachersAidMachineContext, teachersAidMachineEvent, any, any>,\n    (event: teachersAidMachineEvent) => void,\n  ]\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport {\n  assessStudentProtocol,\n  assessStudentProtocolVariables,\n  DiscussionTypesEnum,\n  ProtocolAssessmentEnum,\n  findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols,\n  findStudentByIdForTeachersAidVariables,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student,\n} from '../../../../../../schemaTypes'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { gql, useMutation, QueryLazyOptions } from '@apollo/client'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { useSchoolDayContextProvider } from '../../../../school-day/state/SchoolDayContext'\nimport {\n  DiscussionContainer,\n  GroupProtocolAssessorContainer,\n  PartnerContainer,\n  PartnerListContainer,\n  PartnerListItem,\n  PartnerRemoveContainer,\n  CenteredTitle,\n  ProtocolDisplayContainer,\n  ProtocolTitle,\n  AssessorButton,\n  AssessmentContainer,\n} from '../../styles/studentInfoStyles'\nimport {\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../../utils'\n\nexport type AssessProtocolProps = {\n  protocols: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasProtocols[]\n  loadStudentInfo: (\n    options?:\n      | QueryLazyOptions<findStudentByIdForTeachersAidVariables>\n      | undefined,\n  ) => void\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student\n  grade: number\n  toggleSwitch: () => void\n}\n\nexport const ASSESS_PROTOCOL_MUTATION = gql`\n  mutation assessStudentProtocol($input: AssessStudentProtocolInput!) {\n    assessStudentProtocol(input: $input) {\n      protocols {\n        _id\n        student {\n          _id\n        }\n        partners {\n          _id\n        }\n      }\n    }\n  }\n`\nexport const AssessProtocol = ({\n  protocols,\n  student,\n  loadStudentInfo,\n  grade,\n  toggleSwitch,\n}: AssessProtocolProps) => {\n  const [selectedStudents, setSelectedStudents] = useState<\n    findCourseInfoByCourseId_findCourseInfoByCourseId_courseInfo_assignedSeats[]\n  >([])\n  const { discussionTypesEnum, protocolAssessmentEnum } =\n    useEnumContextProvider()\n  const [state, event] = useTeachersAidContextProvider()\n  const [schoolDayInfo] = useSchoolDayContextProvider()\n\n  const [currentActiveProtocol] = protocols.filter(\n    (protocol) => protocol.isActive,\n  )\n  console.log(currentActiveProtocol)\n  const [assessStudentProtocol] = useMutation<\n    assessStudentProtocol,\n    assessStudentProtocolVariables\n  >(ASSESS_PROTOCOL_MUTATION, {\n    // variables: { input: state.context.studentProtocolAssessment },\n    onCompleted: (data) => {\n      console.log('assessed')\n    },\n    refetchQueries: ['findStudentByIdForTeachersAid'],\n  })\n\n  const partnerList: string[] = []\n\n  if (state.context.studentProtocolAssessment.partnerIds)\n    for (const _id of state.context.studentProtocolAssessment.partnerIds!) {\n      if (!state.context.courseInfo!.cohortBasedSeating) {\n        const [student] = state.context.courseInfo!.assignedSeats.filter(\n          (student) => student.student?._id === _id,\n        )\n        partnerList.push(student.student?.firstName!)\n      } else if (schoolDayInfo.context.currentSchoolDay.cohortWeek === 'RED') {\n        const [student] = state.context.courseInfo!.assignedSeats.filter(\n          (student) => student.redCohortStudent?._id === _id,\n        )\n        partnerList.push(student.redCohortStudent?.firstName!)\n      } else {\n        const [student] = state.context.courseInfo!.assignedSeats.filter(\n          (student) => student.whiteCohortStudent?._id === _id,\n        )\n        partnerList.push(student.whiteCohortStudent?.firstName!)\n      }\n    }\n\n  const partnerDiscussionTypes = discussionTypesEnum.slice(1)\n\n  const selectedStudent = state.context.courseInfo!.assignedSeats!.filter(\n    (seat) => seat.student?._id! === student._id!,\n  )[0]!\n\n  return (\n    <ProtocolDisplayContainer>\n      <div style={{ display: 'grid', gridTemplateColumns: '4fr 1fr' }}>\n        <ProtocolTitle>Protocol Grader</ProtocolTitle>\n        <div\n          onClick={() => toggleSwitch()}\n          style={{\n            display: 'grid',\n            justifySelf: 'center',\n            alignSelf: 'center',\n            fontSize: '3vh',\n          }}\n        >\n          {'<->'}\n        </div>\n      </div>\n      <GroupProtocolAssessorContainer>\n        {currentActiveProtocol.protocolActivityType !== 'INDIVIDUAL' && (\n          <PartnerContainer>\n            <CenteredTitle>Partners</CenteredTitle>\n            <select\n              style={{ color: 'var(--blue)' }}\n              onChange={(e: any) => {\n                event({ type: 'ADD_PARTNERS', payload: e.target.value })\n              }}\n            >\n              <option value=\"none\">Select Partners</option>\n              {!state.context.courseInfo!.cohortBasedSeating\n                ? state.context\n                    .courseInfo!.assignedSeats.filter(\n                      (seat) =>\n                        seat.student?._id !== student._id && seat.student,\n                    )\n                    .filter(\n                      (seat) =>\n                        !state.context.studentProtocolAssessment.partnerIds?.includes(\n                          seat.student?._id!,\n                        ),\n                    )\n                    .sort((seat, selectedStudent) => {\n                      if (seat.deskNumber > selectedStudent.deskNumber) {\n                        return seat.deskNumber\n                      }\n                      if (seat.deskNumber < selectedStudent.deskNumber) {\n                        return -1\n                      }\n                      return 0\n                    })\n                    .map((student) => {\n                      return (\n                        <option\n                          key={student.student?._id!}\n                          value={student.student?._id!}\n                        >\n                          {student.student?.firstName}\n                        </option>\n                      )\n                    })\n                : schoolDayInfo.context.currentSchoolDay.cohortWeek === 'RED'\n                  ? state.context\n                      .courseInfo!.assignedSeats.filter(\n                        (seat) =>\n                          seat.redCohortStudent?._id !== student._id &&\n                          seat.redCohortStudent,\n                      )\n                      .map((student) => (\n                        <option\n                          key={student.redCohortStudent?._id!}\n                          value={student.redCohortStudent?._id!}\n                        >\n                          {student.redCohortStudent?.firstName}\n                        </option>\n                      ))\n                  : state.context\n                      .courseInfo!.assignedSeats.filter(\n                        (seat) =>\n                          seat.whiteCohortStudent?._id !== student._id &&\n                          seat.whiteCohortStudent,\n                      )\n                      .map((student) => (\n                        <option\n                          key={student.whiteCohortStudent?._id!}\n                          value={student.whiteCohortStudent?._id!}\n                        >\n                          {student.whiteCohortStudent?.firstName}\n                        </option>\n                      ))}\n            </select>\n            <PartnerListContainer>\n              {partnerList.map((partner, i: number) => (\n                <PartnerListItem key={i}>\n                  <div>{partner}</div>\n                  <PartnerRemoveContainer\n                    onClick={() => {\n                      event({ type: 'REMOVE_PARTNERS', payload: i })\n                    }}\n                  >\n                    <div>Delete</div>\n                  </PartnerRemoveContainer>\n                </PartnerListItem>\n              ))}\n            </PartnerListContainer>\n          </PartnerContainer>\n        )}\n        {currentActiveProtocol.protocolActivityType !== 'INDIVIDUAL' && (\n          <DiscussionContainer>\n            <CenteredTitle>Discussion</CenteredTitle>\n            {partnerDiscussionTypes.map(\n              (discussionType: DiscussionTypesEnum) => {\n                const selected =\n                  state.context.studentProtocolAssessment.discussionLevel ===\n                  discussionType\n                return (\n                  <AssessorButton\n                    key={discussionType}\n                    selected={selected}\n                    value={discussionType}\n                    onClick={(e: any) => {\n                      event({\n                        type: 'DISCUSSION_ASSESSMENT',\n                        payload: e.target.value,\n                      })\n                    }}\n                  >\n                    {phraseCapitalizer(underscoreEliminator(discussionType))}\n                  </AssessorButton>\n                )\n              },\n            )}\n          </DiscussionContainer>\n        )}\n        <AssessmentContainer>\n          <CenteredTitle>Assessment</CenteredTitle>\n          {protocolAssessmentEnum.map((assessment: ProtocolAssessmentEnum) => {\n            const protocol = student.hasProtocols.find((p) => p.isActive)\n            const selected = protocol?.assessment === assessment\n\n            return (\n              <AssessorButton\n                key={assessment}\n                value={assessment}\n                selected={selected}\n                onClick={(e: any) => {\n                  assessStudentProtocol({\n                    variables: {\n                      input: {\n                        // ...state.context.studentProtocolAssessment,\n                        markingPeriod: currentActiveProtocol.markingPeriod,\n                        protocolActivityType:\n                          currentActiveProtocol.protocolActivityType,\n                        responsibilityPoints: 2,\n                        studentId: currentActiveProtocol.student._id!,\n                        task: currentActiveProtocol.task,\n                        assignedDate: currentActiveProtocol.assignedDate,\n                        partnerIds: [],\n                        assessment: e.target.value,\n                      },\n                    },\n                  })\n                }}\n              >\n                {phraseCapitalizer(underscoreEliminator(assessment))}\n              </AssessorButton>\n            )\n          })}\n        </AssessmentContainer>\n      </GroupProtocolAssessorContainer>\n    </ProtocolDisplayContainer>\n  )\n}\n","import React from 'react'\nimport { AttendanceButton } from '../../styles/studentInfoStyles'\nimport { RemoveAbsenceType } from './DailyAttendance'\n\nexport type RemoveAbsenceProps = {\n  absenceId: string\n  removeAbsence: RemoveAbsenceType\n  called: boolean\n}\n\nexport const RemoveAbsence = ({\n  absenceId,\n  removeAbsence,\n  called,\n}: RemoveAbsenceProps) => {\n  return (\n    <AttendanceButton\n      lateButton={false}\n      created={true}\n      onClick={() =>\n        removeAbsence({ variables: { input: { _id: absenceId } } })\n      }\n    >\n      {/* {called ? '...' : 'Mark Present'} */}\n      Remove Absence\n    </AttendanceButton>\n  )\n}\n","import { MutationFunctionOptions, useMutation } from '@apollo/client'\nimport React from 'react'\nimport {\n  createAbsenceVariables,\n  createAbsence,\n  MarkingPeriodEnum,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student,\n} from '../../../../../../schemaTypes'\nimport { AttendanceButton } from '../../styles/studentInfoStyles'\nimport {\n  CREATE_STUDENT_ABSENCE_MUTATION,\n  RemoveAbsenceType,\n} from './DailyAttendance'\nimport { RemoveAbsence } from './RemoveAbsence'\n\nexport type AbsenceProps = {\n  currentMarkingPeriod: MarkingPeriodEnum\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student\n  removeAbsence: RemoveAbsenceType\n  todaysAbsenceId: string\n  unexcusedLatenessId: string\n  excusedLatenessId: string\n  removeAbsenceCalled: boolean\n  absenceCheck: boolean\n}\n\nexport const Absence = ({\n  currentMarkingPeriod,\n  student,\n  removeAbsence,\n  todaysAbsenceId,\n  unexcusedLatenessId,\n  excusedLatenessId,\n  removeAbsenceCalled,\n  absenceCheck,\n}: AbsenceProps) => {\n  const [createAbsence, { data, called }] = useMutation<\n    createAbsence,\n    createAbsenceVariables\n  >(CREATE_STUDENT_ABSENCE_MUTATION, {\n    variables: {\n      input: {\n        dayAbsent: new Date().toLocaleDateString(),\n        markingPeriod: currentMarkingPeriod,\n        studentId: student._id!,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      'findStudentInfoByStudentIdForDesk',\n      'findStudentByIdForTeachersAid',\n      'findCourseByIdForTeachersAid',\n    ],\n  })\n\n  return (\n    <>\n      {!absenceCheck ? (\n        <AttendanceButton\n          lateButton={false}\n          created={false}\n          onClick={() => {\n            !unexcusedLatenessId && !excusedLatenessId && createAbsence()\n          }}\n        >\n          Create Absence\n        </AttendanceButton>\n      ) : (\n        <RemoveAbsence\n          absenceId={todaysAbsenceId}\n          removeAbsence={removeAbsence}\n          called={removeAbsenceCalled}\n        />\n      )}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React from 'react'\nimport {\n  MarkingPeriodEnum,\n  LatenessTypeEnum,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student,\n  createLateness,\n  createLatenessVariables,\n} from '../../../../../../schemaTypes'\n\nimport { AttendanceButton } from '../../styles/studentInfoStyles'\nimport {\n  RemoveAbsenceType,\n  RemoveLatenessType,\n  UpdateResponsibilityPointsType,\n} from './DailyAttendance'\n\nexport type ExcusedLatenessProps = {\n  currentMarkingPeriod: MarkingPeriodEnum\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student\n  absent: boolean\n  removeAbsence: RemoveAbsenceType\n  todaysAbsenceId: string\n  removeLateness: RemoveLatenessType\n  unexcusedLatenessId: string\n  updateResponsibilityPoints: UpdateResponsibilityPointsType\n}\n\nexport const CREATE_LATENESS_QUERY = gql`\n  mutation createLateness($input: CreateLatenessInput!) {\n    createLateness(input: $input) {\n      studentLateness {\n        _id\n      }\n    }\n  }\n`\n\nexport const ExcusedLateness = ({\n  currentMarkingPeriod,\n  student,\n  absent,\n  removeAbsence,\n  todaysAbsenceId,\n  removeLateness,\n  unexcusedLatenessId,\n  updateResponsibilityPoints,\n}: ExcusedLatenessProps) => {\n  const [createLateness] = useMutation<createLateness, createLatenessVariables>(\n    CREATE_LATENESS_QUERY,\n    {\n      variables: {\n        input: {\n          studentId: student._id!,\n          markingPeriod: currentMarkingPeriod,\n          dayLate: new Date().toLocaleDateString(),\n          latenessType: LatenessTypeEnum.EXCUSED,\n        },\n      },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findStudentByIdForTeachersAid'],\n    },\n  )\n\n  const excusedLatenessCheck = student.hasLatnesses.find(\n    (late) =>\n      late.latenessType === LatenessTypeEnum.EXCUSED &&\n      late.dayLate === new Date().toLocaleDateString(),\n  )\n\n  const todaysExcusedLateness = student.hasLatnesses.find(\n    (late) =>\n      late.latenessType === LatenessTypeEnum.EXCUSED &&\n      late.dayLate === new Date().toLocaleDateString(),\n  )!\n\n  const isUnexcused = student.hasUnExcusedLatenesses.find(\n    (late) =>\n      late.latenessType === LatenessTypeEnum.UNEXCUSED &&\n      late.dayLate === new Date().toLocaleDateString(),\n  )!\n\n  return (\n    <>\n      {!excusedLatenessCheck ? (\n        <AttendanceButton\n          lateButton={true}\n          created={excusedLatenessCheck !== undefined}\n          onClick={() => {\n            if (absent) {\n              removeAbsence({ variables: { input: { _id: todaysAbsenceId } } })\n            }\n            if (isUnexcused) {\n              removeLateness({\n                variables: { input: { _id: isUnexcused._id! } },\n              })\n            }\n            // updateResponsibilityPoints({\n            //     variables: {\n            //       input: {\n            //         studentId: student._id!,\n            //         markingPeriod: currentMarkingPeriod,\n            //         points: 10,\n            //       },\n            //     },\n            //   })\n            //   removeAbsence({\n            //     variables: { input: { _id: unexcusedLatenessId } },\n            //   })\n            // }\n            createLateness()\n          }}\n        >\n          Create Excused Lateness\n        </AttendanceButton>\n      ) : (\n        <AttendanceButton\n          lateButton={true}\n          created={excusedLatenessCheck !== undefined}\n          onClick={() =>\n            removeLateness({\n              variables: { input: { _id: todaysExcusedLateness._id! } },\n            })\n          }\n        >\n          Remove Excused Lateness\n        </AttendanceButton>\n      )}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React from 'react'\nimport {\n  MarkingPeriodEnum,\n  createLateness,\n  LatenessTypeEnum,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student,\n  createLatenessVariables,\n} from '../../../../../../schemaTypes'\nimport { AttendanceButton } from '../../styles/studentInfoStyles'\nimport {\n  RemoveAbsenceType,\n  RemoveLatenessType,\n  UpdateResponsibilityPointsType,\n} from './DailyAttendance'\nimport { CREATE_LATENESS_QUERY } from './ExcusedLateness'\n\nexport type UnexcusedLatnessProps = {\n  currentMarkingPeriod: MarkingPeriodEnum\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student\n  absent?: boolean\n  removeAbsence: RemoveAbsenceType\n  todaysAbsenceId: string\n  removeLateness: RemoveLatenessType\n  excusedLatenessId: string\n  updateResponsibilityPoints: UpdateResponsibilityPointsType\n}\n\nexport const CREATE_UNEXCUSED_LATENESS_QUERY = gql`\n  mutation createUnexcusedLateness($input: CreateUnexcusedLatenessInput!) {\n    createUnexcusedLateness(input: $input) {\n      unexcusedLateness {\n        _id\n      }\n    }\n  }\n`\n\nexport const UnexcusedLatness = ({\n  currentMarkingPeriod,\n  student,\n  absent,\n  removeAbsence,\n  removeLateness,\n  todaysAbsenceId,\n  excusedLatenessId,\n  updateResponsibilityPoints,\n}: UnexcusedLatnessProps) => {\n  const [createLateness] = useMutation<createLateness, createLatenessVariables>(\n    CREATE_LATENESS_QUERY,\n    {\n      variables: {\n        input: {\n          studentId: student._id!,\n          markingPeriod: currentMarkingPeriod,\n          dayLate: new Date().toLocaleDateString(),\n          latenessType: LatenessTypeEnum.UNEXCUSED,\n        },\n      },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findStudentByIdForTeachersAid'],\n    },\n  )\n  const unexcusedLatenessCheck = student.hasLatnesses.find(\n    (late) =>\n      late.latenessType === LatenessTypeEnum.UNEXCUSED &&\n      late.dayLate === new Date().toLocaleDateString(),\n  )\n\n  const isExcused = student.hasLatnesses.find(\n    (late) =>\n      late.latenessType === LatenessTypeEnum.EXCUSED &&\n      late.dayLate === new Date().toLocaleDateString(),\n  )!\n  const handleLatnessClick = () => {\n    if (absent) {\n      removeAbsence({ variables: { input: { _id: todaysAbsenceId } } })\n    }\n    if (isExcused) {\n      removeLateness({\n        variables: { input: { _id: isExcused._id! } },\n      })\n    }\n    createLateness()\n  }\n  return (\n    <>\n      {!unexcusedLatenessCheck ? (\n        <AttendanceButton\n          lateButton={true}\n          created={unexcusedLatenessCheck !== undefined}\n          onClick={\n            () => handleLatnessClick()\n            // updateResponsibilityPoints({\n            //   variables: {\n            //     input: {\n            //       studentId: student._id!,\n            //       markingPeriod: currentMarkingPeriod,\n            //       points: -10,\n            //     },\n            //   },\n            // })\n          }\n        >\n          Create Unexcused Lateness\n        </AttendanceButton>\n      ) : (\n        <AttendanceButton\n          lateButton={true}\n          created={unexcusedLatenessCheck !== undefined}\n          onClick={() => {\n            removeLateness({\n              variables: { input: { _id: unexcusedLatenessCheck._id! } },\n            })\n          }}\n        >\n          Remove Unexecused Lateness\n        </AttendanceButton>\n      )}\n    </>\n  )\n}\n","import { gql, MutationFunctionOptions, useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport {\n  removeAbsence,\n  removeAbsenceVariables,\n  removeLateness,\n  removeLatenessVariables,\n  updateResponsibilityPointsVariables,\n  updateResponsibilityPoints,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student,\n} from '../../../../../../schemaTypes'\nimport { todaysLocaleDate } from '../../../../../../utils'\nimport { AttendanceContainer } from '../../styles/studentInfoStyles'\nimport { Absence } from './Absence'\nimport { ExcusedLateness } from './ExcusedLateness'\nimport { UnexcusedLatness } from './UnexcusedLatness'\n\nexport type DailyAttendanceProps = {\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student\n  absenceCheck: boolean\n}\nexport const CREATE_STUDENT_ABSENCE_MUTATION = gql`\n  mutation createAbsence($input: CreateAbsenceInput!) {\n    createAbsence(input: $input) {\n      studentAbsence {\n        _id\n      }\n    }\n  }\n`\n\nexport const REMOVE_ABSENCE_MUTATION = gql`\n  mutation removeAbsence($input: RemoveAbsenceInput!) {\n    removeAbsence(input: $input) {\n      removed\n    }\n  }\n`\nexport const REMOVE_LATENESS_MUTATION = gql`\n  mutation removeLateness($input: RemoveLatenessInput!) {\n    removeLateness(input: $input) {\n      removed\n    }\n  }\n`\n\nexport const UPDATE_RESPONSIBILITY_POINTS_MUTATION = gql`\n  mutation updateResponsibilityPoints(\n    $input: UpdateResponsibilityPointsInput!\n  ) {\n    updateResponsibilityPoints(input: $input) {\n      responsibilityPoints {\n        _id\n        responsibilityPoints\n      }\n    }\n  }\n`\n\nexport type RemoveAbsenceType = (\n  options?:\n    | MutationFunctionOptions<removeAbsence, removeAbsenceVariables>\n    | undefined,\n) => void\n\nexport type RemoveLatenessType = (\n  options?:\n    | MutationFunctionOptions<removeLateness, removeLatenessVariables>\n    | undefined,\n) => void\n\nexport type UpdateResponsibilityPointsType = (\n  options?:\n    | MutationFunctionOptions<\n        updateResponsibilityPoints,\n        updateResponsibilityPointsVariables\n      >\n    | undefined,\n) => void\n\nexport const DailyAttendance = ({\n  student,\n  absenceCheck,\n}: DailyAttendanceProps) => {\n  // const [absenceId, setAbsenceId] = useState<string | null>(null)\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = markingPeriodState.context\n\n  const [removeAbsence, { called, data }] = useMutation<\n    removeAbsence,\n    removeAbsenceVariables\n  >(REMOVE_ABSENCE_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      'findStudentInfoByStudentIdForDesk',\n      'findStudentByIdForTeachersAid',\n      'findCourseByIdForTeachersAid',\n    ],\n  })\n\n  const [removeLateness] = useMutation<removeLateness, removeLatenessVariables>(\n    REMOVE_LATENESS_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: ['findStudentByIdForTeachersAid'],\n    },\n  )\n  const [updateResponsibilityPoints] = useMutation<\n    updateResponsibilityPoints,\n    updateResponsibilityPointsVariables\n  >(UPDATE_RESPONSIBILITY_POINTS_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findStudentByIdForTeachersAid'],\n  })\n\n  const todaysAbsence = student.hasAbsences.filter(\n    (a) => a.dayAbsent === new Date().toLocaleDateString(),\n  )\n\n  const absenceId = todaysAbsence.length !== 0 ? todaysAbsence[0]._id! : ''\n\n  const todaysExcusedLateness = student.hasExcusedLatenesses.filter(\n    (l) => l.dayLate === new Date().toLocaleDateString(),\n  )\n  const excusedLatenessId =\n    todaysExcusedLateness.length !== 0 ? todaysExcusedLateness[0]._id! : ''\n\n  const todaysUnexcusedLateness = student.hasUnExcusedLatenesses.filter(\n    (l) => l.dayLate === new Date().toLocaleDateString(),\n  )\n  const unexcusedLatenessId =\n    todaysUnexcusedLateness.length !== 0 ? todaysUnexcusedLateness[0]._id! : ''\n\n  return (\n    <AttendanceContainer>\n      <Absence\n        currentMarkingPeriod={currentMarkingPeriod}\n        student={student}\n        removeAbsence={removeAbsence}\n        todaysAbsenceId={absenceId}\n        unexcusedLatenessId={unexcusedLatenessId}\n        excusedLatenessId={excusedLatenessId}\n        removeAbsenceCalled={called}\n        absenceCheck={absenceCheck}\n      />\n      <ExcusedLateness\n        currentMarkingPeriod={currentMarkingPeriod}\n        student={student}\n        absent={absenceCheck}\n        removeAbsence={removeAbsence}\n        todaysAbsenceId={absenceId}\n        removeLateness={removeLateness}\n        unexcusedLatenessId={unexcusedLatenessId}\n        updateResponsibilityPoints={updateResponsibilityPoints}\n      />\n      <UnexcusedLatness\n        currentMarkingPeriod={currentMarkingPeriod}\n        student={student}\n        absent={absenceCheck}\n        removeAbsence={removeAbsence}\n        todaysAbsenceId={absenceId}\n        removeLateness={removeLateness}\n        excusedLatenessId={excusedLatenessId}\n        updateResponsibilityPoints={updateResponsibilityPoints}\n      />\n    </AttendanceContainer>\n  )\n}\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { useEnumContextProvider } from '../../../../contexts/EnumContext'\nimport { useToggle } from '../../../../hooks'\nimport {\n  editBehaviorTypeVariables,\n  editBehaviorType,\n  findAllBehaviorTypes,\n  findAllBehaviorTypes_findAllBehaviorTypes_behaviorTypes,\n  BehaviorQualityEnum,\n  deleteBehaviorTypeVariables,\n  deleteBehaviorType,\n  BehaviorCategoryEnum,\n} from '../../../../schemaTypes'\n\nexport type EditBehaviorsProps = {\n  behavior: findAllBehaviorTypes_findAllBehaviorTypes_behaviorTypes\n}\n\nexport const EDIT_BEHAVIOR_TYPE_MUTATION = gql`\n  mutation editBehaviorType($input: EditBehaviorTypesInput!) {\n    editBehaviorTypes(input: $input) {\n      updated\n    }\n  }\n`\n\nexport const DELETE_BEHAVIOR_TYPE_MUTATION = gql`\n  mutation deleteBehaviorType($input: DeleteBehaviorTypeInput!) {\n    deleteBehaviorType(input: $input) {\n      deleted\n    }\n  }\n`\n\nexport const EditBehaviors = ({ behavior }: EditBehaviorsProps) => {\n  const { behaviorCategoryEnum } = useEnumContextProvider()\n  const [deleteToggle, toggleDelete] = useToggle(false)\n  const [editToggle, toggleEdit] = useToggle(false)\n  const [behaviorValues, setBehaviorValues] = useState({\n    _id: behavior._id!,\n    behaviorName: behavior.behaviorName,\n    behaviorQuality: behavior.behaviorQuality,\n    behaviorCategory: behavior.behaviorCategory,\n    points: behavior.points,\n    forTeachersAid: behavior.forTeachersAid,\n  })\n\n  const [editBehaviorType] = useMutation<\n    editBehaviorType,\n    editBehaviorTypeVariables\n  >(EDIT_BEHAVIOR_TYPE_MUTATION, {\n    variables: {\n      input: {\n        behaviorTypeId: behaviorValues._id!,\n        behaviorName: behaviorValues.behaviorName,\n        behaviorQuality: behaviorValues.behaviorQuality,\n        behaviorCategory: behaviorValues.behaviorCategory,\n        points: behaviorValues.points,\n        forTeachersAid: behaviorValues.forTeachersAid,\n      },\n    },\n    onCompleted: () => console.log('edited'),\n    refetchQueries: ['findAllBehaviorTypes'],\n  })\n  const [deleteBehavior] = useMutation<\n    deleteBehaviorType,\n    deleteBehaviorTypeVariables\n  >(DELETE_BEHAVIOR_TYPE_MUTATION, {\n    variables: { input: { behaviorTypeId: behavior._id! } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findAllBehaviorTypes'],\n  })\n  useEffect(() => {\n    if (editToggle) {\n      editBehaviorType()\n    }\n  }, [behaviorValues])\n\n  return (\n    <div>\n      <div>\n        {editToggle ? (\n          <>\n            <span>Behavior: </span>\n            <input\n              value={behaviorValues.behaviorName}\n              onChange={(e) =>\n                setBehaviorValues({\n                  ...behaviorValues,\n                  behaviorName: e.target.value,\n                })\n              }\n            />\n          </>\n        ) : (\n          <span>{behavior.behaviorName}</span>\n        )}\n      </div>\n      <div>\n        {editToggle ? (\n          <>\n            <span>Category: </span>\n            <select\n              value={behaviorValues.behaviorCategory}\n              onChange={(e: any) =>\n                setBehaviorValues({\n                  ...behaviorValues,\n                  behaviorCategory: e.target.value,\n                })\n              }\n            >\n              {behaviorCategoryEnum.map((b: BehaviorCategoryEnum) => (\n                <option key={b}>{b}</option>\n              ))}\n            </select>\n          </>\n        ) : (\n          <span>Category: {behavior.behaviorCategory}</span>\n        )}\n      </div>\n      <div>\n        {editToggle ? (\n          <>\n            <span>For TeachersAid </span>\n            <select\n              value={behaviorValues.forTeachersAid.toString()}\n              onChange={(e: any) =>\n                setBehaviorValues({\n                  ...behaviorValues,\n                  forTeachersAid: e.target.value === 'true' ? true : false,\n                })\n              }\n            >\n              <option value=\"true\">True</option>\n              <option value=\"false\">False</option>\n            </select>\n          </>\n        ) : (\n          <span>For TeachersAid: {behavior.forTeachersAid}</span>\n        )}\n      </div>\n      <div>\n        <span>Points: </span>\n        {editToggle ? (\n          <input\n            type=\"number\"\n            value={behaviorValues.points}\n            // placeholder={behaviorValues.points}\n            onChange={(e: any) =>\n              setBehaviorValues({\n                ...behaviorValues,\n                points: +e.target.value,\n                behaviorQuality:\n                  e.target.value > 0\n                    ? BehaviorQualityEnum.POSITIVE\n                    : e.target.value < 0\n                      ? BehaviorQualityEnum.NEGATIVE\n                      : BehaviorQualityEnum.NEUTRAL,\n              })\n            }\n          />\n        ) : (\n          <span>{behavior.points}</span>\n        )}\n      </div>\n      <br />\n      {deleteToggle ? (\n        <>\n          <button onClick={() => deleteBehavior()}>Yes</button>\n          <button onClick={() => toggleDelete()}>No</button>\n        </>\n      ) : (\n        <>\n          <button onClick={() => toggleEdit()}>\n            {editToggle ? 'End' : 'Edit'}\n          </button>\n          <button onClick={() => toggleDelete()}>Delete</button>\n        </>\n      )}\n    </div>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const BehaviorHomeContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  height: 95vh;\n`\nexport const BehaviorHomeTitleDiv = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 5vh;\n  border-bottom: 3px solid var(--blue);\n`\nexport const BehaviorHomeDisplay = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`\nexport const BehaviorLinksContainer = styled.div`\n  background-color: var(--blue);\n  display: grid;\n  grid-auto-flow: rows;\n  /* grid-template-rows: 10%; */\n  justify-items: center;\n  align-items: center;\n  border-top: 3px solid var(--white);\n`\n\nexport const BehaviorLink = styled(Link)`\n  text-decoration: none;\n  font-size: 3vh;\n  color: var(--white);\n`\n\nexport const BehaviorListContainer = styled.div`\n  height: 75vh;\n  overflow: scroll;\n`\n","import React from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport { findAllBehaviorTypes } from '../../../../schemaTypes'\nimport { EditBehaviors } from './EditBehaviors'\nimport { BehaviorListContainer } from './behaviorStyles'\n\nexport type BehaviorTypeListProps = {}\n\nexport const FIND_ALL_BEHAVIOR_TYPES_QUERY = gql`\n  query findAllBehaviorTypes {\n    findAllBehaviorTypes {\n      behaviorTypes {\n        _id\n        behaviorName\n        behaviorQuality\n        behaviorCategory\n        points\n        forTeachersAid\n      }\n    }\n  }\n`\n\nexport const BehaviorTypeList = ({}: BehaviorTypeListProps) => {\n  const { loading, data } = useQuery<findAllBehaviorTypes>(\n    FIND_ALL_BEHAVIOR_TYPES_QUERY,\n    {\n      onCompleted: (data) => console.log(data),\n      onError: (error) => console.error(error),\n    },\n  )\n\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      <BehaviorListContainer>\n        {data?.findAllBehaviorTypes.behaviorTypes.map((behavior) => (\n          <EditBehaviors behavior={behavior} key={behavior._id} />\n        ))}\n      </BehaviorListContainer>\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport { useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  CheckTextAnalysisInput,\n  checkTextAnalysisVariables,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments,\n  TextAnalysisCompletionEnum,\n  checkTextAnalysis,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis,\n} from '../../../../../../schemaTypes'\nimport {\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../../utils'\nimport {\n  StudentBehaviorButton,\n  StudentBehaviorButtonContainer,\n} from '../../styles/studentInfoStyles'\n\nexport type TextAnalysisCheckProps = {\n  textAnalysis: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis\n}\n\nexport const CHECK_TEXT_ANAYLSIS_MUTATION = gql`\n  mutation checkTextAnalysis($input: CheckTextAnalysisInput!) {\n    checkTextAnalysis(input: $input) {\n      checked\n    }\n  }\n`\n\nexport const TextAnalysisCheck = ({ textAnalysis }: TextAnalysisCheckProps) => {\n  const { TextAnalysisCompletionEnum } = useEnumContextProvider()\n\n  const [checkTextAnalysis] = useMutation<\n    checkTextAnalysis,\n    checkTextAnalysisVariables\n  >(CHECK_TEXT_ANAYLSIS_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findStudentByIdForTeachersAid'],\n  })\n  return (\n    <StudentBehaviorButtonContainer style={{ gridTemplateRows: '1fr 5fr' }}>\n      <div>{textAnalysis.textAnalysisCompletion}</div>\n      <StudentBehaviorButtonContainer style={{ height: '100%', width: '100%' }}>\n        {TextAnalysisCompletionEnum.map(\n          (check: TextAnalysisCompletionEnum, i: number) => (\n            <StudentBehaviorButton\n              key={i}\n              goodBehavior={check !== 'NO_ATTEMPT'}\n              onClick={() =>\n                checkTextAnalysis({\n                  variables: {\n                    input: {\n                      textAnalysisCompletion: check,\n                      textAnalysisId: textAnalysis._id!,\n                      startedPromptly: false,\n                      workedWellWithGroup: false,\n                      finishedEssentialQuestion: false,\n                      onTask: false,\n                    },\n                  },\n                })\n              }\n            >\n              {underscoreEliminator(phraseCapitalizer(check))}\n            </StudentBehaviorButton>\n          ),\n        )}\n      </StudentBehaviorButtonContainer>\n    </StudentBehaviorButtonContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport { gql, useMutation, useQuery } from '@apollo/client'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport {\n  createStudentBehaviorVariables,\n  createStudentBehavior,\n  MarkingPeriodEnum,\n  findAllBehaviorTypes,\n  BehaviorCategoryEnum,\n  findAllBehaviorTypes_findAllBehaviorTypes_behaviorTypes,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors,\n  TextAnalysisCompletionEnum,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments,\n  CheckTextAnalysisInput,\n  checkTextAnalysisVariables,\n  checkTextAnalysis,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis,\n} from '../../../../../../schemaTypes'\nimport {\n  phraseCapitalizer,\n  responsibilityPointConverter,\n  underscoreEliminator,\n} from '../../../../../../utils'\nimport { FIND_ALL_BEHAVIOR_TYPES_QUERY } from '../../../behaviors/BehaviorTypeList'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  ControlButtons,\n  StudentBehaviorButton,\n  StudentBehaviorButtonContainer,\n  StudentControlButtonContainer,\n} from '../../styles/studentInfoStyles'\nimport { BehaviorRemover } from './BehaviorRemover'\nimport { TextAnalysisCheck } from './TextAnalysisCheck'\n\nexport type DailyBehaviorProps = {\n  studentId: string\n  grade: number\n  gradeLoading: boolean\n  studentBehaviors: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors[]\n  textAnalysis:\n    | findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis\n    | undefined\n}\n\nexport const CREATE_BEHAVIOR_MUTATION = gql`\n  mutation createStudentBehavior($input: CreateStudentBehaviorInput!) {\n    createStudentBehavior(input: $input) {\n      studentBehavior {\n        _id\n        student {\n          firstName\n        }\n      }\n    }\n  }\n`\n\nexport const DailyBehavior = ({\n  studentId,\n  grade,\n  gradeLoading,\n  studentBehaviors,\n  textAnalysis,\n}: DailyBehaviorProps) => {\n  const [state] = useTeachersAidContextProvider()\n  const {\n    behaviorCategoryEnum,\n    BehaviorQualityEnum,\n    textAnalysisCompletionEnum,\n  } = useEnumContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = markingPeriodState.context\n\n  // const markingPeriodNumber = markingPeriodEnum.findIndex(\n  //   (element: MarkingPeriodEnum) => element === currentMarkingPeriod\n  // )\n  const { loading, data } = useQuery<findAllBehaviorTypes>(\n    FIND_ALL_BEHAVIOR_TYPES_QUERY,\n    {\n      // onCompleted: (data) => console.log(data),\n      onError: (error) => console.error(error),\n    },\n  )\n\n  const [createStudentBehavior] = useMutation<\n    createStudentBehavior,\n    createStudentBehaviorVariables\n  >(CREATE_BEHAVIOR_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      'findStudentByIdForTeachersAid',\n      'findBehaviorsByStudentIdAndDate',\n      'findResponsibilityPointsByStudentId',\n    ],\n  })\n\n  if (loading) return <div>Loading </div>\n  const behaviorsForTeachersAid =\n    data?.findAllBehaviorTypes.behaviorTypes.filter((b) => b.forTeachersAid)\n\n  const questionAndAnswerBehaviorList = [\n    ...behaviorsForTeachersAid!.filter(\n      (b) => b.behaviorCategory === BehaviorCategoryEnum.QUESTION_AND_ANSWER,\n    )!,\n  ]\n  const negativeBehaviorList = behaviorsForTeachersAid!.filter(\n    (b) => b.behaviorCategory === BehaviorCategoryEnum.NEGATIVE_BEHAVIOR,\n  )!\n\n  const preparedAndReady = data?.findAllBehaviorTypes.behaviorTypes.find(\n    (b) => b._id === '62a33f0c2c8c161570b3c258',\n  )!\n\n  const preparednessBehaviorList =\n    preparedAndReady &&\n    studentBehaviors.find((b) => b.behavior._id === preparedAndReady._id)\n      ? data?.findAllBehaviorTypes.behaviorTypes.filter(\n          (b) =>\n            b.behaviorCategory === BehaviorCategoryEnum.PREPAREDNESS &&\n            b.behaviorName !== 'Prepared and Ready',\n        )!\n      : data?.findAllBehaviorTypes.behaviorTypes.filter(\n          (b) =>\n            b.behaviorCategory === BehaviorCategoryEnum.PREPAREDNESS &&\n            b.behaviorName === 'Prepared and Ready',\n        )!\n\n  const independentBehaviorList = behaviorsForTeachersAid!.filter(\n    (b) => b.behaviorCategory === BehaviorCategoryEnum.INDEPENDENT_WORK,\n  )!\n\n  // const behaviorPoints = (behavior: BehaviorEnum) => {\n  //   if (behavior === BehaviorEnum.ANSWERED_QUESTION)\n  //     return responsibilityPointConverter(grade, 2)\n  //   else if (behavior === BehaviorEnum.DID_NOT_ANSWER_QUESTION) return 0\n  //   else if (behavior === BehaviorEnum.ON_TASK)\n  //     return responsibilityPointConverter(grade, 2)\n  //   else if (behavior === BehaviorEnum.OFF_TASK) return -2\n  //   else if (behavior === BehaviorEnum.COMPLETED_ASSIGNMENT) return 10\n  //   else if (behavior === BehaviorEnum.REFUSED_TO_WORK) return -10\n  //   else if (behavior === BehaviorEnum.DISRUPTIVE) return -10\n  //   else if (behavior === BehaviorEnum.EXCESSIVE_TALKING) return -2\n  //   else if (behavior === BehaviorEnum.UNPREPARED) return -10\n  //   else if (behavior === BehaviorEnum.DISRESPECTFUL) return -10\n  //   else if (behavior === BehaviorEnum.INNAPROPRIATE_LANGUAGE) return -10\n  //   else return 0\n  // }\n  // const questionAndAnswerBehaviors = behaviorEnum.slice(0, 2)\n  // const negativeBehaviors = behaviorEnum.slice(6)\n  // const taskBehaviors = behaviorEnum.slice(2, 6)\n\n  const negativeNumberDeterminer = (\n    behavior: findAllBehaviorTypes_findAllBehaviorTypes_behaviorTypes,\n  ) => {}\n\n  return (\n    <>\n      {state.context.studentInfoSelector === 'QUESTION_AND_ANSWER' && (\n        <StudentBehaviorButtonContainer>\n          {questionAndAnswerBehaviorList\n            .sort((a, b) => b.points - a.points)\n            .map((behavior, i: number) => {\n              return (\n                <StudentBehaviorButton\n                  key={i}\n                  goodBehavior={behavior.behaviorQuality === 'POSITIVE'}\n                  onClick={() =>\n                    createStudentBehavior({\n                      variables: {\n                        input: {\n                          behaviorTypeId: behavior._id!,\n                          studentId,\n                          markingPeriod: currentMarkingPeriod,\n                          responsibilityPoints:\n                            behavior.points > 0\n                              ? responsibilityPointConverter(\n                                  grade,\n                                  behavior.points,\n                                )\n                              : behavior.points,\n                          date: new Date().toLocaleDateString(),\n                        },\n                      },\n                    })\n                  }\n                >\n                  {behavior.points > 0 && gradeLoading\n                    ? 'loading'\n                    : behavior.behaviorName}\n                </StudentBehaviorButton>\n              )\n            })}\n        </StudentBehaviorButtonContainer>\n      )}\n      {state.context.studentInfoSelector === 'PREPAREDNESS' && (\n        <StudentBehaviorButtonContainer>\n          {preparednessBehaviorList.map((behavior, i: number) => (\n            <StudentBehaviorButton\n              key={i}\n              goodBehavior={behavior.behaviorQuality === 'POSITIVE'}\n              onClick={() =>\n                createStudentBehavior({\n                  variables: {\n                    input: {\n                      behaviorTypeId: behavior._id!,\n                      studentId,\n                      markingPeriod: currentMarkingPeriod,\n                      responsibilityPoints:\n                        behavior.points > 0\n                          ? responsibilityPointConverter(grade, behavior.points)\n                          : behavior.points,\n                      date: new Date().toLocaleDateString(),\n                    },\n                  },\n                })\n              }\n            >\n              {behavior.points > 0 && gradeLoading\n                ? 'loading'\n                : behavior.behaviorName}\n            </StudentBehaviorButton>\n          ))}\n        </StudentBehaviorButtonContainer>\n      )}\n      {state.context.studentInfoSelector === 'NEGATIVE_BEHAVIOR' && (\n        <StudentBehaviorButtonContainer>\n          {negativeBehaviorList.map((behavior, i: number) => (\n            <StudentBehaviorButton\n              key={i}\n              goodBehavior={behavior.behaviorQuality === 'POSITIVE'}\n              onClick={() =>\n                createStudentBehavior({\n                  variables: {\n                    input: {\n                      behaviorTypeId: behavior._id!,\n                      studentId,\n                      markingPeriod: currentMarkingPeriod,\n                      responsibilityPoints:\n                        behavior.points > 0\n                          ? responsibilityPointConverter(grade, behavior.points)\n                          : behavior.points,\n                      date: new Date().toLocaleDateString(),\n                    },\n                  },\n                })\n              }\n            >\n              {behavior.points > 0 && gradeLoading\n                ? 'loading'\n                : behavior.behaviorName}\n            </StudentBehaviorButton>\n          ))}\n        </StudentBehaviorButtonContainer>\n      )}\n      {state.context.studentInfoSelector === 'TASK_CHECK' && (\n        <>\n          {textAnalysis ? (\n            <TextAnalysisCheck\n              textAnalysis={\n                textAnalysis as findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis\n              }\n            />\n          ) : (\n            <StudentBehaviorButtonContainer>\n              {independentBehaviorList.map((behavior, i: number) => (\n                <StudentBehaviorButton\n                  key={i}\n                  goodBehavior={behavior.behaviorQuality === 'POSITIVE'}\n                  onClick={() =>\n                    createStudentBehavior({\n                      variables: {\n                        input: {\n                          behaviorTypeId: behavior._id!,\n                          studentId,\n                          markingPeriod: currentMarkingPeriod,\n                          responsibilityPoints:\n                            behavior.points > 0\n                              ? responsibilityPointConverter(\n                                  grade,\n                                  behavior.points,\n                                )\n                              : behavior.points,\n                          date: new Date().toLocaleDateString(),\n                        },\n                      },\n                    })\n                  }\n                >\n                  {behavior.points > 0 && gradeLoading\n                    ? 'loading'\n                    : behavior.behaviorName}\n                </StudentBehaviorButton>\n              ))}\n            </StudentBehaviorButtonContainer>\n          )}\n        </>\n      )}\n      {state.context.studentInfoSelector === 'INFO' && (\n        <BehaviorRemover\n          studentId={studentId}\n          currentMarkingPeriod={currentMarkingPeriod}\n          studentBehaviors={studentBehaviors}\n        />\n      )}\n    </>\n  )\n}\n","import { gql, useMutation, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  studentReturnedToClassVariables,\n  studentReturnedToClass,\n  findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student,\n  findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay,\n  findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplayVariables,\n} from '../../../../../../schemaTypes'\n\nexport type StatusProps = {\n  courseId: string\n  students: (findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student | null)[]\n}\n\nexport const FIND_STUDENTS_OUT_OF_CLASS_QUERY = gql`\n  query findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay(\n    $input: FindStudentOutOfClassByPeriodNameAndDateInput!\n  ) {\n    findStudentOutOfClassByPeriodNameAndDate(input: $input) {\n      studentsOutOfClass {\n        _id\n        date\n        departTime\n        hasReturned\n        markingPeriod\n        outOfClassDestination\n        returnTime\n        student {\n          _id\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n`\n\nexport const STUDENT_RETURNED_MUTATION = gql`\n  mutation studentReturnedToClass($input: StudentReturnedToClassInput!) {\n    studentReturnedToClass(input: $input) {\n      returned\n    }\n  }\n`\n\nexport const Status = ({ courseId, students }: StatusProps) => {\n  const { loading, data } = useQuery<\n    findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay,\n    findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplayVariables\n  >(FIND_STUDENTS_OUT_OF_CLASS_QUERY, {\n    variables: {\n      input: { courseId, date: new Date().toLocaleDateString() },\n    },\n    // onCompleted: (data) => console.log(data),\n    pollInterval: 1000,\n    onError: (error) => console.error(error),\n  })\n  const [studentReturnedToClass] = useMutation<\n    studentReturnedToClass,\n    studentReturnedToClassVariables\n  >(STUDENT_RETURNED_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n\n  const studentsCurrentlyOutOfClass =\n    data?.findStudentOutOfClassByPeriodNameAndDate.studentsOutOfClass.filter(\n      (outOfClassInstance) => !outOfClassInstance.hasReturned,\n    )!\n\n  const studentsReturnedToClass =\n    data?.findStudentOutOfClassByPeriodNameAndDate.studentsOutOfClass.filter(\n      (outOfClassInstance) => outOfClassInstance.hasReturned,\n    )!\n  if (loading) return <div>Loading </div>\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateRows: '1fr 5fr 5fr',\n        height: '100%',\n      }}\n    >\n      <div>Student Status Display</div>\n      <div>\n        <div>Out of Class</div>\n        {studentsCurrentlyOutOfClass.map((outOfClassInstance) => (\n          <div>\n            <div>\n              {outOfClassInstance.student.firstName}{' '}\n              {outOfClassInstance.student.lastName}\n            </div>\n            <div>{outOfClassInstance.outOfClassDestination}</div>\n            <button\n              onClick={() =>\n                studentReturnedToClass({\n                  variables: {\n                    input: { outOfClassId: outOfClassInstance._id! },\n                  },\n                })\n              }\n            >\n              Returned\n            </button>\n          </div>\n        ))}\n      </div>\n      <div>\n        <div>Returned</div>\n        {studentsReturnedToClass.map((outOfClassInstance) => (\n          <div>\n            <div>\n              {outOfClassInstance.student.firstName}{' '}\n              {outOfClassInstance.student.lastName}\n            </div>\n            <div>{outOfClassInstance.outOfClassDestination}</div>\n            {/* <button\n            onClick={() =>\n              studentReturnedToClass({\n                variables: {\n                  input: { outOfClassId: outOfClassInstance._id! },\n                },\n              })\n            }\n          >\n            Returned\n          </button> */}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n// export type StudentStatusDisplayProps = {\n//   courseId: string\n//   students: (findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student | null)[]\n// }\n\n// export const StudentStatusDisplay = ({\n//   courseId,\n//   students,\n// }: StudentStatusDisplayProps) => {\n//   const { loading, data } = useQuery<\n//     findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplay,\n//     findStudentOutOfClassByPeriodNameAndDateForStudentStatusDisplayVariables\n//   >(FIND_STUDENTS_OUT_OF_CLASS_QUERY, {\n//     variables: {\n//       input: { courseId, date: new Date().toLocaleDateString() },\n//     },\n//     // onCompleted: (data) => console.log(data),\n//     pollInterval: 1000,\n//     onError: (error) => console.error(error),\n//   })\n//   const [studentReturnedToClass] = useMutation<\n//     studentReturnedToClass,\n//     studentReturnedToClassVariables\n//   >(STUDENT_RETURNED_MUTATION, {\n//     onCompleted: (data) => console.log(data),\n//     refetchQueries: [],\n//   })\n\n//   const studentsCurrentlyOutOfClass =\n//     data?.findStudentOutOfClassByPeriodNameAndDate.studentsOutOfClass.filter(\n//       (outOfClassInstance) => !outOfClassInstance.hasReturned\n//     )!\n\n//   const studentsReturnedToClass =\n//     data?.findStudentOutOfClassByPeriodNameAndDate.studentsOutOfClass.filter(\n//       (outOfClassInstance) => outOfClassInstance.hasReturned\n//     )!\n//   if (loading) return <div>Loading </div>\n//   return (\n//     <div\n//       style={{\n//         display: 'grid',\n//         gridTemplateRows: '1fr 5fr 5fr',\n//         height: '100%',\n//       }}\n//     >\n//       <div>Student Status Display</div>\n//       <div>\n//         <div>Students Out of Class</div>\n//         {studentsCurrentlyOutOfClass.map((outOfClassInstance) => (\n//           <div>\n//             <div>\n//               {outOfClassInstance.student.firstName}{' '}\n//               {outOfClassInstance.student.lastName}\n//             </div>\n//             <div>{outOfClassInstance.outOfClassDestination}</div>\n//             <button\n//               onClick={() =>\n//                 studentReturnedToClass({\n//                   variables: {\n//                     input: { outOfClassId: outOfClassInstance._id! },\n//                   },\n//                 })\n//               }\n//             >\n//               Returned\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//       <div>\n//         <div>Returned Students</div>\n//         {studentsReturnedToClass.map((outOfClassInstance) => (\n//           <div>\n//             <div>\n//               {outOfClassInstance.student.firstName}{' '}\n//               {outOfClassInstance.student.lastName}\n//             </div>\n//             <div>{outOfClassInstance.outOfClassDestination}</div>\n//             {/* <button\n//               onClick={() =>\n//                 studentReturnedToClass({\n//                   variables: {\n//                     input: { outOfClassId: outOfClassInstance._id! },\n//                   },\n//                 })\n//               }\n//             >\n//               Returned\n//             </button> */}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   )\n// }\n","import { gql, useMutation } from '@apollo/client'\nimport React from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  createStudentOutOfClassVariables,\n  createStudentOutOfClass,\n  MarkingPeriodEnum,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student,\n  studentReturnedToClassVariables,\n  studentReturnedToClass,\n} from '../../../../../../schemaTypes'\nimport { STUDENT_RETURNED_MUTATION } from '../../main-screen/status/Status'\nimport {\n  StudentBehaviorButton,\n  StudentBehaviorButtonContainer,\n  StudentBehaviorContainer,\n  StudentBehaviorTitle,\n} from '../../styles/studentInfoStyles'\n\nexport type StudentStatusProps = {\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student\n  markingPeriod: MarkingPeriodEnum\n}\n\nexport const CREATE_STUDENT_OUT_OF_CLASS_MUTATION = gql`\n  mutation createStudentOutOfClass($input: CreateStudentOutOfClassInput!) {\n    createStudentOutOfClass(input: $input) {\n      studentOutOfClass {\n        _id\n      }\n    }\n  }\n`\n\nexport const StudentStatus = ({\n  student,\n  markingPeriod,\n}: StudentStatusProps) => {\n  const { outOfClassDestinationEnum } = useEnumContextProvider()\n\n  const [createStudentOutOfClass] = useMutation<\n    createStudentOutOfClass,\n    createStudentOutOfClassVariables\n  >(CREATE_STUDENT_OUT_OF_CLASS_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findStudentByIdForTeachersAid'],\n  })\n  const [studentReturnedToClass] = useMutation<\n    studentReturnedToClass,\n    studentReturnedToClassVariables\n  >(STUDENT_RETURNED_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findStudentByIdForTeachersAid'],\n  })\n  const isStudentOutOfClass = student.hasStatus.filter(\n    (status) => !status.hasReturned,\n  )\n  const studentOutOfClass = isStudentOutOfClass.length === 1\n  const outOfClassObject = student.hasStatus.find(\n    (status) => !status.hasReturned,\n  )\n  console.log(outOfClassObject)\n  return (\n    <StudentBehaviorContainer>\n      <StudentBehaviorTitle>Student Status</StudentBehaviorTitle>\n      {!studentOutOfClass ? (\n        <StudentBehaviorButtonContainer>\n          {outOfClassDestinationEnum.map((destination: any) => (\n            <StudentBehaviorButton\n              goodBehavior={true}\n              key={destination}\n              onClick={() =>\n                createStudentOutOfClass({\n                  variables: {\n                    input: {\n                      date: new Date().toLocaleDateString(),\n                      markingPeriod,\n                      outOfClassDestination: destination,\n                      studentId: student._id!,\n                    },\n                  },\n                })\n              }\n            >\n              {destination}\n            </StudentBehaviorButton>\n          ))}\n        </StudentBehaviorButtonContainer>\n      ) : (\n        <StudentBehaviorButtonContainer>\n          <StudentBehaviorButton\n            goodBehavior={true}\n            // key={destination}\n            onClick={() =>\n              studentReturnedToClass({\n                variables: {\n                  input: {\n                    outOfClassId: outOfClassObject?._id!,\n                  },\n                },\n              })\n            }\n          >\n            Returned\n          </StudentBehaviorButton>\n        </StudentBehaviorButtonContainer>\n      )}\n    </StudentBehaviorContainer>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport {\n  findStudentByIdForTeachersAidVariables,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis,\n  findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { AssessProtocol } from './protocols/AssessProtocol'\nimport { useTeachersAidContextProvider } from '../state/TeachersAidContext'\nimport { QueryLazyOptions } from '@apollo/client'\nimport { DailyAttendance } from './attendance/DailyAttendance'\nimport {\n  StudentControlPanelContainer,\n  StudentControlButtonContainer,\n  ControlButtons,\n} from '../styles/studentInfoStyles'\nimport { DailyBehavior } from './behavior/DailyBehavior'\nimport { StudentStatus } from './status/StudentStatus'\nimport { useToggle } from '../../../../../hooks'\n\nexport type StudentControlPanelDisplayProps = {\n  student: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student\n  loadStudentInfo: (\n    options?:\n      | QueryLazyOptions<findStudentByIdForTeachersAidVariables>\n      | undefined,\n  ) => void\n  absenceCheck: boolean\n  grade: number\n  gradeLoading: boolean\n  studentBehaviors: findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasBehaviors[]\n  markingPeriod: MarkingPeriodEnum\n  textAnalysis:\n    | findStudentByIdForTeachersAid_findStudentByIdForTeachersAid_student_hasAssignments_TextAnalysis\n    | undefined\n}\n\nexport const StudentControlPanelDisplay = ({\n  student,\n  loadStudentInfo,\n  markingPeriod,\n  absenceCheck,\n  grade,\n  gradeLoading,\n  studentBehaviors,\n  textAnalysis,\n}: StudentControlPanelDisplayProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  const [behaviorSwitch, toggleSwitch] = useToggle(\n    student?.hasProtocols.some((protocol) => protocol.isActive),\n  )\n  const [controllerState, setControllerState] = useState<\n    'ATTENDANCE' | 'BEHAVIOR'\n  >('ATTENDANCE')\n\n  useEffect(() => {\n    if (student?.hasProtocols.some((protocol) => protocol.isActive)) {\n      //   event({ type: 'ASSESS_PROTOCOL_DISPLAY' })\n      // toggleSwitch()\n    }\n  }, [student])\n\n  const protocols = student?.hasProtocols\n  const activeProtocol = student?.hasProtocols.some(\n    (protocol) => protocol.isActive,\n  )\n\n  return (\n    <>\n      {!absenceCheck && activeProtocol && behaviorSwitch ? (\n        <AssessProtocol\n          loadStudentInfo={loadStudentInfo}\n          protocols={protocols}\n          student={student}\n          grade={grade}\n          toggleSwitch={toggleSwitch}\n        />\n      ) : (\n        <StudentControlPanelContainer>\n          {/* <StudentControlButtonContainer> */}\n          {/* <ControlButtons onClick={() => setControllerState('ATTENDANCE')}>\n                Attendance\n              </ControlButtons>\n              <ControlButtons onClick={() => setControllerState('BEHAVIOR')}>\n                Behavior\n              </ControlButtons> */}\n          {/* </StudentControlButtonContainer> */}\n          <div\n            onClick={() => {\n              if (activeProtocol) toggleSwitch()\n            }}\n            style={{\n              color: 'var(--blue)',\n              display: 'grid',\n              justifyItems: 'center',\n              alignItems: 'center',\n              fontSize: '3vh',\n            }}\n          >\n            {activeProtocol ? (\n              <div>\n                {'<'} Protocol Switch {'>'}\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n          {student && state.context.studentInfoSelector === 'ATTENDANCE' && (\n            <DailyAttendance student={student} absenceCheck={absenceCheck} />\n          )}\n          {student && state.context.studentInfoSelector === 'STATUS' && (\n            <StudentStatus student={student} markingPeriod={markingPeriod} />\n          )}\n          {!absenceCheck &&\n            student &&\n            state.context.studentInfoSelector !== 'ATTENDANCE' && (\n              <DailyBehavior\n                studentId={student._id!}\n                grade={grade}\n                gradeLoading={gradeLoading}\n                studentBehaviors={studentBehaviors}\n                textAnalysis={textAnalysis}\n              />\n            )}\n        </StudentControlPanelContainer>\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { useTeachersAidContextProvider } from '../state/TeachersAidContext'\nimport { gql, useLazyQuery } from '@apollo/client'\nimport {\n  DiscussionTypesEnum,\n  OutOfClassDestinationEnum,\n  findStudentByIdForTeachersAid,\n  findStudentByIdForTeachersAidVariables,\n} from '../../../../../schemaTypes'\nimport {\n  StudentControlPanelContainer,\n  StudentInfoDisplay,\n  StudentNameContainer,\n} from '../styles/studentInfoStyles'\nimport { StudentControlPanelDisplay } from './StudentControlPanelDisplay'\nimport { useMarkingPeriodContextProvider } from '../../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport { useGradeCalculator } from '../../../../../hooks/useGradeCalculator'\nimport { responsibilityPointConverter } from '../../../../../utils'\nimport { useCalculateGrades } from '../../../../../hooks/useCalculateGrades'\n\nexport type StudentInfoProps = {}\n\nexport const FIND_STUDENT_INFORMATION_QUERY = gql`\n  query findStudentByIdForTeachersAid(\n    $input: FindStudentByIdForTeachersAidInput!\n  ) {\n    findStudentByIdForTeachersAid(input: $input) {\n      student {\n        _id\n        firstName\n        lastName\n        hasAssignments {\n          ... on TextAnalysis {\n            _id\n            textAnalysisCompletion\n            exempt\n          }\n        }\n        hasAbsences {\n          _id\n          dayAbsent\n        }\n        hasLatnesses {\n          _id\n          dayLate\n          latenessType\n        }\n        hasUnExcusedLatenesses {\n          _id\n          dayLate\n          latenessType\n        }\n        hasExcusedLatenesses {\n          _id\n          dayLate\n          latenessType\n        }\n        hasResponsibilityPoints {\n          _id\n          markingPeriod\n          responsibilityPoints\n        }\n        hasProtocols {\n          _id\n          completed\n          assignedDate\n          academicOutcomeType\n          student {\n            _id\n            firstName\n          }\n          isActive\n          task\n          partners {\n            _id\n          }\n          discussionLevel\n          completed\n          assessment\n          protocolActivityType\n          markingPeriod\n        }\n        hasBehaviors {\n          _id\n          behavior {\n            _id\n            behaviorCategory\n            behaviorName\n            points\n            behaviorQuality\n            forTeachersAid\n          }\n          date\n        }\n        hasStatus {\n          _id\n          date\n          departTime\n          hasReturned\n          markingPeriod\n          outOfClassDestination\n          returnTime\n        }\n        hasStatuses {\n          _id\n          date\n          departTime\n          hasReturned\n          markingPeriod\n          outOfClassDestination\n          returnTime\n        }\n      }\n    }\n  }\n`\n\nexport const StudentInfo = ({}: StudentInfoProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n\n  // const { grade } = useCalculateGrades({\n  //   studentId: state.context.studentId!,\n  //   markingPeriod: markingPeriodState.context.currentMarkingPeriod,\n  //   polling: false,\n  //   pollInterval: 1000,\n  // })\n  // console.log(oldGrade)\n  const { grade, loading: gradeLoading } = useGradeCalculator({\n    studentId: state.context.studentId!,\n    markingPeriod: markingPeriodState.context.currentMarkingPeriod,\n    polling: false,\n    pollInterval: 1000,\n  })\n\n  const [loadStudentInfo, { loading: studentInfoLoading, data }] = useLazyQuery<\n    findStudentByIdForTeachersAid,\n    findStudentByIdForTeachersAidVariables\n  >(FIND_STUDENT_INFORMATION_QUERY, {\n    variables: {\n      input: { studentId: state.context.studentId },\n    },\n    // pollInterval: 1000,\n    fetchPolicy: 'network-only',\n    onCompleted: (data) => {\n      if (\n        data?.findStudentByIdForTeachersAid.student.hasProtocols.some(\n          (protocol) => protocol.isActive,\n        )\n      ) {\n        const [protocol] =\n          data?.findStudentByIdForTeachersAid.student.hasProtocols.filter(\n            (protocol) => protocol.isActive,\n          )\n        const partnerList = protocol.partners?.map(\n          (partner) => partner._id,\n        ) as string[]\n        event({\n          type: 'UPDATE_STUDENT_PROTOCOL',\n          payload: {\n            assessment: protocol!.assessment!,\n            protocolActivityType: protocol.protocolActivityType,\n            task: protocol.task,\n            assignedDate: protocol.assignedDate,\n            discussionLevel:\n              protocol.protocolActivityType === 'INDIVIDUAL'\n                ? DiscussionTypesEnum.NOT_REQUIRED\n                : protocol.discussionLevel,\n            studentId: data.findStudentByIdForTeachersAid.student._id!,\n            partnerIds: protocol.partners ? partnerList! : [],\n            markingPeriod: protocol.markingPeriod,\n            responsibilityPoints: responsibilityPointConverter(grade, 2),\n          },\n        })\n      }\n    },\n    onError: (error) => console.error('loadStudentInfo: ' + error),\n  })\n\n  const studentBehaviors =\n    data?.findStudentByIdForTeachersAid.student.hasBehaviors.filter(\n      (b) => b.date === new Date().toLocaleDateString(),\n    )!\n\n  useEffect(() => {\n    if (state.context.studentId) {\n      loadStudentInfo()\n    }\n  }, [loadStudentInfo, state.context.studentId])\n\n  const currentResponsibilityPoints =\n    data?.findStudentByIdForTeachersAid.student.hasResponsibilityPoints\n\n  const absenceCheck =\n    data?.findStudentByIdForTeachersAid.student.hasAbsences.some(\n      (absence) => absence.dayAbsent === new Date().toLocaleDateString(),\n    )!\n  const rp = currentResponsibilityPoints?.responsibilityPoints\n\n  if (studentInfoLoading)\n    return (\n      <>\n        <StudentInfoDisplay>\n          <StudentNameContainer></StudentNameContainer>\n        </StudentInfoDisplay>\n        <StudentControlPanelContainer></StudentControlPanelContainer>\n      </>\n    )\n  const textAnalysisToFind =\n    data?.findStudentByIdForTeachersAid.student.hasAssignments.find(\n      (a) => a.__typename === 'TextAnalysis',\n    )!\n\n  const textAnalysis =\n    textAnalysisToFind && textAnalysisToFind.__typename === 'TextAnalysis'\n      ? textAnalysisToFind\n      : undefined\n\n  return (\n    <>\n      <StudentInfoDisplay absent={absenceCheck}>\n        <StudentNameContainer>\n          <div> {data?.findStudentByIdForTeachersAid.student.firstName}</div>\n          <div>{data?.findStudentByIdForTeachersAid.student.lastName}</div>\n          <div>{rp && rp.toFixed(2)}</div>\n          {!gradeLoading ? <div>{grade}%</div> : <div>Loading </div>}\n          <div style={{ fontSize: '2vh' }}>\n            Bathroom Use:{' '}\n            {\n              data?.findStudentByIdForTeachersAid.student.hasStatuses.filter(\n                (s) =>\n                  s.outOfClassDestination ===\n                    OutOfClassDestinationEnum.BATHROOM &&\n                  s.markingPeriod ===\n                    markingPeriodState.context.currentMarkingPeriod,\n              ).length\n            }\n          </div>\n        </StudentNameContainer>\n      </StudentInfoDisplay>\n\n      <StudentControlPanelDisplay\n        loadStudentInfo={loadStudentInfo}\n        student={data?.findStudentByIdForTeachersAid.student!}\n        absenceCheck={absenceCheck}\n        grade={grade}\n        gradeLoading={gradeLoading}\n        studentBehaviors={studentBehaviors}\n        markingPeriod={markingPeriodState.context.currentMarkingPeriod}\n        textAnalysis={textAnalysis}\n      />\n    </>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  PeriodSelectDisplay,\n  PeriodDisplay,\n} from '../../styles/classControlPanelStyles'\n\nexport type PeriodSelectProps = {}\n\nexport const PeriodSelect = ({}: PeriodSelectProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  return (\n    <>\n      <PeriodSelectDisplay>\n        <div\n          onClick={() => {\n            event({ type: 'PREVIOUS' })\n          }}\n        >\n          {!state.context.courseSelectVisible &&\n            state.context.courseInfo!._id && <>&lt;</>}\n        </div>\n        <PeriodDisplay onClick={() => event({ type: 'COURSE_SELECT' })}>\n          {state.context.courseSelectVisible\n            ? 'Select A Class'\n            : !state.context.courseInfo!.course.name\n              ? 'Select A Class'\n              : state.context.courseInfo!.course.name}\n        </PeriodDisplay>\n        <div onClick={() => event({ type: 'NEXT' })}>\n          {!state.context.courseSelectVisible &&\n            state.context.courseInfo!._id && <>&gt;</>}\n        </div>\n      </PeriodSelectDisplay>\n    </>\n  )\n}\n","import { gql, useLazyQuery } from '@apollo/client'\nimport {\n  findCourseInfoByCourseId,\n  findCourseInfoByCourseIdVariables,\n  me_me_Teacher,\n} from '../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { CourseSelectButton } from '../../styles/classControlPanelStyles'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\n\nexport type PeriodSelectorDisplayProps = {}\n\nexport const GET_COURSE_INFO_QUERY = gql`\n  query findCourseInfoByCourseId($input: FindCourseInfoByCourseIdInput!) {\n    findCourseInfoByCourseId(input: $input) {\n      courseInfo {\n        _id\n        startsAt\n        course {\n          _id\n          name\n          hasStudents {\n            _id\n            firstName\n            schoolId\n            lastName\n            cohort\n            hasAbsences {\n              dayAbsent\n            }\n            # hasProtocols {\n            #  _id\n            # student {\n            #  _id\n            # firstName\n            #lastName\n            # }\n            # isActive\n            #response\n            #}\n          }\n        }\n        endsAt\n        schoolDayType\n        cohortBasedSeating\n        assignedSeats {\n          deskNumber\n          redCohortStudent {\n            _id\n            firstName\n            lastName\n            cohort\n            hasAbsences {\n              dayAbsent\n            }\n          }\n          whiteCohortStudent {\n            _id\n            firstName\n            lastName\n            cohort\n            hasAbsences {\n              dayAbsent\n            }\n          }\n          student {\n            _id\n            firstName\n            lastName\n            cohort\n            hasAbsences {\n              dayAbsent\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport const PeriodSelectorDisplay = ({}: PeriodSelectorDisplayProps) => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const [, event] = useTeachersAidContextProvider()\n\n  const [loadCourse, { data }] = useLazyQuery<\n    findCourseInfoByCourseId,\n    findCourseInfoByCourseIdVariables\n  >(GET_COURSE_INFO_QUERY, {\n    onCompleted: (data) => {\n      event({\n        type: 'SET_COURSE',\n        payload: data.findCourseInfoByCourseId.courseInfo,\n      })\n    },\n    // pollInterval: 1000,\n\n    onError: (error) => console.error(error),\n  })\n\n  return (\n    <>\n      {me.teachesCourses\n        .slice(2)\n        .filter((c) => c.name !== 'Unenrolled')\n        .map((course) => (\n          <CourseSelectButton\n            key={course._id!}\n            onClick={() => {\n              console.log(new Date().toISOString().substring(17, 23))\n              loadCourse({ variables: { input: { courseId: course._id! } } })\n            }}\n          >\n            {course.name}\n          </CourseSelectButton>\n        ))}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useMutation } from '@apollo/client'\n\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  updateLessonProtocol,\n  updateLessonProtocolVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  startProtocol,\n  startProtocolVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createStudentProtocol,\n  createStudentProtocolVariables,\n  MarkingPeriodEnum,\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  ActivityTimeEnum,\n} from '../../../../../../schemaTypes'\nimport { date } from '../../../../../../utils'\nimport {\n  ProtocolSelectorContainer,\n  ProtocolSelectorButton,\n} from '../../styles/classControlPanelStyles'\n\nexport type SelectProtocolProps = {\n  lessonId: string\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  presentStudentList: string[]\n}\n\nexport const UPDATE_LESSON_PROTOCOL_MUTATION = gql`\n  mutation updateLessonProtocol($input: UpdateLessonProtocolInput!) {\n    updateLessonProtocol(input: $input) {\n      lesson {\n        _id\n        duringActivities {\n          isActive\n        }\n      }\n    }\n  }\n`\n\nexport const START_PROTOCOL_MUTATION = gql`\n  mutation startProtocol($input: StartProtocolInput!) {\n    startProtocol(input: $input) {\n      lesson {\n        _id\n        duringActivities {\n          isActive\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE__PROTOCOL_MUTATION = gql`\n  mutation createStudentProtocol($input: CreateProtocolInput!) {\n    createProtocol(input: $input) {\n      protocols {\n        _id\n        student {\n          _id\n          firstName\n        }\n      }\n    }\n  }\n`\n\nexport const SelectProtocol = ({\n  lessonId,\n  lesson,\n  presentStudentList,\n}: SelectProtocolProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  const [createStudentProtocol] = useMutation<\n    createStudentProtocol,\n    createStudentProtocolVariables\n  >(CREATE__PROTOCOL_MUTATION, {\n    variables: {\n      input: {\n        academicOutcomeType:\n          state.context.selectedProtocol.academicOutcomeTypes,\n        studentIds: presentStudentList,\n        markingPeriod: lesson.assignedMarkingPeriod,\n        protocolActivityType: state.context.selectedProtocol.activityType,\n        task: state.context.selectedProtocol.task,\n        lessonId,\n        activityTime: ActivityTimeEnum.DURING,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      'findStudentInfoByStudentId',\n      'findStudentByIdForTeachersAid',\n      'findLessonByCourseAndDate',\n      'findActiveProtocolsByCourse',\n    ],\n  })\n\n  const [startProtocol] = useMutation<startProtocol, startProtocolVariables>(\n    START_PROTOCOL_MUTATION,\n    {\n      variables: {\n        input: {\n          lessonId,\n          task: state.context.selectedProtocol.task,\n          isActive: true,\n        },\n      },\n      onCompleted: () => createStudentProtocol(),\n      refetchQueries: [\n        'findStudentInfoByStudentId',\n        'findLessonByCourseAndDate',\n        'findStudentByIdForTeachersAid',\n      ],\n    },\n  )\n\n  const [reactivateProtocol] = useMutation<\n    updateLessonProtocol,\n    updateLessonProtocolVariables\n  >(UPDATE_LESSON_PROTOCOL_MUTATION, {\n    variables: {\n      input: {\n        lessonId,\n        task: state.context.selectedProtocol.task,\n        isActive: true,\n        assignedDate: date,\n        studentIds: presentStudentList,\n      },\n    },\n    onCompleted: (data) => {\n      console.log(data)\n    },\n    refetchQueries: [\n      'findLessonByCourseAndDate',\n      'findStudentInfoByStudentId',\n      'findActiveProtocolsByCourseForProtocolRemoval',\n      'findStudentByIdForTeachersAid',\n    ],\n  })\n\n  return (\n    <ProtocolSelectorContainer>\n      {!state.context.selectedProtocol.completed ? (\n        <ProtocolSelectorButton\n          onClick={() => {\n            startProtocol()\n          }}\n        >\n          Start Protocol\n        </ProtocolSelectorButton>\n      ) : (\n        <ProtocolSelectorButton onClick={() => reactivateProtocol()}>\n          Reactivate\n        </ProtocolSelectorButton>\n      )}\n    </ProtocolSelectorContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { gql, useMutation, useQuery } from '@apollo/client'\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport {\n  deleteProtocols,\n  deleteProtocolsVariables,\n  findActiveProtocolsByCourseForProtocolRemoval,\n  findActiveProtocolsByCourseForProtocolRemovalVariables,\n} from '../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { date } from '../../../../../../utils'\nimport { ProtocolControllerButton } from '../../styles/classControlPanelStyles'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\n\nexport type DeleteProtocolsProps = {\n  lessonId: string\n  presentStudentList: string[]\n}\n\nexport const DELETE_PROTOCOLS_MUTATION = gql`\n  mutation deleteProtocols($input: RemoveProtocolInput!) {\n    removeProtocol(input: $input) {\n      deleteCount\n    }\n  }\n`\n\nexport const FIND_ACTIVE_PROTOCOLS_QUERY = gql`\n  query findActiveProtocolsByCourseForProtocolRemoval(\n    $input: FindActiveProtocolsByCourseInput!\n  ) {\n    findActiveProtocolsByCourse(input: $input) {\n      protocols {\n        _id\n        task\n        assignedDate\n        student {\n          _id\n        }\n      }\n    }\n  }\n`\nexport const DeleteProtocols = ({\n  lessonId,\n  presentStudentList,\n}: DeleteProtocolsProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = markingPeriodState.context\n\n  const { loading, data } = useQuery<\n    findActiveProtocolsByCourseForProtocolRemoval,\n    findActiveProtocolsByCourseForProtocolRemovalVariables\n  >(FIND_ACTIVE_PROTOCOLS_QUERY, {\n    variables: {\n      input: { courseId: state.context.courseInfo?.course._id! },\n    },\n\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  const studentIds = data?.findActiveProtocolsByCourse.protocols\n    .filter((protocol) => protocol.task === state.context.selectedProtocol.task)\n    .map((p) => p.student._id)! as string[]\n\n  const [deleteProtocols] = useMutation<\n    deleteProtocols,\n    deleteProtocolsVariables\n  >(DELETE_PROTOCOLS_MUTATION, {\n    variables: {\n      input: {\n        studentIds: presentStudentList,\n        assignedDate: date,\n        task: state.context.selectedProtocol.task,\n        lessonId,\n        markingPeriod: currentMarkingPeriod,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      'findLessonByCourseAndDate',\n      'findStudentInfoByStudentId',\n      'findStudentByIdForTeachersAid',\n    ],\n  })\n  // if (loading) return <div>Loading </div>\n  return (\n    <>\n      <ProtocolControllerButton\n        onClick={() => {\n          deleteProtocols()\n          event({ type: 'CHANGE_MAIN_SCREEN_SEATING_CHART' })\n          event({ type: 'PREVIOUS' })\n        }}\n      >\n        Delete\n      </ProtocolControllerButton>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { useMutation, gql } from '@apollo/client'\nimport {\n  updateLessonProtocol,\n  updateLessonProtocolVariables,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  finishStudentProtocol,\n  finishStudentProtocolVariables,\n  AcademicOutcomeTypes,\n} from '../../../../../../schemaTypes'\nimport { UPDATE_LESSON_PROTOCOL_MUTATION } from './SelectProtocol'\nimport {\n  date,\n  phraseCapitalizer,\n  underscoreEliminator,\n  // academicOutcomeTypes,\n  // protocolActivityTypes,\n} from '../../../../../../utils'\nimport { DeleteProtocols } from './DeleteProtocols'\nimport {\n  ProtocolManagerContainer,\n  ProtocolInfo,\n  ProtocolInfoContainer,\n  ProtocolControllerContainer,\n  ProtocolControllerButton,\n} from '../../styles/classControlPanelStyles'\n\nexport type ActivatedProtocolDisplayProps = {\n  lessonId: string\n  presentStudentList: string[]\n}\n\nexport const FINISH_STUDENT_PROTOCOL_MUTATION = gql`\n  mutation finishStudentProtocol($input: FinishProtocolInput!) {\n    finishProtocol(input: $input) {\n      finished\n    }\n  }\n`\n\nexport const ActivatedProtocolDisplay = ({\n  lessonId,\n  presentStudentList,\n}: ActivatedProtocolDisplayProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n  const [finishStudentProtocol] = useMutation<\n    finishStudentProtocol,\n    finishStudentProtocolVariables\n  >(FINISH_STUDENT_PROTOCOL_MUTATION, {\n    variables: {\n      input: {\n        assignedDate: date,\n        studentIds: state.context.presentStudentsIds,\n        task: state.context.selectedProtocol.task,\n        lessonId,\n      },\n    },\n    onCompleted: (data) => {\n      event({ type: 'CHANGE_MAIN_SCREEN_SEATING_CHART' })\n    },\n    refetchQueries: [\n      'findLessonByCourseAndDate',\n      'findStudentInfoByStudentId',\n      'findStudentByIdForTeachersAid',\n    ],\n  })\n\n  const [back] = useMutation<\n    updateLessonProtocol,\n    updateLessonProtocolVariables\n  >(UPDATE_LESSON_PROTOCOL_MUTATION, {\n    variables: {\n      input: {\n        lessonId,\n        task: state.context.selectedProtocol.task,\n        isActive: false,\n        assignedDate: date,\n        studentIds: state.context.presentStudentsIds,\n      },\n    },\n    onCompleted: (data) => {\n      console.log(data)\n    },\n    refetchQueries: [\n      'findLessonByCourseAndDate',\n      'findStudentInfoByStudentId',\n      'findStudentByIdForTeachersAid',\n    ],\n  })\n\n  const outcomeType = underscoreEliminator(\n    state.context.selectedProtocol.academicOutcomeTypes,\n  )\n  const activityTypes = underscoreEliminator(\n    state.context.selectedProtocol.activityType,\n  )\n\n  const handleMainScreenSwitch = () =>\n    !state.context.mainScreenVirtualProtocolResponses\n      ? event({ type: 'CHANGE_MAIN_SCREEN_VIRTUAL_PROTOCOL_RESPONSES' })\n      : event({ type: 'CHANGE_MAIN_SCREEN_SEATING_CHART' })\n\n  return (\n    <ProtocolManagerContainer>\n      <ProtocolInfoContainer>\n        <ProtocolInfo>\n          Outcome Type: {phraseCapitalizer(outcomeType)}\n        </ProtocolInfo>\n        <ProtocolInfo>\n          Activity: {phraseCapitalizer(activityTypes)}\n        </ProtocolInfo>\n        <ProtocolInfo>Task: {state.context.selectedProtocol.task}</ProtocolInfo>\n      </ProtocolInfoContainer>\n      <ProtocolControllerContainer>\n        <ProtocolControllerButton onClick={handleMainScreenSwitch}>\n          {!state.context.mainScreenVirtualProtocolResponses\n            ? 'Responses'\n            : 'Seating Chart'}\n        </ProtocolControllerButton>\n        {state.context.selectedProtocol.completed ? (\n          <ProtocolControllerButton\n            onClick={() => {\n              back()\n              event({ type: 'CHANGE_MAIN_SCREEN_SEATING_CHART' })\n            }}\n          >\n            Back\n          </ProtocolControllerButton>\n        ) : (\n          <ProtocolControllerButton\n            onClick={() => {\n              finishStudentProtocol()\n              event({ type: 'PREVIOUS' })\n              event({ type: 'CHANGE_MAIN_SCREEN_SEATING_CHART' })\n            }}\n          >\n            Finish\n          </ProtocolControllerButton>\n        )}\n        <DeleteProtocols\n          lessonId={lessonId}\n          presentStudentList={presentStudentList}\n        />\n      </ProtocolControllerContainer>\n    </ProtocolManagerContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { SelectProtocol } from './SelectProtocol'\nimport { findLessonByCourseAndDate_findLessonByCourseAndDate_lesson } from '../../../../../../schemaTypes'\nimport {\n  ProtocolHeader,\n  ProtocolHeaderContainer,\n  ProtocolSelectorBack,\n  ProtocolSelectorBackContainer,\n  ProtocolSelectorNextContainer,\n  ProtocolSelectorNext,\n  ProtocolSelectorTaskContainer,\n  ProtocolSelectorTask,\n  ProtocolManagerContainer,\n} from '../../styles/classControlPanelStyles'\n\nexport type ProtocolSelectorProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  presentStudentList: string[]\n}\nexport const ProtocolSelector = ({\n  lesson,\n  presentStudentList,\n}: ProtocolSelectorProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  return (\n    <ProtocolManagerContainer>\n      <ProtocolHeaderContainer>\n        <ProtocolHeader>Protocol Selector</ProtocolHeader>\n      </ProtocolHeaderContainer>\n      <ProtocolSelectorBackContainer>\n        <ProtocolSelectorBack\n          onClick={() => {\n            if (state.context.protocolSelect > 0)\n              event({\n                type: 'SELECT_PROTOCOL',\n                payload: state.context.protocolSelect - 1,\n              })\n          }}\n        >\n          &lt;\n        </ProtocolSelectorBack>\n      </ProtocolSelectorBackContainer>\n      <ProtocolSelectorTaskContainer>\n        <ProtocolSelectorTask>\n          {state.context.selectedProtocol.task}\n        </ProtocolSelectorTask>\n      </ProtocolSelectorTaskContainer>\n      <ProtocolSelectorNextContainer>\n        <ProtocolSelectorNext\n          onClick={() => {\n            if (\n              state.context.protocolSelect <\n              state.context.protocols.length - 1\n            )\n              event({\n                type: 'SELECT_PROTOCOL',\n                payload: state.context.protocolSelect + 1,\n              })\n          }}\n        >\n          &gt;\n        </ProtocolSelectorNext>\n      </ProtocolSelectorNextContainer>\n      <SelectProtocol\n        lessonId={lesson._id!}\n        lesson={lesson}\n        presentStudentList={presentStudentList}\n      />\n    </ProtocolManagerContainer>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities,\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n} from '../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { ProtocolSelectorNoProtocolsDisplay } from '../../styles/classControlPanelStyles'\nimport { ActivatedProtocolDisplay } from './ActivatedProtocolDisplay'\nimport { ProtocolSelector } from './ProtocolSelector'\n\nexport type ProtocolManagerProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  protocols: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson_duringActivities[]\n  presentStudentList: string[]\n}\n\nexport const ProtocolManager: FC<ProtocolManagerProps> = ({\n  lesson,\n  protocols,\n  presentStudentList,\n}) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  const currentActiveProtocolIndex = protocols.findIndex(\n    (protocol) => protocol.isActive,\n  )\n\n  useEffect(() => {\n    event({\n      type: 'SELECT_PROTOCOL',\n      payload:\n        currentActiveProtocolIndex === -1 ? 0 : currentActiveProtocolIndex,\n    })\n  }, [currentActiveProtocolIndex, event])\n\n  useEffect(() => {\n    event({\n      type: 'UPDATE_LESSON_PROTOCOL',\n      payload: protocols[state.context.protocolSelect],\n    })\n  }, [event, protocols, state.context.protocolSelect])\n\n  return (\n    <>\n      {lesson && protocols.length > 0 ? (\n        <>\n          {!protocols.some((protocol) => protocol.isActive) ? (\n            <ProtocolSelector\n              lesson={lesson}\n              presentStudentList={presentStudentList}\n            />\n          ) : (\n            <ActivatedProtocolDisplay\n              lessonId={lesson._id!}\n              presentStudentList={presentStudentList}\n            />\n          )}\n        </>\n      ) : (\n        <ProtocolSelectorNoProtocolsDisplay>\n          <div>No Protocols Today</div>\n        </ProtocolSelectorNoProtocolsDisplay>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  controlCoolDown,\n  controlCoolDownVariables,\n  updateDynamicLesson,\n  updateDynamicLessonVariables,\n  DynamicLessonEnums,\n  ActivityTimeEnum,\n} from '../../../../../../schemaTypes'\nimport { DynamicLessonButton } from '../../styles/classControlPanelStyles'\nimport {\n  ApolloCache,\n  DefaultContext,\n  MutationFunctionOptions,\n  gql,\n  useMutation,\n} from '@apollo/client'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\n\nexport type CoolDownManagerProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  presentStudentList: string[]\n  updateDynamicLesson: (\n    options?:\n      | MutationFunctionOptions<\n          updateDynamicLesson,\n          updateDynamicLessonVariables,\n          DefaultContext,\n          ApolloCache<any>\n        >\n      | undefined,\n  ) => void\n}\n\nexport const CONTROL_COOL_DOWN_MUTATION = gql`\n  mutation controlCoolDown($input: ControlCoolDownInput!) {\n    controlCoolDown(input: $input) {\n      protocols {\n        _id\n      }\n    }\n  }\n`\n\nexport const CoolDownManager = ({\n  lesson,\n  presentStudentList,\n  updateDynamicLesson,\n}: CoolDownManagerProps) => {\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const [controlCoolDown] = useMutation<\n    controlCoolDown,\n    controlCoolDownVariables\n  >(CONTROL_COOL_DOWN_MUTATION, {\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [\n      'findLessonByCourseAndDate',\n      'findStudentByIdForTeachersAid',\n    ],\n  })\n\n  const { isActive, academicOutcomeTypes, activityType, task } =\n    lesson.afterActivity!\n\n  return (\n    <>\n      <DynamicLessonButton\n        currentLessonSetting={isActive}\n        onClick={() => {\n          if (!isActive) {\n            controlCoolDown({\n              variables: {\n                input: {\n                  lessonId: lesson._id!,\n                  isActive: true,\n                  academicOutcomeType: academicOutcomeTypes,\n                  markingPeriod:\n                    markingPeriodState.context.currentMarkingPeriod,\n                  protocolActivityType: activityType,\n                  studentIds: presentStudentList,\n                  task: task,\n                  activityTime: ActivityTimeEnum.AFTER,\n                },\n              },\n            })\n          }\n        }}\n      >\n        Start\n      </DynamicLessonButton>\n      <DynamicLessonButton\n        currentLessonSetting={!isActive}\n        onClick={() => {\n          controlCoolDown({\n            variables: {\n              input: {\n                lessonId: lesson._id!,\n                isActive: false,\n                academicOutcomeType: academicOutcomeTypes,\n                markingPeriod: markingPeriodState.context.currentMarkingPeriod,\n                protocolActivityType: activityType,\n                studentIds: presentStudentList,\n                task: task,\n                activityTime: ActivityTimeEnum.AFTER,\n              },\n            },\n          })\n          updateDynamicLesson({\n            variables: {\n              input: {\n                lessonId: lesson._id!,\n                dynamicLessonUpdate: DynamicLessonEnums.LESSON_DETAILS,\n              },\n            },\n          })\n        }}\n      >\n        Complete\n      </DynamicLessonButton>\n    </>\n  )\n}\n","import React from 'react'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  StudentInfoSelectorButton,\n  StudentInfoSelectorContainer,\n} from '../../styles/classControlPanelStyles'\n\nexport type StudentInfoSelectorProps = {}\nexport type StudentInfoSelectorTypes =\n  | 'QUESTION_AND_ANSWER'\n  | 'PREPAREDNESS'\n  | 'NEGATIVE_BEHAVIOR'\n  | 'ATTENDANCE'\n  | 'TASK_CHECK'\n  | 'INFO'\n  | 'STATUS'\n\nexport const StudentInfoSelector = ({}: StudentInfoSelectorProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  const handleSelection = (selection: StudentInfoSelectorTypes) => {\n    event({ type: 'SET_STUDENT_INFO_SELECTOR', payload: selection })\n  }\n\n  return (\n    <StudentInfoSelectorContainer>\n      <StudentInfoSelectorButton\n        style={\n          state.context.studentInfoSelector === 'ATTENDANCE'\n            ? { background: 'var(--red)', color: 'var(--white)' }\n            : {}\n        }\n        onClick={() => handleSelection('ATTENDANCE')}\n      >\n        A\n      </StudentInfoSelectorButton>\n      <StudentInfoSelectorButton\n        style={\n          state.context.studentInfoSelector === 'PREPAREDNESS'\n            ? { background: 'var(--red)', color: 'var(--white)' }\n            : {}\n        }\n        onClick={() => handleSelection('PREPAREDNESS')}\n      >\n        P\n      </StudentInfoSelectorButton>\n      <StudentInfoSelectorButton\n        style={\n          state.context.studentInfoSelector === 'STATUS'\n            ? { background: 'var(--red)', color: 'var(--white)' }\n            : {}\n        }\n        onClick={() => handleSelection('STATUS')}\n      >\n        S\n      </StudentInfoSelectorButton>\n      <StudentInfoSelectorButton\n        style={\n          state.context.studentInfoSelector === 'QUESTION_AND_ANSWER'\n            ? { background: 'var(--red)', color: 'var(--white)' }\n            : {}\n        }\n        onClick={() => handleSelection('QUESTION_AND_ANSWER')}\n      >\n        Q&A\n      </StudentInfoSelectorButton>\n      <StudentInfoSelectorButton\n        style={\n          state.context.studentInfoSelector === 'NEGATIVE_BEHAVIOR'\n            ? { background: 'var(--red)', color: 'var(--white)' }\n            : {}\n        }\n        onClick={() => handleSelection('NEGATIVE_BEHAVIOR')}\n      >\n        -\n      </StudentInfoSelectorButton>\n      <StudentInfoSelectorButton\n        style={\n          state.context.studentInfoSelector === 'TASK_CHECK'\n            ? { background: 'var(--red)', color: 'var(--white)' }\n            : {}\n        }\n        onClick={() => handleSelection('TASK_CHECK')}\n      >\n        T\n      </StudentInfoSelectorButton>\n      <StudentInfoSelectorButton\n        style={\n          state.context.studentInfoSelector === 'INFO'\n            ? { background: 'var(--red)', color: 'var(--white)' }\n            : {}\n        }\n        onClick={() => handleSelection('INFO')}\n      >\n        Info\n      </StudentInfoSelectorButton>\n    </StudentInfoSelectorContainer>\n  )\n}\n","import {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  updateDynamicLesson,\n  updateDynamicLessonVariables,\n  DynamicLessonEnums,\n  ActivityTimeEnum,\n  controlWarmUp,\n  controlWarmUpVariables,\n} from '../../../../../../schemaTypes'\nimport { DynamicLessonButton } from '../../styles/classControlPanelStyles'\nimport {\n  ApolloCache,\n  DefaultContext,\n  MutationFunctionOptions,\n  gql,\n  useMutation,\n} from '@apollo/client'\nimport { useMarkingPeriodContextProvider } from '../../../../../../contexts/markingPeriod/MarkingPeriodContext'\n\nexport type WarmUpManagerProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  presentStudentList: string[]\n  updateDynamicLesson: (\n    options?:\n      | MutationFunctionOptions<\n          updateDynamicLesson,\n          updateDynamicLessonVariables,\n          DefaultContext,\n          ApolloCache<any>\n        >\n      | undefined,\n  ) => void\n}\n\nexport const CONTROL_WARM_UP_MUTATION = gql`\n  mutation controlWarmUp($input: ControlWarmUpInput!) {\n    controlWarmUp(input: $input) {\n      protocols {\n        _id\n      }\n    }\n  }\n`\n\nexport const WarmUpManager = ({\n  lesson,\n  presentStudentList,\n  updateDynamicLesson,\n}: WarmUpManagerProps) => {\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const [controlWarmUp] = useMutation<controlWarmUp, controlWarmUpVariables>(\n    CONTROL_WARM_UP_MUTATION,\n    {\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [\n        'findLessonByCourseAndDate',\n        'findStudentByIdForTeachersAid',\n      ],\n    },\n  )\n\n  const { isActive, academicOutcomeTypes, activityType, task } =\n    lesson.beforeActivity\n\n  return (\n    <>\n      {lesson.lessonType === 'INTRODUCTORY' ? (\n        <DynamicLessonButton\n          currentLessonSetting={lesson.dynamicLesson === 'WARM_UP'}\n        >\n          Quiz\n        </DynamicLessonButton>\n      ) : (\n        <>\n          {task === 'Quiz' && (\n            <DynamicLessonButton\n              currentLessonSetting={lesson.dynamicLesson === 'WARM_UP'}\n            >\n              Quiz\n            </DynamicLessonButton>\n          )}\n          :\n          <>\n            <DynamicLessonButton\n              currentLessonSetting={isActive}\n              onClick={() => {\n                if (!isActive) {\n                  controlWarmUp({\n                    variables: {\n                      input: {\n                        lessonId: lesson._id!,\n                        isActive: true,\n                        academicOutcomeType: academicOutcomeTypes,\n                        markingPeriod:\n                          markingPeriodState.context.currentMarkingPeriod,\n                        protocolActivityType: activityType,\n                        studentIds: presentStudentList,\n                        task: task,\n                        activityTime: ActivityTimeEnum.BEFORE,\n                      },\n                    },\n                  })\n                }\n              }}\n            >\n              Start\n            </DynamicLessonButton>\n            <DynamicLessonButton\n              currentLessonSetting={!isActive}\n              onClick={() => {\n                controlWarmUp({\n                  variables: {\n                    input: {\n                      lessonId: lesson._id!,\n                      isActive: false,\n                      academicOutcomeType: academicOutcomeTypes,\n                      markingPeriod:\n                        markingPeriodState.context.currentMarkingPeriod,\n                      protocolActivityType: activityType,\n                      studentIds: presentStudentList,\n                      task: task,\n                      activityTime: ActivityTimeEnum.BEFORE,\n                    },\n                  },\n                })\n                updateDynamicLesson({\n                  variables: {\n                    input: {\n                      lessonId: lesson._id!,\n                      dynamicLessonUpdate: DynamicLessonEnums.LESSON_DETAILS,\n                    },\n                  },\n                })\n              }}\n            >\n              Complete\n            </DynamicLessonButton>\n          </>\n        </>\n      )}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport {\n  updateDynamicLesson,\n  updateDynamicLessonVariables,\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  DynamicLessonEnums,\n  createBatchStudentBehavior,\n  createBatchStudentBehaviorVariables,\n} from '../../../../../../schemaTypes'\nimport {\n  DynamicLessonHeader,\n  DynamicLessonButton,\n  DynamicLessonContainer,\n  DynamicLessonOnButton,\n  DynamicLessonOffButtonContainer,\n  DynamicLessonOffButton,\n  DynamicLessonButtonContainer,\n} from '../../styles/classControlPanelStyles'\nimport { WarmUp } from '../../../../../lesson/lesson-components/WarmUp'\n\nimport { CoolDownManager } from '../coolDown-manager/CoolDownManager'\nimport { StudentInfoSelector } from '../center-console/StudentInfoSelector'\nimport { CREATE_BEHAVIOR_MUTATION } from '../../student-info/behavior/DailyBehavior'\nimport { WarmUpManager } from './WarmUpManager'\n\nexport type DynamicLessonManagerProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n  presentStudentList: string[]\n}\n\nexport type DynamicLessonButtonProps = {\n  currentLessonSetting?: boolean\n}\n\nexport const UPDATE_DYNAMIC_LESSON_MUTATION = gql`\n  mutation updateDynamicLesson($input: UpdateDynamicLessonInput!) {\n    UpdateDynamicLesson(input: $input) {\n      lesson {\n        _id\n        dynamicLesson\n      }\n    }\n  }\n`\nexport const CREATE_BATCH_STUDENT_BEHAVIOR_MUTATION = gql`\n  mutation createBatchStudentBehavior(\n    $input: CreateBatchStudentBehaviorInput!\n  ) {\n    createBatchStudentBehavior(input: $input) {\n      studentBehaviors {\n        _id\n      }\n    }\n  }\n`\nexport const DynamicLessonManager = ({\n  lesson,\n  presentStudentList,\n}: DynamicLessonManagerProps) => {\n  const [updateDynamicLesson] = useMutation<\n    updateDynamicLesson,\n    updateDynamicLessonVariables\n  >(UPDATE_DYNAMIC_LESSON_MUTATION, {\n    onCompleted: (data) => console.log(data.UpdateDynamicLesson),\n    refetchQueries: ['findLessonByCourseAndDate'],\n  })\n\n  const [createBatchStudentBehavior] = useMutation<\n    createBatchStudentBehavior,\n    createBatchStudentBehaviorVariables\n  >(CREATE_BATCH_STUDENT_BEHAVIOR_MUTATION, {\n    variables: {\n      input: {\n        behaviorTypeId: '62a33f0c2c8c161570b3c258'!,\n        markingPeriod: lesson.assignedMarkingPeriod,\n        responsibilityPoints: 2,\n        studentIds: presentStudentList,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findStudentByIdForTeachersAid'],\n  })\n\n  const handleClick = (dynamicLessonSetting: DynamicLessonEnums) => {\n    updateDynamicLesson({\n      variables: {\n        input: {\n          lessonId: lesson._id!,\n          dynamicLessonUpdate: dynamicLessonSetting,\n        },\n      },\n    })\n    // lesson.lessonType === 'REINFORCEMENT' &&\n    !lesson.lessonStarted && createBatchStudentBehavior()\n  }\n\n  return (\n    <DynamicLessonContainer>\n      <DynamicLessonHeader>Dynamic Lesson</DynamicLessonHeader>\n      <div\n        style={{ gridColumn: '1/-1', display: 'grid', justifyItems: 'center' }}\n      >\n        <StudentInfoSelector />\n      </div>\n      {lesson.dynamicLesson === 'OFF' ? (\n        <DynamicLessonOnButton\n          // currentLessonSetting={}\n          onClick={() => handleClick(DynamicLessonEnums.LESSON_DETAILS)}\n        >\n          Start Lesson\n        </DynamicLessonOnButton>\n      ) : (\n        <>\n          <DynamicLessonButtonContainer>\n            {lesson.dynamicLesson === 'WARM_UP' ? (\n              <WarmUpManager\n                lesson={lesson}\n                presentStudentList={presentStudentList}\n                updateDynamicLesson={updateDynamicLesson}\n              />\n            ) : (\n              <>\n                {!lesson.beforeActivity.completed ? (\n                  <DynamicLessonButton\n                    // currentLessonSetting={lesson.dynamicLesson === 'WARM_UP'}\n                    onClick={() => handleClick(DynamicLessonEnums.WARM_UP)}\n                  >\n                    Warm Up\n                  </DynamicLessonButton>\n                ) : (\n                  <div>Completed</div>\n                )}\n              </>\n            )}\n          </DynamicLessonButtonContainer>\n          <DynamicLessonButton\n            currentLessonSetting={lesson.dynamicLesson === 'LESSON_DETAILS'}\n            onClick={() => handleClick(DynamicLessonEnums.LESSON_DETAILS)}\n          >\n            Lesson Details\n          </DynamicLessonButton>\n          <DynamicLessonButton\n            currentLessonSetting={lesson.dynamicLesson === 'VOCAB'}\n            onClick={() => handleClick(DynamicLessonEnums.VOCAB)}\n          >\n            Vocab\n          </DynamicLessonButton>\n          <DynamicLessonButtonContainer>\n            {lesson.dynamicLesson === 'EXIT_ACTIVITY' ? (\n              <CoolDownManager\n                lesson={lesson}\n                presentStudentList={presentStudentList}\n                updateDynamicLesson={updateDynamicLesson}\n              />\n            ) : (\n              <>\n                {!lesson.afterActivity.completed ? (\n                  <DynamicLessonButton\n                    // currentLessonSetting={lesson.dynamicLesson === 'EXIT_ACTIVITY'}\n                    onClick={() =>\n                      handleClick(DynamicLessonEnums.EXIT_ACTIVITY)\n                    }\n                  >\n                    Cool Down\n                  </DynamicLessonButton>\n                ) : (\n                  <div>Completed</div>\n                )}\n              </>\n            )}\n          </DynamicLessonButtonContainer>\n          <DynamicLessonOffButtonContainer>\n            <DynamicLessonOffButton\n              // currentLessonSetting={}\n              onClick={() => {\n                handleClick(DynamicLessonEnums.OFF)\n                console.log('click')\n              }}\n            >\n              End Lesson\n            </DynamicLessonOffButton>\n          </DynamicLessonOffButtonContainer>\n        </>\n      )}\n    </DynamicLessonContainer>\n  )\n}\n","import { useMutation } from '@apollo/client'\nimport {\n  findLessonByCourseAndDate_findLessonByCourseAndDate_lesson,\n  updateDynamicLesson,\n  updateDynamicLessonVariables,\n} from '../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { MainScreenControlButton } from '../../styles/classControlPanelStyles'\nimport { UPDATE_DYNAMIC_LESSON_MUTATION } from '../DynamicLesson/DynamicLessonManager'\n\nexport type MainScreenManagerProps = {\n  lesson: findLessonByCourseAndDate_findLessonByCourseAndDate_lesson\n}\n\nexport const MainScreenManager = ({ lesson }: MainScreenManagerProps) => {\n  const [, event] = useTeachersAidContextProvider()\n\n  const [updateDynamicLeson] = useMutation<\n    updateDynamicLesson,\n    updateDynamicLessonVariables\n  >(UPDATE_DYNAMIC_LESSON_MUTATION, {\n    onCompleted: (data) => console.log(data.UpdateDynamicLesson),\n    refetchQueries: ['findLessonByCourseAndDate'],\n  })\n\n  return (\n    <>\n      <MainScreenControlButton\n        onClick={() => event({ type: 'CHANGE_MAIN_SCREEN_SEATING_CHART' })}\n      >\n        Desk View\n      </MainScreenControlButton>\n      <MainScreenControlButton\n        // onClick={() => event({ type: 'CHANGE_MAIN_SCREEN_VIRTUAL_ATTENDANCE' })}\n        onClick={() => event({ type: 'CHANGE_MAIN_SCREEN_STUDENT_STATUS' })}\n      >\n        Student Status\n      </MainScreenControlButton>\n      <MainScreenControlButton\n        onClick={() =>\n          event({ type: 'CHANGE_MAIN_SCREEN_WARMUP_EXIT_TICKET_VIEWER' })\n        }\n      >\n        Protocol Responses\n      </MainScreenControlButton>\n      <MainScreenControlButton\n        onClick={() => event({ type: 'CHANGE_MAIN_SCREEN_HOMEWORK_ASSIGNER' })}\n      >\n        Assignments\n      </MainScreenControlButton>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  PeriodSelectDisplayContainer,\n  ProtocolManagerContainer,\n  DynamicLessonContainer,\n  CenteredDiv,\n  MainScreenManagerContainer,\n} from '../../styles/classControlPanelStyles'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { PeriodSelectorDisplay } from './PeriodSelectorDisplay'\nimport { ProtocolManager } from '../protocol-manager/ProtocolManager'\nimport { DynamicLessonManager } from '../DynamicLesson/DynamicLessonManager'\nimport {\n  findLessonByCourseAndDate,\n  findLessonByCourseAndDateVariables,\n} from '../../../../../../schemaTypes'\n\nimport { date } from '../../../../../../utils'\nimport { useQuery } from '@apollo/client'\nimport { FIND_LESSON_QUERY } from '../../../../../lesson/LessonMainMenu'\nimport { MainScreenManager } from './MainScreenManager'\nimport { Protocols } from '../protocols/Protocols'\nimport { StudentInfoSelector } from './StudentInfoSelector'\n\nexport type ControlPanelDisplayProps = { presentStudentList: string[] }\n\nexport const ControlPanelDisplay = ({\n  presentStudentList,\n}: ControlPanelDisplayProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  const { loading, data } = useQuery<\n    findLessonByCourseAndDate,\n    findLessonByCourseAndDateVariables\n  >(FIND_LESSON_QUERY, {\n    variables: {\n      input: {\n        courseId: state.context.courseInfo!.course._id!,\n        lessonDate: date,\n      },\n    },\n    onCompleted: (data) => {\n      data.findLessonByCourseAndDate.lesson &&\n        event({\n          type: 'LOAD_PROTOCOLS',\n          payload: data.findLessonByCourseAndDate.lesson.duringActivities,\n        })\n      data.findLessonByCourseAndDate.lesson &&\n        event({\n          type: 'SET_LESSON_ID',\n          payload: data.findLessonByCourseAndDate.lesson._id!,\n        })\n    },\n    pollInterval: 1000,\n    onError: (error) => console.error(error),\n  })\n\n  if (loading)\n    return (\n      <CenteredDiv style={{ display: 'grid', gridTemplateRows: '1fr 4fr' }}>\n        <StudentInfoSelector />\n        <div>No Lesson Scheduled for Today</div>\n      </CenteredDiv>\n    )\n\n  return (\n    <>\n      {state.matches('controlPanelActions.dynamicLesson') &&\n        state.context.courseInfo._id &&\n        !state.context.courseSelectVisible && (\n          <>\n            {data?.findLessonByCourseAndDate.lesson ? (\n              <DynamicLessonManager\n                presentStudentList={presentStudentList!}\n                lesson={data?.findLessonByCourseAndDate.lesson!}\n              />\n            ) : (\n              <CenteredDiv\n                style={{ display: 'grid', gridTemplateRows: '1fr 4fr' }}\n              >\n                <StudentInfoSelector />\n                <div>No Lesson Scheduled for Today</div>\n              </CenteredDiv>\n            )}\n          </>\n        )}\n      {state.matches('controlPanelActions.protocolManager')! &&\n        state.context.courseInfo._id! &&\n        !state.context.courseSelectVisible && (\n          <>\n            {data?.findLessonByCourseAndDate.lesson ? (\n              <>\n                <ProtocolManager\n                  protocols={\n                    data?.findLessonByCourseAndDate.lesson.duringActivities!\n                  }\n                  lesson={data?.findLessonByCourseAndDate.lesson!}\n                  presentStudentList={presentStudentList}\n                />\n                {/* <Protocols\n                  protocols={\n                    data?.findLessonByCourseAndDate.lesson.duringActivities!\n                  }\n                  lesson={data?.findLessonByCourseAndDate.lesson!}\n                /> */}\n              </>\n            ) : (\n              <CenteredDiv>\n                <div>No Lesson Scheduled for Today</div>\n              </CenteredDiv>\n            )}\n          </>\n        )}\n      {state.matches('controlPanelActions.mainScreenManager')! &&\n        state.context.courseInfo._id &&\n        !state.context.courseSelectVisible && (\n          <MainScreenManagerContainer>\n            <MainScreenManager\n              lesson={data?.findLessonByCourseAndDate.lesson!}\n            />\n          </MainScreenManagerContainer>\n        )}\n\n      {state.context.courseSelectVisible && (\n        <PeriodSelectDisplayContainer>\n          <PeriodSelectorDisplay />\n        </PeriodSelectDisplayContainer>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { PeriodSelect } from './PeriodSelect'\nimport { CenterPanelDisplay } from '../../styles/classControlPanelStyles'\nimport { ControlPanelDisplay } from './ControlPanelDisplay'\n\nexport type ClassControlPanelProps = { presentStudentList: string[] }\n\nexport const ClassControlPanel = ({\n  presentStudentList,\n}: ClassControlPanelProps) => {\n  return (\n    <CenterPanelDisplay>\n      <PeriodSelect />\n      <ControlPanelDisplay presentStudentList={presentStudentList} />\n    </CenterPanelDisplay>\n  )\n}\n","import React, { FC, useState, useCallback } from 'react'\nimport {\n  RandomStudentGeneratorContainer,\n  RandomStudentGeneratorButton,\n} from '../../styles/classControlPanelStyles'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { useRollingArray } from '../../../../../../hooks/useRollingArray'\n\nexport type RandomStudentGeneratorProps = { presentStudentList: string[] }\n\nexport const RandomStudentGenerator = ({\n  presentStudentList,\n}: RandomStudentGeneratorProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  // const presentStudentList = state.context\n  // \t.courseInfo!.assignedSeats.filter(\n  // \t\t(seat) =>\n  // \t\t\tseat.student &&\n  // \t\t\t!seat.student.hasAbsences\n  // \t\t\t\t.map((absence) => absence.dayAbsent)\n  // \t\t\t\t.includes(new Date().toLocaleDateString())\n  // \t)\n  // \t.map((student) => student.student?._id)\n\n  const [selectedStudents, registerNewStudent] = useRollingArray(\n    Math.floor(presentStudentList.length * 0.6),\n  )\n\n  const randomCurrentStudent =\n    presentStudentList[\n      Math.floor(Math.random() * presentStudentList.length + 1)\n    ]\n\n  const [currentStudent, setCurrentStudent] = useState(randomCurrentStudent!)\n\n  // Math.floor(Math.random() * presentStudentList.length + 1)\n  //   useEffect(() => {\n  //     if (currentStudent === undefined) {\n  //       selectNewStudent()\n  //       event({\n  //         type: 'SET_STUDENT_ID',\n  //         payload: currentStudent,\n  //       })\n  //     }\n  //   }, [currentStudent])\n\n  const selectNewStudent = useCallback(() => {\n    // Rather than randomising until we get a new student, instead\n    // generate the list of available students by excluding the\n    // recently called students.\n    const availableStudents = presentStudentList.filter(\n      (student) => !selectedStudents.includes(student),\n    )\n\n    const randomStudent =\n      availableStudents[Math.floor(Math.random() * availableStudents.length)]\n    // Add the new student to our rolling array\n    registerNewStudent(randomStudent)\n    // Update the react component;\n    setCurrentStudent(randomStudent!)\n  }, [selectedStudents, presentStudentList, registerNewStudent])\n\n  return (\n    <RandomStudentGeneratorContainer>\n      <RandomStudentGeneratorButton\n        onClick={() => {\n          selectNewStudent()\n          event({\n            type: 'SET_STUDENT_ID',\n            payload: currentStudent,\n          })\n        }}\n      >\n        Random Student\n      </RandomStudentGeneratorButton>\n    </RandomStudentGeneratorContainer>\n  )\n}\n","import { useState } from 'react'\n\nexport const useRollingArray = (maxLength: number) => {\n  const [arr, setArr] = useState<any>([])\n  return [\n    arr,\n    // Function to add a new student\n    (student: any) => {\n      // We can't mutate the state, so we must return a new array.\n      // [student, ...arr] adds the new student to the front, and\n      // slice(0, length) pops any extras off the end\n      setArr([student, ...arr].slice(0, maxLength))\n    },\n  ]\n}\n","import styled from 'styled-components'\n\nexport const TimerContainer = styled.div`\n  display: grid;\n\n  /* justify-items: center;\n  align-items: center; */\n  /* border-left: 1px solid var(--white); */\n`\n\nexport const TimerControlsContainer = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-rows: 1fr 1fr;\n  width: 100%;\n  justify-items: center;\n  align-items: center;\n`\nexport const TimerPresetContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  cursor: default;\n`\n\nexport const ReduceTimer = styled.div`\n  grid-row: 3/6;\n  grid-column: 1/4;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n`\n\nexport const TimerPresetDisplay = styled.div`\n  grid-row: 2/7;\n  grid-column: 4/8;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 5rem;\n`\n\nexport const IncreaseTimer = styled.div`\n  grid-row: 3/6;\n  grid-column: -1/-4;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 3rem;\n`\n\nexport const StartTimer = styled.button`\n  grid-row: -2/-3;\n  grid-column: 3/-3;\n  font-size: 1.2vw;\n  color: var(--blue);\n`\n\n// export const TimerPresetTimesContainer = styled.div`\n//   display: grid;\n//   grid-template-rows: 5fr 1fr;\n//   height: 100%;\n//   width: 100%;\n// `\n\n// export const TimerPreSetTimes = styled.div`\n//   display: grid;\n//   width: 100%;\n//   height: 100%;\n//   justify-items: center;\n//   align-items: center;\n//   font-size: 2rem;\n//   grid-template-columns: repeat(3, 1fr);\n//   /* grid-template-rows: 5fr 1fr; */\n// `\n\n// export const TimerStartButton = styled.button`\n//   width: 70%;\n//   display: grid;\n//   justify-items: center;\n//   align-items: center;\n// `\n\nexport const TimeDisplayFormat = styled.div`\n  font-size: 3rem;\n  width: 10vw;\n  display: grid;\n  border-bottom: 1px solid var(--white);\n  font-family: free-monospace;\n  justify-items: center;\n  align-items: center;\n  height: 90%;\n`\nexport const TimerControlsDisplay = styled.div`\n  display: grid;\n  width: 100%;\n  height: 70%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: 1fr 70%;\n`\nexport const TimerControl = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.2rem;\n`\nexport const ResetStyle = styled.div`\n  display: grid;\n  grid-column: span 3;\n  justify-items: center;\n  align-items: center;\n  font-size: 1.2rem;\n`\n","import React, { FC, Dispatch, SetStateAction } from 'react'\n\nimport Timer from 'react-compound-timer'\nimport {\n  TimerControlsContainer,\n  TimeDisplayFormat,\n  TimerControlsDisplay,\n  TimerControl,\n  ResetStyle,\n} from '../../styles/timerStyles'\n\nexport type TimerDisplayProps = {\n  presetTime: number\n  setStartTimer: Dispatch<SetStateAction<boolean>>\n}\ntype TimerProps = {\n  start?: any\n  resume: any\n  pause: any\n  stop: any\n  reset: any\n  timerState?: any\n  initialTime?: any\n}\n\nexport const TimerDisplay: FC<TimerDisplayProps> = ({\n  presetTime,\n  setStartTimer,\n}) => {\n  const doubleDigitSeconds = (time: number) =>\n    time.toString().split('').length === 1\n      ? '0' + time.toString()\n      : time.toString()\n\n  return (\n    <Timer\n      initialTime={presetTime}\n      direction=\"backward\"\n      startImmediately={true}\n    >\n      {({ resume, pause, stop, reset, timerState }: TimerProps) => {\n        return (\n          <TimerControlsContainer>\n            <TimeDisplayFormat>\n              <div style={{}}>\n                <Timer.Minutes />:\n                <Timer.Seconds formatValue={doubleDigitSeconds} />\n              </div>\n            </TimeDisplayFormat>\n\n            <TimerControlsDisplay>\n              {/* <button onClick={start}>Start</button> */}\n              <TimerControl>\n                <div onClick={pause}>Pause</div>\n              </TimerControl>\n              <TimerControl>\n                <div onClick={resume}>Resume</div>\n              </TimerControl>\n              <TimerControl onClick={reset}>\n                <div> Reset</div>\n              </TimerControl>\n              <ResetStyle>\n                <div\n                  onClick={() => {\n                    stop()\n                    setStartTimer(false)\n                  }}\n                >\n                  New Timer\n                </div>\n              </ResetStyle>\n            </TimerControlsDisplay>\n          </TimerControlsContainer>\n        )\n      }}\n    </Timer>\n  )\n}\n","import React, { FC, useState } from 'react'\nimport { TimerDisplay } from './TimerDisplay'\nimport {\n  TimerContainer,\n  TimerPresetContainer,\n  ReduceTimer,\n  IncreaseTimer,\n  StartTimer,\n  TimerPresetDisplay,\n} from '../../styles/timerStyles'\n\nexport type TimerPresetsProps = {}\n\nexport const TimerPresets: FC<TimerPresetsProps> = () => {\n  const [presetMinuteValue, setPresetMinuteValue] = useState(0)\n  const [startTimer, setStartTimer] = useState(false)\n  return (\n    <TimerContainer>\n      {!startTimer ? (\n        <TimerPresetContainer>\n          <ReduceTimer\n            onClick={() => {\n              if (presetMinuteValue > 0) setPresetMinuteValue((c) => c - 1)\n            }}\n          >\n            <div>-</div>\n          </ReduceTimer>\n          <TimerPresetDisplay>\n            <div>{presetMinuteValue}</div>\n          </TimerPresetDisplay>\n          <IncreaseTimer onClick={() => setPresetMinuteValue((c) => c + 1)}>\n            <div>+</div>\n          </IncreaseTimer>\n\n          <StartTimer onClick={() => setStartTimer(true)}>\n            <div>Start </div>\n          </StartTimer>\n        </TimerPresetContainer>\n      ) : (\n        <TimerDisplay\n          presetTime={presetMinuteValue * 1000 * 60}\n          setStartTimer={setStartTimer}\n        />\n      )}\n    </TimerContainer>\n  )\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { DeskDisplay } from '../../styles/seatingChartStyles'\nimport {\n  findStudentInfoByStudentIdForDesk,\n  findStudentInfoByStudentIdForDeskVariables,\n  me_me,\n  StudentCohortEnum,\n} from '../../../../../../schemaTypes'\nimport { useSchoolDayContextProvider } from '../../../../school-day/state/SchoolDayContext'\nimport { gql, useQuery } from '@apollo/client'\nimport { useUserContextProvider } from '../../../../../../contexts/UserContext'\n\nexport type DeskProps = { deskNumber: number }\n\nexport const FIND_STUDENT_INFO_FOR_DESK_QUERY = gql`\n  query findStudentInfoByStudentIdForDesk($input: FindStudentByIdInput!) {\n    findStudentById(input: $input) {\n      student {\n        _id\n        isActive\n        firstName\n        hasAbsences {\n          _id\n          dayAbsent\n        }\n      }\n    }\n  }\n`\n\nexport const Desk = ({ deskNumber }: DeskProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n  const me: me_me = useUserContextProvider()\n  const [schoolDayState] = useSchoolDayContextProvider()\n  const todaysDate = new Date().toLocaleDateString()\n  const [cohortSwitch, setcohortSwitch] = useState(false)\n\n  const [desk] = state.context.courseInfo!.assignedSeats.filter(\n    (seat) => seat.deskNumber === deskNumber,\n  )\n\n  const { loading, data } = useQuery<\n    findStudentInfoByStudentIdForDesk,\n    findStudentInfoByStudentIdForDeskVariables\n  >(FIND_STUDENT_INFO_FOR_DESK_QUERY, {\n    variables: {\n      input: { studentId: desk.student?._id! },\n    },\n    // onCompleted: (data) =>\n    // console.log(data.findStudentById.student.hasAbsences),\n    // pollInterval: 1000,\n    onError: (error) => console.error(error + 'desk'),\n  })\n\n  const isAbsent = data?.findStudentById.student.hasAbsences.some(\n    (absence) => absence.dayAbsent === new Date().toLocaleDateString(),\n  )\n\n  const redWeek = schoolDayState.context.currentSchoolDay.cohortWeek === 'RED'\n\n  return (\n    <>\n      {!state.context.courseInfo!.cohortBasedSeating && (\n        <DeskDisplay\n          absent={isAbsent!}\n          active={data?.findStudentById.student.isActive!}\n          assigned={desk.student !== null}\n          picked={state.context.studentId === desk.student?._id!}\n          onClick={() => {\n            if (desk.student) {\n              event({ type: 'SET_STUDENT_ID', payload: desk.student?._id! })\n            }\n          }}\n        >\n          <div>{desk.student?.firstName ? desk.student.firstName : null}</div>\n        </DeskDisplay>\n      )}\n      {state.context.courseInfo!.cohortBasedSeating && redWeek && (\n        <DeskDisplay\n          absent={isAbsent!}\n          active={data?.findStudentById.student.isActive!}\n          assigned={desk.redCohortStudent !== null}\n          picked={state.context.studentId === desk.student?._id!}\n          onClick={() => {\n            console.log(desk.redCohortStudent?._id!)\n            if (desk.redCohortStudent) {\n              event({\n                type: 'SET_STUDENT_ID',\n                payload: desk.redCohortStudent?._id!,\n              })\n            }\n          }}\n        >\n          <div>\n            {desk.redCohortStudent?.firstName\n              ? desk.redCohortStudent.firstName\n              : null}\n          </div>\n        </DeskDisplay>\n      )}\n      {state.context.courseInfo!.cohortBasedSeating && !redWeek && (\n        <DeskDisplay\n          absent={isAbsent!}\n          active={data?.findStudentById.student.isActive!}\n          picked={state.context.studentId === desk.student?._id!}\n          assigned={desk.whiteCohortStudent !== null}\n          onClick={() => {\n            if (desk.whiteCohortStudent) {\n              event({\n                type: 'SET_STUDENT_ID',\n                payload: desk.whiteCohortStudent?._id!,\n              })\n            }\n          }}\n        >\n          <div>\n            {desk.whiteCohortStudent?.cohort === StudentCohortEnum.WHITE &&\n              desk.whiteCohortStudent?.firstName}\n          </div>\n        </DeskDisplay>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  TwentyFourSeatFloorPlan,\n  PairSeatingGroup,\n  DeskContainer,\n  LeftSide,\n  RightSide,\n} from '../../styles/seatingChartStyles'\nimport { Desk } from './Desk'\n\nexport type TwentyFourSeatChartProps = {}\n\nexport const TwentyFourSeatChart = ({}: TwentyFourSeatChartProps) => {\n  return (\n    <TwentyFourSeatFloorPlan>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={1} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={2} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={3} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={4} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={5} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={6} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={7} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={8} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={9} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={10} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={11} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={12} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={13} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={14} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={15} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={16} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={17} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={18} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={19} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={20} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={21} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={22} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={23} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={24} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n    </TwentyFourSeatFloorPlan>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  TwelveSeatFloorPlan,\n  IndividualDeskContainer,\n  CenterSide,\n} from '../../styles/seatingChartStyles'\nimport { Desk } from './Desk'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\n\nexport type TwelveSeatChartProps = {}\n\nexport const TwelveSeatChart: FC<TwelveSeatChartProps> = () => {\n  const [state] = useTeachersAidContextProvider()\n\n  return (\n    <TwelveSeatFloorPlan>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={1} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={2} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={3} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={4} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={5} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={6} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={7} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={8} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={9} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={10} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={11} />\n        </IndividualDeskContainer>\n      </CenterSide>\n      <CenterSide>\n        <IndividualDeskContainer>\n          <Desk deskNumber={12} />\n        </IndividualDeskContainer>\n      </CenterSide>\n    </TwelveSeatFloorPlan>\n  )\n}\n","import React, { FC } from 'react'\nimport {\n  ThirtySeatFloorPlan,\n  PairSeatingGroup,\n  LeftSide,\n  DeskContainer,\n  RightSide,\n} from '../../styles/seatingChartStyles'\nimport { Desk } from './Desk'\n\nexport type ThirtySeatChartProps = {}\n\nexport const ThirtySeatChart: FC<ThirtySeatChartProps> = () => {\n  return (\n    <ThirtySeatFloorPlan>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={1} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={2} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={3} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={4} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={5} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={6} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={7} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={8} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={9} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={10} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={11} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={12} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={13} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={14} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={15} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={16} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={17} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={18} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={19} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={20} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={21} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={22} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={23} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={24} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={25} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={26} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={27} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={28} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={29} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={30} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n    </ThirtySeatFloorPlan>\n  )\n}\n","import React from 'react'\nimport {\n  CenterSide,\n  DeskContainer,\n  PairSeatingGroup,\n  RightSide,\n  ThirtySixSeatFloorPlan,\n  TripleSeatDeskContainer,\n  TripleSeatingGroup,\n} from '../../styles/seatingChartStyles'\nimport { Desk } from './Desk'\n\nexport type ThirtySixSeatChartProps = {}\n\nexport const ThirtySixSeatChart = ({}: ThirtySixSeatChartProps) => {\n  return (\n    <ThirtySixSeatFloorPlan>\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={1} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={2} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={3} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={4} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={5} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={6} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={7} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={8} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={9} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={10} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={11} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={12} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={13} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={14} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={15} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={16} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={17} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={18} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={19} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={20} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={21} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={22} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={23} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={24} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={25} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={26} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={27} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={28} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={29} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={30} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={31} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={32} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={33} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n\n      <TripleSeatingGroup>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={34} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={35} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n        <CenterSide>\n          <TripleSeatDeskContainer>\n            <Desk deskNumber={36} />\n          </TripleSeatDeskContainer>\n        </CenterSide>\n      </TripleSeatingGroup>\n    </ThirtySixSeatFloorPlan>\n  )\n}\n","import React from 'react'\nimport {\n  TwentyFourSeatFloorPlan,\n  PairSeatingGroup,\n  LeftSide,\n  DeskContainer,\n  RightSide,\n  FiveRowColumn,\n  IndividualDeskContainer,\n  TwentySixIndividualSeatFloorPlan,\n  ThirtySeatPairsFloorPlan,\n} from '../../styles/seatingChartStyles'\nimport { Desk } from './Desk'\n\nexport type ThirtySeatPairsProps = {}\n\nexport const ThirtySeatPairs = ({}: ThirtySeatPairsProps) => {\n  return (\n    <ThirtySeatPairsFloorPlan>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={1} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={2} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={3} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={4} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={5} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={6} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={7} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={8} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={9} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={10} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={11} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={12} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={13} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={14} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={15} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={16} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={17} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={18} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={19} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={20} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={21} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={22} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={23} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={24} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={25} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={26} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={27} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>\n            <Desk deskNumber={28} />\n          </DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n      <PairSeatingGroup>\n        <LeftSide>\n          <DeskContainer>\n            <Desk deskNumber={29} />\n          </DeskContainer>\n        </LeftSide>\n        <RightSide>\n          <DeskContainer>{/* <Desk deskNumber={30} /> */}</DeskContainer>\n        </RightSide>\n      </PairSeatingGroup>\n    </ThirtySeatPairsFloorPlan>\n  )\n}\n","import React, { FC } from 'react'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { TwentyFourSeatChart } from './TwentyFourSeatChart'\nimport { TwelveSeatChart } from './TwelveSeatChart'\nimport { ThirtySeatChart } from './ThirtySeatChart'\nimport { ThirtySixSeatChart } from './ThirtySixSeatChart'\nimport { TwentySixIndividualSeatChart } from './TwentySixIndividualSeatChart'\nimport { ThirtySeatPairs } from './ThirtySixSeatPairs'\n\nexport type SeatingChartProps = {}\n\nexport const SeatingChart: FC<SeatingChartProps> = () => {\n  const [state] = useTeachersAidContextProvider()\n  const courseMaxSize = state.context.courseInfo!.assignedSeats.length\n\n  return (\n    <>\n      {courseMaxSize === 12 ? (\n        <TwelveSeatChart />\n      ) : courseMaxSize === 24 ? (\n        <TwentyFourSeatChart />\n      ) : courseMaxSize === 30 ? (\n        <ThirtySeatChart />\n      ) : courseMaxSize === 36 ? (\n        <ThirtySixSeatChart />\n      ) : courseMaxSize > 25 && courseMaxSize < 30 ? (\n        <ThirtySeatPairs />\n      ) : null}\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ResponseTitle = styled.div`\n  font-size: 4vh;\n  text-decoration: underline;\n  text-align: center;\n  margin-bottom: 2vh;\n`\n\nexport const ResponseContainer = styled.div`\n  display: grid;\n  /* grid-auto-rows: 8vh; */\n  grid-row-gap: 2vh;\n  overflow: scroll;\n  height: 50vh;\n`\n\nexport const ResponseRowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr 4fr;\n`\nexport const NameOfResponder = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  /* margin-left: 3%; */\n`\nexport const ResponseButtonContainer = styled.div`\n  display: grid;\n  align-self: center;\n  justify-self: start;\n  text-align: center;\n`\n\nexport type AssessmentButtonType = {\n  assessed: boolean\n}\n\nexport const AssessmentButton = styled.button<AssessmentButtonType>`\n  background-color: ${({ assessed }) => {\n    return assessed ? 'var(--blue)' : 'var(--grey)'\n  }};\n  color: ${({ assessed }) => (assessed ? 'var(--white)' : 'var(--blue)')};\n`\nexport const AssessmentManagerButton = styled.button`\n  height: 50%;\n`\nexport const CancelAssessmentButton = styled.button`\n  background-color: var(--red);\n  color: var(--white);\n  width: 15vw;\n`\nexport const ResponseAssessorCategoriesContainer = styled.div`\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  justify-items: center;\n  align-items: center;\n  font-size: 2vh;\n  cursor: pointer;\n`\nexport const ResponseAssessorCategoriesSelectables = styled.div``\n","import { gql } from '@apollo/client'\nimport {\n  findActiveProtocolsByCourse_findActiveProtocolsByCourse_protocols,\n  ProtocolAssessmentEnum,\n} from '../../../../../../schemaTypes'\nimport {\n  NameOfResponder,\n  ResponseButtonContainer,\n  ResponseRowContainer,\n} from '../../styles/responseAssessorStyle'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\n\nexport type ResponseAssessorProps = {\n  protocol: findActiveProtocolsByCourse_findActiveProtocolsByCourse_protocols\n}\nexport const ASSESS_INDIVIDITUAL_PROTOCOLS_MUTATION = gql`\n  mutation assessIndividualProtocols($input: AssessIndividualProtocolsInput!) {\n    assessIndividualProtocols(input: $input) {\n      protocol {\n        _id\n        response\n      }\n    }\n  }\n`\n\nexport const ResponseAssessor = ({ protocol }: ResponseAssessorProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  // const [assessProtocol] = useMutation<\n  //   assessIndividualProtocols,\n  //   assessIndividualProtocolsVariables\n  // >(ASSESS_INDIVIDITUAL_PROTOCOLS_MUTATION, {\n  //   onCompleted: (data) => console.log(data),\n  //   refetchQueries: ['findActiveProtocolsByCourse'],\n  // })\n  console.log(protocol)\n  return (\n    <ResponseRowContainer\n      onClick={() =>\n        event({ type: 'SET_STUDENT_ID', payload: protocol.student._id! })\n      }\n      style={\n        protocol.assessment !== ProtocolAssessmentEnum.REFUSED_TO_WORK\n          ? { color: 'var(--blue)' }\n          : { color: 'var(--red)' }\n      }\n    >\n      <NameOfResponder>\n        <div>\n          {protocol.student.lastName}, {protocol.student.firstName}\n        </div>\n      </NameOfResponder>\n      <ResponseButtonContainer>\n        {<div>{protocol.response}</div>}\n      </ResponseButtonContainer>\n    </ResponseRowContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport {\n  ActivityTimeEnum,\n  findActiveProtocolsByCourse,\n  findActiveProtocolsByCourseVariables,\n  findProtocolsByDate,\n  findProtocolsByDateVariables,\n} from '../../../../../../schemaTypes'\n\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  ResponseAssessorCategoriesContainer,\n  ResponseContainer,\n  ResponseTitle,\n} from '../../styles/responseAssessorStyle'\nimport { ResponseAssessor } from './ResponseAssessor'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport { useState } from 'react'\n\nexport type ProtocolResponseClassListProps = {}\n\nexport const FIND_ACTIVE_PROTOCOL_BY_COURSE_QUERY = gql`\n  query findActiveProtocolsByCourse($input: FindActiveProtocolsByCourseInput!) {\n    findActiveProtocolsByCourse(input: $input) {\n      protocols {\n        _id\n        student {\n          _id\n          schoolId\n          firstName\n          lastName\n        }\n        response\n        assessment\n        activityTime\n      }\n    }\n  }\n`\n\nexport const FIND_PROTOCOLS_BY_DATE_QUERY = gql`\n  query findProtocolsByDate($input: FindProtocolResponsesInput!) {\n    findProtocolsByDate(input: $input) {\n      protocols {\n        _id\n        student {\n          _id\n          schoolId\n          firstName\n          lastName\n        }\n        response\n        assessment\n        activityTime\n        task\n        lessonId\n        markingPeriod\n        protocolActivityType\n        assignedDate\n        academicOutcomeType\n      }\n    }\n  }\n`\n\nexport const ProtocolResponseClassList =\n  ({}: ProtocolResponseClassListProps) => {\n    const [state] = useTeachersAidContextProvider()\n\n    const { loading, data } = useQuery<\n      findActiveProtocolsByCourse,\n      findActiveProtocolsByCourseVariables\n    >(FIND_ACTIVE_PROTOCOL_BY_COURSE_QUERY, {\n      variables: {\n        input: {\n          courseId: state.context.courseInfo!.course._id!,\n        },\n      },\n      onCompleted: (data) => console.log(data),\n      pollInterval: 2000,\n      onError: (error) => console.error(error),\n    })\n    if (loading) return <div>Loading </div>\n\n    const { protocols } = data?.findActiveProtocolsByCourse!\n\n    return (\n      <>\n        <ResponseTitle>Responses</ResponseTitle>\n        <ResponseContainer>\n          {protocols!.map(\n            (protocol) =>\n              protocol.response && (\n                <ResponseAssessor key={protocol._id} protocol={protocol} />\n              ),\n          )}\n        </ResponseContainer>\n      </>\n    )\n  }\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  assignReadingGuidesForTeachersAid,\n  assignReadingGuidesForTeachersAidVariables,\n} from '../../../../../../../schemaTypes'\nimport { AssignButton } from '../../../styles/mainScreenStyles'\n\nexport type AssignReadingGuideForTeachersAidProps = {\n  lessonId: string\n  dueDate: string\n  studentIds: string[]\n  finished: boolean\n  loading: boolean\n}\n\nexport const ASSIGN_READING_GUIDE_FOR_TEACHERS_AID_MUTATION = gql`\n  mutation assignReadingGuidesForTeachersAid(\n    $input: AssignReadingGuidesInput!\n  ) {\n    assignReadingGuides(input: $input) {\n      readingGuides {\n        _id\n      }\n    }\n  }\n`\n\nexport const AssignReadingGuideForTeachersAid: FC<\n  AssignReadingGuideForTeachersAidProps\n> = ({ lessonId, dueDate, studentIds, finished, loading }) => {\n  const [assignReadingGuide, { called, data }] = useMutation<\n    assignReadingGuidesForTeachersAid,\n    assignReadingGuidesForTeachersAidVariables\n  >(ASSIGN_READING_GUIDE_FOR_TEACHERS_AID_MUTATION, {\n    variables: {\n      input: {\n        assignedDate: new Date().toLocaleDateString(),\n        associatedLessonId: lessonId,\n        dueDate,\n        studentIds,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n  return (\n    <>\n      {loading ? (\n        <div>Loading</div>\n      ) : (\n        <>\n          {data || finished ? (\n            <div>Finished</div>\n          ) : (\n            <AssignButton called={called} onClick={() => assignReadingGuide()}>\n              Assign\n            </AssignButton>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  findReadingGuidesByCourseIdAndAssignedDate,\n  findReadingGuidesByCourseIdAndAssignedDateVariables,\n} from '../../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../../state/TeachersAidContext'\nimport {\n  AssignmentBlockContainer,\n  TextStyle,\n} from '../../../styles/mainScreenStyles'\nimport { AssignReadingGuideForTeachersAid } from './AssignReadingGuideForTeachersAid'\n\nexport type LoadReadingGuidesProps = {}\n\nexport const FIND_READING_GUIDES_BY_COURSE_ID_AND_ASSIGNED_DATE_QUERY = gql`\n  query findReadingGuidesByCourseIdAndAssignedDate(\n    $input: FindReadingGuidesByCourseIdAndAssignedDateInput!\n  ) {\n    findReadingGuidesByCourseIdAndAssignedDate(input: $input) {\n      readingGuides {\n        _id\n        hasOwner {\n          _id\n          firstName\n          lastName\n        }\n        assigned\n        exempt\n        graded\n        dueDate\n        associatedLessonId\n        readings {\n          readingPages\n          readingSections\n        }\n        readingGuideFinal {\n          #problems\n          #biggestProblem\n          #importantPeople\n          #howArePeopleInvolvedInProblems\n          #reasonForBiggestProblem\n          #sectionConsequences\n          submitted\n        }\n      }\n    }\n  }\n`\n\nexport const LoadReadingGuides: FC<LoadReadingGuidesProps> = () => {\n  const [state] = useTeachersAidContextProvider()\n  const { loading, data } = useQuery<\n    findReadingGuidesByCourseIdAndAssignedDate,\n    findReadingGuidesByCourseIdAndAssignedDateVariables\n  >(FIND_READING_GUIDES_BY_COURSE_ID_AND_ASSIGNED_DATE_QUERY, {\n    variables: {\n      input: {\n        courseId: state.context.courseInfo!.course._id!,\n        assignedDate: new Date().toLocaleDateString(),\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  const dueDate =\n    data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides!.map(\n      (rg) => rg.dueDate,\n    )\n  const lessonId =\n    data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides!.map(\n      (rg) => rg.associatedLessonId,\n    ) as string[]\n  const studentIds =\n    data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides.map(\n      (rg) => rg.hasOwner._id,\n    ) as string[]\n  const finished =\n    data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides\n      .map((rg) => rg.assigned === true)\n      .includes(true)!\n  const assignmentTitle =\n    data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides.map(\n      (rg) => rg.readings,\n    )!\n  return (\n    <AssignmentBlockContainer>\n      {data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides.length! >\n      0 ? (\n        <>\n          <TextStyle>Assign Todays Reading Guide</TextStyle>\n          <br />\n          <div>\n            {assignmentTitle[0].readingPages}:{' '}\n            {assignmentTitle[0].readingSections}\n          </div>\n          <br />\n          <AssignReadingGuideForTeachersAid\n            studentIds={studentIds}\n            dueDate={dueDate! && dueDate![0]}\n            lessonId={lessonId! && lessonId![0]}\n            finished={finished}\n            loading={loading}\n          />\n        </>\n      ) : (\n        <>\n          {loading ? (\n            <div>Loading</div>\n          ) : (\n            <TextStyle>No Reading Guide Assigned Today</TextStyle>\n          )}\n        </>\n      )}\n    </AssignmentBlockContainer>\n  )\n}\n","import React from 'react'\nimport { findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides } from '../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  ReadingGuideControlArrowContainer,\n  ReadingGuideReviewContainer,\n} from '../../styles/mainScreenStyles'\nimport { IndividualReadingGuideReviewDisplay } from './IndividualReadingGuideReviewDisplay'\n\nexport type ReadingGuideSelectProps = {\n  readingGuides: findReadingGuidesByCourseIdAndAssignedDate_findReadingGuidesByCourseIdAndAssignedDate_readingGuides[]\n}\n\nexport const ReadingGuideSelect = ({\n  readingGuides,\n}: ReadingGuideSelectProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  const completedReadingGuides = readingGuides.filter(\n    (guide) => guide.graded && !guide.exempt,\n  )\n  return (\n    <ReadingGuideReviewContainer>\n      <ReadingGuideControlArrowContainer\n        onClick={() =>\n          event({\n            type: 'SET_CURRENT_READING_GUIDE_INDEX',\n            payload:\n              state.context.currentReadingGuideIndex > 0\n                ? state.context.currentReadingGuideIndex - 1\n                : 0,\n          })\n        }\n      >\n        &lt;\n      </ReadingGuideControlArrowContainer>\n      <div>\n        {/* <IndividualReadingGuideReviewDisplay\n          readingGuide={\n            completedReadingGuides[state.context.currentReadingGuideIndex]\n          }\n        /> */}\n      </div>\n      <ReadingGuideControlArrowContainer\n        onClick={() =>\n          event({\n            type: 'SET_CURRENT_READING_GUIDE_INDEX',\n            payload:\n              state.context.currentReadingGuideIndex <\n              completedReadingGuides.length - 1\n                ? state.context.currentReadingGuideIndex + 1\n                : 0,\n          })\n        }\n      >\n        &gt;\n      </ReadingGuideControlArrowContainer>\n    </ReadingGuideReviewContainer>\n  )\n}\n","import { useLazyQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport {\n  findReadingGuidesByCourseIdAndAssignedDate,\n  findReadingGuidesByCourseIdAndAssignedDateVariables,\n} from '../../../../../../schemaTypes'\nimport { dateConverter } from '../../../../../../utils'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { FIND_READING_GUIDES_BY_COURSE_ID_AND_ASSIGNED_DATE_QUERY } from '../homework-assigner/assign-reading-guide/LoadReadingGuides'\nimport { ReadingGuideSelect } from './ReadingGuideSelect'\n\nexport type ReadingGuideViewerProps = {}\n\nexport const ReadingGuideViewer = ({}: ReadingGuideViewerProps) => {\n  const [state] = useTeachersAidContextProvider()\n  const [date, setDate] = useState<string | null>(null)\n\n  const [getReadingGuides, { loading, data }] = useLazyQuery<\n    findReadingGuidesByCourseIdAndAssignedDate,\n    findReadingGuidesByCourseIdAndAssignedDateVariables\n  >(FIND_READING_GUIDES_BY_COURSE_ID_AND_ASSIGNED_DATE_QUERY, {\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n\n  return (\n    <div>\n      <div>Reading Guide Viewer</div>\n      <input\n        type=\"date\"\n        onChange={(e) =>\n          getReadingGuides({\n            variables: {\n              input: {\n                courseId: state.context.courseInfo!.course._id!,\n                assignedDate: dateConverter(e.target.value),\n              },\n            },\n          })\n        }\n      />\n      {data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides.length! >\n        0 && (\n        <ReadingGuideSelect\n          readingGuides={\n            data?.findReadingGuidesByCourseIdAndAssignedDate.readingGuides!\n          }\n        />\n      )}\n    </div>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC, useState } from 'react'\nimport {\n  assignEssayInTeachersAid,\n  assignEssayInTeachersAidVariables,\n} from '../../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../../state/TeachersAidContext'\nimport { AssignButton, ResponseStyle } from '../../../styles/mainScreenStyles'\n\nexport type AssignEssaysForTeachersAidProps = {\n  dueDate: string\n  studentIds: string[]\n  finished: boolean\n  loading: boolean\n}\nexport const ASSIGN_ESSAYS_MUTATION = gql`\n  mutation assignEssayInTeachersAid($input: AssignEssaysInput!) {\n    assignEssays(input: $input) {\n      essays {\n        _id\n      }\n    }\n  }\n`\nexport const AssignEssaysForTeachersAid: FC<\n  AssignEssaysForTeachersAidProps\n> = ({ studentIds, dueDate, finished, loading }) => {\n  const [state] = useTeachersAidContextProvider()\n\n  const [assignEssays, { called, data }] = useMutation<\n    assignEssayInTeachersAid,\n    assignEssayInTeachersAidVariables\n  >(ASSIGN_ESSAYS_MUTATION, {\n    variables: {\n      input: {\n        dueDate,\n        assignedDate: new Date().toLocaleDateString(),\n        associatedLessonId: state.context.associatedLessonId,\n        studentIds: studentIds,\n      },\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findEssaysByAssociatedLessonIdForTodaysClass'],\n  })\n\n  return (\n    <>\n      {loading ? (\n        <div>Loading</div>\n      ) : (\n        <div>\n          {data || finished ? (\n            <ResponseStyle>Finished</ResponseStyle>\n          ) : (\n            <AssignButton called={called} onClick={() => assignEssays()}>\n              Assign\n            </AssignButton>\n          )}\n        </div>\n      )}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  findEssaysByAssociatedLessonIdForTodaysClass,\n  findEssaysByAssociatedLessonIdForTodaysClassVariables,\n} from '../../../../../../../schemaTypes'\n\nimport { useTeachersAidContextProvider } from '../../../state/TeachersAidContext'\nimport {\n  AssignmentBlockContainer,\n  TextStyle,\n} from '../../../styles/mainScreenStyles'\nimport { AssignEssaysForTeachersAid } from './AssignEssaysForTeachersAid'\n\nexport type LoadEssaysProps = {}\n\nexport const FIND_ESSAY_FOR_TODAYS_CLASS_QUERY = gql`\n  query findEssaysByAssociatedLessonIdForTodaysClass(\n    $input: FindEssaysByAssociatedLessonIdInput!\n  ) {\n    findEssaysByAssociatedLessonId(input: $input) {\n      essays {\n        _id\n        hasOwner {\n          _id\n        }\n        dueDate\n        assigned\n        readings {\n          readingPages\n          readingSections\n        }\n      }\n    }\n  }\n`\n\nexport const LoadEssays: FC<LoadEssaysProps> = () => {\n  const [state] = useTeachersAidContextProvider()\n\n  const { loading, data } = useQuery<\n    findEssaysByAssociatedLessonIdForTodaysClass,\n    findEssaysByAssociatedLessonIdForTodaysClassVariables\n  >(FIND_ESSAY_FOR_TODAYS_CLASS_QUERY, {\n    variables: {\n      input: { associatedLessonId: state.context.associatedLessonId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  const dueDate = data?.findEssaysByAssociatedLessonId.essays!.map(\n    (essay) => essay.dueDate,\n  )\n  const studentIds = data?.findEssaysByAssociatedLessonId.essays.map(\n    (essay) => essay.hasOwner._id,\n  ) as string[]\n  const finished = data?.findEssaysByAssociatedLessonId.essays\n    .map((essay) => essay.assigned === true)\n    .includes(true)!\n  const assignmentTitle = data?.findEssaysByAssociatedLessonId.essays.map(\n    (essay) => essay.readings,\n  )!\n\n  return (\n    <AssignmentBlockContainer>\n      {data?.findEssaysByAssociatedLessonId.essays.length! > 0 ? (\n        <>\n          <TextStyle>Assign Today's Essay</TextStyle>\n          <br />\n          <div>\n            {assignmentTitle[0].readingPages}:{' '}\n            {assignmentTitle[0].readingSections}\n          </div>\n          <br />\n          <AssignEssaysForTeachersAid\n            dueDate={dueDate! && dueDate![0]}\n            studentIds={studentIds}\n            finished={finished}\n            loading={loading}\n          />\n        </>\n      ) : (\n        <>\n          {loading ? (\n            <div>Loading</div>\n          ) : (\n            <TextStyle>No Essay Assigned Today</TextStyle>\n          )}\n        </>\n      )}\n    </AssignmentBlockContainer>\n  )\n}\n","import React from 'react'\n\nexport type TextAnalysisAssignerProps = {}\n\nexport const TextAnalysisAssigner = ({}: TextAnalysisAssignerProps) => {\n  return (\n    <div>\n      <div>Text Analysis Assigner</div>\n    </div>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC, useState } from 'react'\nimport {\n  findQuizzesForCourseByAssignedDate,\n  findQuizzesForCourseByAssignedDateVariables,\n} from '../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  AssignmentControlItem,\n  AssignmentControlPanelContainer,\n  AssignmentControlSelector,\n  HomeworkAssignerTitleContainer,\n  HomeworkAssingerContainer,\n} from '../../styles/mainScreenStyles'\nimport { ReadingGuideViewer } from '../readingGuideViewer/ReadingGuideViewer'\nimport { LoadEssays } from './assign-essay/LoadEssays'\nimport { QuizControlPanel } from './assign-quizzes/QuizControlPanel'\nimport { LoadReadingGuides } from './assign-reading-guide/LoadReadingGuides'\nimport { TextAnalysisAssigner } from './assign-text-analysis/TextAnalysisAssigner'\n\nexport type HomeworkAssignerProps = { presentStudentList: string[] }\n\nexport const FIND_QUIZZES_BY_ASSIGNED_DATE_QUERY = gql`\n  query findQuizzesForCourseByAssignedDate(\n    $input: FindQuizzesForCourseByAssignedDateInput!\n  ) {\n    findQuizzesForCourseByAssignedDate(input: $input) {\n      quizzes {\n        _id\n        hasOwner {\n          firstName\n          lastName\n          _id\n        }\n        assigned\n        markingPeriod\n        assignedDate\n        exempt\n        isActive\n        startedQuiz\n        finishedQuiz\n        readings {\n          readingSections\n        }\n        score {\n          earnedPoints\n          maxPoints\n        }\n        startedQuiz\n      }\n    }\n  }\n`\n\nexport const HomeworkAssigner = ({\n  presentStudentList,\n}: HomeworkAssignerProps) => {\n  const [state] = useTeachersAidContextProvider()\n  const { loading, data } = useQuery<\n    findQuizzesForCourseByAssignedDate,\n    findQuizzesForCourseByAssignedDateVariables\n  >(FIND_QUIZZES_BY_ASSIGNED_DATE_QUERY, {\n    variables: {\n      input: {\n        courseId: state.context.courseInfo?.course._id!,\n        assignedDate: new Date().toLocaleDateString(),\n      },\n    },\n    pollInterval: 1000,\n    onCompleted: (data) =>\n      console.log(data?.findQuizzesForCourseByAssignedDate.quizzes),\n    onError: (error) => console.error(error),\n  })\n\n  const [assignmentControlState, setAssignmentControlState] = useState<\n    'quiz' | 'homework' | 'readingGuide' | 'textAnalysis'\n  >(\n    data?.findQuizzesForCourseByAssignedDate.quizzes.length! > 0\n      ? 'quiz'\n      : 'homework',\n  )\n\n  if (loading) return <div>Loading </div>\n  return (\n    <AssignmentControlPanelContainer>\n      <AssignmentControlSelector>\n        <AssignmentControlItem\n          onClick={() => setAssignmentControlState('quiz')}\n        >\n          Quizzes\n        </AssignmentControlItem>\n        <AssignmentControlItem\n          onClick={() => setAssignmentControlState('homework')}\n        >\n          Homework\n        </AssignmentControlItem>\n        <AssignmentControlItem\n          onClick={() => setAssignmentControlState('readingGuide')}\n        >\n          Reading Guides\n        </AssignmentControlItem>\n        <AssignmentControlItem\n          onClick={() => setAssignmentControlState('textAnalysis')}\n        >\n          Text Analysis\n        </AssignmentControlItem>\n      </AssignmentControlSelector>\n      {assignmentControlState === 'homework' && (\n        <HomeworkAssingerContainer>\n          <LoadEssays />\n          <LoadReadingGuides />\n        </HomeworkAssingerContainer>\n      )}\n      {assignmentControlState === 'quiz' && (\n        <>\n          {data?.findQuizzesForCourseByAssignedDate.quizzes.length! > 0 ? (\n            <QuizControlPanel\n              quizzes={data?.findQuizzesForCourseByAssignedDate.quizzes!}\n              presentStudentList={presentStudentList}\n            />\n          ) : (\n            <div>No Quiz Scheduled for Today!</div>\n          )}\n        </>\n      )}\n      {assignmentControlState === 'readingGuide' && <ReadingGuideViewer />}\n      {assignmentControlState === 'textAnalysis' && <TextAnalysisAssigner />}\n    </AssignmentControlPanelContainer>\n  )\n}\n","import { useMutation } from '@apollo/client'\nimport {\n  ProtocolAssessmentEnum,\n  assessStudentProtocolVariables,\n  findActiveProtocolsByCourse_findActiveProtocolsByCourse_protocols,\n  assessStudentProtocol,\n  findProtocolsByDate_findProtocolsByDate_protocols,\n} from '../../../../../../schemaTypes'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport { ASSESS_PROTOCOL_MUTATION } from '../../student-info/protocols/AssessProtocol'\nimport {\n  AssessmentManagerButton,\n  NameOfResponder,\n  ResponseButtonContainer,\n  ResponseRowContainer,\n} from '../../styles/responseAssessorStyle'\nimport { AssessorButton } from '../../styles/studentInfoStyles'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../../utils'\n\nexport type ProtocolResponseAssessmentProps = {\n  protocol: findProtocolsByDate_findProtocolsByDate_protocols\n}\n\nexport const ProtocolResponseAssessment = ({\n  protocol,\n}: ProtocolResponseAssessmentProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n  const { protocolAssessmentEnum } = useEnumContextProvider()\n  const [assessStudentProtocol] = useMutation<\n    assessStudentProtocol,\n    assessStudentProtocolVariables\n  >(ASSESS_PROTOCOL_MUTATION, {\n    // variables: { input: state.context.studentProtocolAssessment },\n    onCompleted: (data) => {\n      console.log('assessed')\n    },\n    refetchQueries: ['findStudentByIdForTeachersAid'],\n  })\n\n  return (\n    <ResponseRowContainer\n      onClick={() =>\n        event({ type: 'SET_STUDENT_ID', payload: protocol.student._id! })\n      }\n      style={\n        protocol.assessment !== ProtocolAssessmentEnum.REFUSED_TO_WORK\n          ? { color: 'var(--blue)' }\n          : { color: 'var(--red)' }\n      }\n    >\n      <NameOfResponder>\n        <div>\n          {protocol.student.lastName}, {protocol.student.firstName}\n        </div>\n      </NameOfResponder>\n      <ResponseButtonContainer>\n        {<div>{protocol.response}</div>}\n      </ResponseButtonContainer>\n      <div\n        style={{\n          display: 'grid',\n          gridAutoFlow: 'column',\n          justifyItems: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {protocolAssessmentEnum.map((assessment: ProtocolAssessmentEnum) => {\n          // const protocol = protocol.student.hasProtocols.find((p) => p.isActive)\n          const selected = protocol?.assessment === assessment\n\n          return (\n            <AssessmentManagerButton\n              key={assessment}\n              value={assessment}\n              // selected={selected}\n              style={\n                selected\n                  ? { background: 'var(--blue)', color: 'var(--white)' }\n                  : { background: 'var(--grey)', color: 'var(--blue)' }\n              }\n              onClick={(e: any) => {\n                assessStudentProtocol({\n                  variables: {\n                    input: {\n                      // ...state.context.studentProtocolAssessment,\n                      markingPeriod: protocol.markingPeriod,\n                      protocolActivityType: protocol.protocolActivityType,\n                      responsibilityPoints: 2,\n                      studentId: protocol.student._id!,\n                      task: protocol.task,\n                      assignedDate: protocol.assignedDate,\n                      partnerIds: [],\n                      assessment: e.target.value,\n                    },\n                  },\n                })\n              }}\n            >\n              {phraseCapitalizer(underscoreEliminator(assessment))}\n            </AssessmentManagerButton>\n          )\n        })}\n      </div>\n    </ResponseRowContainer>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport { useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../../contexts/EnumContext'\nimport {\n  ActivityTimeEnum,\n  findProtocolsByDate,\n  findProtocolsByDateVariables,\n} from '../../../../../../schemaTypes'\nimport { FIND_PROTOCOLS_BY_DATE_QUERY } from '../protocol-response-classlist/ProtocolResponseClassList'\nimport { ResponseAssessor } from '../protocol-response-classlist/ResponseAssessor'\nimport { useTeachersAidContextProvider } from '../../state/TeachersAidContext'\nimport {\n  ResponseTitle,\n  ResponseAssessorCategoriesContainer,\n  ResponseContainer,\n} from '../../styles/responseAssessorStyle'\nimport { ProtocolResponseAssessment } from './ProtocolResponseAssessment'\n\nexport type ProtocolResponseManagerProps = {}\n\nexport const ProtocolResponseManager = ({}: ProtocolResponseManagerProps) => {\n  const [state] = useTeachersAidContextProvider()\n  const { activityTimeEnum } = useEnumContextProvider()\n  const [activityTimeState, setActivityTimeState] = useState<ActivityTimeEnum>(\n    ActivityTimeEnum.BEFORE,\n  )\n\n  const { loading, data } = useQuery<\n    findProtocolsByDate,\n    findProtocolsByDateVariables\n  >(FIND_PROTOCOLS_BY_DATE_QUERY, {\n    variables: {\n      input: {\n        courseId: state.context.courseInfo!.course._id!,\n        date: new Date().toLocaleDateString(),\n      },\n    },\n    onCompleted: (data) => console.log(data.findProtocolsByDate.protocols),\n    pollInterval: 1000,\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const protocols = data?.findProtocolsByDate.protocols.filter(\n    (p) => p.activityTime === activityTimeState,\n  )\n\n  return (\n    <>\n      <ResponseTitle>Responses</ResponseTitle>\n      <ResponseAssessorCategoriesContainer>\n        <div\n          style={\n            activityTimeState === ActivityTimeEnum.BEFORE\n              ? { textDecoration: 'underline' }\n              : {}\n          }\n          onClick={() => setActivityTimeState(ActivityTimeEnum.BEFORE)}\n        >\n          WarmUps\n        </div>\n        <div\n          style={\n            activityTimeState === ActivityTimeEnum.DURING\n              ? { textDecoration: 'underline' }\n              : {}\n          }\n          onClick={() => setActivityTimeState(ActivityTimeEnum.DURING)}\n        >\n          Protocols\n        </div>\n        <div\n          style={\n            activityTimeState === ActivityTimeEnum.AFTER\n              ? { textDecoration: 'underline' }\n              : {}\n          }\n          onClick={() => setActivityTimeState(ActivityTimeEnum.AFTER)}\n        >\n          ExitTickets\n        </div>\n      </ResponseAssessorCategoriesContainer>\n\n      <ResponseContainer>\n        {protocols!.map(\n          (protocol) =>\n            protocol.response && (\n              <ProtocolResponseAssessment\n                key={protocol._id}\n                protocol={protocol}\n              />\n            ),\n        )}\n      </ResponseContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport { SeatingChart } from './seating-chart/SeatingChart'\nimport { useTeachersAidContextProvider } from '../state/TeachersAidContext'\nimport { StudentQuestionViewer } from './student-questions/StudentQuestionViewer'\nimport { ProtocolResponseClassList } from './protocol-response-classlist/ProtocolResponseClassList'\nimport { HomeworkAssigner } from './homework-assigner/HomeworkAssigner'\nimport { findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student } from '../../../../../schemaTypes'\nimport { Status } from './status/Status'\n\nimport { ProtocolResponse } from '../../../../lesson/state-n-styles/lessonStyles'\nimport { ProtocolResponseManager } from './protocol-response-manager/ProtocolResponseManager'\n\nexport type MainScreenDisplayProps = {\n  presentStudentList: string[]\n  students: (findCourseByIdForTeachersAid_findCourseById_course_hasCourseInfo_assignedSeats_student | null)[]\n}\n\nexport const MainScreenDisplay = ({\n  presentStudentList,\n  students,\n}: MainScreenDisplayProps) => {\n  const [state] = useTeachersAidContextProvider()\n\n  return (\n    <>\n      {state.context.mainScreenSeatingChart && <SeatingChart />}\n      {state.context.mainScreenStudentStatus && (\n        // <StudentStatusDisplay\n        //   courseId={state.context.courseInfo?.course._id!}\n        //   students={students}\n        // />\n        <Status\n          courseId={state.context.courseInfo?.course._id!}\n          students={students}\n        />\n      )}\n\n      {state.context.mainScreenVirtualProtocolResponses && (\n        <>{<ProtocolResponseClassList />} </>\n      )}\n      {state.context.mainScreenWarmUpExitTicketViewer && (\n        <ProtocolResponseManager />\n      )}\n      {state.context.mainScreenHomeworkAssigner && (\n        <HomeworkAssigner presentStudentList={presentStudentList} />\n      )}\n    </>\n  )\n}\n","import React, { FC, useEffect } from 'react'\nimport { capitalizer, date, todaysLocaleDate } from '../../../../utils'\nimport { TeachersAidContainer } from './styles/teachersAidContainerStyles'\nimport {\n  StudentControlPanelContainer,\n  StudentInfoContainer,\n  StudentInfoDisplay,\n  StudentNameContainer,\n} from './styles/studentInfoStyles'\nimport {\n  ClassControlPanelContainer,\n  RandomStudentGeneratorButton,\n  RandomStudentGeneratorContainer,\n} from './styles/classControlPanelStyles'\nimport {\n  SeatingChartContainer,\n  StartingDisplay,\n} from './styles/seatingChartStyles'\nimport { gql, useQuery } from '@apollo/client'\nimport { StudentInfo } from './student-info/StudentInfo'\nimport { ClassControlPanel } from './class-control-panel/center-console/ClassControlPanel'\nimport { RandomStudentGenerator } from './class-control-panel/random-student-generator/RandomStudentGenerator'\nimport { useTeachersAidContextProvider } from './state/TeachersAidContext'\nimport {\n  findCourseByIdForTeachersAid,\n  findCourseByIdForTeachersAidVariables,\n  me_me_Teacher,\n} from '../../../../schemaTypes'\nimport { useUserContextProvider } from '../../../../contexts/UserContext'\nimport { TimerPresets } from './class-control-panel/timer/TimerPresets'\nimport { Greetings } from '../../../home/Greetings'\nimport { MainScreenDisplay } from './main-screen/MainScreenDisplay'\n\nexport type TeachersAidProps = {}\n\nexport const COURSE_QUERY = gql`\n  query findCourseByIdForTeachersAid($input: FindCourseByIdInput!) {\n    findCourseById(input: $input) {\n      course {\n        name\n        hasStudents {\n          _id\n          firstName\n          hasAbsences {\n            dayAbsent\n          }\n        }\n        hasCourseInfo {\n          assignedSeats {\n            student {\n              _id\n              firstName\n              lastName\n              hasAbsences {\n                dayAbsent\n              }\n              hasStatus {\n                student {\n                  firstName\n                  lastName\n                  _id\n                }\n                departTime\n                hasReturned\n                outOfClassDestination\n                date\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const TeachersAid = ({}: TeachersAidProps) => {\n  const [state, event] = useTeachersAidContextProvider()\n\n  const me: me_me_Teacher = useUserContextProvider()\n  const title = capitalizer(me.title)\n\n  const { loading, data } = useQuery<\n    findCourseByIdForTeachersAid,\n    findCourseByIdForTeachersAidVariables\n  >(COURSE_QUERY, {\n    variables: {\n      input: { courseId: state.context.courseInfo?.course._id! },\n    },\n    onCompleted: (data) => {\n      const presentStudentList = data\n        .findCourseById!.course!.hasStudents!.filter(\n          (student) =>\n            (student._id && student.hasAbsences.length === 0) ||\n            student.hasAbsences.some(\n              (absence) => absence.dayAbsent !== todaysLocaleDate,\n            ),\n        )\n        .map((student) => student._id) as string[]\n      event({\n        type: 'SET_PRESENT_STUDENTS',\n        payload: presentStudentList,\n      })\n    },\n    pollInterval: 1000,\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  const students = data?.findCourseById.course.hasCourseInfo?.assignedSeats\n    .filter((seat) => seat.student !== null)\n    .map((seat) => seat.student)!\n\n  // const presentStudentList =\n  //   data?.findCourseById.course.hasCourseInfo?.assignedSeats\n  //     .map((student) => student.student)\n  //     .filter(\n  //       (student) =>\n  //         // (student && student.hasAbsences.length === 0) ||\n  //         student &&\n  //         !student?.hasAbsences.some(\n  //           (absence) => absence.dayAbsent === new Date().toLocaleDateString()\n  //         )\n  //     )\n  //     .map((student) => student?._id)! as string[]\n\n  // console.log(presentStudentList)\n  // console.log(\n  //   data?.findCourseById.course.hasCourseInfo?.assignedSeats\n  //     .map((student) => student.student)\n  //     .filter((student) => student).length\n  // )\n\n  const assignedPresentStudents =\n    data?.findCourseById.course.hasCourseInfo?.assignedSeats\n      .map((student) => student.student)\n      .filter(\n        (student) =>\n          // (student && student.hasAbsences.length === 0) ||\n          student &&\n          !student.hasAbsences.some(\n            (absence) => absence.dayAbsent === new Date().toLocaleDateString(),\n          ) &&\n          student.hasStatus.filter((status) => !status.hasReturned).length ===\n            0,\n      )\n      .map((student) => student?._id)! as string[]\n\n  return (\n    <>\n      <TeachersAidContainer width={window.outerWidth}>\n        <SeatingChartContainer>\n          {!state.context.courseInfo!._id ? (\n            <StartingDisplay>\n              <Greetings phrase={`${title}. ${me.lastName}!`} />\n            </StartingDisplay>\n          ) : (\n            <MainScreenDisplay\n              presentStudentList={assignedPresentStudents!}\n              students={students}\n            />\n          )}\n        </SeatingChartContainer>\n        <StudentInfoContainer>\n          {state.context.studentId ? (\n            <StudentInfo />\n          ) : (\n            <>\n              <StudentInfoDisplay>\n                <StudentNameContainer />\n              </StudentInfoDisplay>\n              <StudentControlPanelContainer></StudentControlPanelContainer>\n            </>\n          )}\n        </StudentInfoContainer>\n        <ClassControlPanelContainer>\n          {assignedPresentStudents ? (\n            <RandomStudentGenerator\n              presentStudentList={assignedPresentStudents!}\n            />\n          ) : (\n            <RandomStudentGeneratorContainer>\n              <RandomStudentGeneratorButton\n              // onClick={() => {\n              // \tselectNewStudent()\n              // \tevent({\n              // \t\ttype: 'SET_STUDENT_ID',\n              // \t\tpayload: currentStudent,\n              // \t})\n              // }}\n              >\n                Random Student\n              </RandomStudentGeneratorButton>\n            </RandomStudentGeneratorContainer>\n          )}\n          <ClassControlPanel presentStudentList={assignedPresentStudents!} />\n          <TimerPresets />\n        </ClassControlPanelContainer>\n      </TeachersAidContainer>\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ParentContactContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  height: 95vh;\n`\n\nexport const ParentContactTitle = styled.div`\n  font-size: 4vw;\n  display: grid;\n  grid-template-columns: 5fr 1fr;\n`\n","import React from 'react'\nimport { findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts } from '../../../../../schemaTypes'\n\nexport type ContactProps = {\n  contact: findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts\n}\n\nexport const Contact = ({ contact }: ContactProps) => {\n  return (\n    <div style={{ borderTop: '1px solid var(--blue)' }}>\n      <div>\n        {contact.student.firstName} {contact.student.lastName}\n      </div>\n      <div>{contact.date}</div>\n      <div>{contact.contactType}</div>\n      <div>{contact.contentOfContact}</div>\n    </div>\n  )\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts } from '../../../../../schemaTypes'\n\nexport type DownloadContactsProps = {\n  contacts: findParentContactsByTeacherId_findParentContactsByTeacherId_parentContacts[]\n}\n\nexport type contactInfoProps = {\n  DATE: string\n  STUDENT_NAME: string\n  WHO_I_SPOKE_WITH: string\n  EMAIL_OR_PHONE_CALL: string\n  WHAT_WAS_DISCUSSED: string\n}\n\nexport const DownloadContacts: FC<DownloadContactsProps> = ({ contacts }) => {\n  const [createCSVToggle, setCreateCSVToggle] = useState(false)\n  const [contactInformation, setContactInformation] = useState<\n    contactInfoProps[]\n  >([])\n  console.log(contactInformation.length)\n  const headers = [\n    { label: 'Date', key: 'DATE' },\n    { label: 'Student Name', key: 'STUDENT_NAME' },\n    { label: 'Who I Spoke With', key: 'WHO_I_SPOKE_WITH' },\n    { label: 'Email or Phone Call', key: 'EMAIL_OR_PHONE_CALL' },\n    { label: 'What was Discussed', key: 'WHAT_WAS_DISCUSSED' },\n  ]\n\n  useEffect(() => {\n    for (const contact of contacts) {\n      setContactInformation((list) => [\n        ...list,\n        {\n          DATE: contact.date,\n          EMAIL_OR_PHONE_CALL: contact.contactType,\n          STUDENT_NAME:\n            contact.student.lastName + ', ' + contact.student.firstName,\n          WHAT_WAS_DISCUSSED: contact.contentOfContact,\n          WHO_I_SPOKE_WITH: '',\n        },\n      ])\n    }\n  }, [contacts])\n\n  return (\n    <>\n      {contactInformation?.length! > 0 && (\n        <CSVLink\n          data={contactInformation!}\n          headers={headers}\n          filename={'parent_contacts'}\n          style={{\n            //   backgroundColor: 'var(--n)',\n            color: 'var(--blue)',\n            //   fontSize: '140%',\n            //   display: 'flex',\n            //   justifyContent: 'center',\n            //   alignItems: 'center',\n            textDecoration: 'none',\n          }}\n          target=\"_blank\"\n          onClick={() => {}}\n        >\n          Download\n        </CSVLink>\n      )}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport {\n  findParentContactsByTeacherId,\n  findParentContactsByTeacherIdVariables,\n  me_me_Teacher,\n} from '../../../../../schemaTypes'\n\nimport {\n  ParentContactContainer,\n  ParentContactTitle,\n} from '../state-n-styles/parentContactStyles'\nimport { Contact } from './Contact'\nimport { DownloadContacts } from './DownloadContacts'\n\nexport type AllContactsProps = {}\n\nexport const FIND_ALL_PARENT_CONTACTS_BY_TEACHER_QUERY = gql`\n  query findParentContactsByTeacherId(\n    $input: FindParentContactsByTeacherIdInput!\n  ) {\n    findParentContactsByTeacherId(input: $input) {\n      parentContacts {\n        _id\n        student {\n          _id\n          firstName\n          lastName\n        }\n        date\n        contactType\n        contentOfContact\n      }\n    }\n  }\n`\n\nexport const AllContacts: FC<AllContactsProps> = () => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const { loading, data } = useQuery<\n    findParentContactsByTeacherId,\n    findParentContactsByTeacherIdVariables\n  >(FIND_ALL_PARENT_CONTACTS_BY_TEACHER_QUERY, {\n    variables: {\n      input: { teacherId: me._id! },\n    },\n    onCompleted: (data) =>\n      console.log(data.findParentContactsByTeacherId.parentContacts),\n    onError: (error) => console.error(error),\n  })\n  const contacts = data?.findParentContactsByTeacherId.parentContacts!\n\n  return (\n    <ParentContactContainer>\n      <ParentContactTitle>\n        <div>Parent Contact List</div>\n        {data?.findParentContactsByTeacherId.parentContacts! && (\n          <DownloadContacts\n            contacts={data?.findParentContactsByTeacherId.parentContacts!}\n          />\n        )}\n      </ParentContactTitle>\n      {loading ? (\n        <div>Loading</div>\n      ) : (\n        <div style={{ borderBottom: '1px solid var(--blue)' }}>\n          {contacts.map((contact) => (\n            <Contact key={contact._id!} contact={contact} />\n          ))}\n        </div>\n      )}\n    </ParentContactContainer>\n  )\n}\n","import { Machine, assign } from 'xstate'\nimport {\n  ContactTypeEnum,\n  CreateParentContactInput,\n} from '../../../../../../schemaTypes'\n\nexport type createContactMachineSchema = {\n  states: {\n    create: {}\n  }\n}\nexport type createContactMachineEvent =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'SET_DATE'; payload: string }\n  | { type: 'SET_CONTACT_TYPE'; payload: ContactTypeEnum }\n  | { type: 'SET_CONTENT'; payload: string }\n  | { type: 'SET_STUDENT_ID'; payload: string }\n  | { type: 'SET_TEACHER_ID'; payload: string }\n  | { type: 'SET_COURSE_ID'; payload: string }\n  | { type: 'SET_STUDENT_NAME'; payload: string }\n  | { type: 'SET_STUDENT_NAME'; payload: string }\n  | { type: 'RESET' }\n\nexport type createContactMachineContext = {\n  contactToCreate: CreateParentContactInput\n  courseId: string\n  studentName: string\n}\n\nexport const createContactMachine = Machine<\n  createContactMachineContext,\n  createContactMachineSchema,\n  createContactMachineEvent\n>({\n  id: 'createContact',\n  initial: 'create',\n  context: {\n    contactToCreate: {\n      contactType: ContactTypeEnum.EMAIL,\n      contentOfContact: '',\n      date: new Date().toLocaleDateString(),\n      studentId: '',\n      teacherId: '',\n    },\n    courseId: '',\n    studentName: '',\n  },\n  states: {\n    create: {\n      on: {\n        RESET: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentName: '',\n              contactToCreate: {\n                contactType: ContactTypeEnum.EMAIL,\n                contentOfContact: '',\n                date: new Date().toLocaleDateString(),\n                studentId: '',\n                teacherId: ctx.contactToCreate.teacherId,\n              },\n            }\n          }),\n        },\n        SET_COURSE_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              courseId: evt.payload,\n            }\n          }),\n        },\n        SET_STUDENT_NAME: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              studentName: evt.payload,\n            }\n          }),\n        },\n        SET_DATE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              contactToCreate: { ...ctx.contactToCreate, date: evt.payload },\n            }\n          }),\n        },\n        SET_CONTACT_TYPE: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              contactToCreate: {\n                ...ctx.contactToCreate,\n                contactType: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_CONTENT: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              contactToCreate: {\n                ...ctx.contactToCreate,\n                contentOfContact: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_STUDENT_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              contactToCreate: {\n                ...ctx.contactToCreate,\n                studentId: evt.payload,\n              },\n            }\n          }),\n        },\n        SET_TEACHER_ID: {\n          actions: assign((ctx, evt) => {\n            return {\n              ...ctx,\n              contactToCreate: {\n                ...ctx.contactToCreate,\n                teacherId: evt.payload,\n              },\n            }\n          }),\n        },\n      },\n    },\n  },\n})\n","import React, { createContext, ReactNode, FC, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { State } from 'xstate'\nimport {\n  createContactMachine,\n  createContactMachineContext,\n  createContactMachineEvent,\n} from './createContactMachine'\n\nconst CreateContactContext = createContext<any>(undefined)\n\ntype CreateContactContextProps = {\n  children: ReactNode\n}\n\nexport const CreateContactContextProvider: FC<CreateContactContextProps> = ({\n  children,\n}) => {\n  const [state, event] = useMachine(createContactMachine)\n  return (\n    <CreateContactContext.Provider value={[state, event]}>\n      {children}\n    </CreateContactContext.Provider>\n  )\n}\n\nexport function useCreateContactContextProvider() {\n  const context = useContext(CreateContactContext)\n  if (context === undefined) {\n    throw new Error(\n      'useCreateContactContextProvider must be used within a CreateContactContextProvider',\n    )\n  }\n  return context as [\n    State<createContactMachineContext, createContactMachineEvent, any, any>,\n    (event: createContactMachineEvent) => void,\n  ]\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { FC } from 'react'\nimport {\n  findStudentsByCourseForParentContacts,\n  findStudentsByCourseForParentContactsVariables,\n} from '../../../../../schemaTypes'\nimport { useCreateContactContextProvider } from './state-style/CreateContactContext'\n\nexport type FindAllStudentsProps = {}\n\nexport const FIND_ALL_STUDENTS_QUERY = gql`\n  query findStudentsByCourseForParentContacts(\n    $input: FindStudentsByCourseInput!\n  ) {\n    findStudentsByCourse(input: $input) {\n      students {\n        _id\n        firstName\n        lastName\n      }\n    }\n  }\n`\nexport const FindAllStudents: FC<FindAllStudentsProps> = () => {\n  const [state, event] = useCreateContactContextProvider()\n  const { loading, data } = useQuery<\n    findStudentsByCourseForParentContacts,\n    findStudentsByCourseForParentContactsVariables\n  >(FIND_ALL_STUDENTS_QUERY, {\n    variables: {\n      input: { courseId: state.context.courseId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  return (\n    <>\n      {data?.findStudentsByCourse.students.map((student) => (\n        <div\n          key={student._id!}\n          onClick={() => {\n            event({ type: 'SET_STUDENT_ID', payload: student._id! })\n            event({\n              type: 'SET_STUDENT_NAME',\n              payload: student.firstName + ' ' + student.lastName,\n            })\n            event({ type: 'SET_COURSE_ID', payload: '' })\n          }}\n        >\n          {student.lastName}, {student.firstName}\n        </div>\n      ))}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { FC, useEffect } from 'react'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport {\n  ContactTypeEnum,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createParentContact,\n  createParentContactVariables,\n  me_me_Teacher,\n} from '../../../../../schemaTypes'\nimport { dateConverter } from '../../../../../utils'\nimport { FindAllStudents } from './FindAllStudents'\n\nimport { useCreateContactContextProvider } from './state-style/CreateContactContext'\n\nexport type CreateContactProps = {}\n\nexport const CREATE_PARENT_CONTACT_MUTATION = gql`\n  mutation createParentContact($input: CreateParentContactInput!) {\n    createParentContact(input: $input) {\n      parentContact {\n        _id\n      }\n    }\n  }\n`\n\nexport const CreateContact: FC<CreateContactProps> = () => {\n  const [state, event] = useCreateContactContextProvider()\n  const { contactTypeEnum } = useEnumContextProvider()\n  const me: me_me_Teacher = useUserContextProvider()\n\n  useEffect(() => {\n    event({ type: 'SET_TEACHER_ID', payload: me._id! })\n  }, [me])\n\n  const [createParentContact] = useMutation<\n    createParentContact,\n    createParentContactVariables\n  >(CREATE_PARENT_CONTACT_MUTATION, {\n    variables: { input: state.context.contactToCreate },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: [],\n  })\n  console.log(state.context.contactToCreate)\n  return (\n    <>\n      <div>Create Contact</div>\n\n      <div>Select Student By Course</div>\n      <select\n        onChange={(e: any) => {\n          if (e.target.value !== 'none') {\n            event({ type: 'SET_COURSE_ID', payload: e.target.value })\n          }\n        }}\n      >\n        <option value={'none'}>Select</option>\n        {me.teachesCourses\n          .filter((course) => course.name !== 'Cohort Class')\n          .map((course) => (\n            <option key={course._id!} value={course._id!}>\n              {course.name}\n            </option>\n          ))}\n      </select>\n      {state.context.courseId && <FindAllStudents />}\n      {state.context.studentName && (\n        <form onSubmit={(e: any) => e.preventDefault()}>\n          <div>{state.context.studentName}</div>\n          <div>Date: </div>\n          <input\n            type=\"date\"\n            onChange={(e: any) => {\n              event({\n                type: 'SET_DATE',\n                payload: dateConverter(e.target.value),\n              })\n            }}\n          />\n          <div>Contact Type</div>\n          <select\n            onChange={(e: any) => {\n              if (e.target.value !== 'none') {\n                event({ type: 'SET_CONTACT_TYPE', payload: e.target.value })\n              }\n            }}\n          >\n            <option value={'none'}>Select</option>\n            {contactTypeEnum.map((contactType: ContactTypeEnum) => (\n              <option key={contactType} value={contactType}>\n                {contactType}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"checkbox\"\n            onChange={() =>\n              event({ type: 'SET_CONTENT', payload: 'Emailed Progress Report' })\n            }\n          />\n          <span>Emailed Progress Report</span>\n          <div>Contact Notes</div>\n          <textarea\n            onChange={(e: any) =>\n              event({ type: 'SET_CONTENT', payload: e.target.value })\n            }\n          />\n          <button\n            type=\"reset\"\n            onClick={() => {\n              createParentContact()\n              event({ type: 'RESET' })\n            }}\n          >\n            Create Contact\n          </button>\n        </form>\n      )}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { Route, Routes, useLocation } from 'react-router'\nimport { useNavSync } from '../../../../hooks/useNavSync'\nimport { AllContacts } from './all-contacts/AllContacts'\nimport { CreateContact } from './create-contacts/CreateContact'\nimport { CreateContactContextProvider } from './create-contacts/state-style/CreateContactContext'\n\nexport type ParentContactsProps = {}\n\nexport const ParentContacts: FC<ParentContactsProps> = () => {\n  const location = useLocation()\n  useNavSync(location, 'PARENT_CONTACTS')\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"contacts\" element={<AllContacts />} />\n      </Routes>\n      <Routes>\n        <Route\n          path=\"create-contact\"\n          element={\n            <CreateContactContextProvider>\n              <CreateContact />\n            </CreateContactContextProvider>\n          }\n        />\n      </Routes>\n    </>\n  )\n}\n","import React, { FC, SetStateAction, useEffect, useState } from 'react'\nimport { Dispatch } from 'react'\nimport { useEnumContextProvider } from '../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../contexts/markingPeriod/MarkingPeriodContext'\nimport { MarkingPeriodEnum } from '../../schemaTypes'\nimport { phraseCapitalizer } from '../../utils'\nimport {\n  MarkingPeriodSelectorContainer,\n  MarkingPeriodSelectorTitle,\n  MarkingPeriodSelectedSwitchArrow,\n  MarkingPeriodSelectorSwitchContainer,\n} from '../dashboard/student/assignments/state-n-styles/assignmentsStyles'\n\nexport type MarkingPeriodSelectorProps = {\n  selectedMarkingPeriod: MarkingPeriodEnum\n  setSelectedMarkingPeriod: Dispatch<SetStateAction<MarkingPeriodEnum>>\n}\n\nexport const MarkingPeriodSelectorSwitch = ({\n  selectedMarkingPeriod,\n  setSelectedMarkingPeriod,\n}: MarkingPeriodSelectorProps) => {\n  const { markingPeriodEnum } = useEnumContextProvider()\n  const [markingPeriodState] = useMarkingPeriodContextProvider()\n  const { currentMarkingPeriod } = markingPeriodState.context\n\n  const markingPeriodNumber = markingPeriodEnum.findIndex(\n    (element: MarkingPeriodEnum) => element === currentMarkingPeriod,\n  )\n\n  const [markingPeriodIndex, setMarkingPeriodIndex] =\n    useState(markingPeriodNumber)\n\n  useEffect(() => {\n    setSelectedMarkingPeriod(markingPeriodEnum[markingPeriodIndex])\n  }, [markingPeriodIndex])\n\n  return (\n    <MarkingPeriodSelectorContainer>\n      <MarkingPeriodSelectorTitle>\n        Select Marking Period\n      </MarkingPeriodSelectorTitle>\n      <MarkingPeriodSelectorSwitchContainer>\n        <MarkingPeriodSelectedSwitchArrow\n          onClick={() => {\n            if (markingPeriodIndex > 0) {\n              setMarkingPeriodIndex((c: number) => c - 1)\n            }\n          }}\n        >\n          &lt;\n        </MarkingPeriodSelectedSwitchArrow>\n        <div> {phraseCapitalizer(selectedMarkingPeriod)} </div>\n        <MarkingPeriodSelectedSwitchArrow\n          onClick={() => {\n            if (markingPeriodIndex < markingPeriodEnum.length - 1) {\n              setMarkingPeriodIndex((c: number) => c + 1)\n            }\n          }}\n        >\n          &gt;\n        </MarkingPeriodSelectedSwitchArrow>\n      </MarkingPeriodSelectorSwitchContainer>\n    </MarkingPeriodSelectorContainer>\n  )\n}\n","import { useMutation } from '@apollo/client'\nimport { create } from 'domain'\nimport React, { useState } from 'react'\nimport { useEnumContextProvider } from '../../../../../contexts/EnumContext'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport {\n  ContactTypeEnum,\n  createParentContactVariables,\n  createParentContact,\n  me_me_Teacher,\n  CreateParentContactInput,\n} from '../../../../../schemaTypes'\nimport { dateConverter } from '../../../../../utils'\nimport { CREATE_PARENT_CONTACT_MUTATION } from '../../parent-contact/create-contacts/CreateContact'\n\nexport type CreateContactFormProps = { studentId: string }\n\nexport const CreateContactForm = ({ studentId }: CreateContactFormProps) => {\n  const { contactTypeEnum } = useEnumContextProvider()\n  const me: me_me_Teacher = useUserContextProvider()\n  const [contactType, setContactType] = useState(contactTypeEnum.EMAIL)\n  const [date, setDate] = useState('')\n  const [contentOfContact, setContentOfContact] = useState('')\n  const [createParentContactInputs, setcreateParentContactInputs] =\n    useState<CreateParentContactInput>({\n      contactType: ContactTypeEnum.EMAIL,\n      contentOfContact: '',\n      date: new Date().toLocaleDateString(),\n      studentId,\n      teacherId: me._id!,\n    })\n\n  const [createParentContact] = useMutation<\n    createParentContact,\n    createParentContactVariables\n  >(CREATE_PARENT_CONTACT_MUTATION, {\n    variables: {\n      input: createParentContactInputs,\n    },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['findContactsByStudentId'],\n  })\n\n  const handleCreateContact = () => {\n    setcreateParentContactInputs({\n      ...createParentContactInputs,\n      contactType: ContactTypeEnum.EMAIL,\n      contentOfContact: '',\n      date: new Date().toLocaleDateString(),\n    })\n    createParentContact()\n  }\n\n  return (\n    <>\n      <form onSubmit={(e: any) => e.preventDefault()}>\n        <div>Date: </div>\n        <input\n          type=\"date\"\n          onChange={(e: any) => {\n            setcreateParentContactInputs({\n              ...createParentContactInputs,\n              date: dateConverter(e.target.value),\n            })\n          }}\n        />\n        <div>Contact Type</div>\n        <select\n          onChange={(e: any) => {\n            if (e.target.value !== 'none') {\n              setcreateParentContactInputs({\n                ...createParentContactInputs,\n                contactType: e.target.value,\n              })\n            }\n          }}\n        >\n          <option value={'none'}>Select</option>\n          {contactTypeEnum.map((contactType: ContactTypeEnum) => (\n            <option key={contactType} value={contactType}>\n              {contactType}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"checkbox\"\n          onChange={() =>\n            setcreateParentContactInputs({\n              ...createParentContactInputs,\n              contentOfContact: 'Emailed Progress Report',\n            })\n          }\n        />\n        <span>Emailed Progress Report</span>\n        <div>Contact Notes</div>\n        <textarea\n          onChange={(e: any) =>\n            setcreateParentContactInputs({\n              ...createParentContactInputs,\n              contentOfContact: e.target.value,\n            })\n          }\n        />\n        <button type=\"reset\" onClick={() => handleCreateContact()}>\n          Create Contact\n        </button>\n      </form>\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React from 'react'\nimport {\n  findContactsByStudentId,\n  findContactsByStudentIdVariables,\n} from '../../../../../schemaTypes'\nimport { useStudentInformationContextProvider } from '../state-n-styles/StudentInformationContext'\nimport { ContactInformationContainer } from '../state-n-styles/studentInformationStyles'\nimport { CreateContactForm } from './CreateContactForm'\n\nexport type ParentContactsProps = { studentId: string }\n\nexport const FIND_PARENT_CONTACTS_BY_STUDENT_ID_QUERY = gql`\n  query findContactsByStudentId($input: FindContactsByStudentIdInput!) {\n    findContactsByStudentId(input: $input) {\n      parentContacts {\n        _id\n        date\n        contentOfContact\n        contactType\n      }\n    }\n  }\n`\n\nexport const ParentContacts = ({ studentId }: ParentContactsProps) => {\n  const [state, event] = useStudentInformationContextProvider()\n\n  const { loading, data } = useQuery<\n    findContactsByStudentId,\n    findContactsByStudentIdVariables\n  >(FIND_PARENT_CONTACTS_BY_STUDENT_ID_QUERY, {\n    variables: {\n      input: { studentId: state.context.student?._id! },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  return (\n    <ContactInformationContainer>\n      {data?.findContactsByStudentId.parentContacts.map((contact) => (\n        <div key={contact._id}>\n          {contact.date}: {contact.contactType} - {contact.contentOfContact}\n        </div>\n      ))}\n      <div>\n        <CreateContactForm studentId={studentId} />\n      </div>\n    </ContactInformationContainer>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React from 'react'\nimport { useToggle } from '../../../../hooks'\nimport { resetPasswordVariables, resetPassword } from '../../../../schemaTypes'\n\nexport type ResetStudentPasswordProps = { userId: string }\n\nexport const RESET_PASSWORD_MUTATION = gql`\n  mutation resetPassword($input: ResetPasswordInput!) {\n    resetPassword(input: $input) {\n      user {\n        _id\n        firstName\n      }\n    }\n  }\n`\n\nexport const ResetStudentPassword = ({ userId }: ResetStudentPasswordProps) => {\n  const [doubleCheckToggle, toggleDoubleCheck] = useToggle(false)\n  const [resetPassword] = useMutation<resetPassword, resetPasswordVariables>(\n    RESET_PASSWORD_MUTATION,\n    {\n      variables: { input: { userId } },\n      onCompleted: (data) => console.log(data),\n      refetchQueries: [],\n    },\n  )\n  const handleReset = () => {\n    resetPassword()\n    toggleDoubleCheck()\n  }\n\n  return (\n    <>\n      <div>\n        <div>Reset Student Id</div>\n      </div>\n      <div>\n        {!doubleCheckToggle ? (\n          <div>\n            <button onClick={() => toggleDoubleCheck()}>Reset</button>\n          </div>\n        ) : (\n          <div>\n            <div>Are you sure?</div>\n            <button onClick={() => toggleDoubleCheck()}>No</button>\n            <button onClick={handleReset}>Yes</button>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { useGradeCalculator } from '../../../../../hooks/useGradeCalculator'\nimport {\n  findAllStudentsForStudentInformation_findAllStudents_students,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { letterGrade } from '../../../../../utils'\n\nexport type StudentGradeInformationProps = {\n  student: findAllStudentsForStudentInformation_findAllStudents_students\n  selectedMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const StudentGradeInformation = ({\n  student,\n  selectedMarkingPeriod,\n}: StudentGradeInformationProps) => {\n  const {\n    grade: calculatedGrade,\n    loading,\n    noGrade,\n  } = useGradeCalculator({\n    studentId: student._id!,\n    markingPeriod: selectedMarkingPeriod,\n    polling: true,\n    pollInterval: 1000,\n  })\n\n  return (\n    <>\n      {!noGrade ? (\n        <div>\n          Grade: {loading ? 'loading' : calculatedGrade + '%'}{' '}\n          {!loading && letterGrade(calculatedGrade)}\n        </div>\n      ) : (\n        <div>Grade: No Grades Yet</div>\n      )}\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useUserContextProvider } from '../../../../../contexts/UserContext'\nimport { useToggle } from '../../../../../hooks'\nimport {\n  me_me_Teacher,\n  switchToNewCourseVariables,\n  switchToNewCourse,\n  me_me_Teacher_teachesCourses,\n  findAllStudentsForStudentInformation_findAllStudents_students,\n  me_me_Teacher_teachesCourses_hasCourseInfo,\n} from '../../../../../schemaTypes'\nimport { useStudentInformationContextProvider } from '../state-n-styles/StudentInformationContext'\n\nexport type SwitchCourseProps = {\n  student: findAllStudentsForStudentInformation_findAllStudents_students\n}\n\nexport const SWITCH_TO_NEW_COURSE_MUTATION = gql`\n  mutation switchToNewCourse($input: SwitchToNewCourseInput!) {\n    switchToNewCourse(input: $input) {\n      student {\n        _id\n        firstName\n        lastName\n        userName\n        inCourses {\n          name\n          _id\n        }\n      }\n    }\n  }\n`\n\nexport const SwitchCourse = ({ student }: SwitchCourseProps) => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const [state, event] = useStudentInformationContextProvider()\n  const [confirmChangeToggle, toggleConfirm] = useToggle(false)\n  const [courseToChangeTo, setCourseToChangeTo] = useState<string>('none')\n\n  const [switchToNewCourse] = useMutation<\n    switchToNewCourse,\n    switchToNewCourseVariables\n  >(SWITCH_TO_NEW_COURSE_MUTATION, {\n    variables: {\n      input: {\n        newCourseId: courseToChangeTo!,\n        studentId: student._id!,\n        oldCourseId: student.inCourses[0]._id!,\n      },\n    },\n    onCompleted: (data) => {\n      event({\n        type: 'UPDATE_STUDENT',\n        payload: data.switchToNewCourse.student,\n      })\n      toggleConfirm()\n    },\n    refetchQueries: ['findAllStudentsForStudentInformation'],\n  })\n  const handleChange = (e: any) => {\n    setCourseToChangeTo(e.target.value)\n    toggleConfirm()\n  }\n  return (\n    <>\n      <div>Switch Course</div>\n      {!confirmChangeToggle ? (\n        <select onChange={(e: any) => handleChange(e)}>\n          <option value={'none'}>Select Course</option>\n          {me.teachesCourses.map((course) => (\n            <option key={course._id} value={course._id!}>\n              {course.name}\n            </option>\n          ))}\n        </select>\n      ) : (\n        <div>\n          <button onClick={() => switchToNewCourse()}>Change</button>\n          <button onClick={() => toggleConfirm()}>Cancel</button>\n        </div>\n      )}\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\n\nimport {\n  findStudentByIdForWritingMetrics,\n  findStudentByIdForWritingMetricsVariables,\n} from '../../../../../schemaTypes'\nimport { capitalizer } from '../../../../../utils'\n\nexport type WritingMetricsProps = { studentId: string }\n\nexport const WRITING_METRICS_QUERY = gql`\n  query findStudentByIdForWritingMetrics($input: FindStudentByIdInput!) {\n    findStudentById(input: $input) {\n      student {\n        hasProgressTracker {\n          writingProgressTracker {\n            levelPoints\n            overallWritingLevel\n          }\n          readingGuideProgressTracker {\n            levelPoints\n            readingGuideLevel\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const WritingMetrics = ({ studentId }: WritingMetricsProps) => {\n  const { loading, data } = useQuery<\n    findStudentByIdForWritingMetrics,\n    findStudentByIdForWritingMetricsVariables\n  >(WRITING_METRICS_QUERY, {\n    variables: {\n      input: { studentId },\n    },\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const { readingGuideProgressTracker, writingProgressTracker } =\n    data?.findStudentById.student.hasProgressTracker!\n\n  return (\n    <>\n      <div>\n        Writing Level: {capitalizer(writingProgressTracker.overallWritingLevel)}\n      </div>\n      <div>Level Points: {writingProgressTracker.levelPoints}</div>\n      <br />\n      <div>\n        ReadingGuide Level:{' '}\n        {capitalizer(readingGuideProgressTracker.readingGuideLevel)}\n      </div>\n      <div>Level Points: {readingGuideProgressTracker.levelPoints}</div>\n    </>\n  )\n}\n","import { useQuery } from '@apollo/client'\nimport React, { Dispatch, SetStateAction } from 'react'\nimport {\n  findAllStudentsForStudentInformation_findAllStudents_students,\n  findResponsibilityPointsByStudentId,\n  findResponsibilityPointsByStudentIdVariables,\n  MarkingPeriodEnum,\n} from '../../../../../schemaTypes'\nimport { ResetStudentPassword } from '../ResetStudentPassword'\n\nimport { StudentInformationDisplayContainer } from '../state-n-styles/studentInformationStyles'\nimport {\n  ResponsibilityPointsDisplay,\n  RESPONSIBILITY_POINTS_QUERY,\n} from './ResponsibilityPointsDisplay'\nimport { StudentGradeInformation } from './StudentGradeInformation'\nimport { SwitchCourse } from './SwitchCourse'\nimport { WritingMetrics } from './WritingMetrics'\n\nexport type StudentInformationDisplayProps = {\n  student: findAllStudentsForStudentInformation_findAllStudents_students\n  selectedMarkingPeriod: MarkingPeriodEnum\n  setSelectedMarkingPeriod: Dispatch<SetStateAction<MarkingPeriodEnum>>\n}\n\nexport const StudentInformationDisplay = ({\n  student,\n  selectedMarkingPeriod,\n}: StudentInformationDisplayProps) => {\n  const { loading, data } = useQuery<\n    findResponsibilityPointsByStudentId,\n    findResponsibilityPointsByStudentIdVariables\n  >(RESPONSIBILITY_POINTS_QUERY, {\n    variables: {\n      input: { studentId: student._id! },\n    },\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const responsibilityPointsCheck =\n    data?.findResponsibilityPointsByStudentId.responsibilityPoints.some(\n      (points) => points.markingPeriod === selectedMarkingPeriod,\n    )!\n\n  // const [\n  // \tcurrentMarkingPeriodResponsiblityPoints,\n  // ] = data?.findResponsibilityPointsByStudentId.responsibilityPoints.filter(\n  // \t(points) => points.markingPeriod === selectedMarkingPeriod\n  // )!\n  return (\n    <StudentInformationDisplayContainer>\n      <div>Username: {student.userName}</div>\n      <div style={{ color: 'black' }}>\n        {student.lastName}, {student.firstName}\n      </div>\n      {student && (\n        <>\n          <ResponsibilityPointsDisplay\n            currentMarkingPeriodResponsiblityPoints={\n              responsibilityPointsCheck\n                ? +data?.findResponsibilityPointsByStudentId\n                    .responsibilityPoints!.filter(\n                      (points) =>\n                        points.markingPeriod === selectedMarkingPeriod,\n                    )[0]\n                    .responsibilityPoints.toFixed(1)!\n                : 0\n            }\n            available={responsibilityPointsCheck}\n          />\n          <WritingMetrics studentId={student._id!} />\n          <StudentGradeInformation\n            student={student}\n            selectedMarkingPeriod={selectedMarkingPeriod}\n          />\n          <ResetStudentPassword userId={student._id!} />\n          <div>Current Course: {student.inCourses[0].name}</div>\n          <SwitchCourse student={student} />\n        </>\n      )}\n    </StudentInformationDisplayContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useEnumContextProvider } from '../../../../contexts/EnumContext'\nimport { useMarkingPeriodContextProvider } from '../../../../contexts/markingPeriod/MarkingPeriodContext'\nimport {\n  findTemporaryTasksByStudentId,\n  findTemporaryTasksByStudentIdVariables,\n} from '../../../../schemaTypes'\nimport { useStudentInformationContextProvider } from './state-n-styles/StudentInformationContext'\nimport { ProtocolInformationContainer } from './state-n-styles/studentInformationStyles'\n\nexport type TemporaryTasksInformationProps = {}\n\nexport const FIND_TEMPORARY_TASKS_BY_STUDENT_ID_QUERY = gql`\n  query findTemporaryTasksByStudentId(\n    $input: FindTemporaryTasksByStudentIdInput!\n  ) {\n    findTemporaryTasksByStudentId(input: $input) {\n      temporaryTasks {\n        _id\n        dateIssued\n        answered\n        studentPresent\n        markingPeriod\n      }\n    }\n  }\n`\n\nexport const TemporaryTasksInformation =\n  ({}: TemporaryTasksInformationProps) => {\n    const [state] = useStudentInformationContextProvider()\n    const [markingPeriodState] = useMarkingPeriodContextProvider()\n    const { markingPeriodEnum } = useEnumContextProvider()\n\n    const [markingPeriodToReview, setMarkingPeriodToReview] = useState(\n      markingPeriodState.context.currentMarkingPeriod,\n    )\n    const { loading, data } = useQuery<\n      findTemporaryTasksByStudentId,\n      findTemporaryTasksByStudentIdVariables\n    >(FIND_TEMPORARY_TASKS_BY_STUDENT_ID_QUERY, {\n      variables: {\n        input: { studentId: state.context.student?._id! },\n      },\n      onCompleted: (data) => console.log(data),\n      onError: (error) => console.error(error),\n    })\n\n    const totalTasks =\n      data?.findTemporaryTasksByStudentId.temporaryTasks.filter(\n        (tasks) =>\n          tasks.studentPresent && tasks.markingPeriod === markingPeriodToReview,\n      )\n\n    const completedTasks =\n      data?.findTemporaryTasksByStudentId.temporaryTasks.filter(\n        (tasks) =>\n          tasks.answered &&\n          tasks.studentPresent &&\n          tasks.markingPeriod === markingPeriodToReview,\n      )\n\n    const completionRate =\n      data && Math.round((100 * completedTasks!.length) / totalTasks!.length)\n\n    if (loading) return <div>Loading </div>\n\n    return (\n      <ProtocolInformationContainer>\n        <div>\n          Tasks Completed: {completedTasks!.length}/{totalTasks!.length}\n        </div>\n        <div>Completion Rate: {completionRate}%</div>\n      </ProtocolInformationContainer>\n    )\n  }\n","import { gql, useQuery } from '@apollo/client'\nimport {\n  MarkingPeriodEnum,\n  findStudentAbsencesAndLatenesses,\n  findStudentAbsencesAndLatenessesVariables,\n  LatenessTypeEnum,\n} from '../../../../../schemaTypes'\n\nexport type AbsenceHomeProps = {\n  studentId: string\n  selectedMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const FIND_STUDENT_ABSENCES_AND_LATENESSES_QUERY = gql`\n  query findStudentAbsencesAndLatenesses($input: FindStudentByIdInput!) {\n    findStudentById(input: $input) {\n      student {\n        _id\n        hasLatnesses {\n          dayLate\n          latenessType\n          markingPeriod\n        }\n        hasAbsences {\n          dayAbsent\n          markingPeriod\n        }\n      }\n    }\n  }\n`\n\nexport const AbsenceHome = ({\n  studentId,\n  selectedMarkingPeriod,\n}: AbsenceHomeProps) => {\n  const { loading, data } = useQuery<\n    findStudentAbsencesAndLatenesses,\n    findStudentAbsencesAndLatenessesVariables\n  >(FIND_STUDENT_ABSENCES_AND_LATENESSES_QUERY, {\n    variables: {\n      input: { studentId },\n    },\n    onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n\n  const absences = data?.findStudentById.student.hasAbsences.filter(\n    (abs) => abs.markingPeriod === selectedMarkingPeriod,\n  )!\n  const excusedLatenesses = data?.findStudentById.student.hasLatnesses.filter(\n    (abs) =>\n      abs.markingPeriod === selectedMarkingPeriod &&\n      abs.latenessType === LatenessTypeEnum.EXCUSED,\n  )!\n  const unexcusedLatenesses = data?.findStudentById.student.hasLatnesses.filter(\n    (abs) =>\n      abs.markingPeriod === selectedMarkingPeriod &&\n      abs.latenessType === LatenessTypeEnum.UNEXCUSED,\n  )!\n  return (\n    <div>\n      <div>\n        <div>Absences</div>\n        {absences.length > 0 ? (\n          <div>\n            {absences.map((abs) => (\n              <div>\n                <div>Date: {abs.dayAbsent}</div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>Perfect Attendance</div>\n        )}\n      </div>\n      <div>\n        <div>Excused Latenesses</div>\n        {excusedLatenesses.length > 0 ? (\n          <div>\n            {excusedLatenesses.map((lateness) => (\n              <div>\n                <div>Date: {lateness.dayLate}</div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>Never had an excused lateness</div>\n        )}\n      </div>\n      <div>\n        <div>Unexcused Latenesses</div>\n        {unexcusedLatenesses.length > 0 ? (\n          <div>\n            {unexcusedLatenesses.map((lateness) => (\n              <div>\n                <div>Date: {lateness.dayLate}</div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>Never had an unexcused lateness</div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { MarkingPeriodEnum } from '../../../../../schemaTypes'\n\nexport type BehaviorHomeProps = {\n  studentId: string\n  selectedMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const BehaviorHome = ({}: BehaviorHomeProps) => {\n  return (\n    <>\n      <div></div>\n    </>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport {\n  MarkingPeriodEnum,\n  findStudentOutOfClassByStudentIdAndMarkingPeriod,\n  findStudentOutOfClassByStudentIdAndMarkingPeriodVariables,\n} from '../../../../../schemaTypes'\nimport {\n  capitalizer,\n  phraseCapitalizer,\n  underscoreEliminator,\n} from '../../../../../utils'\n\nexport type OutOfClassHomeProps = {\n  studentId: string\n  selectedMarkingPeriod: MarkingPeriodEnum\n}\n\nexport const FIND_STUDENT_OUT_OF_CLASS_BY_STUDENT_AND_MARKING_PERIOD_QUERY = gql`\n  query findStudentOutOfClassByStudentIdAndMarkingPeriod(\n    $input: FindStudentOutOfClassByStudentIdAndMarkingPeriodInput!\n  ) {\n    findStudentOutOfClassByStudentIdAndMarkingPeriod(input: $input) {\n      studentOutOfClassListForMarkingPeriod {\n        student {\n          _id\n          firstName\n          lastName\n        }\n        date\n        departTime\n        hasReturned\n        outOfClassDestination\n        returnTime\n      }\n    }\n  }\n`\n\nexport const OutOfClassHome = ({\n  studentId,\n  selectedMarkingPeriod,\n}: OutOfClassHomeProps) => {\n  const { loading, data } = useQuery<\n    findStudentOutOfClassByStudentIdAndMarkingPeriod,\n    findStudentOutOfClassByStudentIdAndMarkingPeriodVariables\n  >(FIND_STUDENT_OUT_OF_CLASS_BY_STUDENT_AND_MARKING_PERIOD_QUERY, {\n    variables: {\n      input: { markingPeriod: selectedMarkingPeriod, studentId },\n    },\n    // onCompleted: (data) => console.log(data),\n    onError: (error) => console.error(error),\n  })\n  if (loading) return <div>Loading </div>\n  // const { date, departTime, returnTime } =\n  //   data?.findStudentOutOfClassByStudentIdAndMarkingPeriod\n  //     .studentOutOfClassListForMarkingPeriod[0]!\n\n  // const aTime = `${date}, ${'5:59:00 AM'}`\n  // const bTime = `${date}, ${'7:05:59 AM'}`\n  // const departingTime = new Date(aTime).getTime()\n  // const returningTime = new Date(bTime).getTime()\n  // const totalTime = (returningTime - departingTime) / (1000 * 60)\n  // const totalTimeString =\n  //   Math.floor(totalTime) + ':' + Math.round((totalTime % 1) * 60)\n\n  const outOfClassObjectList =\n    data?.findStudentOutOfClassByStudentIdAndMarkingPeriod.studentOutOfClassListForMarkingPeriod.map(\n      (obj) => {\n        const { date, departTime, returnTime, outOfClassDestination } = obj!\n\n        const aTime = `${date}, ${departTime}`\n        const bTime = `${date}, ${returnTime}`\n        const departingTime = new Date(aTime).getTime()\n        const returningTime = new Date(bTime).getTime()\n        const totalTime = (returningTime - departingTime) / (1000 * 60)\n        const totalTimeString =\n          Math.floor(totalTime) + ':' + Math.round((totalTime % 1) * 60)\n        return {\n          date,\n          destination: outOfClassDestination,\n          timeGone: totalTimeString,\n        }\n      },\n    )!\n  return (\n    <>\n      {data?.findStudentOutOfClassByStudentIdAndMarkingPeriod\n        .studentOutOfClassListForMarkingPeriod.length! > 0 ? (\n        <div>\n          {outOfClassObjectList.map((obj) => (\n            <div>\n              <div>Date: {obj.date}</div>\n              <div>\n                Destination:{' '}\n                {underscoreEliminator(phraseCapitalizer(obj.destination))}\n              </div>\n              <div>Time Taken: {obj.timeGone}</div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div>Has not left class at all this marking period.</div>\n      )}\n    </>\n  )\n}\n","import { useState } from 'react'\nimport { MarkingPeriodEnum } from '../../../../../schemaTypes'\nimport {\n  AssignmentInformationAssignmentSwitchContainer,\n  AssignmentSwitch,\n  ConductInformationContainer,\n} from '../state-n-styles/studentInformationStyles'\nimport { AbsenceHome } from './AbsenceHome'\nimport { BehaviorHome } from './BehaviorHome'\nimport { OutOfClassHome } from './OutOfClassHome'\n\nexport type ConductHomeProps = {\n  studentId: string\n  selectedMarkingPeriod: MarkingPeriodEnum\n}\n\nexport type ConductInformationSwitchProps =\n  | 'BEHAVIOR'\n  | 'ATTENDANCE'\n  | 'OUT_OF_CLASS'\nexport const ConductHome = ({\n  studentId,\n  selectedMarkingPeriod,\n}: ConductHomeProps) => {\n  const [conductSwitch, setConductSwitch] =\n    useState<ConductInformationSwitchProps>('ATTENDANCE')\n  return (\n    <ConductInformationContainer>\n      <AssignmentInformationAssignmentSwitchContainer>\n        <AssignmentSwitch\n          selected={conductSwitch === 'ATTENDANCE'}\n          onClick={() => setConductSwitch('ATTENDANCE')}\n        >\n          Attendance\n        </AssignmentSwitch>\n        <AssignmentSwitch\n          selected={conductSwitch === 'BEHAVIOR'}\n          onClick={() => setConductSwitch('BEHAVIOR')}\n        >\n          Behavior\n        </AssignmentSwitch>\n        <AssignmentSwitch\n          selected={conductSwitch === 'OUT_OF_CLASS'}\n          onClick={() => setConductSwitch('OUT_OF_CLASS')}\n        >\n          Out of Class\n        </AssignmentSwitch>\n      </AssignmentInformationAssignmentSwitchContainer>\n\n      {conductSwitch === 'ATTENDANCE' && (\n        <AbsenceHome\n          studentId={studentId}\n          selectedMarkingPeriod={selectedMarkingPeriod}\n        />\n      )}\n      {conductSwitch === 'BEHAVIOR' && (\n        <BehaviorHome\n          studentId={studentId}\n          selectedMarkingPeriod={selectedMarkingPeriod}\n        />\n      )}\n      {conductSwitch === 'OUT_OF_CLASS' && (\n        <OutOfClassHome\n          studentId={studentId}\n          selectedMarkingPeriod={selectedMarkingPeriod}\n        />\n      )}\n    </ConductInformationContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  findAllStudentsForStudentInformation,\n  MarkingPeriodEnum,\n} from '../../../../schemaTypes'\nimport { MarkingPeriodSelectorSwitch } from '../../../reusable-components/MarkingPeriodSelectorSwitch'\nimport { TemporaryTaskDisplay } from '../courses/temporary-tasks/state-n-styles/temporaryTaskStyles'\nimport { AssignmentInformation } from './assignments/AssignmentInformation'\nimport { ParentContacts } from './contact-info/ParentContacts'\nimport { useStudentInformationContextProvider } from './state-n-styles/StudentInformationContext'\nimport {\n  InformationContainer,\n  InformationTypeSelectorContainer,\n  InformationTypeTab,\n  MarkingPeriodSelectorSwitchContainer,\n  StudentNameHeader,\n} from './state-n-styles/studentInformationStyles'\nimport { StudentInformationDisplay } from './general-student-information/StudentInformationDisplay'\nimport { TemporaryTasksInformation } from './TemporaryTasksInformation'\nimport { ConductHome } from './conduct/ConductHome'\n\nexport type InformationDisplayProps = {}\n\nexport const InformationDisplay = ({}: InformationDisplayProps) => {\n  const [state, event] = useStudentInformationContextProvider()\n  const [selectedMarkingPeriod, setSelectedMarkingPeriod] = useState(\n    MarkingPeriodEnum.FIRST,\n  )\n  const { student } = state.context\n  return (\n    <InformationContainer>\n      <StudentNameHeader>\n        <div>\n          {student?.firstName} {student?.lastName}\n        </div>\n      </StudentNameHeader>\n      <InformationTypeSelectorContainer>\n        <InformationTypeTab\n          onClick={() => event({ type: 'STUDENT_INFO' })}\n          selected={state.matches('information.studentInfo')}\n        >\n          <div>Student Data</div>\n        </InformationTypeTab>\n        <InformationTypeTab\n          onClick={() => event({ type: 'ASSIGNMENTS' })}\n          selected={state.matches('information.assignments')}\n        >\n          <div>Assignments</div>\n        </InformationTypeTab>\n        <InformationTypeTab\n          onClick={() => event({ type: 'PROTOCOLS' })}\n          selected={state.matches('information.protocols')}\n        >\n          <div>Protocols</div>\n        </InformationTypeTab>\n        <InformationTypeTab\n          onClick={() => event({ type: 'CONDUCT' })}\n          selected={state.matches('information.conduct')}\n        >\n          <div>Conduct</div>\n        </InformationTypeTab>\n        <InformationTypeTab\n          onClick={() => event({ type: 'CONTACTS' })}\n          selected={state.matches('information.contacts')}\n        >\n          <div>Contacts</div>\n        </InformationTypeTab>\n      </InformationTypeSelectorContainer>\n      {state.matches('information.studentInfo') && (\n        <StudentInformationDisplay\n          student={student!}\n          selectedMarkingPeriod={selectedMarkingPeriod}\n          setSelectedMarkingPeriod={setSelectedMarkingPeriod}\n        />\n      )}\n      {state.matches('information.assignments') && (\n        <AssignmentInformation\n          studentId={student?._id!}\n          selectedMarkingPeriod={selectedMarkingPeriod}\n        />\n      )}\n      {state.matches('information.protocols') && <TemporaryTasksInformation />}\n      {state.matches('information.conduct') && (\n        <ConductHome\n          studentId={student?._id!}\n          selectedMarkingPeriod={selectedMarkingPeriod}\n        />\n      )}\n      {state.matches('information.contacts') && (\n        <ParentContacts studentId={student?._id!} />\n      )}\n      <MarkingPeriodSelectorSwitchContainer>\n        <MarkingPeriodSelectorSwitch\n          selectedMarkingPeriod={selectedMarkingPeriod}\n          setSelectedMarkingPeriod={setSelectedMarkingPeriod}\n        />\n      </MarkingPeriodSelectorSwitchContainer>\n    </InformationContainer>\n  )\n}\n","import { gql, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { useToggle } from '../../../../hooks'\nimport { findAllStudentsForStudentInformation } from '../../../../schemaTypes'\nimport { apostopheRemover } from '../../../../utils'\nimport { InformationDisplay } from './InformationDisplay'\nimport { useStudentInformationContextProvider } from './state-n-styles/StudentInformationContext'\nimport {\n  SelectStudentTitle,\n  StudentInformationContainer,\n  StudentInformationTitlePageHeader,\n  StudentNameListContainer,\n  StudentNameSelectContainer,\n  StudentNameSelectorContainer,\n  StudentSelectInput,\n} from './state-n-styles/studentInformationStyles'\n\nexport type StudentInformationProps = {}\n\nexport const FIND_ALL_STUDENTS_QUERY = gql`\n  query findAllStudentsForStudentInformation {\n    findAllStudents {\n      students {\n        _id\n        firstName\n        lastName\n        userName\n        inCourses {\n          name\n          _id\n        }\n      }\n    }\n  }\n`\n\nexport const StudentInformation = ({}: StudentInformationProps) => {\n  const [state, event] = useStudentInformationContextProvider()\n  const [studentName, setStudentName] = useState('')\n  const [studentList, toggleStudentList] = useToggle(false)\n  const { loading, data } = useQuery<findAllStudentsForStudentInformation>(\n    FIND_ALL_STUDENTS_QUERY,\n    {\n      onCompleted: (data) => {},\n      onError: (error) => console.error(error),\n    },\n  )\n  const studentSearchList = data?.findAllStudents.students.filter((student) => {\n    return (\n      // student.inCourses.some((course) => course.name !== 'Cohort Class') &&\n      apostopheRemover(student.firstName.trim())\n        .substr(0, studentName.length)\n        .toLowerCase() ===\n      studentName.trim().substr(0, studentName.length).toLowerCase()\n    )\n  })!\n\n  if (loading) return <div>Loading </div>\n\n  return (\n    <StudentInformationContainer>\n      <StudentNameSelectContainer>\n        <StudentNameSelectorContainer>\n          <SelectStudentTitle>Select Student</SelectStudentTitle>\n          <StudentSelectInput\n            value={studentName}\n            autoFocus\n            onFocus={() => toggleStudentList()}\n            onBlur={(e: any) => (e.target.value = '')}\n            onChange={(e: any) => {\n              setStudentName(e.target.value)\n            }}\n          />\n        </StudentNameSelectorContainer>\n\n        {studentName.length > 0 && studentList && (\n          <StudentNameListContainer>\n            {studentSearchList?.map((student) => (\n              <div\n                onClick={() => {\n                  toggleStudentList()\n                  setStudentName('')\n                  event({ type: 'SET_STUDENT', payload: student })\n                }}\n                key={student._id}\n              >\n                {student.firstName + ' ' + student.lastName}\n              </div>\n            ))}\n          </StudentNameListContainer>\n        )}\n      </StudentNameSelectContainer>\n\n      {state.context.student ? (\n        <InformationDisplay />\n      ) : (\n        <StudentInformationTitlePageHeader>\n          Student Information\n        </StudentInformationTitlePageHeader>\n      )}\n    </StudentInformationContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\n\nexport type AdjectivesAndPrepositonalPhrasesProps = {}\n\nexport const AdjectivesAndPrepositonalPhrases =\n  ({}: AdjectivesAndPrepositonalPhrasesProps) => {\n    const [select, text, reset] = useSelectedText()\n    const [state, setState] = useState<\n      | 'subject-adjectives'\n      | 'subject-prepositions'\n      | 'predicate-adjectives'\n      | 'predicate-prepositions'\n    >('subject-adjectives')\n    const testSentence =\n      'A good player with high reputation | respects their team.'\n    const testCompleteSubject = testSentence.split('|')[0]\n    const testCompletePredicate = testSentence.split('|')[1]\n\n    const adjectiveList: string[] = ['good']\n    const prepostionalPhrasesList: string[] = ['with high reputation']\n\n    return (\n      <div>\n        <div>\n          Find the adjectives and prepositional phrases that modify the simple\n          subject\n        </div>\n        <div onMouseUp={select}>\n          <span>{testCompleteSubject}</span>\n          <span> | </span>\n          <span>{testCompletePredicate}</span>\n        </div>\n        <div>{text}</div>\n      </div>\n    )\n  }\n","export type SimplePredicateGraderProps = {\n  correctSimplePredicate: string\n  givenSimplePredicate: string | null\n  completePredicate: string\n  verbType: string\n}\n\nexport const simplePredicateGrader = ({\n  correctSimplePredicate,\n  givenSimplePredicate,\n  completePredicate,\n  verbType,\n}: SimplePredicateGraderProps) => {\n  console.log(givenSimplePredicate)\n  // console.log(correctSimplePredicate)\n  if (!completePredicate.includes(givenSimplePredicate!)) {\n    return {\n      whatWentWrong: 'Your simple predicate is in the subject.',\n      howToFix:\n        'Look at the subject only and find the person, place, idea, or thing that is in the complete subject.',\n      correctSimplePredicate: false,\n    }\n  }\n  if (givenSimplePredicate !== correctSimplePredicate) {\n    return {\n      whatWentWrong:\n        'Your simple predicate is in the complete predicate, but is not the verb in the complete predicate',\n      howToFix:\n        'Find the action word, being word, or feeling word that is in the complete predicate.',\n      correctSimplePredicate: false,\n    }\n  }\n  return {\n    correctSimplePredicate: true,\n    message: 'Right again!',\n  }\n}\n","type SimpleSubjectGraderProps = {\n  correctSimpleSubject: string\n  givenSimpleSubject: string\n  completeSubject: string\n}\n\nexport const simpleSubjectGrader = ({\n  correctSimpleSubject,\n  givenSimpleSubject,\n  completeSubject,\n}: SimpleSubjectGraderProps) => {\n  if (!completeSubject.includes(givenSimpleSubject)) {\n    return {\n      whatWentWrong: 'Your simple subject is in the predicate.',\n      howToFix:\n        'Look at the subject to the right of the dividing line. Only and find the person, place, idea, or thing that is in the complete subject.',\n      correctSimpleSubject: false,\n    }\n  }\n  if (givenSimpleSubject !== correctSimpleSubject) {\n    return {\n      whatWentWrong:\n        'Your simple subject is not the noun or the complete noun in the complete subject',\n      howToFix:\n        'Find the person, place, idea, or thing that is in the complete subject.',\n      correctSimpleSubject: false,\n    }\n  }\n  // if (givenSimpleSubject === correctSimpleSubject) {\n  return {\n    correctSimpleSubject: true,\n    message: 'Great job!',\n  }\n  // }\n\n  // return { message: `Everything is good` }\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\nimport { simplePredicateGrader } from './simplePredicateGrader'\nimport { simpleSubjectGrader } from './simpleSubjectGrader'\n\nexport type SimpleSubjectPredicateProps = {\n  sentence: string\n  setSentence: Dispatch<SetStateAction<string>>\n}\n\nexport const SimpleSubjectPredicate = ({\n  sentence,\n  setSentence,\n}: SimpleSubjectPredicateProps) => {\n  const [select, text, reset] = useSelectedText()\n  const [state, setState] = useState<'subject' | 'predicate' | 'final'>(\n    'subject',\n  )\n\n  const [simpleSubject, setSimpleSubject] = useState('')\n  const [simplePredicate, setSimplePredicate] = useState('')\n  const testSentence =\n    'A good player with high reputation | respects their team.'\n  const newSentence = testSentence\n    .split(' ')\n    .slice(0, testSentence.split(' ').length)\n\n  const dividedSentence = testSentence.split('|')\n\n  const period =\n    newSentence[newSentence.length - 1].split('')[\n      newSentence[newSentence.length - 1].split('').length - 1\n    ]\n  const lastWordWithOurPeriod = newSentence[newSentence.length - 1]\n    .split('')\n    .slice(0, newSentence[newSentence.length - 1].split('').length - 1)\n    .join('')\n\n  const modifiedNewSentence = [\n    ...newSentence.slice(0, newSentence.length - 1),\n    lastWordWithOurPeriod,\n    period,\n  ]\n\n  const subjectGrader = simpleSubjectGrader({\n    correctSimpleSubject: 'player',\n    givenSimpleSubject: simpleSubject,\n    completeSubject: dividedSentence[0],\n  })\n\n  const predicateGrader = simplePredicateGrader({\n    correctSimplePredicate: 'respects',\n    givenSimplePredicate: simplePredicate,\n    completePredicate: dividedSentence[1],\n    verbType: 'action',\n  })\n\n  // useEffect(() => {\n  // \tsubjectGrader.correctSimpleSubject && setState('predicate')\n  // }, [subjectGrader])\n  const handleDoubleClick = () =>\n    state === 'subject' && !simpleSubject\n      ? () => {\n          setSimpleSubject(text)\n          reset()\n        }\n      : state === 'subject' && simpleSubject\n        ? () => {\n            setSimpleSubject('')\n            setSimpleSubject(text)\n            reset()\n          }\n        : () => {\n            setSimplePredicate(text)\n            reset()\n          }\n\n  return (\n    <div>\n      {state === 'subject' && (\n        <div>\n          Find the simple subject of the sentence. Double Click to select the\n          word.\n        </div>\n      )}\n      {state === 'predicate' && (\n        <div>\n          Find the simple predicate of the sentence. Double Click to select the\n          word.\n        </div>\n      )}\n      <br />\n      <div onMouseUp={select}>\n        {modifiedNewSentence.map((word, i: number) => {\n          return (\n            <span key={i}>\n              <span\n                onDoubleClick={handleDoubleClick()}\n                style={\n                  word === simpleSubject\n                    ? {\n                        cursor: 'pointer',\n                        textDecoration: 'underline',\n                        textUnderlinePosition: 'under',\n                      }\n                    : word === simplePredicate\n                      ? {\n                          cursor: 'pointer',\n                          textDecoration: 'underline',\n                          textDecorationStyle: 'double',\n                          textUnderlinePosition: 'under',\n                        }\n                      : {}\n                }\n              >\n                {word}\n              </span>\n              {word !== modifiedNewSentence[modifiedNewSentence.length - 2] && (\n                <span> </span>\n              )}\n            </span>\n          )\n        })}\n        {state === 'subject' && simpleSubject && (\n          <>\n            {!subjectGrader.correctSimpleSubject ? (\n              <div>\n                <div>Incorrect</div>\n                <div>What went wrong? {subjectGrader.whatWentWrong}</div>\n                <div>How to fix? {subjectGrader.howToFix}</div>\n              </div>\n            ) : (\n              <div>\n                <div>Correct</div>\n                <div>{subjectGrader.message}</div>\n                <button onClick={() => setState('predicate')}>Next</button>\n              </div>\n            )}\n          </>\n        )}\n        {state === 'predicate' && simplePredicate && (\n          <>\n            {!predicateGrader.correctSimplePredicate ? (\n              <div>\n                <div>Incorrect</div>\n                <div>What went wrong? {predicateGrader.whatWentWrong}</div>\n                <div>How to fix? {predicateGrader.howToFix}</div>\n              </div>\n            ) : (\n              <div>\n                <div>Correct</div>\n                <div>{predicateGrader.message}</div>\n                {/* <button onClick={() => setState('predicate')}>Next</button> */}\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","import styled from 'styled-components'\n\nexport const SubjectPredicateContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 2fr 3fr;\n  justify-items: center;\n  align-items: center;\n`\nexport const DirectionsContainer = styled.div`\n  display: grid;\n  justify-items: center;\n\n  font-size: 3.2vh;\n`\n\nexport const SentenceContainer = styled.div`\n  font-size: 3vh;\n  /* text-decoration-thickness: 2vh; */\n`\n\ntype MessageContainerProps = {\n  correct?: boolean\n}\n\nexport const MessageContainer = styled.div<MessageContainerProps>`\n  font-size: 3vh;\n  color: ${({ correct }) => (correct ? 'var(--blue)' : 'var(--red)')};\n`\n","export type SubjectPredicateGraderProps = {\n  givenSubject: string\n  correctSubject: string\n  sentence: string\n  noun: string[]\n  nounType: string\n  compoundNoun: boolean\n  verb: string\n  verbType: string\n  givenPredicate: string\n  // correctPredicate: string\n  // prepositionalPhrases: string[]\n  // object: string\n}\n\n// export const subjectPredicateGradingArgsObj: SubjectPredicateGraderArgs = {\n//   givenSubject: '',\n//   correctSubject: '',\n//   sentence: '',\n//   noun: '',\n//   verb: '',\n//   verbType: '',\n//   givenPredicate: '',\n//   correctPredicate: '',\n//   prepositionalPhrases: [],\n//   object: '',\n// }\n\nexport const subjectPredicateGrader = ({\n  givenSubject,\n  correctSubject,\n  givenPredicate,\n  sentence,\n\n  noun,\n  compoundNoun,\n  nounType,\n  verb,\n  verbType,\n}: // correctPredicate,\n// prepositionalPhrases,\n// object,\nSubjectPredicateGraderProps) => {\n  const subjectCheck = givenSubject.split(' ')\n  const predicateCheck = givenPredicate.split(' ')\n\n  if (givenPredicate === '.' || givenPredicate === '?') {\n    return {\n      whatWentWrong: `Your subject can't be the whole sentence.`,\n      howToFix: `Your subject needs to include the person, place, thing, or idea that the sentence is about, but not include an action, being, or feeling word.`,\n      correct: false,\n    }\n  }\n\n  for (const word of subjectCheck) {\n    if (!sentence.split(' ').includes(word)) {\n      return {\n        whatWentWrong: `You've split a word!`,\n        howToFix: `Only separate the sentence between words`,\n        correct: false,\n      }\n    }\n  }\n\n  if (!subjectCheck.includes(noun[noun.length - 1])) {\n    return {\n      whatWentWrong:\n        `\"` + givenSubject + `\" doesn't contain a noun or the complete noun.`,\n      howToFix:\n        'Your subject needs to include the person, place, thing, or idea that the sentence is about.',\n      correct: false,\n    }\n  }\n  if (subjectCheck.includes(verb)) {\n    return {\n      whatWentWrong: `Your subject contains a verb.`,\n      howToFix:\n        `Look at the statement and take out the ` +\n        (verbType === 'action'\n          ? `action word`\n          : verbType === 'being'\n            ? `being word (was or were)`\n            : 'feeling word'),\n      correct: false,\n    }\n  }\n  if (predicateCheck[0] !== verb) {\n    return {\n      whatWentWrong: `Your subject is missing prepositional phrases that describe the person, place, idea or thing the sentence is about.`,\n      howToFix: `Sometimes the noun and the verb aren't next to each other. Break the sentence right before the action, being, or feeling word.`,\n      correct: false,\n    }\n  }\n  // if (givenSubject !== correctSubject) {\n  //   return { whatWentWrong: `Your subject isn't correct`, correct: false }\n  // }\n  return { message: 'Correct - Good job!', correct: true }\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport {\n  DirectionsContainer,\n  MessageContainer,\n  SentenceContainer,\n  SubjectPredicateContainer,\n} from './subjectPredicateStyles'\nimport { subjectPredicateGrader } from './subjectPredicateGrading'\n\nexport type SubjectPredicate2Props = {\n  sentence: string\n  setSentence: Dispatch<SetStateAction<string>>\n}\n\nexport const SubjectPredicate2 = ({\n  sentence,\n  setSentence,\n}: SubjectPredicate2Props) => {\n  const [point, setPoint] = useState<number | null>(null)\n\n  const separator = ' | '\n  const newSentence = [\n    sentence.slice(0, point!).trim(),\n    separator,\n    sentence.slice(point!, sentence.length).trim(),\n  ]\n  const correctSubject = 'A good player with high reputation'\n  const correctPredicate = 'respects their team.'\n\n  const nounType = 'person'\n\n  const { message, correct, whatWentWrong, howToFix } = subjectPredicateGrader({\n    correctSubject,\n    givenSubject: newSentence[0],\n    givenPredicate: newSentence[2],\n    sentence,\n    noun: ['player'],\n    nounType,\n    compoundNoun: false,\n    verb: 'respects',\n    verbType: 'action',\n  })\n\n  return (\n    <SubjectPredicateContainer>\n      <DirectionsContainer>\n        <div>\n          Click on the sentence below to separate it into the subject and\n          predicate.\n        </div>\n        <div>\n          The subject will be on the right with a single underline, and the\n          predicate will be on the left with double underline.\n        </div>\n      </DirectionsContainer>\n      {point ? (\n        <SentenceContainer>\n          {newSentence.map((part, i) => (\n            <span\n              key={i}\n              style={\n                i === 0\n                  ? {\n                      cursor: 'pointer',\n                      textDecoration: 'underline',\n                      textUnderlinePosition: 'under',\n                    }\n                  : i === 2\n                    ? {\n                        cursor: 'pointer',\n                        textDecoration: 'underline',\n                        textDecorationStyle: 'double',\n                        textUnderlinePosition: 'under',\n                      }\n                    : { cursor: 'pointer' }\n              }\n              onClick={() => {\n                if (part === separator) {\n                  setPoint(null)\n                }\n              }}\n            >\n              {part}\n            </span>\n          ))}\n        </SentenceContainer>\n      ) : (\n        <SentenceContainer>\n          {sentence.split('').map((letter, i) => (\n            <span\n              key={i}\n              style={{ cursor: 'pointer' }}\n              onClick={() => setPoint(i)}\n            >\n              {letter}\n            </span>\n          ))}\n        </SentenceContainer>\n      )}\n      {point ? (\n        <MessageContainer correct={correct}>\n          {!correct ? (\n            <div>\n              <div style={{ textAlign: 'center' }}>Not Quite</div>\n              <br></br>\n              <div>What went wrong? {whatWentWrong}</div>\n              <div>How to fix it: {howToFix}</div>\n            </div>\n          ) : (\n            <div>\n              <div style={{ textAlign: 'center' }}>{message}</div>\n              <br />\n              <div>\n                \"{newSentence[0]}\" is the complete subject of the sentence\n                because it is {nounType === 'person' ? 'who' : 'what'} the\n                sentence is about.\n              </div>\n              <div>\n                \"\n                {newSentence[2].split('')[0].toString().toUpperCase() +\n                  newSentence[2].slice(1, newSentence[2].length - 1)}\n                \" is the complete predicate of the sentence because it is what\n                the {nounType === 'person' ? 'person' : 'thing'} is doing.\n              </div>\n              <br />\n              {/* <button onClick={() => setSentence(newSentence.join(' '))}>Next Step</button> */}\n            </div>\n          )}\n        </MessageContainer>\n      ) : (\n        <div></div>\n      )}\n    </SubjectPredicateContainer>\n  )\n}\n","import React from 'react'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\n\nexport type ObjectsProps = {}\n\nexport const Objects = ({}: ObjectsProps) => {\n  const [select, text, reset] = useSelectedText()\n  const sentence = 'A good player with high reputation | respects their team.'\n  const completeSubject = sentence.split('|')[0]\n  const completePredicate = sentence.split('|')[1]\n  return (\n    <div>\n      <div>\n        Direct Objects are nouns or pronouns that recieve the action of the\n        verb.\n      </div>\n      <div>Example: Rob hits the ball. </div>\n      <div>Hits is the verb and the ball recieves the hit.</div>\n      <br />\n      <div onMouseUp={select}>\n        <span>{completeSubject}</span>\n        <span> | </span>\n        <span>{completePredicate}</span>\n      </div>\n    </div>\n  )\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { endingPhraseGrader } from './EndingPhraseGrader'\nimport {\n  QuestionDeconstructProps,\n  QuestionProps,\n} from './QuestionDeconstruction'\n\nexport type EndingPhraseProps = {\n  setState: Dispatch<SetStateAction<QuestionDeconstructProps>>\n  questionToModify: string[]\n  question: QuestionProps\n}\n\nexport const EndingPhrase = ({\n  setState,\n  question,\n  questionToModify,\n}: EndingPhraseProps) => {\n  const [answer, setAnswer] = useState<'how' | 'why' | ''>('')\n  const { correct, ending, message, waitTime } = endingPhraseGrader({\n    correctQuestionWord: question.questionWord,\n    givenQuestionWord: answer,\n  })\n  useEffect(() => {\n    if (!answer) {\n      if (correct) {\n        setTimeout(() => {\n          setState('complete')\n        }, waitTime * 1000)\n      } else {\n        setTimeout(() => {\n          setAnswer('')\n        }, waitTime * 1000)\n      }\n    }\n  }, [answer])\n  return (\n    <div>\n      <div>Now we'll figure out how to end the sentence.</div>\n      <div>There are different endings for different kinds of questions.</div>\n      <div>For the question: {question.original}</div>\n      {/* <span>\n        Does the question ask How {question.helpingVerb}{' '}\n        {question.completeSubject} {question.simplePredicate}{' '}\n        <button onClick={() => setAnswer('how')}>Click</button>\n      </span>\n      <br />\n      <div>Or</div>\n      <span>\n        Does the question ask Why {question.helpingVerb}{' '}\n        {question.completeSubject} {question.simplePredicate}{' '}\n        <button onClick={() => setAnswer('why')}>Click</button>\n      </span> */}\n      <div>Click on the appropriate ending.</div>\n      <div onClick={() => setAnswer('how')}>...in a certain way.</div>\n      <div onClick={() => setAnswer('why')}> ...for a certain reason.</div>\n      <br />\n      {answer && (\n        <div>\n          {correct ? (\n            <>\n              <div>{message}</div>\n              <div>\n                Here's the final sentence:{' '}\n                {questionToModify\n                  .join(' ')\n                  .replace('|', '')\n                  .replace('?', ' ' + ending)}\n              </div>\n            </>\n          ) : (\n            <>\n              <div>{message}</div>\n            </>\n          )}\n        </div>\n      )}\n      {/* <LineToManipulate>\n        {questionToModify.map((part, i: number) => (\n          <span key={i}>\n            <span>{part}</span>\n            {part !== questionToModify[questionToModify.length - 1] && (\n              <span> </span>\n            )}\n          </span>\n        ))}\n      </LineToManipulate> */}\n    </div>\n  )\n}\n","type EndingPhraseGraderProps = {\n  correctQuestionWord: string\n  givenQuestionWord: string\n}\n\nexport function endingPhraseGrader({\n  correctQuestionWord,\n  givenQuestionWord,\n}: EndingPhraseGraderProps) {\n  console.log(givenQuestionWord === correctQuestionWord)\n\n  if (givenQuestionWord !== correctQuestionWord) {\n    console.log('incorrect')\n    if (correctQuestionWord === 'how') {\n      return {\n        correct: false,\n        message: `Incorrect. Try Again.`,\n        waitTime: 5,\n        ending: 'in a certain way.',\n      }\n    } else {\n      return {\n        correct: false,\n        message: `Incorrect. Try Again.`,\n        waitTime: 5,\n        ending: 'for a certain reason.',\n      }\n    }\n  } else {\n    console.log('correct')\n    if (correctQuestionWord === 'how')\n      return {\n        correct: true,\n        message: `Correct.`,\n        waitTime: 2,\n        ending: 'in a certain way.',\n      }\n    else {\n      return {\n        correct: true,\n        message: `You got it.`,\n        waitTime: 2,\n        ending: 'for a certain reason.',\n      }\n    }\n  }\n}\n","import React, { Dispatch, SetStateAction, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\nimport { irregularPastTenseVerbList } from '../../../../../../utils'\nimport { simplePredicateGrader } from '../simple-subject-predicate/simplePredicateGrader'\nimport {\n  QuestionProps,\n  QuestionDeconstructProps,\n} from './QuestionDeconstruction'\n\nexport type VerbIdentificationProps = {\n  setState: Dispatch<SetStateAction<QuestionDeconstructProps>>\n  questionToModify: string[]\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  question: QuestionProps\n  verb: string | null\n  setVerb: Dispatch<SetStateAction<string | null>>\n}\n\nexport const VerbIdentification = ({\n  questionToModify,\n  setQuestionToModify,\n  setState,\n  question,\n  verb,\n  setVerb,\n}: VerbIdentificationProps) => {\n  const [select, text, reset] = useSelectedText()\n  const isAnswered = text === ''\n  const neededHelpingVerb = question.helpingVerb !== 'did'\n  const auxillaryVerbCheck =\n    question.helpingVerb !== 'did' &&\n    question.simplePredicate.split(' ').length > 1 &&\n    question.simplePredicate.split(' ')[0] === question.helpingVerb\n\n  console.log('auxillaryVerbCheck: ' + auxillaryVerbCheck)\n  console.log(question.simplePredicate.split(' ')[0])\n  const { correctSimplePredicate, howToFix, message, whatWentWrong } =\n    simplePredicateGrader({\n      completePredicate: neededHelpingVerb\n        ? question.helpingVerb + ' ' + question.completePredicate\n        : question.completePredicate,\n      correctSimplePredicate: neededHelpingVerb\n        ? question.helpingVerb + ' ' + question.simplePredicate\n        : question.simplePredicate,\n      givenSimplePredicate: text.trim(),\n      verbType: question.verbType,\n    })\n\n  useEffect(() => {\n    if (correctSimplePredicate) {\n      setVerb(text)\n      setTimeout(() => {\n        if (question.helpingVerb === 'did') {\n          setQuestionToModify(\n            questionToModify\n              .join(' ')\n              .replace(\n                question.simplePredicate,\n                irregularPastTenseVerbList(question.simplePredicate) ===\n                  question.simplePredicate\n                  ? question.simplePredicate + 'ed'\n                  : irregularPastTenseVerbList(question.simplePredicate),\n              )\n              .split(' '),\n          )\n          setState('object-identification')\n        } else setState('ending-phrase')\n      }, 3000)\n    }\n  }, [correctSimplePredicate])\n\n  return (\n    <>\n      <div>Find the Verb or Verb Phrase</div>\n\n      <LineToManipulate onMouseUp={select}>\n        {questionToModify\n          .join(' ')\n          .split(' ')\n          .map((part, i: number) => (\n            <span key={i}>\n              <span>{part}</span>\n              {part !== questionToModify[questionToModify.length - 1] && (\n                <span> </span>\n              )}\n            </span>\n          ))}\n      </LineToManipulate>\n      <div>\n        {isAnswered ? (\n          ''\n        ) : (\n          <div>\n            <div>{correctSimplePredicate ? 'Correct' : 'Not Quite'}</div>\n            {!correctSimplePredicate ? (\n              <>\n                <div>\n                  What went wrong? <span>{whatWentWrong}</span>\n                </div>\n                <div>\n                  How do you fix it? <span>{howToFix}</span>\n                </div>\n              </>\n            ) : (\n              <div>{message}</div>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport const LineToManipulate = styled.div`\n  & ::selection {\n    background-color: var(--blue);\n    color: var(--white);\n  }\n  cursor: pointer;\n`\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\nimport { capitalizer } from '../../../../../../utils'\nimport {\n  QuestionProps,\n  QuestionDeconstructProps,\n} from './QuestionDeconstruction'\nimport { LineToManipulate } from './VerbIdentification'\n\nexport type HelpingVerbIdentificationProps = {\n  questionToModify: string[]\n  question: QuestionProps\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  setState: Dispatch<SetStateAction<QuestionDeconstructProps>>\n}\n\nexport const HelpingVerbIdentification = ({\n  questionToModify,\n  setQuestionToModify,\n  setState,\n  question,\n}: HelpingVerbIdentificationProps) => {\n  const [select, text, reset] = useSelectedText()\n  const [point, setPoint] = useState<number | null>(null)\n\n  const removeDidHandler = (word: string) => {\n    const index = questionToModify.findIndex(\n      (wordToFind) => wordToFind === word,\n    )\n    setQuestionToModify([\n      ...questionToModify.slice(0, index),\n      ...questionToModify.slice(index + 1),\n    ])\n    setTimeout(() => {\n      setState('subject-identification')\n    }, 3000)\n  }\n\n  const moveBeingWord = (word: string) => {\n    if (word === 'was' || word === 'were') {\n      const index = questionToModify.findIndex(\n        (wordToFind) => wordToFind === word,\n      )\n\n      setQuestionToModify([\n        ...questionToModify.slice(0, index),\n        ...questionToModify.slice(index + 1),\n      ])\n    }\n  }\n\n  const newSentence = [\n    questionToModify.join(' ').split('').slice(0, point!).join(''),\n    question.helpingVerb,\n    questionToModify\n      .join(' ')\n      .split('')\n      .slice(point!, questionToModify.join(' ').split('').length)\n      .join(''),\n  ]\n\n  const correctSentence =\n    question.helpingVerb +\n      ' ' +\n      questionToModify\n        .join(' ')\n        .split('')\n        .slice(point!, questionToModify.join(' ').split('').length)\n        .join('') ===\n    question.helpingVerb + ' ' + question.completePredicate\n\n  const helpingVerbCheck = (word: string) => {\n    if (word === question.helpingVerb && question.helpingVerb === 'did') {\n      removeDidHandler(word)\n    } else if (word === question.helpingVerb) {\n      moveBeingWord(word)\n    } else console.log('incorrect')\n  }\n\n  useEffect(() => {\n    if (point && !correctSentence) {\n      setTimeout(() => {\n        setPoint(null)\n      }, 3000)\n    }\n    if (point && correctSentence) {\n      console.log(newSentence.join(' ').split(' '))\n      setQuestionToModify(newSentence.join(' ').split(' '))\n      setTimeout(() => {\n        setState('subject-identification')\n      }, 3000)\n    }\n  }, [point, correctSentence])\n  // console.log(questionToModify.join(' ').replace('  ', '').split('  '))\n  return (\n    <>\n      <div>\n        {question.helpingVerb === 'did' && (\n          <>\n            <div>\n              Since the helping verb is \"Did,\" you don't need it in the sentence\n              anymore. Double click to remove the word.\n            </div>\n            <LineToManipulate onMouseUp={select}>\n              {questionToModify.join(' ').split(' ').includes('did') ? (\n                questionToModify.map((word, i: number) => (\n                  <span key={i}>\n                    <span\n                      onDoubleClick={() => removeDidHandler(word.toLowerCase())}\n                    >\n                      {word === questionToModify[0] ? capitalizer(word) : word}\n                    </span>\n                    {word !== questionToModify[questionToModify.length - 1] && (\n                      <span> </span>\n                    )}\n                  </span>\n                ))\n              ) : (\n                <div>\n                  {questionToModify\n                    .join(' ')\n                    //   .replace(' | ', '')\n                    .replace('?', '.')}\n                </div>\n              )}\n            </LineToManipulate>\n          </>\n        )}\n        {question.helpingVerb !== 'did' && (\n          <>\n            <div>\n              Since the helping verb is \"Was,\" you need to move it to the\n              beginning of the predicate. Double click to remove the word. Then\n              click the place where it should be moved to.\n            </div>\n            <LineToManipulate onMouseUp={select}>\n              {questionToModify.includes('was' || 'were') ? (\n                questionToModify.map((word, i: number) => (\n                  <span key={i}>\n                    <span\n                      onDoubleClick={() => helpingVerbCheck(word.toLowerCase())}\n                    >\n                      {word === questionToModify[0] ? capitalizer(word) : word}\n                    </span>\n                    {word !== questionToModify[questionToModify.length - 1] && (\n                      <span> </span>\n                    )}\n                  </span>\n                ))\n              ) : !point ? (\n                questionToModify\n                  .join(' ')\n                  .split('')\n                  .map((letter, i: number) => (\n                    <span\n                      key={i}\n                      onClick={() => {\n                        setPoint(i)\n                      }}\n                    >\n                      {letter}\n                    </span>\n                  ))\n              ) : correctSentence ? (\n                <div>{newSentence.join(' ')}</div>\n              ) : (\n                <div>{newSentence.join(' ')}</div>\n              )}\n            </LineToManipulate>\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n","import { irregularPastTenseVerbList } from '../../../../../../utils'\nimport { findPreposition } from '../simple-subject-predicate/findPreposition'\n\ntype ObjectGraderProps = {\n  givenObject: string\n  correctObject: string\n  completePredicate: string\n  completeSubject: string\n  simplePredicate: string\n  questionToModify: string[]\n}\n\nexport function objectGrader({\n  givenObject,\n  correctObject,\n  completePredicate,\n  completeSubject,\n  simplePredicate,\n  questionToModify,\n}: ObjectGraderProps) {\n  const conjugatedVerb =\n    irregularPastTenseVerbList(simplePredicate) === simplePredicate\n      ? simplePredicate + 'ed'\n      : irregularPastTenseVerbList(simplePredicate)\n\n  const nonContextSentence =\n    completeSubject + ' ' + conjugatedVerb + ' ' + correctObject\n\n  const questionWords = questionToModify.filter(\n    (word) => word !== '' && word !== '|',\n  )\n  const questionWordsExceptLast = questionWords.slice(\n    0,\n    questionWords.length - 1,\n  )\n\n  const lastWordInQuestion = questionToModify\n    .slice(questionToModify.length - 1)\n    .join('')\n    .split('')\n    .filter((letter) => letter !== '?')\n    .join('')\n\n  const question = [...questionWordsExceptLast, '|', lastWordInQuestion, '?']\n  console.log(givenObject === ' ')\n  if (givenObject !== '' && givenObject === ' ') {\n    return {\n      correctObject: false,\n      message: 'You selected a space.',\n      howToFix: `Make sure you select an entire word or a group of words.`,\n    }\n  }\n  for (const wordInSelection of givenObject\n    .split(' ')\n    .filter((wordToFilter) => wordToFilter !== '')) {\n    if (givenObject !== '' && !question.includes(wordInSelection)) {\n      return {\n        correctObject: false,\n        message: 'You selected a partial word.',\n        howToFix: `Make sure you select an entire word or a group of words.`,\n      }\n    }\n  }\n\n  if (givenObject !== '' && completeSubject.includes(givenObject)) {\n    return {\n      correctObject: false,\n      message: 'Your object must be in the predicate.',\n      howToFix: `Look to the right of the separator line to find the object.`,\n    }\n  }\n  if (givenObject !== '' && givenObject.includes(simplePredicate)) {\n    return {\n      correctObject: false,\n      message: `Your object must come after the verb: ${simplePredicate}`,\n      howToFix: ``,\n    }\n  }\n  if (givenObject !== '' && findPreposition(givenObject)) {\n    return {\n      correctObject: false,\n      message: 'Your object cannot include a preposition.',\n      howToFix: `Ask yourself: Did ${completeSubject}\n      ${simplePredicate} something?`,\n    }\n  }\n  if (givenObject !== '' && !nonContextSentence.includes(givenObject)) {\n    return {\n      correctObject: false,\n      message:\n        'Your selection is not the word that comes right after the verb.',\n      howToFix: `The Object of the verb is going to come directly after the verb.`,\n    }\n  }\n  if (givenObject !== '' && givenObject !== correctObject) {\n    // if the given is one word but the correct is more than one word\n    if (\n      givenObject.split(' ').length === 1 &&\n      correctObject.split(' ').length > 1\n    ) {\n      console.log('given is one word but the correct is more than one word')\n      return {\n        correctObject: false,\n        message:\n          'The word you selected is one word but the object is more than one word.',\n        howToFix: `Select more than one word. There may be an adjective before the noun or the word \"a\" or \"the.\" `,\n      }\n    }\n    // if the given is more than one word, but the correct is one word\n    if (\n      givenObject.split(' ').length > 1 &&\n      correctObject.split(' ').length === 1\n    ) {\n      console.log('given is more than one word, but the correct is one word')\n      return {\n        correctObject: false,\n        message:\n          'The word you selected is more than one word but the object is only one word.',\n        howToFix: `Select only one word`,\n      }\n    }\n\n    return {\n      correctObject: false,\n      message: 'Your selection is not the object.',\n      howToFix: `Try again.`,\n    }\n  }\n  return { correctObject: true, correctMessage: 'Good Job' }\n}\n","export function findPreposition(word: string) {\n  const prepositions = [\n    'about',\n    'above',\n    'across',\n    'after',\n    'against',\n    'along',\n    'among',\n    'around',\n    'as',\n    'at',\n    'before',\n    'behind',\n    'between',\n    'but',\n    'by',\n    'during',\n    'except',\n    'for',\n    'from',\n    'in',\n    'like',\n    'next to',\n    'of',\n    'off',\n    'on',\n    'over',\n    'past',\n    'than',\n    'through',\n    'to',\n    'until',\n    'up',\n    'with',\n  ]\n  for (word of word.split(' ')) {\n    for (const wordCheck of prepositions) {\n      if (word.toLowerCase().includes(wordCheck)) {\n        if (word.toLowerCase() !== wordCheck) {\n          return false\n        }\n        return true\n      }\n    }\n  }\n  return false\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { useToggle } from '../../../../../../hooks'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\nimport { irregularPastTenseVerbList } from '../../../../../../utils'\nimport { objectGrader } from '../objects/ObjectGrader'\nimport {\n  QuestionDeconstructProps,\n  QuestionProps,\n} from './QuestionDeconstruction'\nimport { LineToManipulate } from './VerbIdentification'\n\nexport type ObjectIdentificationProps = {\n  setState: Dispatch<SetStateAction<QuestionDeconstructProps>>\n  questionToModify: string[]\n  question: QuestionProps\n  object: string | null\n  setObject: Dispatch<SetStateAction<string | null>>\n}\n\nexport const ObjectIdentification = ({\n  setState,\n  question,\n  questionToModify,\n  object,\n  setObject,\n}: ObjectIdentificationProps) => {\n  const [select, text, reset] = useSelectedText()\n  const [step, setStep] = useState<'stepOne' | 'stepTwo'>('stepOne')\n  const [transitiveQuestionMessage, setTransitiveQuestionMessage] = useState<\n    string | null\n  >(null)\n  const { correctObject, message, correctMessage, howToFix } = objectGrader({\n    completePredicate: question.completePredicate,\n    completeSubject: question.completeSubject,\n    correctObject: question.object!,\n    givenObject: text,\n    simplePredicate: question.simplePredicate,\n    questionToModify,\n  })\n\n  const transitiveVerb = question.object\n\n  const conjugatedVerb =\n    irregularPastTenseVerbList(question.simplePredicate) ===\n    question.simplePredicate\n      ? question.simplePredicate + 'ed'\n      : irregularPastTenseVerbList(question.simplePredicate)\n\n  const indexOfVerb = questionToModify\n    .join(' ')\n    .split(' ')\n    .findIndex((word) => word === conjugatedVerb)\n\n  const sentenceAfterVerb = questionToModify\n    .join(' ')\n    .split(' ')\n    .slice(indexOfVerb + 1)\n\n  useEffect(() => {\n    if (correctObject && text !== '') {\n      setTimeout(() => {\n        setState('ending-phrase')\n      }, 3000)\n    }\n  }, [correctObject, setState, text])\n\n  return (\n    <div>\n      {step === 'stepOne' && (\n        <div>\n          <div>\n            The next step is to figure out the object of the verb. Some verbs\n            transitive and have an object, and some verbs are intransitive and\n            have no object. To find out if the verb {question.simplePredicate}{' '}\n            has an object read your sentence\n          </div>\n          <br />\n          <div>{questionToModify.join(' ')}</div>\n          <div>\n            and ask yourself: Did {question.completeSubject}{' '}\n            {question.simplePredicate} something? If there is a clear answer to\n            this quesiton, the answer is yes. If there isn't a clear answer, the\n            answer is no.\n          </div>\n          <button\n            onClick={() => {\n              if (transitiveVerb) {\n                setTransitiveQuestionMessage(\n                  'Correct, this verb has an object and we are going to find it!',\n                )\n                setTimeout(() => {\n                  setStep('stepTwo')\n                }, 2000)\n              } else {\n                setTransitiveQuestionMessage(`Nope, the verb doesn't have an object therefore it is intransitive because{' '}\n\t\t\t\t\t\t\t${sentenceAfterVerb[0]} isn't a noun or adjective.`)\n                setTimeout(() => {\n                  setTransitiveQuestionMessage(null)\n                  setStep('stepTwo')\n                }, 3000)\n              }\n            }}\n          >\n            Yes there IS an object\n          </button>\n          <button\n            onClick={() => {\n              if (transitiveVerb) {\n                setTransitiveQuestionMessage(\n                  'Incorrect, the verb has an object. Now we are going to find it!',\n                )\n                setTimeout(() => {\n                  setStep('stepTwo')\n                }, 3000)\n              } else {\n                setTransitiveQuestionMessage(\n                  'You are correct! This verb is intransitive and has no object.',\n                )\n                setState('ending-phrase')\n              }\n            }}\n          >\n            No there is NOT an object\n          </button>\n          <br />\n          {transitiveQuestionMessage && <div>{transitiveQuestionMessage}</div>}\n        </div>\n      )}\n\n      {step === 'stepTwo' && (\n        <div>\n          <div>Now we must find the object.</div>\n          <div>\n            Things to remember: the object comes directly after the verb and is\n            a noun or an adjective that describes the noun and the noun\n            together.\n          </div>\n          <br />\n          <LineToManipulate onMouseUp={select}>\n            {questionToModify.map((word, i: number) => (\n              <span key={i}>\n                <span>{word}</span>\n                {word !== questionToModify[questionToModify.length - 1] && (\n                  <span> </span>\n                )}\n              </span>\n            ))}\n          </LineToManipulate>\n          {text !== '' && (\n            <div>\n              {!correctObject ? (\n                <>\n                  <div>What went wrong? {message}</div>\n                  <div>How do I fix it? {howToFix}</div>\n                </>\n              ) : (\n                <div>{correctMessage}</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { Dispatch, SetStateAction, useState } from 'react'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\nimport { capitalizer, splitSentenceByWord } from '../../../../../../utils'\nimport {\n  QuestionProps,\n  QuestionDeconstructProps,\n} from './QuestionDeconstruction'\nimport { LineToManipulate } from './VerbIdentification'\n\nexport type QuestionWordRemovalProps = {\n  question: QuestionProps\n  questionToModify: string[]\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  setState: Dispatch<SetStateAction<QuestionDeconstructProps>>\n}\n\nexport const QuestionWordRemoval = ({\n  question,\n  questionToModify,\n  setQuestionToModify,\n  setState,\n}: QuestionWordRemovalProps) => {\n  const [select, text, reset] = useSelectedText()\n\n  const [questionWordCheck, setQuestionWordCheck] = useState('')\n\n  const handleQuestionWordRemove = (word: string) => {\n    const index = questionToModify.findIndex(\n      (wordToFind) => wordToFind === word,\n    )\n    setQuestionToModify([\n      ...questionToModify.slice(0, index),\n      ...questionToModify.slice(index + 1),\n    ])\n\n    setState('subject-predicate-split')\n    // setDeletedWords(text)\n  }\n  const handleCorrectSelection = (word: string) => {\n    if (questionWordCheck.toLowerCase() !== question.questionWord.toLowerCase())\n      setTimeout(() => {\n        handleQuestionWordRemove(word)\n      }, 1000)\n  }\n\n  return (\n    <div>\n      <LineToManipulate onMouseUp={select}>\n        {questionToModify.map((word, i: number) => (\n          <span key={i}>\n            <span\n              onDoubleClick={() => {\n                setQuestionWordCheck(word)\n                handleCorrectSelection(word)\n                //   // if (questionWordCheck) {\n                //   //   if (\n                //   //     questionWordCheck.toLowerCase() !==\n                //   //     question.questionWord.toLowerCase()\n                //   //   ) {\n                //   //     return handleCorrectSelection(word)\n                //   //   }\n                //   // }\n              }}\n            >\n              {word === questionToModify[0] ? capitalizer(word) : word}\n            </span>\n            {word !== questionToModify[questionToModify.length - 2] && (\n              <span> </span>\n            )}\n          </span>\n        ))}\n      </LineToManipulate>\n\n      <br />\n      {questionWordCheck && (\n        <div>\n          {questionWordCheck.toLowerCase() !==\n          question.questionWord.toLowerCase() ? (\n            <div>\n              \"{capitalizer(questionWordCheck)}\" is not the question word. It is\n              either How or Why. Try it again!\n            </div>\n          ) : (\n            <div>Good Job</div>\n          )}\n        </div>\n      )}\n      {/* <div>Deleted Words</div> \n <div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetQuestionToModify(question.original.split(' '))\n\t\t\t\t\t\tsetDeletedWords([])\n\t\t\t\t\t}}>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t</div> \n\t\t\t<div onMouseUp={select}>\n\t\t\t\t{deletedWords.map((word, i: number) => (\n\t\t\t\t\t<span key={i}>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonDoubleClick={() => {\n\t\t\t\t\t\t\t\tconst index = splitSentenceByWord(question.original).findIndex(\n\t\t\t\t\t\t\t\t\t(wordToFind) => wordToFind === word\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\tconst returnedWords = question.original\n\t\t\t\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\t(wordToFilter) =>\n\t\t\t\t\t\t\t\t\t\t\twordToFilter === word || questionToModify.includes(wordToFilter)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tconsole.log(returnedWords)\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{word}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span> </span>\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</div> */}\n    </div>\n  )\n}\n","import React, { Dispatch, SetStateAction, useEffect } from 'react'\nimport { useSelectedText } from '../../../../../../hooks/useSelectedText'\nimport { simpleSubjectGrader } from '../simple-subject-predicate/simpleSubjectGrader'\nimport {\n  QuestionProps,\n  QuestionDeconstructProps,\n} from './QuestionDeconstruction'\nimport { LineToManipulate } from './VerbIdentification'\n\nexport type SubjectIdentificationProps = {\n  setState: Dispatch<SetStateAction<QuestionDeconstructProps>>\n  questionToModify: string[]\n  question: QuestionProps\n  subject: string | null\n  setSubject: Dispatch<SetStateAction<string | null>>\n}\n\nexport const SubjectIdentification = ({\n  setState,\n  question,\n  questionToModify,\n  subject,\n  setSubject,\n}: SubjectIdentificationProps) => {\n  const [select, text, reset] = useSelectedText()\n  const isAnswered = text === ''\n\n  const { correctSimpleSubject, howToFix, message, whatWentWrong } =\n    simpleSubjectGrader({\n      correctSimpleSubject: question.simpleSubject,\n      givenSimpleSubject: text.trim(),\n      completeSubject: question.completeSubject,\n    })\n\n  useEffect(() => {\n    if (correctSimpleSubject) {\n      setSubject(text)\n      setTimeout(() => {\n        setState('verb-identification')\n      }, 3000)\n    }\n  }, [correctSimpleSubject])\n\n  return (\n    <>\n      <div>Select the Simple Subject of the question</div>\n      <div>\n        Simple subjects are the noun in the complete subect. There may be\n        adjectives that modify the noun or prepositional phrases that add\n        specificity to the noun.\n      </div>\n\n      <LineToManipulate onMouseUp={select}>\n        {questionToModify\n          .join(' ')\n          .split(' ')\n          .map((part, i: number) => (\n            <span key={i}>\n              <span>{part}</span>\n              {part !== questionToModify[questionToModify.length - 1] && (\n                <span> </span>\n              )}\n            </span>\n          ))}\n      </LineToManipulate>\n      <div>\n        {isAnswered ? (\n          ''\n        ) : (\n          <div>\n            <div>{correctSimpleSubject ? 'Correct' : 'Not Quite'}</div>\n            {!correctSimpleSubject ? (\n              <>\n                <div>\n                  What went wrong? <span>{whatWentWrong}</span>\n                </div>\n                <div>\n                  How do you fix it? <span>{howToFix}</span>\n                </div>\n              </>\n            ) : (\n              <div>{message}</div>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { capitalizer } from '../../../../../../utils'\nimport { subjectPredicateGrader } from '../complete-subject-predicate/subjectPredicateGrading'\nimport {\n  SubjectPredicateContainer,\n  DirectionsContainer,\n  SentenceContainer,\n  MessageContainer,\n} from '../complete-subject-predicate/subjectPredicateStyles'\nimport {\n  QuestionProps,\n  QuestionDeconstructProps,\n} from './QuestionDeconstruction'\n\nexport type SubjectPredicateSplitProps = {\n  questionToModify: string[]\n  question: QuestionProps\n  setQuestionToModify: Dispatch<SetStateAction<string[]>>\n  setState: Dispatch<SetStateAction<QuestionDeconstructProps>>\n}\n\nexport const SubjectPredicateSplit = ({\n  questionToModify,\n  setQuestionToModify,\n  setState,\n  question,\n}: SubjectPredicateSplitProps) => {\n  const [point, setPoint] = useState<number | null>(null)\n\n  const separator = ' | '\n\n  let sentence = [\n    ...questionToModify.slice(0, questionToModify.length - 2),\n    questionToModify[questionToModify.length - 2] + '?',\n  ].join(' ')\n\n  const newSentence = [\n    sentence.slice(0, point!).trim(),\n    separator,\n    sentence.slice(point!, sentence.length).trim(),\n  ]\n\n  const { message, correct, whatWentWrong, howToFix } = subjectPredicateGrader({\n    correctSubject: question.completeSubject,\n    givenSubject: newSentence[0],\n    givenPredicate: newSentence[2],\n    sentence,\n    noun: question.simpleSubject.split(' '),\n    compoundNoun: question.compoundNoun,\n    nounType: question.nounType,\n    verb: question.simplePredicate,\n    verbType: 'action',\n  })\n\n  useEffect(() => {\n    if (point && correct) {\n      setTimeout(() => {\n        setQuestionToModify(newSentence.join(' ').split(' '))\n        setState('helping-verb-id')\n      }, 2000)\n    } else\n      setTimeout(() => {\n        setPoint(null)\n      }, 10000)\n  }, [point])\n\n  return (\n    <SubjectPredicateContainer>\n      <DirectionsContainer>\n        <div>\n          Click on the sentence below to separate it into the subject and\n          predicate.\n        </div>\n        <div>\n          The subject will be on the right with a single underline, and the\n          predicate will be on the left with double underline.\n        </div>\n      </DirectionsContainer>\n      {point ? (\n        <SentenceContainer>\n          {newSentence.map((part, i) => {\n            return (\n              <span\n                key={i}\n                style={\n                  i === 0\n                    ? {\n                        cursor: 'pointer',\n                        textDecoration: 'underline',\n                        textUnderlinePosition: 'under',\n                      }\n                    : i === 2\n                      ? {\n                          cursor: 'pointer',\n                          textDecoration: 'underline',\n                          textDecorationStyle: 'double',\n                          textUnderlinePosition: 'under',\n                        }\n                      : { cursor: 'pointer' }\n                }\n                onClick={() => {\n                  if (part === separator) {\n                    setPoint(null)\n                  }\n                }}\n              >\n                {newSentence[0] === part\n                  ? part.charAt(0).toUpperCase() + part.slice(1)\n                  : part}\n                {/* {part} */}\n              </span>\n            )\n          })}\n        </SentenceContainer>\n      ) : (\n        <SentenceContainer>\n          {sentence.split('').map((letter, i) => {\n            const letterIndex = sentence\n              .split('')\n              .findIndex((letter) => letter[0])\n\n            return (\n              <span\n                key={i}\n                style={{ cursor: 'pointer' }}\n                onClick={() => setPoint(i)}\n              >\n                {letterIndex === i ? letter.toUpperCase() : letter}\n              </span>\n            )\n          })}\n        </SentenceContainer>\n      )}\n      {point ? (\n        <MessageContainer correct={correct}>\n          {!correct ? (\n            <div>\n              <div style={{ textAlign: 'center' }}>Not Quite</div>\n              <br></br>\n              <div>What went wrong? {whatWentWrong}</div>\n              <div>How to fix it: {howToFix}</div>\n            </div>\n          ) : (\n            <div>\n              <div style={{ textAlign: 'center' }}>{message}</div>\n              <br />\n              <div>\n                \"\n                {newSentence[0].charAt(0).toUpperCase() +\n                  newSentence[0].slice(1)}\n                \" is the complete subject of the sentence because it is{' '}\n                {question.nounType === 'PERSON' ? 'who' : 'what'} the sentence\n                is about.\n              </div>\n              <div>\n                \"\n                {newSentence[2].split('')[0].toString().toUpperCase() +\n                  newSentence[2].slice(1, newSentence[2].length - 1)}\n                \" is the complete predicate of the sentence because it is what\n                the {question.nounType === 'PERSON' ? 'PERSON' : 'THING'} is\n                doing.\n              </div>\n              <br />\n              {/* <button onClick={() => setSentence(newSentence.join(' '))}>Next Step</button> */}\n            </div>\n          )}\n        </MessageContainer>\n      ) : (\n        <div></div>\n      )}\n    </SubjectPredicateContainer>\n  )\n}\n","import React, { useState } from 'react'\nimport { splitSentenceByWord } from '../../../../../../utils'\nimport { EndingPhrase } from './EndingPhrase'\nimport { HelpingVerbIdentification } from './HelpingVerbIdentification'\nimport { ObjectIdentification } from './ObjectIdentification'\nimport { QuestionWordRemoval } from './QuestionWordRemoval'\nimport { SubjectIdentification } from './SubjectIdentification'\nimport { SubjectPredicateSplit } from './SubjectPredicateSplit'\nimport { VerbIdentification } from './VerbIdentification'\n\nexport type QuestionDeconstructionProps = {}\n\nexport type QuestionProps = {\n  original: string\n  modifiedQuestion: string\n  questionWord: string\n  helpingVerb: string\n  completeSubject: string\n  simpleSubject: string\n  nounType: 'PERSON' | 'PLACE' | 'THING' | 'IDEA'\n  verbType: 'ACTION' | 'BEING' | 'FEELING'\n  compoundNoun: boolean\n  completePredicate: string\n  simplePredicate: string\n  object: null | string\n}\n\nexport type QuestionDeconstructProps =\n  | 'question-word-removal'\n  | 'subject-predicate-split'\n  | 'helping-verb-id'\n  | 'subject-identification'\n  | 'verb-identification'\n  | 'object-identification'\n  | 'ending-phrase'\n  | 'complete'\n\nexport const QuestionDeconstruction = ({}: QuestionDeconstructionProps) => {\n  const whyWasQuestion: QuestionProps = {\n    original: `Why was John Brown executed for treason?`,\n    modifiedQuestion: `Why was John Brown executed for treason?`,\n    questionWord: 'why',\n    helpingVerb: 'was',\n    completeSubject: 'John Brown',\n    simpleSubject: 'John Brown',\n    nounType: 'PERSON',\n    verbType: 'ACTION',\n    compoundNoun: true,\n    completePredicate: ' was executed for treason?',\n    simplePredicate: 'was executed',\n    object: null,\n  }\n\n  const howDidQuestion: QuestionProps = {\n    original: `How did John Brown affect the nation?`,\n    modifiedQuestion: `How did John Brown affect the nation?`,\n    questionWord: 'how',\n    helpingVerb: 'did',\n    completeSubject: 'John Brown',\n    simpleSubject: 'John Brown',\n    nounType: 'PERSON',\n    verbType: 'ACTION',\n    compoundNoun: true,\n    completePredicate: 'affect the nation',\n    simplePredicate: 'affect',\n    object: 'the nation',\n  }\n\n  const howDidPrepositionQuestion: QuestionProps = {\n    original: 'How did John Brown kill five men in Kansas?',\n    modifiedQuestion: 'How did John Brown kill five men in Kansas?',\n    questionWord: 'how',\n    helpingVerb: 'did',\n    completeSubject: 'John Brown',\n    simpleSubject: 'John Brown',\n    nounType: 'PERSON',\n    verbType: 'ACTION',\n    compoundNoun: false,\n    completePredicate: 'kill five men in Kansas?',\n    simplePredicate: 'kill',\n    object: 'five men',\n  }\n\n  // const question = howDidQuestion\n  // const question = howDidPrepositionQuestion\n  const question = whyWasQuestion\n  const [questionToModify, setQuestionToModify] = useState(\n    splitSentenceByWord(question.original),\n  )\n  const [subject, setSubject] = useState<string | null>(null)\n  const [verb, setVerb] = useState<string | null>(null)\n  const [object, setObject] = useState<string | null>(null)\n\n  const [state, setState] = useState<QuestionDeconstructProps>(\n    'question-word-removal',\n  )\n\n  return (\n    <div>\n      <div>Deconstruct the Question</div>\n\n      {state === 'question-word-removal' && (\n        <QuestionWordRemoval\n          question={question}\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          setState={setState}\n        />\n      )}\n      {state === 'subject-predicate-split' && (\n        <SubjectPredicateSplit\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          setState={setState}\n          question={question}\n        />\n      )}\n      {state === 'helping-verb-id' && (\n        <HelpingVerbIdentification\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          setState={setState}\n          question={question}\n        />\n      )}\n      {state === 'subject-identification' && (\n        <SubjectIdentification\n          setState={setState}\n          questionToModify={questionToModify}\n          question={question}\n          subject={subject}\n          setSubject={setSubject}\n        />\n      )}\n      {state === 'verb-identification' && (\n        <VerbIdentification\n          setState={setState}\n          questionToModify={questionToModify}\n          setQuestionToModify={setQuestionToModify}\n          question={question}\n          verb={verb}\n          setVerb={setVerb}\n        />\n      )}\n      {state === 'object-identification' && (\n        <ObjectIdentification\n          setState={setState}\n          questionToModify={questionToModify}\n          question={question}\n          object={object}\n          setObject={setVerb}\n        />\n      )}\n      {state === 'ending-phrase' && (\n        <EndingPhrase\n          setState={setState}\n          questionToModify={questionToModify}\n          question={question}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { AdjectivesAndPrepositonalPhrases } from './adjectives-prepositions/AdjectivesAndPrepositonalPhrases'\nimport { SimpleSubjectPredicate } from './simple-subject-predicate/SimpleSubjectPredicate'\n\nimport { SubjectPredicate } from './complete-subject-predicate/SubjectPredicate'\nimport { SubjectPredicate2 } from './complete-subject-predicate/SubjectPredicate2'\nimport { Objects } from './objects/Objects'\nimport { QuestionDeconstruction } from './question-deconstruction/QuestionDeconstruction'\n\nexport type GrammarPracticeProps = {}\n\nexport const GrammarPractice = ({}: GrammarPracticeProps) => {\n  const [sentence, setSentence] = useState(\n    'A good player with high reputation respects their team.',\n  )\n  const [state, setState] = useState<\n    | 'idle'\n    | 'subjectPredicate'\n    | 'simpleSubjectPredicate'\n    | 'adjectivesAndPrepositions'\n    | 'objects'\n    | 'questionDeconstruction'\n  >('idle')\n\n  return (\n    <div\n      style={{ height: '90vh', display: 'grid', gridTemplateRows: '1fr 5fr' }}\n    >\n      <nav\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          fontSize: '2vh',\n          textDecoration: 'underline',\n          cursor: 'pointer',\n        }}\n      >\n        <div onClick={() => setState('idle')}>Grammar Home</div>\n        <div onClick={() => setState('subjectPredicate')}>\n          Subject and Predicate\n        </div>\n        <div onClick={() => setState('simpleSubjectPredicate')}>\n          Simple Subject and Predicate\n        </div>\n        <div onClick={() => setState('adjectivesAndPrepositions')}>\n          Adjectives and Prepositions\n        </div>\n        <div onClick={() => setState('objects')}>Objects</div>\n        <div onClick={() => setState('questionDeconstruction')}>\n          Decontruct Question\n        </div>\n      </nav>\n      <>\n        {state === 'idle' && (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              fontSize: '5vh',\n            }}\n          >\n            Welcome to Grammar Practice R&D\n          </div>\n        )}\n        {state === 'subjectPredicate' && (\n          // <SubjectPredicate sentence={sentence} />\n          <SubjectPredicate2 sentence={sentence} setSentence={setSentence} />\n        )}\n        {state === 'simpleSubjectPredicate' && (\n          <SimpleSubjectPredicate\n            sentence={sentence}\n            setSentence={setSentence}\n          />\n        )}\n        {state === 'adjectivesAndPrepositions' && (\n          <AdjectivesAndPrepositonalPhrases />\n        )}\n        {state === 'objects' && <Objects />}\n        {state === 'questionDeconstruction' && <QuestionDeconstruction />}\n      </>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { AnswerProps, QuestionProps } from './MultipleChoice'\nimport { multipleChoiceGrader } from './multipleChoiceGrader'\n\nexport type QuestionBlankProps = {\n  questionNumber: number\n  question: QuestionProps\n  answerList: AnswerProps[]\n}\n\nexport const QuestionBlank = ({\n  questionNumber,\n  question,\n  answerList,\n}: QuestionBlankProps) => {\n  const [answerValue, setAnswerValue] = useState<AnswerProps | null>(null)\n  const { points } = multipleChoiceGrader({\n    answer: answerValue,\n    difficultyLevel: question.questionDifficultyLevel,\n  })\n  const handleSubmit = () => {}\n  return (\n    <form onSubmit={(e) => e.preventDefault()}>\n      <div>\n        {questionNumber}. {question.question}\n      </div>\n      <div style={{ display: 'grid', gridAutoFlow: 'row' }}>\n        {answerList.map((answer, i) => {\n          return (\n            <label key={i}>\n              <input\n                type=\"radio\"\n                checked={answerValue === answer}\n                onChange={() => setAnswerValue(answer)}\n              />\n              {answer.answer}\n            </label>\n          )\n        })}\n      </div>\n      <button type=\"submit\" onClick={handleSubmit}>\n        Submit\n      </button>\n    </form>\n  )\n}\n","import { findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList } from '../../../../../schemaTypes'\nimport { AnswerProps } from './MultipleChoice'\n\ntype multipleChoiceGraderProps = {\n  answer:\n    | AnswerProps\n    | null\n    | findQuizQuestionsByQuizzableSections_findQuizQuestionsByQuizzableSections_quizQuestions_answerList\n  difficultyLevel: number\n}\n\nexport const multipleChoiceGrader = ({\n  answer,\n  difficultyLevel,\n}: multipleChoiceGraderProps) => {\n  if (answer?.correct) {\n    return { points: difficultyLevel }\n  }\n  if (answer?.partiallyCorrect) {\n    return { points: difficultyLevel / 2 }\n  }\n\n  return { points: 0 }\n}\n","import React from 'react'\nimport { QuestionBlank } from './QuestionBlank'\nimport { TestTypes } from './Tests'\n\nexport type MultipleChoiceProps = {}\n\nexport type AnswerProps = {\n  type: TestTypes\n  answer: string\n  correct: boolean\n  partiallyCorrect: boolean\n}\n\nexport type QuestionProps = {\n  question: string\n  answerList: AnswerProps[]\n  questionDifficultyLevel: number\n  textSectionId: string\n  lessonId: string\n}\n\nexport const MultipleChoice = ({}: MultipleChoiceProps) => {\n  const question: QuestionProps = {\n    question: 'Why did the chicken cross the road?',\n    questionDifficultyLevel: 3,\n    textSectionId: '1',\n    lessonId: '',\n    answerList: [\n      {\n        type: 'multipleChoice',\n        answer: 'Correct Answer',\n        correct: true,\n        partiallyCorrect: false,\n      },\n      {\n        type: 'multipleChoice',\n        answer: 'Partially Correct Answer',\n        correct: false,\n        partiallyCorrect: true,\n      },\n      {\n        type: 'multipleChoice',\n        answer: 'Wrong Answer One',\n        correct: false,\n        partiallyCorrect: false,\n      },\n      {\n        type: 'multipleChoice',\n        answer: 'Wrong Answer Two',\n        correct: false,\n        partiallyCorrect: false,\n      },\n    ],\n  }\n\n  // function shuffle(array: any) {\n  //   for (let i = array.length - 1; i > 0; i--) {\n  //     let j = Math.floor(Math.random() * (i + 1))\n\n  //     return ([array[i], array[j]] = [array[j], array[i]])\n  //   }\n  // }\n  console.log(question.answerList)\n  // console.log(shuffle(answerList))\n  function shuffleAnswerList(array: AnswerProps[]) {\n    return array.sort(() => Math.random() - 0.5)\n  }\n\n  const randomizedAnswers = shuffleAnswerList(question.answerList)\n\n  return (\n    <div style={{ display: 'grid' }}>\n      <QuestionBlank\n        questionNumber={1}\n        question={question}\n        answerList={randomizedAnswers}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { MultipleChoice } from './MultipleChoice'\n\nexport type TestsProps = {}\n\nexport type TestTypes = 'multipleChoice'\n\nexport const Tests = ({}: TestsProps) => {\n  const [test, setTest] = useState<TestTypes>('multipleChoice')\n  return (\n    <>\n      <div style={{ display: 'grid', gridAutoFlow: 'column' }}>\n        Multiple Choice\n      </div>\n      {test === 'multipleChoice' && <MultipleChoice />}\n    </>\n  )\n}\n","import React from 'react'\nimport { Link, Route, Routes } from 'react-router-dom'\nimport { GrammarPractice } from './grammar/GrammarPractice'\nimport { Tests } from './test-questions/Tests'\n\nexport type DevelopmentHomeProps = {}\n\nexport const DevelopmentHome = ({}: DevelopmentHomeProps) => {\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>Development Projects</div>\n      <nav style={{ display: 'grid', gridAutoFlow: 'column' }}>\n        <Link to={'grammar'}>Grammar Excercises</Link>\n        <Link to={'tests'}>Tests</Link>\n      </nav>\n      <Routes>\n        <Route path={'grammar'} element={<GrammarPractice />} />\n        <Route path={'tests'} element={<Tests />} />\n      </Routes>\n    </>\n  )\n}\n","import { gql, useMutation } from '@apollo/client'\n\nimport React, { useState } from 'react'\nimport { useLocation } from 'react-router'\nimport { useMatch } from 'react-router'\nimport { useEnumContextProvider } from '../../../../contexts/EnumContext'\nimport { useForm } from '../../../../hooks'\nimport {\n  BehaviorCategoryEnum,\n  BehaviorQualityEnum,\n  createBehaviorType,\n  createBehaviorTypeVariables,\n} from '../../../../schemaTypes'\n\nexport type CreateBehaviorProps = {}\n\nexport const CREATE_BEHAVIOR_TYPE_MUTATION = gql`\n  mutation createBehaviorType($input: CreateBehaviorTypeInput!) {\n    createBehaviorType(input: $input) {\n      behaviorType {\n        behaviorName\n        behaviorQuality\n        behaviorCategory\n        points\n      }\n    }\n  }\n`\n\nexport const CreateBehavior = ({}: CreateBehaviorProps) => {\n  const { behaviorCategoryEnum } = useEnumContextProvider()\n  const match = useLocation()\n  console.log(match)\n  const [behaviorValues, setBehaviorValues] = useState({\n    behaviorName: '',\n    behaviorQuality: BehaviorQualityEnum.NEUTRAL,\n    behaviorCategory: BehaviorCategoryEnum.QUESTION_AND_ANSWER,\n    points: 0,\n    forTeachersAid: true,\n  })\n\n  const [createBehavior] = useMutation<\n    createBehaviorType,\n    createBehaviorTypeVariables\n  >(CREATE_BEHAVIOR_TYPE_MUTATION, {\n    variables: {\n      input: {\n        behaviorName: behaviorValues.behaviorName,\n        behaviorQuality: behaviorValues.behaviorQuality,\n        behaviorCategory: behaviorValues.behaviorCategory,\n        points: behaviorValues.points,\n        forTeachersAid: behaviorValues.forTeachersAid,\n      },\n    },\n    refetchQueries: ['findAllBehaviorTypes'],\n  })\n\n  const handlePointsAllocation = (e: any) => {\n    setBehaviorValues({\n      ...behaviorValues,\n      points: +e.target.value,\n      behaviorQuality:\n        e.target.value > 0\n          ? BehaviorQualityEnum.POSITIVE\n          : e.target.value < 0\n            ? BehaviorQualityEnum.NEGATIVE\n            : BehaviorQualityEnum.NEUTRAL,\n    })\n  }\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault()\n      }}\n    >\n      <div>Create Behavior</div>\n      <div>Behavior Name</div>\n      <input\n        type=\"text\"\n        value={behaviorValues.behaviorName}\n        onChange={(e) =>\n          setBehaviorValues({ ...behaviorValues, behaviorName: e.target.value })\n        }\n      />\n      <div>Behavior Category</div>\n      <select\n        value={behaviorValues.behaviorCategory}\n        onChange={(e: any) =>\n          setBehaviorValues({\n            ...behaviorValues,\n            behaviorCategory: e.target.value,\n          })\n        }\n      >\n        {behaviorCategoryEnum.map((b: BehaviorCategoryEnum) => (\n          <option key={b}>{b}</option>\n        ))}\n      </select>\n      <div>Behavior Points</div>\n      <input\n        type=\"number\"\n        value={behaviorValues.points}\n        onChange={(e: any) => handlePointsAllocation(e)}\n      />\n      <div>For TeachersAid</div>\n      <select\n        value={behaviorValues.forTeachersAid.toString()}\n        onChange={(e: any) =>\n          setBehaviorValues({\n            ...behaviorValues,\n            forTeachersAid: e.target.value === 'true' ? true : false,\n          })\n        }\n      >\n        <option value=\"true\">True</option>\n        <option value=\"false\">False</option>\n      </select>\n      <div></div>\n      <button\n        type=\"reset\"\n        onClick={() => {\n          createBehavior()\n          setBehaviorValues({\n            behaviorName: '',\n            behaviorQuality: BehaviorQualityEnum.NEUTRAL,\n            behaviorCategory: BehaviorCategoryEnum.QUESTION_AND_ANSWER,\n            points: 0,\n            forTeachersAid: true,\n          })\n        }}\n      >\n        Create Behavior\n      </button>\n    </form>\n  )\n}\n","import React from 'react'\nimport { Route, Routes, useLocation } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { useNavSync } from '../../../../hooks/useNavSync'\nimport { useTeacherNavContextProvider } from '../../../../navigation/teacher-nav/TeacherNavContext'\nimport {\n  BehaviorHomeContainer,\n  BehaviorHomeDisplay,\n  BehaviorHomeTitleDiv,\n  BehaviorLink,\n  BehaviorLinksContainer,\n} from './behaviorStyles'\nimport { BehaviorTypeList } from './BehaviorTypeList'\nimport { CreateBehavior } from './CreateBehavior'\nimport { EditBehaviors } from './EditBehaviors'\n\nexport type BehaviorHomeProps = {}\n\nexport const BehaviorHome = ({}: BehaviorHomeProps) => {\n  const location = useLocation()\n  useNavSync(location, 'BEHAVIOR')\n\n  return (\n    <BehaviorHomeContainer>\n      <BehaviorLinksContainer>\n        <BehaviorLink to=\"create-behavior\">Create</BehaviorLink>\n        <BehaviorLink to=\"edit-behavior\">Edit</BehaviorLink>\n        <div></div>\n      </BehaviorLinksContainer>\n      <BehaviorHomeDisplay>\n        <BehaviorHomeTitleDiv>\n          <div>Behaviors</div>\n        </BehaviorHomeTitleDiv>\n        <Routes>\n          <Route path=\"create-behavior\" element={<CreateBehavior />} />\n          <Route path=\"edit-behavior\" element={<BehaviorTypeList />} />\n        </Routes>\n      </BehaviorHomeDisplay>\n    </BehaviorHomeContainer>\n  )\n}\n","import React from 'react'\nimport 'react-calendar/dist/Calendar.css'\nimport { Route, Routes, useNavigate, useLocation } from 'react-router'\nimport { LessonsHome } from './lessons/LessonsHome'\nimport styled from 'styled-components'\nimport { AssignmentDashboard } from './assignments/AssignmentDashboard'\nimport { CoursesHome } from './courses/CoursesHome'\nimport { RubricsDashboard } from './rubrics/RubricsDashboard'\nimport { TeachersAid } from './teachers-aid/TeachersAid'\nimport { TeachersAidContextProvider } from './teachers-aid/state/TeachersAidContext'\nimport { SchoolDay } from '../school-day/SchoolDay'\nimport { SchoolDayContextProvider } from '../school-day/state/SchoolDayContext'\nimport { ParentContacts } from './parent-contact/ParentContacts'\nimport { StudentInformation } from './student-information/StudentInformation'\nimport { StudentInformationContextProvider } from './student-information/state-n-styles/StudentInformationContext'\nimport { DevelopmentHome } from './development/DevelopmentHome'\nimport { BehaviorHome } from './behaviors/BehaviorHome'\nimport {\n  TeacherDashboardContainer,\n  TeacherDirectoryOptions,\n  TeacherDirectoryOptionsLink,\n  TeacherHomeScreenOptionsContainer,\n} from './teacherDashboardStyles'\nimport { ButtonBox, HomeScreenTitle, LogoutOption } from '../../home/homeStyles'\nimport { Greetings } from '../../home/Greetings'\nimport { useUserContextProvider } from '../../../contexts/UserContext'\nimport { logout, me_me_Teacher } from '../../../schemaTypes'\nimport { capitalizer } from '../../../utils'\nimport { useTeacherNavContextProvider } from '../../../navigation/teacher-nav/TeacherNavContext'\nimport { useMutation } from '@apollo/client'\nimport { LOGOUT_MUTATION } from '../../home/Logout'\nimport { useToggle } from '../../../hooks'\n// import { TeacherDashboardContainer } from './'\n\nexport const TeacherDashboardHome = () => {\n  const { pathname } = useLocation()\n  const navigate = useNavigate()\n  const me: me_me_Teacher = useUserContextProvider()\n  const [isLoginVisible, toggleLogin] = useToggle(false)\n  const [state, event] = useTeacherNavContextProvider()\n  const [logoutMutation, { loading }] = useMutation<logout>(LOGOUT_MUTATION, {\n    onCompleted: () => {\n      toggleLogin()\n    },\n    refetchQueries: ['me'],\n  })\n\n  return (\n    <>\n      {pathname === '/dashboard' && (\n        <TeacherDashboardContainer>\n          <HomeScreenTitle>\n            <ButtonBox onClick={() => navigate('teachers-aid')}>\n              Teacher's Aid\n            </ButtonBox>\n            <div>\n              <Greetings\n                phrase={\n                  me.__typename === 'Teacher'\n                    ? `${capitalizer(me.title)}. ${me.lastName}`\n                    : `${me.firstName}`\n                }\n              />\n              <div style={{ textAlign: 'center' }}>\n                It's {new Date().toLocaleDateString()}\n              </div>\n            </div>\n            <ButtonBox onClick={() => navigate('/lesson-home')}>\n              Today's Lessons\n            </ButtonBox>\n          </HomeScreenTitle>\n          <TeacherHomeScreenOptionsContainer>\n            <TeacherDirectoryOptions style={{ fontSize: '2vh' }}>\n              <SchoolDay />\n            </TeacherDirectoryOptions>\n            <TeacherDirectoryOptionsLink\n              to=\"assignments\"\n              onClick={() => event({ type: 'ASSIGNMENTS' })}\n            >\n              Assignments\n            </TeacherDirectoryOptionsLink>\n            <TeacherDirectoryOptionsLink\n              to=\"courses\"\n              onClick={() => event({ type: 'COURSES' })}\n            >\n              Courses\n            </TeacherDirectoryOptionsLink>\n            <TeacherDirectoryOptionsLink\n              to=\"lessons\"\n              onClick={() => event({ type: 'LESSONS' })}\n            >\n              Lessons\n            </TeacherDirectoryOptionsLink>\n            <TeacherDirectoryOptionsLink\n              to=\"studentInformation\"\n              onClick={() => event({ type: 'STUDENT_INFORMATION' })}\n            >\n              Student Information\n            </TeacherDirectoryOptionsLink>\n            <TeacherDirectoryOptionsLink\n              to=\"parentContacts\"\n              onClick={() => event({ type: 'PARENT_CONTACTS' })}\n            >\n              Parent Contacts\n            </TeacherDirectoryOptionsLink>\n            <TeacherDirectoryOptionsLink\n              to=\"behavior/edit-behavior\"\n              onClick={() => event({ type: 'BEHAVIOR' })}\n            >\n              Behaviors\n            </TeacherDirectoryOptionsLink>\n            <TeacherDirectoryOptionsLink\n              to=\"rubrics\"\n              onClick={() => event({ type: 'RUBRICS' })}\n            >\n              Rubrics\n            </TeacherDirectoryOptionsLink>\n            <LogoutOption onClick={() => logoutMutation()}>\n              {loading ? 'Logging Out...' : 'Logout'}\n            </LogoutOption>\n          </TeacherHomeScreenOptionsContainer>\n        </TeacherDashboardContainer>\n      )}\n      <Routes>\n        <Route path=\"schoolDay/*\" element={<SchoolDay />} />\n      </Routes>\n      <Routes>\n        <Route path=\"lessons/*\" element={<LessonsHome />} />\n      </Routes>\n      <Routes>\n        <Route path=\"assignments/*\" element={<AssignmentDashboard />} />\n      </Routes>\n      <Routes>\n        <Route path=\"rubrics/*\" element={<RubricsDashboard />} />\n      </Routes>\n      <Routes>\n        <Route path=\"courses/*\" element={<CoursesHome />} />\n      </Routes>\n      <Routes>\n        <Route\n          path=\"teachers-aid\"\n          element={\n            <TeachersAidContextProvider>\n              <TeachersAid />\n            </TeachersAidContextProvider>\n          }\n        />\n      </Routes>\n      {/* {pathname === '/dashboard' && <SchoolDay />} */}\n      <Routes>\n        <Route\n          path=\"studentInformation/*\"\n          element={\n            <StudentInformationContextProvider>\n              <StudentInformation />\n            </StudentInformationContextProvider>\n          }\n        />\n      </Routes>\n      <Routes>\n        <Route path=\"parentContacts/*\" element={<ParentContacts />} />\n      </Routes>\n      <Routes>\n        <Route path=\"behavior/*\" element={<BehaviorHome />} />\n      </Routes>\n      <Routes>\n        <Route path=\"development/*\" element={<DevelopmentHome />} />\n      </Routes>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { me_me } from '../../schemaTypes'\nimport { StudentDashboardHome } from './student/StudentDashboardHome'\nimport { TeacherDashboardHome } from './teacher/TeacherDashboardHome'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { useUserContextProvider } from '../../contexts/UserContext'\nimport styled from 'styled-components'\n\nexport const Dashboard = () => {\n  const me: me_me = useUserContextProvider()\n  const nav = useNavigate()\n  useEffect(() => {\n    if (!me) nav('/')\n  }, [me])\n  return (\n    <>\n      {/* {!me ? (\n        <Navigate to='/' />\n      ) : ( */}\n      {me && (\n        <DashboardContainer>\n          {me?.__typename === 'Teacher' && <TeacherDashboardHome />}\n          {me?.__typename === 'Student' && <StudentDashboardHome me={me} />}\n        </DashboardContainer>\n      )}\n      {/* )} */}\n    </>\n  )\n}\n\nexport const DashboardContainer = styled.div`\n  /* height: 95vh; */\n`\n","import styled from 'styled-components'\n// import { media } from '.'\n\nexport const LoginWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* background: var(--grey); */\n  /* border: 1px solid var(--blue); */\n  /* box-shadow: '3px 3px 3px black'; */\n  color: var(--blue);\n  height: 35vh;\n  width: 70vh;\n  font-size: 2vh;\n`\nexport const LoginTitle = styled.div`\n  font-size: 3.5vh;\n  text-align: center;\n  padding: 10%;\n`\nexport const LoginRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin: 2%;\n`\nexport const ButtonContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: end;\n`\nexport const Button = styled.button`\n  height: 2rem;\n  width: 15rem;\n  margin-top: 10%;\n  font-size: 1.5rem;\n  background: var(--blue);\n  color: var(--white);\n  justify-self: center;\n`\n","import React, { FC, useState, useEffect } from 'react'\nimport { useForm } from '../../hooks'\n\nimport { useNavigate } from 'react-router-dom'\nimport { gql, useMutation } from '@apollo/client'\nimport {\n  login,\n  loginVariables,\n  me_me,\n  updateUserActiveVariables,\n  updateUserActive,\n} from '../../schemaTypes'\n\nimport {\n  Button,\n  LoginRow,\n  LoginWrapper,\n  LoginTitle,\n  ButtonContainer,\n} from './loginStyles'\nimport { useUserContextProvider } from '../../contexts/UserContext'\nimport { UPDATE_USER_ACTIVITY_MUTATION } from './UpdateUserActivity'\n\nconst LOGIN_MUTATION = gql`\n  mutation login($input: LoginInput!) {\n    login(input: $input) {\n      user {\n        _id\n      }\n    }\n  }\n`\nexport type LoginProps = {\n  toggleLogin: () => void\n}\n\nexport const Login = ({ toggleLogin }: LoginProps) => {\n  const [values, handleChange] = useForm({ userName: '', password: '' })\n  const [inValid, setInValid] = useState(false)\n  const me: me_me = useUserContextProvider()\n\n  const navigate = useNavigate()\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [loginMutation, { error, data }] = useMutation<login, loginVariables>(\n    LOGIN_MUTATION,\n    {\n      variables: {\n        input: { userName: values.userName, password: values.password },\n      },\n      refetchQueries: ['me'],\n\n      onCompleted: (data) => {\n        // updateUserActive({\n        //   variables: {\n        //     input: { userId: data.login.user._id!, isActive: true },\n        //   },\n        // })\n        // toggleLogin()\n      },\n      onError: () => {\n        setInValid(true)\n      },\n    },\n  )\n  const [updateUserActive] = useMutation<\n    updateUserActive,\n    updateUserActiveVariables\n  >(UPDATE_USER_ACTIVITY_MUTATION, {\n    // variables: { input: { userId: me._id!, isActive: true } },\n    onCompleted: (data) => console.log(data),\n    refetchQueries: ['me'],\n  })\n\n  useEffect(() => {\n    if (me) {\n      toggleLogin()\n      navigate('dashboard')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [me])\n  // useEffect(() => {\n  //   if (me) {\n  //     updateUserActive({\n  //       variables: {\n  //         input: { userId: me._id!, isActive: true },\n  //       },\n  //     })\n  //   }\n  // },[])\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n  }\n\n  return (\n    // eslint-disable-next-line react/jsx-no-undef\n    <LoginWrapper>\n      <form onSubmit={handleSubmit}>\n        <LoginTitle>Login</LoginTitle>\n        {inValid && (\n          <div style={{ color: 'var(--red)' }}>Wrong UserName or Password</div>\n        )}\n        <LoginRow>\n          <div>UserName: </div>\n          <input\n            type=\"text\"\n            name=\"userName\"\n            autoFocus\n            value={values.userName}\n            onChange={handleChange}\n          />\n        </LoginRow>\n        <LoginRow>\n          <div>Password: </div>\n          <input\n            name=\"password\"\n            type=\"password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n        </LoginRow>\n        <ButtonContainer>\n          <Button\n            type=\"submit\"\n            onClick={() => {\n              loginMutation()\n            }}\n          >\n            Login\n          </Button>\n        </ButtonContainer>\n      </form>\n    </LoginWrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { media } from './media'\n\nexport const MenuNav = styled(motion.nav)`\n  position: fixed;\n\n  left: 0;\n  ${media.iPhone} {\n    width: 30vw;\n  }\n  width: 15vw;\n  height: 100vh;\n  background: var(--blue);\n  border-left: 3px solid var(--white);\n  border-top: 3px solid var(--white);\n  box-shadow: 3px 3px 3px 3px black;\n  padding-left: 20px;\n  padding-top: 20px;\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  li {\n    padding: 0;\n    margin: 0 0 1rem;\n    ${media.iPhone} {\n      font-size: 1rem;\n    }\n    font-size: 2rem;\n    width: 90%;\n    &:hover {\n      border-bottom: 2px solid var(--grey);\n      font-size: 2.2rem;\n    }\n    color: white;\n    text-decoration: none;\n    border-bottom: 2px transparent solid;\n    transition: 0.3s ease border;\n    a {\n      color: white;\n      text-decoration: none;\n    }\n  }\n`\n","import React, { FC } from 'react'\nimport { liVariants, ulVariants } from '../Nav'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { TeacherNavProps } from './TeacherNav'\nimport { Logout } from '../../components/home/Logout'\n\nexport const LessonNav: FC<TeacherNavProps> = ({\n  toggleLogin,\n  setIsNavOpen,\n}) => {\n  return (\n    <>\n      <motion.ul variants={ulVariants}>\n        <motion.li variants={liVariants}>\n          <Link to={`dashboard/lessons/lesson-planner/${new Date()}`}>\n            Lesson Planner\n          </Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/lessons/lesson-finder\">Lesson Finder</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/lessons/section-builder\">Section Builder</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/lessons/section-editor\">Section Editor</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/lessons/essay-question\">Essay Questions</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Logout toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n        </motion.li>\n      </motion.ul>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { liVariants, ulVariants } from '../Nav'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { TeacherNavProps } from './TeacherNav'\nimport { Logout } from '../../components/home/Logout'\n\nexport const AssignmentNav = ({\n  toggleLogin,\n  setIsNavOpen,\n}: TeacherNavProps) => {\n  return (\n    <>\n      <motion.ul variants={ulVariants}>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/assignments/create\">Create</Link>\n        </motion.li>\n        {/* <motion.li variants={liVariants}>\n          <Link to='dashboard/assignments/edit'>Edit</Link>\n        </motion.li> */}\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/assignments/check\">Check</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/assignments/grade\">Grade</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/assignments/assign\">Assign</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/assignments/article-reviews\">\n            Article Reviews\n          </Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Logout toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n        </motion.li>\n      </motion.ul>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { liVariants, ulVariants } from '../Nav'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { TeacherNavProps } from './TeacherNav'\nimport { Logout } from '../../components/home/Logout'\nimport { useUserContextProvider } from '../../contexts/UserContext'\nimport { me_me_Teacher } from '../../schemaTypes'\nimport { useTeacherNavContextProvider } from './TeacherNavContext'\nimport { sortByLetter } from '../../utils'\n\nexport const CoursesNav: FC<TeacherNavProps> = ({\n  toggleLogin,\n  setIsNavOpen,\n}) => {\n  const me: me_me_Teacher = useUserContextProvider()\n  const [navState, event] = useTeacherNavContextProvider()\n\n  const coursesToNavigate = me.teachesCourses.slice(1).sort(sortByLetter)\n  console.log(coursesToNavigate)\n  return (\n    <>\n      <motion.ul variants={ulVariants}>\n        {navState.matches('courses.home.idle') && (\n          <>\n            {me.teachesCourses.map((course) => (\n              <motion.li key={course._id!} variants={liVariants}>\n                <Link\n                  to={`dashboard/courses/${course._id}`}\n                  onClick={() => {\n                    event({ type: 'SET_COURSE', payload: course._id! })\n                    event({ type: 'COURSE_SELECT' })\n                  }}\n                >\n                  {course.name}\n                </Link>\n              </motion.li>\n            ))}\n            <motion.li variants={liVariants}>\n              <Link to={`dashboard/courses/create-course`}>New Course</Link>\n            </motion.li>\n          </>\n        )}\n        {navState.matches('courses.home.courseSelect') && (\n          <>\n            <motion.li variants={liVariants}>\n              <Link\n                to={'dashboard/courses'}\n                onClick={() => event({ type: 'COURSES' })}\n              >\n                Courses\n              </Link>\n            </motion.li>\n            {/* <motion.li variants={liVariants}>\n              <Link\n                to={`dashboard/courses/${navState.context.course}/lesson-editor`}\n              >\n                Lesson Editor\n              </Link>\n            </motion.li> */}\n            {/* <motion.li variants={liVariants}>\n              <Link\n                to={`dashboard/courses/${navState.context.course}/assign-assignments`}\n              >\n                Assign Work\n              </Link>\n            </motion.li> */}\n            <motion.li variants={liVariants}>\n              <Link\n                to={`dashboard/courses/${navState.context.course}/assignment-manager`}\n              >\n                Grade Downloads\n              </Link>\n            </motion.li>\n            {/* <motion.li variants={liVariants}>\n              <Link to={`dashboard/courses/${navState.context.course}/tasks`}>\n                Tasks\n              </Link>\n            </motion.li> */}\n            <motion.li variants={liVariants}>\n              <Link to={`dashboard/courses/${navState.context.course}/roster`}>\n                Roster\n              </Link>\n            </motion.li>\n            {/* <motion.li variants={liVariants}>\n\t\t\t\t\t\t\t<Link to={`dashboard/courses/${navState.context.course}/view-reading-guide-data`}>\n\t\t\t\t\t\t\t\tReadingGuide Data\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</motion.li> */}\n            <motion.li variants={liVariants}>\n              <Link\n                to={`dashboard/courses/${navState.context.course}/edit-course`}\n              >\n                Edit Course\n              </Link>\n            </motion.li>\n          </>\n        )}\n        <motion.li variants={liVariants}>\n          <Logout toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n        </motion.li>\n      </motion.ul>\n    </>\n  )\n}\n","import React, { FC, Dispatch, SetStateAction } from 'react'\nimport { motion } from 'framer-motion'\nimport { ulVariants, liVariants } from '../Nav'\nimport { Link } from 'react-router-dom'\nimport { Logout } from '../../components/home/Logout'\n\nexport type RubricsNavProps = {\n  setIsNavOpen: Dispatch<SetStateAction<boolean>>\n  toggleLogin: () => void\n}\n\nexport const RubricsNav: FC<RubricsNavProps> = ({\n  setIsNavOpen,\n  toggleLogin,\n}) => {\n  return (\n    <>\n      <>\n        <motion.ul variants={ulVariants}>\n          <motion.li variants={liVariants}>\n            <Link to=\"dashboard/rubrics/build\">Build</Link>\n          </motion.li>\n          <motion.li variants={liVariants}>\n            <Link to=\"dashboard/rubrics/edit\">Edit</Link>\n          </motion.li>\n          <motion.li variants={liVariants}>\n            <Logout toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n          </motion.li>\n        </motion.ul>\n      </>\n    </>\n  )\n}\n","import { motion } from 'framer-motion'\nimport React, { Dispatch, FC, SetStateAction } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Logout } from '../../components/home/Logout'\nimport { ulVariants, liVariants } from '../Nav'\n\nexport type ParentContactsNavProps = {\n  setIsNavOpen: Dispatch<SetStateAction<boolean>>\n  toggleLogin: () => void\n}\n\nexport const ParentContactsNav: FC<ParentContactsNavProps> = ({\n  toggleLogin,\n  setIsNavOpen,\n}) => {\n  return (\n    <>\n      <motion.ul variants={ulVariants}>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/parentContacts/create-contact\">\n            Create Contact\n          </Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/parentContacts/contacts\">Contacts</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Logout toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n        </motion.li>\n      </motion.ul>\n    </>\n  )\n}\n","import React from 'react'\nimport { liVariants, ulVariants } from '../Nav'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { TeacherNavProps } from './TeacherNav'\n\nexport const BehaviorNav = ({}: TeacherNavProps) => {\n  return (\n    <motion.ul variants={ulVariants}>\n      <motion.li variants={liVariants}>\n        <Link to=\"dashboard/behavior/create-behavior\">Create</Link>\n      </motion.li>\n      <motion.li variants={liVariants}>\n        <Link to=\"dashboard/behavior/edit-behavior\">Edit</Link>\n      </motion.li>\n    </motion.ul>\n  )\n}\n","import React, { Dispatch, SetStateAction, FC } from 'react'\nimport { liVariants, ulVariants } from '../Nav'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { Logout } from '../../components/home/Logout'\nimport { LessonNav } from './LessonNav'\nimport { useTeacherNavContextProvider } from './TeacherNavContext'\nimport { AssignmentNav } from './AssignmentsNav'\nimport { CoursesNav } from './CoursesNav'\nimport { RubricsNav } from './RubricsNav'\nimport { ParentContactsNav } from './ParentContactsNav'\nimport { BehaviorNav } from './BehaviorNav'\n\nexport type TeacherNavProps = {\n  setIsNavOpen: Dispatch<SetStateAction<boolean>>\n  toggleLogin: () => void\n}\n\nexport const TeacherNav: FC<TeacherNavProps> = ({\n  toggleLogin,\n  setIsNavOpen,\n}) => {\n  const [state, event] = useTeacherNavContextProvider()\n\n  return (\n    <>\n      <motion.ul variants={ulVariants}>\n        <motion.li\n          variants={liVariants}\n          onClick={() => event({ type: 'DASHBOARD' })}\n        >\n          <Link to=\"/dashboard\">Dashboard</Link>\n        </motion.li>\n        {state.matches('dashboard') && (\n          <>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'LESSONS' })}\n            >\n              <Link to=\"dashboard/lessons\">Lessons</Link>\n            </motion.li>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'ASSIGNMENTS' })}\n            >\n              <Link to=\"dashboard/assignments\">Assignments</Link>\n            </motion.li>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'RUBRICS' })}\n            >\n              <Link to=\"dashboard/rubrics\">Rubrics</Link>\n            </motion.li>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'COURSES' })}\n            >\n              <Link to=\"dashboard/courses\">Courses</Link>\n            </motion.li>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'STUDENT_INFORMATION' })}\n            >\n              <Link to=\"dashboard/studentInformation\">Student Information</Link>\n            </motion.li>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'PARENT_CONTACTS' })}\n            >\n              <Link to=\"dashboard/parentContacts\">Parent Contacts</Link>\n            </motion.li>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'BEHAVIOR' })}\n            >\n              <Link to=\"dashboard/behavior/edit-behavior\">Behavior</Link>\n            </motion.li>\n            <motion.li\n              variants={liVariants}\n              onClick={() => event({ type: 'DEVELOPMENT' })}\n            >\n              <Link to=\"dashboard/development\">Development</Link>\n            </motion.li>\n            <motion.li variants={liVariants}>\n              <Logout toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n            </motion.li>\n          </>\n        )}\n        <>\n          {state.matches('lessons') && (\n            <LessonNav toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n          )}\n          {state.matches('assignments') && (\n            <AssignmentNav\n              toggleLogin={toggleLogin}\n              setIsNavOpen={setIsNavOpen}\n            />\n          )}\n          {state.matches('rubrics') && (\n            <RubricsNav toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n          )}\n          {state.matches('courses.home') && (\n            <CoursesNav toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n          )}\n          {state.matches('parentContacts') && (\n            <ParentContactsNav\n              toggleLogin={toggleLogin}\n              setIsNavOpen={setIsNavOpen}\n            />\n          )}\n          {state.matches('behavior') && (\n            <BehaviorNav\n              toggleLogin={toggleLogin}\n              setIsNavOpen={setIsNavOpen}\n            />\n          )}\n        </>\n      </motion.ul>\n    </>\n  )\n}\n","import React, { Dispatch, SetStateAction, FC } from 'react'\nimport { liVariants, ulVariants } from '../Nav'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { Logout } from '../../components/home/Logout'\n\nexport type StudentNavProps = {\n  setIsNavOpen: Dispatch<SetStateAction<boolean>>\n  toggleLogin: () => void\n}\n\nexport const StudentNav: FC<StudentNavProps> = ({\n  toggleLogin,\n  setIsNavOpen,\n}) => {\n  return (\n    <>\n      <motion.ul variants={ulVariants}>\n        <motion.li variants={liVariants}>\n          <Link to=\"/dashboard\">Dashboard</Link>\n        </motion.li>\n        <motion.li variants={liVariants}>\n          <Link to=\"dashboard/assignments\">Assignments</Link>\n        </motion.li>\n        {/* <motion.li variants={liVariants}>\n          <Link to='dashboard/grades'>Grades</Link>\n        </motion.li> */}\n        <motion.li variants={liVariants}>\n          <Logout toggleLogin={toggleLogin} setIsNavOpen={setIsNavOpen} />\n        </motion.li>\n      </motion.ul>\n    </>\n  )\n}\n","import React, { useRef, FC, Dispatch, SetStateAction } from 'react'\nimport { MenuNav } from '../components/home/navStyles'\nimport { useClickOutside } from '../hooks'\nimport { me_me } from '../schemaTypes'\nimport { TeacherNav } from './teacher-nav/TeacherNav'\nimport { StudentNav } from './student-nav/StudentNav'\nimport { TeacherNavContextProvider } from './teacher-nav/TeacherNavContext'\n\ntype NavProps = {\n  isNavOpen: boolean\n  setIsNavOpen: Dispatch<SetStateAction<boolean>>\n  toggleLogin: () => void\n  me: me_me\n}\n\nexport const variants = {\n  open: { x: '85vw' },\n  closed: { x: '1000%', transition: { delay: 0.1 } },\n}\n\nexport const moblieVariants = {\n  open: { x: '70vw' },\n  closed: { x: '1000%', transition: { delay: 0.1 } },\n}\n\nexport const ulVariants = {\n  open: {\n    scale: 1.02,\n    transition: {\n      // staggerChildren: 0.1,\n      // delayChildren: 0.2,\n      // staggerDirection: 1,\n      // when: 'afterchildren',\n    },\n  },\n  closed: { scale: 1 },\n}\n\nexport const liVariants = {\n  open: { opacity: 1, y: 0 },\n  closed: { opacity: 0, y: -20 },\n}\n\nexport const Nav: FC<NavProps> = ({\n  isNavOpen,\n  setIsNavOpen,\n  toggleLogin,\n  me,\n}) => {\n  const ref = useRef(null!)\n  useClickOutside(ref, () => setIsNavOpen(false))\n  return (\n    <MenuNav\n      variants={window.screen.width < 700 ? moblieVariants : variants}\n      initial=\"closed\"\n      animate={isNavOpen ? 'open' : 'closed'}\n      transition={{ damping: 500 }}\n      ref={ref}\n    >\n      {me.__typename === 'Teacher' && (\n        <TeacherNav setIsNavOpen={setIsNavOpen} toggleLogin={toggleLogin} />\n      )}\n      {me.__typename === 'Student' && (\n        <StudentNav setIsNavOpen={setIsNavOpen} toggleLogin={toggleLogin} />\n      )}\n    </MenuNav>\n  )\n}\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { LoginToggleProps } from '../../App'\nimport { media } from './media'\n\nexport const Header = styled.header`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  background-color: var(--blue);\n  color: var(--white);\n  height: 5vh;\n  /* align-items: center;\n  justify-content: center; */\n  /* text-shadow: '2px 2px 8px #474747'; */\n  border-bottom: '3px solid var(--white)';\n`\nexport const StyledLink = styled(Link)`\n  color: var(--white);\n  text-decoration: none;\n  font-size: 4vh;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n`\n\nexport const HomeLink = styled(StyledLink)`\n  padding-left: 2%;\n  color: var(--white);\n`\nexport const DashboardLink = styled(StyledLink)`\n  padding-right: 2%;\n`\n\nexport const LoginLink = styled(StyledLink)`\n  padding-right: 2%;\n`\n\nexport const LogoutLink = styled.div`\n  font-size: 1.5rem;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n  padding-right: 2%;\n`\n\nexport const LoginToggle = styled.div<LoginToggleProps>`\n  padding-right: 2%;\n  font-size: 1.5rem;\n  color: var(--white);\n  cursor: pointer;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n`\n\nexport const UserNameHeader = styled.div<LoginToggleProps>`\n  font-size: 4vh;\n  ${media.iPhone} {\n    font-size: 1rem;\n  }\n  padding-right: 2%;\n  color: var(--white);\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const ProblemAndSolutionGuide = () => {\n  return (\n    <ProblemAndSolutionGuideContainer>\n      <ProblemAndSolutionGuideInstructionsContainer>\n        <div style={{ textAlign: 'center', textDecoration: 'underline' }}>\n          Instructions\n        </div>\n        <div>Step One: Figure out who or what has a problem.</div>\n        <div>Step Two: Use the diagram below to figure out the problem.</div>\n      </ProblemAndSolutionGuideInstructionsContainer>\n      <ProblemAndSolutionGuideDiagramContainer>\n        <ProblemAndSolutionGuideDiagramColumn style={{ borderRight: 'none' }}>\n          <ProblemAndSolutionGuideDiagramColumnHeader>\n            <div>Solution Type</div>\n          </ProblemAndSolutionGuideDiagramColumnHeader>\n          <ProblemAndSolutionGuideDiagramColumnInformation>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry>\n              Compromise\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry>\n              Invention or Creation\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry>\n              Changing the way things are done\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n          </ProblemAndSolutionGuideDiagramColumnInformation>\n        </ProblemAndSolutionGuideDiagramColumn>\n        <ProblemAndSolutionGuideDiagramColumn style={{ borderRight: 'none' }}>\n          <ProblemAndSolutionGuideDiagramColumnHeader>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry>\n              Problem Type\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n          </ProblemAndSolutionGuideDiagramColumnHeader>\n          <ProblemAndSolutionGuideDiagramColumnInformation>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry\n              style={{ padding: '2%' }}\n            >\n              Two sides can't agree on one or more things\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry\n              style={{ padding: '2%' }}\n            >\n              Something can't be done with existing technology or ways of doing\n              things\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry\n              style={{ padding: '2%' }}\n            >\n              Something is wrong with the way things are currently being done\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n          </ProblemAndSolutionGuideDiagramColumnInformation>\n        </ProblemAndSolutionGuideDiagramColumn>\n        <ProblemAndSolutionGuideDiagramColumn>\n          <ProblemAndSolutionGuideDiagramColumnHeader>\n            How to Figure Out the Problem\n          </ProblemAndSolutionGuideDiagramColumnHeader>\n          <ProblemAndSolutionGuideDiagramColumnInformation>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry\n              style={{ padding: '2%' }}\n            >\n              Ask yourself: What is it that the two sides can't agree on, and\n              why can't they agree?\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry\n              style={{ padding: '2%' }}\n            >\n              Ask yourself: What is it that's stopping the person or thing, and\n              why is it getting in the way?\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n            <ProblemAndSolutionGuideDiagramColumnInformationEntry\n              style={{ padding: '2%' }}\n            >\n              Ask yourself: What could be wrong with the way things are done\n              that could be solved with the solution?\n            </ProblemAndSolutionGuideDiagramColumnInformationEntry>\n          </ProblemAndSolutionGuideDiagramColumnInformation>\n        </ProblemAndSolutionGuideDiagramColumn>\n      </ProblemAndSolutionGuideDiagramContainer>\n    </ProblemAndSolutionGuideContainer>\n  )\n}\n\nexport const ProblemAndSolutionGuideContainer = styled.div`\n  background-color: var(--white);\n  color: var(--blue);\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  height: 95vh;\n  font-size: 2.5vh;\n`\n\nexport const ProblemAndSolutionGuideInstructionsContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 2fr;\n  width: 100%;\n  margin-left: 5%;\n`\nexport const ProblemAndSolutionGuideDiagramContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  width: 90vw;\n  height: 80vh;\n`\nexport const ProblemAndSolutionGuideDiagramColumn = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n  border: 1px solid var(--blue);\n`\nexport const ProblemAndSolutionGuideDiagramColumnHeader = styled.div`\n  justify-items: center;\n  align-items: center;\n  height: 100%;\n  border-bottom: 1px solid var(--blue);\n  display: grid;\n`\nexport const ProblemAndSolutionGuideDiagramColumnInformation = styled.div`\n  justify-items: center;\n  align-items: center;\n  height: 100%;\n  /* border-bottom: 1px solid var(--blue); */\n  display: grid;\n  grid-auto-rows: 1fr;\n`\n\nexport const ProblemAndSolutionGuideDiagramColumnInformationEntry = styled.div`\n  &:hover {\n    text-decoration: underline;\n  }\n`\n","import React, { useState, FC, useEffect } from 'react'\nimport { Route, Routes, useNavigate } from 'react-router-dom'\nimport { useUserContextProvider } from './contexts/UserContext'\nimport { Dashboard } from './components/dashboard/Dashboard'\nimport { Login } from './components/home/Login'\nimport { Nav } from './navigation/Nav'\nimport { useToggle } from './hooks'\nimport {\n  Header,\n  HomeLink,\n  UserNameHeader,\n} from './components/home/headerStyles'\nimport {\n  GetStartedButton,\n  HomePageContainer,\n  HomeScreenTitle,\n  LoginContainer,\n} from './components/home/homeStyles'\nimport { capitalizer, date } from './utils'\nimport styled from 'styled-components'\nimport { DailyAgendaContextProvider } from './components/lesson/state-n-styles/DailyAgendaContext'\nimport { LessonMainMenu } from './components/lesson/LessonMainMenu'\nimport { useQuery } from '@apollo/client'\nimport { FIND_CURRENT_SCHOOL_DAY_QUERY } from './components/dashboard/school-day/SchoolDay'\nimport { useSchoolDayContextProvider } from './components/dashboard/school-day/state/SchoolDayContext'\nimport { ProblemAndSolutionGuide } from './components/resources/ProblemAndSolutionGuide'\nimport {\n  findCurrentSchoolDay,\n  findCurrentSchoolDayVariables,\n  me_me,\n} from './schemaTypes'\nimport { useLocation } from 'react-router'\n\nexport type LoginToggleProps = {\n  onClick: () => void\n}\n\nexport type ErrorFallbackProps = { error: any }\n\nexport const ErrorFallback: FC<ErrorFallbackProps> = ({ error }) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre style={{ color: 'red' }}>{error.message}</pre>\n    </div>\n  )\n}\n\nfunction App() {\n  const me: me_me = useUserContextProvider()\n  const nav = useNavigate()\n  const location = useLocation()\n\n  const [, event] = useSchoolDayContextProvider()\n  const [, setCurrentSchoolDay] = useSchoolDayContextProvider()\n\n  const { data, loading } = useQuery<\n    findCurrentSchoolDay,\n    findCurrentSchoolDayVariables\n  >(FIND_CURRENT_SCHOOL_DAY_QUERY, {\n    variables: {\n      input: { date: date },\n    },\n    onCompleted: (data) => {\n      if (data.findSchoolDayByDate.schoolDay)\n        setCurrentSchoolDay({\n          type: 'SET_TODAYS_SCHOOL_DAY',\n          payload: data?.findSchoolDayByDate?.schoolDay!,\n        })\n    },\n    onError: (error) => console.error(error),\n  })\n  const [isLoginVisible, toggleLogin] = useToggle(false)\n  const [isNavOpen, setIsNavOpen] = useState(false)\n  // const student = me.__typename === 'Student' && me !== null ? me : null\n\n  useEffect(() => {\n    if (!me) nav('/')\n    if (location.pathname === '/' && me) nav('/dashboard')\n  }, [me])\n  console.log(me)\n  return (\n    <AppContainer>\n      <Header>\n        {/* {me && <UpdateUserActivity userId={me._id!} />} */}\n        <HomeLink to=\"/dashboard\">\n          {location.pathname.includes('/dashboard') &&\n          location.pathname !== '/dashboard'\n            ? `←Back to Home Screen`\n            : 'MrWetherall.org'}\n        </HomeLink>\n        <div></div>\n        <LoginContainer>\n          {!me ? (\n            // <LoginToggle onClick={toggleLogin}>Login</LoginToggle>\n            <div></div>\n          ) : (\n            <UserNameHeader onClick={() => setIsNavOpen(true)}>\n              {me.__typename === 'Teacher'\n                ? `${capitalizer(me?.title) + '. ' + me?.lastName}`\n                : me.firstName}\n            </UserNameHeader>\n          )}\n\n          {/* <Modal isToggled={isLoginVisible} setIsToggled={toggleLogin}>\n            <Login toggleLogin={toggleLogin} />\n          </Modal> */}\n        </LoginContainer>\n      </Header>\n      {me !== null && (\n        <Nav\n          isNavOpen={isNavOpen}\n          setIsNavOpen={setIsNavOpen}\n          toggleLogin={toggleLogin}\n          me={me}\n        />\n      )}\n\n      <Routes>\n        <Route\n          path=\"\"\n          element={\n            <HomePageContainer>\n              <HomeScreenTitle>\n                <div></div>\n                <div>Welcome to Mr. Wetherall's Class</div>\n                <div></div>\n              </HomeScreenTitle>\n              {isLoginVisible ? (\n                <Login toggleLogin={toggleLogin} />\n              ) : (\n                <GetStartedButton onClick={toggleLogin}>Login</GetStartedButton>\n              )}\n            </HomePageContainer>\n          }\n        />\n        <Route path=\"dashboard/*\" element={<Dashboard />} />\n        {/* {!me ? (\n          <Navigate to='/' />\n        ) : ( */}\n        {me && (\n          <Route\n            path=\"lesson-home\"\n            element={\n              <DailyAgendaContextProvider>\n                <LessonMainMenu />\n              </DailyAgendaContextProvider>\n            }\n          />\n        )}\n        {/* {me && (\n          <Route path='behavior-home' element={<StudentBehavior me={me} />} />\n        )} */}\n        <Route\n          path=\"/problem-solution-guide/*\"\n          element={<ProblemAndSolutionGuide />}\n        />\n      </Routes>\n    </AppContainer>\n  )\n}\n\nexport default App\n\nconst AppContainer = styled.div`\n  /* height: 100vh; */\n  color: var(--blue);\n  background-color: var(--white);\n`\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n} from '@apollo/client'\nimport { UserContextProvider } from './contexts/UserContext'\nimport { MarkingPeriodContextProvider } from './contexts/markingPeriod/MarkingPeriodContext'\nimport { EnumContextProvider } from './contexts/EnumContext'\nimport { SchoolDayContextProvider } from './components/dashboard/school-day/state/SchoolDayContext'\nimport { TeacherNavContextProvider } from './navigation/teacher-nav/TeacherNavContext'\n\nconst devLink = new HttpLink({\n  uri: '/graphql',\n  // uri: 'mrwetherall.org/graphql',\n  credentials: 'include',\n})\nconst prodLink = new HttpLink({\n  // uri: 'https://teachers-aid-server.herokuapp.com/graphql',\n  uri: '/graphql',\n  credentials: 'include',\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      Essay: {\n        fields: {\n          hasOwner: { merge: true },\n          readings: { merge: true },\n          finalDraft: { merge: true },\n        },\n      },\n      TextSectionProtocols: {\n        fields: {\n          activityType: { merge: true },\n          academicOutcomeTypes: { merge: true },\n          task: { merge: true },\n        },\n      },\n    },\n  }),\n  link: prodLink,\n  // link: devLink,\n  connectToDevTools: true,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <Router>\n        <UserContextProvider>\n          <MarkingPeriodContextProvider>\n            <EnumContextProvider>\n              <SchoolDayContextProvider>\n                <TeacherNavContextProvider>\n                  <App />\n                </TeacherNavContextProvider>\n              </SchoolDayContextProvider>\n            </EnumContextProvider>\n          </MarkingPeriodContextProvider>\n        </UserContextProvider>\n      </Router>\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}